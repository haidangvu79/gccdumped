// executing pipeline pr51581_2 test 
val k1_pipeline_pr51581_2: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_pr51581_2() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let f1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000001a),        //goto 16894 <f1+0x74>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff900),        //cb.wnez $r0? 16830 <f1+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000019),        //goto 16928 <f2+0x70>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff940),        //cb.wnez $r0? 168c8 <f2+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000001c),        //goto 169c4 <f3+0x7c>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000e38e3e0008e40),        //make $r0 = 954437177 (0x38e38e39);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3080),        //sraw $r2 = $r0, 2 (0x2);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff880),        //cb.wnez $r0? 16958 <f3+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000001a),        //goto 16a5c <f4+0x74>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x071c71c780e38e38e000e3c0),        //make $r0 = 16397105843297379215 (0xe38e38e38e38e38f);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2100),        //srld $r2 = $r0, 4 (0x4);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff900),        //cb.wnez $r0? 169f8 <f4+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000001d),        //goto 16b00 <f5+0x80>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff840),        //cb.wnez $r0? 16a90 <f5+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000001b),        //goto 16b98 <f6+0x78>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _96(0x06bca1af81435e50e000d7c0),        //make $r0 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b062100),        //srld $r1 = $r0, 4 (0x4);;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x75010080),        //sbfd $r0 = $r0, $r2;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff8c0),        //cb.wnez $r0? 16b30 <f6+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002a),        //goto 16c6c <f7+0xb4>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _64(0x10155555c4005580),        //muld $r0 = $r0, 1431655766 (0x55555556);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x7a000001),        //copyw $r0 = $r1;;
     _32(0x79063081),        //sllw $r1 = $r1, 2 (0x2);;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011002),        //addw $r0 = $r2, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff500),        //cb.wnez $r0? 16bc8 <f7+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000020),        //goto 16d1c <f8+0x8c>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x102aaaaac400aac0),        //muld $r0 = $r0, 2863311531 (0xaaaaaaab);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023040),        //srlw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x7a000001),        //copyw $r0 = $r1;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff780),        //cb.wnez $r0? 16ca0 <f8+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002e),        //goto 16e04 <f9+0xc4>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _64(0x100e38e3c4008e40),        //muld $r0 = $r0, 954437177 (0x38e38e39);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a023080),        //sraw $r0 = $r0, 2 (0x2);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x7a000001),        //copyw $r0 = $r1;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75000000),        //negw $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011002),        //addw $r0 = $r2, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff400),        //cb.wnez $r0? 16d50 <f9+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f10: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000021),        //goto 16eb8 <f10+0x90>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x100e38e3c4008e40),        //muld $r0 = $r0, 954437177 (0x38e38e39);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x7a000001),        //copyw $r0 = $r1;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff740),        //cb.wnez $r0? 16e38 <f10+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f11: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002b),        //goto 16f90 <f11+0xb8>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _64(0x101af286c400bcc0),        //muld $r0 = $r0, 1808407283 (0x6bca1af3);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a0230c0),        //sraw $r0 = $r0, 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x17ffffffdb003340),        //mulw $r0 = $r0, 4294967277 (0xffffffed);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff4c0),        //cb.wnez $r0? 16ee8 <f11+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f12: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002f),        //goto 17078 <f12+0xc8>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x102bca1ac400f2c0),        //muld $r0 = $r0, 2938661835 (0xaf286bcb);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023040),        //srlw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023100),        //srlw $r0 = $r0, 4 (0x4);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _32(0x7a000001),        //copyw $r0 = $r1;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff3c0),        //cb.wnez $r0? 16fc0 <f12+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000013),        //goto 170f8 <main+0x60>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x07fffffef1000000),        //addw $r0 = $r0, -2048 (0xfffffffffffff800);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3008070c),        //lwz $r2 = 28 (0x1c)[$r12];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffac0),        //cb.wnez $r0? 170b0 <main+0x18>;;
     _96(0x000000008000014be0002200),        //make $r0 = 339080 (0x52c88);;
     _64(0x07e00000e004003f),        //make $r1 = -2147483648 (0xffffffff80000000);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014be0002200),        //make $r0 = 339080 (0x52c88);;
     _64(0x07e00000e004007f),        //make $r1 = -2147483647 (0xffffffff80000001);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x000000008000014be0002200),        //make $r0 = 339080 (0x52c88);;
     _64(0x001fffffe004ffc0),        //make $r1 = 2147483647 (0x7fffffff);;
     _64(0x1800000fa605ff00),        //sw 16380 (0x3ffc)[$r0] = $r1;;
     _96(0x000000008000011be0002200),        //make $r0 = 289928 (0x46c88);;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _64(0x1800000fa605ff00),        //sw 16380 (0x3ffc)[$r0] = $r1;;
     _32(0x1ffffdad),        //call 16820 <f1>;;
     _32(0x1ffffdd2),        //call 168b8 <f2>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000034),        //goto 1724c <main+0x1b4>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1723c <main+0x1a4>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17240 <main+0x1a8>;;
     _32(0x18000149),        //call 17760 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff280),        //cb.wnez $r0? 17180 <main+0xe8>;;
     _32(0x1ffffdbb),        //call 16948 <f3>;;
     _32(0x1ffffde2),        //call 169e8 <f4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000037),        //goto 17348 <main+0x2b0>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000e38e3e0008e40),        //make $r0 = 954437177 (0x38e38e39);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3080),        //sraw $r2 = $r0, 2 (0x2);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17338 <main+0x2a0>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x071c71c780e38e38e000e3c0),        //make $r0 = 16397105843297379215 (0xe38e38e38e38e38f);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2100),        //srld $r2 = $r0, 4 (0x4);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1733c <main+0x2a4>;;
     _32(0x1800010a),        //call 17760 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff1c0),        //cb.wnez $r0? 17270 <main+0x1d8>;;
     _32(0x1ffffdca),        //call 16a80 <f5>;;
     _32(0x1ffffdf1),        //call 16b20 <f6>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000039),        //goto 1744c <main+0x3b4>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000680),        //cb.wnez $r0? 1743c <main+0x3a4>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _96(0x06bca1af81435e50e000d7c0),        //make $r0 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b062100),        //srld $r1 = $r0, 4 (0x4);;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x75010080),        //sbfd $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17440 <main+0x3a8>;;
     _32(0x180000c9),        //call 17760 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff140),        //cb.wnez $r0? 1736c <main+0x2d4>;;
     _32(0x1ffffdd7),        //call 16bb8 <f7>;;
     _32(0x1ffffe0c),        //call 16c90 <f8>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000034),        //goto 1753c <main+0x4a4>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1752c <main+0x494>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17530 <main+0x498>;;
     _32(0x1800008d),        //call 17760 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff280),        //cb.wnez $r0? 17470 <main+0x3d8>;;
     _32(0x1ffffdfd),        //call 16d40 <f9>;;
     _32(0x1ffffe36),        //call 16e28 <f10>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000037),        //goto 17638 <main+0x5a0>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000e38e3e0008e40),        //make $r0 = 954437177 (0x38e38e39);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3080),        //sraw $r2 = $r0, 2 (0x2);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17628 <main+0x590>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x071c71c780e38e38e000e3c0),        //make $r0 = 16397105843297379215 (0xe38e38e38e38e38f);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2100),        //srld $r2 = $r0, 4 (0x4);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1762c <main+0x594>;;
     _32(0x1800004e),        //call 17760 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff1c0),        //cb.wnez $r0? 17560 <main+0x4c8>;;
     _32(0x1ffffe24),        //call 16ed8 <f11>;;
     _32(0x1ffffe59),        //call 16fb0 <f12>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000039),        //goto 1773c <main+0x6a4>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000680),        //cb.wnez $r0? 1772c <main+0x694>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300ef001),        //lwz.xs $r3 = $r0[$r1];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x300af001),        //lwz.xs $r2 = $r0[$r1];;
     _96(0x06bca1af81435e50e000d7c0),        //make $r0 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b062100),        //srld $r1 = $r0, 4 (0x4);;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x75010080),        //sbfd $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17730 <main+0x698>;;
     _32(0x1800000d),        //call 17760 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff140),        //cb.wnez $r0? 1765c <main+0x5c4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 17b38 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 19668 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010111000010011000; //0x17098
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f1, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f2, 0b00010110100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f3, 0b00010110100101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f4, 0b00010110100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f5, 0b00010110101010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f6, 0b00010110101100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f7, 0b00010110101110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f8, 0b00010110110010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f9, 0b00010110110101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f10, 0b00010110111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f11, 0b00010110111011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f12, 0b00010110111110110000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010111000010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111011101100000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000017098;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
