// executing pipeline string_opt_5.c.out.dumped test 
val k1_pipeline_string_opt_5: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_string_opt_5() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let main: list_I = 
 [|
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x0000000080000100e000f400),        //make $r0 = 263120 (0x403d0);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x1800052a),        //call 17cf8 <strlen>;;
     _32(0x61010200),        //compd.eq $r0 = $r0, 8 (0x8);;
     _32(0x08000080),        //cb.dnez $r0? 16860 <main+0x40>;;
     _32(0x180002a7),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26090000),        //sw 0 (0x0)[$r0] = $r2;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x68000080),        //andd $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x18000511),        //call 17cf8 <strlen>;;
     _32(0x61010180),        //compd.eq $r0 = $r0, 6 (0x6);;
     _32(0x08000080),        //cb.dnez $r0? 168c4 <main+0xa4>;;
     _32(0x1800028e),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f101b1c0),        //compw.eq $r0 = $r0, 7 (0x7);;
     _32(0x0c000080),        //cb.wnez $r0? 168e4 <main+0xc4>;;
     _32(0x18000286),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x180004f9),        //call 17cf8 <strlen>;;
     _32(0x61010140),        //compd.eq $r0 = $r0, 5 (0x5);;
     _32(0x08000080),        //cb.dnez $r0? 16924 <main+0x104>;;
     _32(0x18000276),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000080),        //cb.wnez $r0? 16944 <main+0x124>;;
     _32(0x1800026e),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x3804160c),        //ld $r1 = 88 (0x58)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x180004db),        //call 17cf8 <strlen>;;
     _32(0x61010280),        //compd.eq $r0 = $r0, 10 (0xa);;
     _32(0x08000080),        //cb.dnez $r0? 1699c <main+0x17c>;;
     _32(0x18000258),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000080),        //cb.wnez $r0? 169bc <main+0x19c>;;
     _32(0x18000250),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100fe80),        //addw $r0 = $r0, -6 (0xfffffffa);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3804160c),        //ld $r1 = 88 (0x58)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000100e004f800),        //make $r1 = 263136 (0x403e0);;
     _32(0x1800048b),        //call 17c38 <strcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16a1c <main+0x1fc>;;
     _32(0x18000238),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000080),        //cb.wnez $r0? 16a3c <main+0x21c>;;
     _32(0x18000230),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18000479),        //call 17c38 <strcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0d000080),        //cb.wltz $r0? 16a64 <main+0x244>;;
     _32(0x18000226),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71080040),        //addw $r2 = $r0, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _96(0x00000000800000fce0080200),        //make $r2 = 258056 (0x3f008);;
     _32(0x260d0002),        //sw 0 (0x0)[$r2] = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18000461),        //call 17c38 <strcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0d000080),        //cb.wltz $r0? 16ac4 <main+0x2a4>;;
     _32(0x1800020e),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000080),        //cb.wnez $r0? 16ae4 <main+0x2c4>;;
     _32(0x18000206),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040200),        //make $r1 = 258056 (0x3f008);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x3804160c),        //ld $r1 = 88 (0x58)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x6004006c),        //make $r1 = 108 (0x6c);;
     _32(0x180003e7),        //call 17ac0 <strchr>;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x61000240),        //addd $r0 = $r0, 9 (0x9);;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16b40 <main+0x320>;;
     _32(0x180001ef),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000080),        //cb.wnez $r0? 16b60 <main+0x340>;;
     _32(0x180001e7),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x6004006f),        //make $r1 = 111 (0x6f);;
     _32(0x180003d3),        //call 17ac0 <strchr>;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16b9c <main+0x37c>;;
     _32(0x180001d8),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38380000),        //ld $r14 = 0 (0x0)[$r0];;
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0x18000452),        //call 17cf8 <strlen>;;
     _32(0x7105000e),        //addd $r1 = $r14, $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16bd8 <main+0x3b8>;;
     _32(0x180001c9),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040078),        //make $r1 = 120 (0x78);;
     _32(0x18000499),        //call 17e50 <strrchr>;;
     _32(0x08800080),        //cb.deqz $r0? 16bf8 <main+0x3d8>;;
     _32(0x180001c1),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x6004006f),        //make $r1 = 111 (0x6f);;
     _32(0x18000491),        //call 17e50 <strrchr>;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16c34 <main+0x414>;;
     _32(0x180001b2),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040200),        //make $r1 = 258056 (0x3f008);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x3804160c),        //ld $r1 = 88 (0x58)[$r12];;
     _32(0x71090001),        //addd $r2 = $r1, $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000100e100fc00),        //addd $r0 = $r0, 263152 (0x403f0);;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x180003dd),        //call 17c38 <strcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16cd4 <main+0x4b4>;;
     _32(0x1800018a),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b180),        //compw.ne $r0 = $r0, 6 (0x6);;
     _32(0x0c000180),        //cb.wnez $r0? 16d04 <main+0x4e4>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800080),        //cb.deqz $r0? 16d08 <main+0x4e8>;;
     _32(0x1800017d),        //call 172f8 <abort>;;
     _32(0x60000020),        //make $r0 = 32 (0x20);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2401078c),        //sb 30 (0x1e)[$r12] = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x60040005),        //make $r1 = 5 (0x5);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x00000000800000fce0040200),        //make $r1 = 258056 (0x3f008);;
     _32(0x30040001),        //lwz $r1 = 0 (0x0)[$r1];;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0x71080041),        //addw $r2 = $r1, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _96(0x00000000800000fce0080200),        //make $r2 = 258056 (0x3f008);;
     _32(0x260d0002),        //sw 0 (0x0)[$r2] = $r3;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0x680400c1),        //andd $r1 = $r1, 3 (0x3);;
     _32(0x3808160c),        //ld $r2 = 88 (0x58)[$r12];;
     _32(0x71050042),        //addd $r1 = $r2, $r1;;
     _32(0x60080004),        //make $r2 = 4 (0x4);;
     _32(0x18000402),        //call 17d90 <strncpy>;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000400),        //cb.dnez $r0? 16ddc <main+0x5bc>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b180),        //compw.ne $r0 = $r0, 6 (0x6);;
     _32(0x0c000240),        //cb.wnez $r0? 16ddc <main+0x5bc>;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000101e0040000),        //make $r1 = 263168 (0x40400);;
     _32(0x1800039a),        //call 17c38 <strcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16de0 <main+0x5c0>;;
     _32(0x18000147),        //call 172f8 <abort>;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x60080040),        //make $r2 = 64 (0x40);;
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x180001ad),        //call 174a0 <memset>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x6104060c),        //addd $r1 = $r12, 24 (0x18);;
     _32(0x710d0001),        //addd $r3 = $r1, $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040400),        //make $r1 = 258064 (0x3f010);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x680000c0),        //andd $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000101e1000200),        //addd $r0 = $r0, 263176 (0x40408);;
     _32(0x6008000a),        //make $r2 = 10 (0xa);;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x180003c3),        //call 17d90 <strncpy>;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080005c0),        //cb.dnez $r0? 16ef4 <main+0x6d4>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b1c0),        //compw.ne $r0 = $r0, 7 (0x7);;
     _32(0x0c000400),        //cb.wnez $r0? 16ef4 <main+0x6d4>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b080),        //compw.ne $r0 = $r0, 2 (0x2);;
     _32(0x0c000240),        //cb.wnez $r0? 16ef4 <main+0x6d4>;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x6008000c),        //make $r2 = 12 (0xc);;
     _96(0x0000000080000101e0040400),        //make $r1 = 263184 (0x40410);;
     _32(0x1800014c),        //call 17418 <memcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16ef8 <main+0x6d8>;;
     _32(0x18000101),        //call 172f8 <abort>;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x60080040),        //make $r2 = 64 (0x40);;
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x18000167),        //call 174a0 <memset>;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x60080008),        //make $r2 = 8 (0x8);;
     _96(0x0000000080000101e0040800),        //make $r1 = 263200 (0x40420);;
     _32(0x1800039d),        //call 17d90 <strncpy>;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000240),        //cb.dnez $r0? 16f50 <main+0x730>;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x60080009),        //make $r2 = 9 (0x9);;
     _96(0x0000000080000101e0040a00),        //make $r1 = 263208 (0x40428);;
     _32(0x18000135),        //call 17418 <memcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16f54 <main+0x734>;;
     _32(0x180000ea),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x60040021),        //make $r1 = 33 (0x21);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60080040),        //make $r2 = 64 (0x40);;
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x18000149),        //call 174a0 <memset>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040200),        //make $r1 = 258056 (0x3f008);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _96(0x00000000800000fce0040400),        //make $r1 = 258064 (0x3f010);;
     _32(0x30040001),        //lwz $r1 = 0 (0x0)[$r1];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040400),        //make $r1 = 258064 (0x3f010);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _96(0x00000000800000fce0040400),        //make $r1 = 258064 (0x3f010);;
     _32(0x30040001),        //lwz $r1 = 0 (0x0)[$r1];;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x6a080001),        //copyd $r2 = $r1;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x18000129),        //call 174a0 <memset>;;
     _96(0x000000008000011be0044200),        //make $r1 = 290056 (0x46d08);;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x08000640),        //cb.dnez $r0? 17074 <main+0x854>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000001f001b080),        //compw.ne $r0 = $r0, 34 (0x22);;
     _32(0x0c000480),        //cb.wnez $r0? 17074 <main+0x854>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b0c0),        //compw.ne $r0 = $r0, 3 (0x3);;
     _32(0x0c0002c0),        //cb.wnez $r0? 17074 <main+0x854>;;
     _32(0x60080003),        //make $r2 = 3 (0x3);;
     _96(0x0000000080000101e0040e00),        //make $r1 = 263224 (0x40438);;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x180000ec),        //call 17418 <memcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17078 <main+0x858>;;
     _32(0x180000a1),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040400),        //make $r1 = 258064 (0x3f010);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _96(0x000000008000011be1004200),        //addd $r0 = $r0, 290056 (0x46d08);;
     _32(0x60080008),        //make $r2 = 8 (0x8);;
     _32(0x6004002d),        //make $r1 = 45 (0x2d);;
     _32(0x180000f9),        //call 174a0 <memset>;;
     _96(0x000000008000011be00442c0),        //make $r1 = 290059 (0x46d0b);;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x08000480),        //cb.dnez $r0? 17118 <main+0x8f8>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b100),        //compw.ne $r0 = $r0, 4 (0x4);;
     _32(0x0c0002c0),        //cb.wnez $r0? 17118 <main+0x8f8>;;
     _32(0x6008000b),        //make $r2 = 11 (0xb);;
     _96(0x0000000080000101e0041000),        //make $r1 = 263232 (0x40440);;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x180000c3),        //call 17418 <memcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1711c <main+0x8fc>;;
     _32(0x18000078),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x6004000a),        //make $r1 = 10 (0xa);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _96(0x000000008000011be10c4200),        //addd $r3 = $r0, 290056 (0x46d08);;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7808ffc1),        //zxwd $r2 = $r1;;
     _96(0x00000000800000fce0040400),        //make $r1 = 258064 (0x3f010);;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x180000bb),        //call 174a0 <memset>;;
     _96(0x000000008000011be00444c0),        //make $r1 = 290067 (0x46d13);;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x08000640),        //cb.dnez $r0? 1722c <main+0xa0c>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b2c0),        //compw.ne $r0 = $r0, 11 (0xb);;
     _32(0x0c000480),        //cb.wnez $r0? 1722c <main+0xa0c>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b140),        //compw.ne $r0 = $r0, 5 (0x5);;
     _32(0x0c0002c0),        //cb.wnez $r0? 1722c <main+0xa0c>;;
     _96(0x000000008000011be0004400),        //make $r0 = 290064 (0x46d10);;
     _32(0x60080007),        //make $r2 = 7 (0x7);;
     _96(0x0000000080000101e0041400),        //make $r1 = 263248 (0x40450);;
     _32(0x1800007e),        //call 17418 <memcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17230 <main+0xa10>;;
     _32(0x18000033),        //call 172f8 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _96(0x000000008000011be1004200),        //addd $r0 = $r0, 290056 (0x46d08);;
     _32(0x60080006),        //make $r2 = 6 (0x6);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x18000088),        //call 174a0 <memset>;;
     _96(0x000000008000011be00445c0),        //make $r1 = 290071 (0x46d17);;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x08000480),        //cb.dnez $r0? 172dc <main+0xabc>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f001b3c0),        //compw.ne $r0 = $r0, 15 (0xf);;
     _32(0x0c0002c0),        //cb.wnez $r0? 172dc <main+0xabc>;;
     _96(0x000000008000011be0004480),        //make $r0 = 290066 (0x46d12);;
     _32(0x6008000b),        //make $r2 = 11 (0xb);;
     _96(0x0000000080000101e0041600),        //make $r1 = 263256 (0x40458);;
     _32(0x18000052),        //call 17418 <memcmp>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 172e0 <main+0xac0>;;
     _32(0x18000007),        //call 172f8 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x6130180c),        //addd $r12 = $r12, 96 (0x60);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000189),        //call 17928 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000955),        //call 19860 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110100000100000; //0x16820
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111001011111000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000016820;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, rcount, wcount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, rcount, wcount, adr_end_main);
print_list_data(mD);
}
