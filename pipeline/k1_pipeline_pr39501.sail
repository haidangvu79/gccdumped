// executing pipeline pr39501 test 
val k1_pipeline_pr39501: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_pr39501() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let float_min1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2605040c),        //sw 16 (0x10)[$r12] = $r1;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x74030001),        //fcompw.olt $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16844 <float_min1+0x24>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 16848 <float_min1+0x28>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let float_min2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2605040c),        //sw 16 (0x10)[$r12] = $r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _32(0x76030001),        //fcompw.oge $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16874 <float_min2+0x24>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 16878 <float_min2+0x28>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let float_max1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2605040c),        //sw 16 (0x10)[$r12] = $r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _32(0x74030001),        //fcompw.olt $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 168a4 <float_max1+0x24>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 168a8 <float_max1+0x28>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let float_max2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2605040c),        //sw 16 (0x10)[$r12] = $r1;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x76030001),        //fcompw.oge $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 168d4 <float_max2+0x24>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 168d8 <float_max2+0x28>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let double_min1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x7c030001),        //fcompd.olt $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16904 <double_min1+0x24>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 16908 <double_min1+0x28>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let double_min2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x7e030001),        //fcompd.oge $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16934 <double_min2+0x24>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 16938 <double_min2+0x28>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let double_max1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x7c030001),        //fcompd.olt $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16964 <double_max1+0x24>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 16968 <double_max1+0x28>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let double_max2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x7e030001),        //fcompd.oge $r0 = $r1, $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16994 <double_max2+0x24>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x10000002),        //goto 16998 <double_max2+0x28>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff9a),        //call 16820 <float_min1>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 169d0 <main+0x30>;;
     _32(0x180001db),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff91),        //call 16820 <float_min1>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 169f4 <main+0x54>;;
     _32(0x180001d2),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff88),        //call 16820 <float_min1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16a14 <main+0x74>;;
     _32(0x180001ca),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff80),        //call 16820 <float_min1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16a34 <main+0x94>;;
     _32(0x180001c2),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff77),        //call 16820 <float_min1>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16a5c <main+0xbc>;;
     _32(0x180001b8),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff6d),        //call 16820 <float_min1>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16a84 <main+0xe4>;;
     _32(0x180001ae),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff7c),        //call 16880 <float_max1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16aa4 <main+0x104>;;
     _32(0x180001a6),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff74),        //call 16880 <float_max1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16ac4 <main+0x124>;;
     _32(0x1800019e),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff6c),        //call 16880 <float_max1>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16ae8 <main+0x148>;;
     _32(0x18000195),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff63),        //call 16880 <float_max1>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16b0c <main+0x16c>;;
     _32(0x1800018c),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff59),        //call 16880 <float_max1>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16b34 <main+0x194>;;
     _32(0x18000182),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff4f),        //call 16880 <float_max1>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16b5c <main+0x1bc>;;
     _32(0x18000178),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff3a),        //call 16850 <float_min2>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16b80 <main+0x1e0>;;
     _32(0x1800016f),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff31),        //call 16850 <float_min2>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16ba4 <main+0x204>;;
     _32(0x18000166),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff28),        //call 16850 <float_min2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16bc4 <main+0x224>;;
     _32(0x1800015e),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff20),        //call 16850 <float_min2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16be4 <main+0x244>;;
     _32(0x18000156),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff17),        //call 16850 <float_min2>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c0c <main+0x26c>;;
     _32(0x1800014c),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff0d),        //call 16850 <float_min2>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c34 <main+0x294>;;
     _32(0x18000142),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff1c),        //call 168b0 <float_max2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c54 <main+0x2b4>;;
     _32(0x1800013a),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1fffff14),        //call 168b0 <float_max2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c74 <main+0x2d4>;;
     _32(0x18000132),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1fffff0c),        //call 168b0 <float_max2>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c98 <main+0x2f8>;;
     _32(0x18000129),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1fffff03),        //call 168b0 <float_max2>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16cbc <main+0x31c>;;
     _32(0x18000120),        //call 17138 <abort>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _64(0x002fe000e0000000),        //make $r0 = 3212836864 (0xbf800000);;
     _32(0x1ffffef9),        //call 168b0 <float_max2>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16ce4 <main+0x344>;;
     _32(0x18000116),        //call 17138 <abort>;;
     _64(0x002fe000e0040000),        //make $r1 = 3212836864 (0xbf800000);;
     _64(0x000fe000e0000000),        //make $r0 = 1065353216 (0x3f800000);;
     _32(0x1ffffeef),        //call 168b0 <float_max2>;;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x72030040),        //fcompw.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16d0c <main+0x36c>;;
     _32(0x1800010c),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffef1),        //call 168e0 <double_min1>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16d38 <main+0x398>;;
     _32(0x18000101),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffee6),        //call 168e0 <double_min1>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16d64 <main+0x3c4>;;
     _32(0x180000f6),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffedb),        //call 168e0 <double_min1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16d88 <main+0x3e8>;;
     _32(0x180000ed),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffed2),        //call 168e0 <double_min1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16dac <main+0x40c>;;
     _32(0x180000e4),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffec7),        //call 168e0 <double_min1>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16de0 <main+0x440>;;
     _32(0x180000d7),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffeba),        //call 168e0 <double_min1>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16e14 <main+0x474>;;
     _32(0x180000ca),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffec7),        //call 16940 <double_max1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16e38 <main+0x498>;;
     _32(0x180000c1),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffebe),        //call 16940 <double_max1>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16e5c <main+0x4bc>;;
     _32(0x180000b8),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffeb5),        //call 16940 <double_max1>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16e88 <main+0x4e8>;;
     _32(0x180000ad),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffeaa),        //call 16940 <double_max1>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16eb4 <main+0x514>;;
     _32(0x180000a2),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffe9d),        //call 16940 <double_max1>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16ee8 <main+0x548>;;
     _32(0x18000095),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffe90),        //call 16940 <double_max1>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16f1c <main+0x57c>;;
     _32(0x18000088),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe79),        //call 16910 <double_min2>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16f48 <main+0x5a8>;;
     _32(0x1800007d),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffe6e),        //call 16910 <double_min2>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16f74 <main+0x5d4>;;
     _32(0x18000072),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe63),        //call 16910 <double_min2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16f98 <main+0x5f8>;;
     _32(0x18000069),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffe5a),        //call 16910 <double_min2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16fbc <main+0x61c>;;
     _32(0x18000060),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffe4f),        //call 16910 <double_min2>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16ff0 <main+0x650>;;
     _32(0x18000053),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffe42),        //call 16910 <double_min2>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 17024 <main+0x684>;;
     _32(0x18000046),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe4f),        //call 16970 <double_max2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 17048 <main+0x6a8>;;
     _32(0x1800003d),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffe46),        //call 16970 <double_max2>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 1706c <main+0x6cc>;;
     _32(0x18000034),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe3d),        //call 16970 <double_max2>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 17098 <main+0x6f8>;;
     _32(0x18000029),        //call 17138 <abort>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffe32),        //call 16970 <double_max2>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 170c4 <main+0x724>;;
     _32(0x1800001e),        //call 17138 <abort>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _96(0x05ff800080000000e0000000),        //make $r0 = 13830554455654793216 (0xbff0000000000000);;
     _32(0x1ffffe25),        //call 16970 <double_max2>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 170f8 <main+0x758>;;
     _32(0x18000011),        //call 17138 <abort>;;
     _96(0x05ff800080000000e0040000),        //make $r1 = 13830554455654793216 (0xbff0000000000000);;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x1ffffe18),        //call 16970 <double_max2>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7a030040),        //fcompd.oeq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 1712c <main+0x78c>;;
     _32(0x18000004),        //call 17138 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 17158 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 17558 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 19230 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 176f0 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 17194 <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 19230 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110100110100000; //0x169a0
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(float_min1, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(float_min2, 0b00010110100001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(float_max1, 0b00010110100010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(float_max2, 0b00010110100010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(double_min1, 0b00010110100011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(double_min2, 0b00010110100100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(double_max1, 0b00010110100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(double_max2, 0b00010110100101110000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110100110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111000100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit, 0b00010111000101011000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x00000000000169a0;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
