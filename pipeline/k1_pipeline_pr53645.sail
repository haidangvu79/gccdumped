// executing pipeline pr53645 test 
val k1_pipeline_pr53645: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_pr53645() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let uq4444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur4444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq4444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bf802),        //extfs $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr4444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq1428: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x7b0a3042),        //srlw $r2 = $r2, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0230c0),        //srlw $r0 = $r0, 3 (0x3);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur1428: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x78080042),        //andw $r2 = $r2, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780001c0),        //andw $r0 = $r0, 7 (0x7);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x60140000),        //make $r5 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq1428: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bf802),        //extfs $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780230c0),        //srsw $r0 = $r0, 3 (0x3);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr1428: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78040041),        //andw $r1 = $r1, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023740),        //srlw $r0 = $r0, 29 (0x1d);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780401c1),        //andw $r1 = $r1, 7 (0x7);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0x6103f003),        //insf $r0 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let uq3333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x0555555582aaaaaae004aac0),        //make $r1 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur3333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f800),        //extfz $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59241001),        //muludt $r8r9 = $r1, $r0;;
     _32(0x6a000009),        //copyd $r0 = $r9;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq3333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bf802),        //extfs $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr3333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq6565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _96(0x0666666683333333e00c3340),        //make $r3 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x0666666683333333e0043340),        //make $r1 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur6565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f800),        //extfz $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59241001),        //muludt $r8r9 = $r1, $r0;;
     _32(0x6a000009),        //copyd $r0 = $r9;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq6565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _64(0x000aaaaae00caac0),        //make $r3 = 715827883 (0x2aaaaaab);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bf802),        //extfs $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _64(0x00199999e00c99c0),        //make $r3 = 1717986919 (0x66666667);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0e3043),        //sraw $r3 = $r3, 1 (0x1);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _64(0x000aaaaae00caac0),        //make $r3 = 715827883 (0x2aaaaaab);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00199999e00499c0),        //make $r1 = 1717986919 (0x66666667);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063041),        //sraw $r1 = $r1, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr6565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a123040),        //sraw $r4 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq1414146: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x7814ffc2),        //zxwd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bf802),        //extfz $r2 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x7810ffc2),        //zxwd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x7808ffc3),        //zxwd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x780cffc2),        //zxwd $r3 = $r2;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x0555555582aaaaaae004aac0),        //make $r1 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f005),        //insf $r0 = $r5, 31 (0x1f), 0 (0x0);;
     _32(0x6303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20);;
     _32(0x6107f003),        //insf $r1 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let ur1414146: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141100),        //muludt $r4r5 = $r0, $r4;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f800),        //extfz $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141100),        //muludt $r4r5 = $r0, $r4;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59241100),        //muludt $r8r9 = $r0, $r4;;
     _32(0x6a000009),        //copyd $r0 = $r9;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let sq1414146: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr1414146: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq7777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f800),        //extfz $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59241040),        //muludt $r8r9 = $r0, $r1;;
     _32(0x6a040009),        //copyd $r1 = $r9;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1040),        //muludt $r2r3 = $r0, $r1;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur7777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c100000),        //lq $r4r5 = 0 (0x0)[$r0];;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x75090040),        //sbfd $r2 = $r0, $r1;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7820ffc0),        //zxwd $r8 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6703f800),        //extfz $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x781cffc0),        //zxwd $r7 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6703f801),        //extfz $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f008),        //insf $r0 = $r8, 31 (0x1f), 0 (0x0);;
     _32(0x6303f807),        //insf $r0 = $r7, 63 (0x3f), 32 (0x20);;
     _32(0x6107f006),        //insf $r1 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let sq7777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr7777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7818ffc0),        //zxwd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7814ffc0),        //zxwd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7810ffc0),        //zxwd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03f801),        //extfs $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6103f006),        //insf $r0 = $r6, 31 (0x1f), 0 (0x0);;
     _32(0x6303f805),        //insf $r0 = $r5, 63 (0x3f), 32 (0x20);;
     _32(0x6107f004),        //insf $r1 = $r4, 31 (0x1f), 0 (0x0);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x100003e1),        //goto 18f18 <main+0xf98>;;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffa1c),        //call 16820 <uq4444>;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18018 <main+0x98>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1801c <main+0x9c>;;
     _32(0x180007e4),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18088 <main+0x108>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1808c <main+0x10c>;;
     _32(0x180007c8),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffa04),        //call 168b8 <ur4444>;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18110 <main+0x190>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18114 <main+0x194>;;
     _32(0x180007a6),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18180 <main+0x200>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18184 <main+0x204>;;
     _32(0x1800078a),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffa4e),        //call 16ad8 <uq1428>;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18200 <main+0x280>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b0230c0),        //srlw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18204 <main+0x284>;;
     _32(0x1800076a),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023040),        //srlw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18270 <main+0x2f0>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18274 <main+0x2f4>;;
     _32(0x1800074e),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffa36),        //call 16b68 <ur1428>;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x08000380),        //cb.dnez $r0? 182d0 <main+0x350>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780001c0),        //andw $r0 = $r0, 7 (0x7);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 182d4 <main+0x354>;;
     _32(0x18000736),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18340 <main+0x3c0>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18344 <main+0x3c4>;;
     _32(0x1800071a),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffa7c),        //call 16d50 <uq3333>;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 183f0 <main+0x470>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 183f4 <main+0x474>;;
     _32(0x180006ee),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 18488 <main+0x508>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1848c <main+0x50c>;;
     _32(0x180006c8),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffa64),        //call 16e38 <ur3333>;;
     _32(0x300c080c),        //lwz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 18558 <main+0x5d8>;;
     _32(0x300c0b0c),        //lwz $r3 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1855c <main+0x5dc>;;
     _32(0x18000694),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x300c0a0c),        //lwz $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 18610 <main+0x690>;;
     _32(0x300c090c),        //lwz $r3 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18614 <main+0x694>;;
     _32(0x18000666),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffad8),        //call 17190 <uq6565>;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 186c0 <main+0x740>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0083340),        //make $r2 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 186c4 <main+0x744>;;
     _32(0x1800063a),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 18758 <main+0x7d8>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0083340),        //make $r2 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1875c <main+0x7dc>;;
     _32(0x18000614),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffac0),        //call 17278 <ur6565>;;
     _32(0x300c080c),        //lwz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1882c <main+0x8ac>;;
     _32(0x300c0b0c),        //lwz $r3 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18830 <main+0x8b0>;;
     _32(0x180005df),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x300c0a0c),        //lwz $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 188e8 <main+0x968>;;
     _32(0x300c090c),        //lwz $r3 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 188ec <main+0x96c>;;
     _32(0x180005b0),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffb3a),        //call 175f0 <uq1414146>;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1899c <main+0xa1c>;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 189a0 <main+0xa20>;;
     _32(0x18000583),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 18a3c <main+0xabc>;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0080400),        //make $r2 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18a40 <main+0xac0>;;
     _32(0x1800055b),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffb23),        //call 176e8 <ur1414146>;;
     _32(0x300c080c),        //lwz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 18b18 <main+0xb98>;;
     _32(0x300c0b0c),        //lwz $r3 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18b1c <main+0xb9c>;;
     _32(0x18000524),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x300c0a0c),        //lwz $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 18be0 <main+0xc60>;;
     _32(0x300c090c),        //lwz $r3 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18be4 <main+0xc64>;;
     _32(0x180004f2),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffbaa),        //call 17aa8 <uq7777>;;
     _32(0x3008080c),        //lwz $r2 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 18ca8 <main+0xd28>;;
     _32(0x30080b0c),        //lwz $r2 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18cac <main+0xd2c>;;
     _32(0x180004c0),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30080a0c),        //lwz $r2 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 18d58 <main+0xdd8>;;
     _32(0x3008090c),        //lwz $r2 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18d5c <main+0xddc>;;
     _32(0x18000494),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040400),        //addd $r1 = $r0, 270352 (0x42010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffffb94),        //call 17bc8 <ur7777>;;
     _32(0x300c080c),        //lwz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x75090040),        //sbfd $r2 = $r0, $r1;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 18e3c <main+0xebc>;;
     _32(0x30100b0c),        //lwz $r4 = 44 (0x2c)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b004),        //compw.eq $r0 = $r4, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18e40 <main+0xec0>;;
     _32(0x1800045b),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30100a0c),        //lwz $r4 = 40 (0x28)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b004),        //compw.ne $r0 = $r4, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 18f04 <main+0xf84>;;
     _32(0x3010090c),        //lwz $r4 = 36 (0x24)[$r12];;
     _96(0x0000000080000108e0040400),        //make $r1 = 270352 (0x42010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b004),        //compw.eq $r0 = $r4, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18f08 <main+0xf88>;;
     _32(0x18000429),        //call 19fa8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c7f0740),        //cb.wnez $r0? 17f98 <main+0x18>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x10000415),        //goto 19f84 <main+0x2004>;;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff681),        //call 16950 <sq4444>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 18fb4 <main+0x1034>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18fb8 <main+0x1038>;;
     _32(0x180003fd),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19024 <main+0x10a4>;;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19028 <main+0x10a8>;;
     _32(0x180003e1),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff669),        //call 169e8 <sr4444>;;
     _32(0x3008040c),        //lwz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 190d4 <main+0x1154>;;
     _32(0x3008070c),        //lwz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 190d8 <main+0x1158>;;
     _32(0x180003b5),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3008060c),        //lwz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1916c <main+0x11ec>;;
     _32(0x3008050c),        //lwz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19170 <main+0x11f0>;;
     _32(0x1800038f),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff699),        //call 16bf0 <sq1428>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 191ec <main+0x126c>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x780230c0),        //srsw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 191f0 <main+0x1270>;;
     _32(0x1800036f),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78023040),        //srsw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 1925c <main+0x12dc>;;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19260 <main+0x12e0>;;
     _32(0x18000353),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff681),        //call 16c80 <sr1428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x080004c0),        //cb.dnez $r0? 192d0 <main+0x1350>;;
     _32(0x3008070c),        //lwz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023740),        //srlw $r0 = $r0, 29 (0x1d);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780401c1),        //andw $r1 = $r1, 7 (0x7);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 192d4 <main+0x1354>;;
     _32(0x18000336),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3008060c),        //lwz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78040041),        //andw $r1 = $r1, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 19368 <main+0x13e8>;;
     _32(0x3008050c),        //lwz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1936c <main+0x13ec>;;
     _32(0x18000310),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff6f8),        //call 16f68 <sq3333>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00155555e0085580),        //make $r2 = 1431655766 (0x55555556);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 19418 <main+0x1498>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00155555e0085580),        //make $r2 = 1431655766 (0x55555556);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1941c <main+0x149c>;;
     _32(0x180002e4),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00155555e0085580),        //make $r2 = 1431655766 (0x55555556);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 194b0 <main+0x1530>;;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00155555e0085580),        //make $r2 = 1431655766 (0x55555556);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 194b4 <main+0x1534>;;
     _32(0x180002be),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff6e0),        //call 17050 <sr3333>;;
     _32(0x300c040c),        //lwz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 19588 <main+0x1608>;;
     _32(0x300c070c),        //lwz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1958c <main+0x160c>;;
     _32(0x18000288),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x300c060c),        //lwz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 19648 <main+0x16c8>;;
     _32(0x300c050c),        //lwz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1964c <main+0x16cc>;;
     _32(0x18000258),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff752),        //call 173b0 <sq6565>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x000aaaaae008aac0),        //make $r2 = 715827883 (0x2aaaaaab);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 196fc <main+0x177c>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00199999e00899c0),        //make $r2 = 1717986919 (0x66666667);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0a3042),        //sraw $r2 = $r2, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19700 <main+0x1780>;;
     _32(0x1800022b),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x000aaaaae008aac0),        //make $r2 = 715827883 (0x2aaaaaab);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 19798 <main+0x1818>;;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00199999e00899c0),        //make $r2 = 1717986919 (0x66666667);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0a3042),        //sraw $r2 = $r2, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1979c <main+0x181c>;;
     _32(0x18000204),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff73a),        //call 174a0 <sr6565>;;
     _32(0x300c040c),        //lwz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19878 <main+0x18f8>;;
     _32(0x300c070c),        //lwz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1987c <main+0x18fc>;;
     _32(0x180001cc),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x300c060c),        //lwz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19940 <main+0x19c0>;;
     _32(0x300c050c),        //lwz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19944 <main+0x19c4>;;
     _32(0x1800019a),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff7b6),        //call 17838 <sq1414146>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a30c2),        //sraw $r2 = $r2, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 199f8 <main+0x1a78>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x000aaaaae008aac0),        //make $r2 = 715827883 (0x2aaaaaab);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 199fc <main+0x1a7c>;;
     _32(0x1800016c),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a30c2),        //sraw $r2 = $r2, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 19aa0 <main+0x1b20>;;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a30c2),        //sraw $r2 = $r2, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19aa4 <main+0x1b24>;;
     _32(0x18000142),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff7a0),        //call 17940 <sr1414146>;;
     _32(0x300c040c),        //lwz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19b88 <main+0x1c08>;;
     _32(0x300c070c),        //lwz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19b8c <main+0x1c0c>;;
     _32(0x18000108),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x300c060c),        //lwz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0006c0),        //cb.wnez $r0? 19c60 <main+0x1ce0>;;
     _32(0x300c050c),        //lwz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19c64 <main+0x1ce4>;;
     _32(0x180000d2),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff828),        //call 17d20 <sq7777>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 19d20 <main+0x1da0>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19d24 <main+0x1da4>;;
     _32(0x180000a2),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 19dc8 <main+0x1e48>;;
     _32(0x3004050c),        //lwz $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0080c00),        //make $r2 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00824ff),        //make $r2 = -1840700269 (0xffffffff92492493);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x71091080),        //addw $r2 = $r0, $r2;;
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19dcc <main+0x1e4c>;;
     _32(0x18000078),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000108e1040c00),        //addd $r1 = $r0, 270384 (0x42030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1ffff812),        //call 17e30 <sr7777>;;
     _32(0x300c040c),        //lwz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19ea8 <main+0x1f28>;;
     _32(0x300c070c),        //lwz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19eac <main+0x1f2c>;;
     _32(0x18000040),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x300c060c),        //lwz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19f70 <main+0x1ff0>;;
     _32(0x300c050c),        //lwz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000108e0040c00),        //make $r1 = 270384 (0x42030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19f74 <main+0x1ff4>;;
     _32(0x1800000e),        //call 19fa8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c7efa40),        //cb.wnez $r0? 18f34 <main+0xfb4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 1a380 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 1beb0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010111111110000000; //0x17f80
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq4444, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur4444, 0b00010110100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq4444, 0b00010110100101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr4444, 0b00010110100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq1428, 0b00010110101011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur1428, 0b00010110101101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq1428, 0b00010110101111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr1428, 0b00010110110010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq3333, 0b00010110110101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur3333, 0b00010110111000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq3333, 0b00010110111101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr3333, 0b00010111000001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq6565, 0b00010111000110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur6565, 0b00010111001001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq6565, 0b00010111001110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr6565, 0b00010111010010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq1414146, 0b00010111010111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur1414146, 0b00010111011011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq1414146, 0b00010111100000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr1414146, 0b00010111100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq7777, 0b00010111101010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur7777, 0b00010111101111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq7777, 0b00010111110100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr7777, 0b00010111111000110000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010111111110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00011001111110101000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000017f80;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
