// executing pipeline 20180921_1.c.out.dumped test 
val k1_pipeline_20180921_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_20180921_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let dummy: list_I = 
 [|
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000011be004b200),        //make $r1 = 290504 (0x46ec8);;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130200c),        //addd $r12 = $r12, 128 (0x80);;
     _32(0x0fd00000)        //ret ;;
 |];

let aq: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78000140),        //andw $r0 = $r0, 5 (0x5);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c200),        //make $r0 = 273160 (0x42b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78000140),        //andw $r0 = $r0, 5 (0x5);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7c011002),        //xorw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x000000008000011be008b600),        //make $r2 = 290520 (0x46ed8);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78000140),        //andw $r0 = $r0, 5 (0x5);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000c200),        //make $r0 = 273160 (0x42b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7c011002),        //xorw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000140),        //andw $r0 = $r0, 5 (0x5);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x000000008000011be008b600),        //make $r2 = 290520 (0x46ed8);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000c200),        //make $r0 = 273160 (0x42b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7c011002),        //xorw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000140),        //andw $r0 = $r0, 5 (0x5);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let as: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000010ae000cc00),        //make $r0 = 273200 (0x42b30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800180),        //cb.deqz $r0? 169d8 <as+0x30>;;
     _96(0x000000008000010ae000d600),        //make $r0 = 273240 (0x42b58);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let at: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _64(0x001f00afe000ffc0),        //make $r0 = 2080555007 (0x7c02bfff);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000004c),        //goto 16b38 <at+0x150>;;
     _96(0x000000008000010ae000d400),        //make $r0 = 273232 (0x42b50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x088002c0),        //cb.deqz $r0? 16a48 <at+0x60>;;
     _96(0x000000008000010ae000dc00),        //make $r0 = 273264 (0x42b70);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000dc00),        //make $r0 = 273264 (0x42b70);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x088002c0),        //cb.deqz $r0? 16a84 <at+0x9c>;;
     _96(0x000000008000010ae000ca00),        //make $r0 = 273192 (0x42b28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000ca00),        //make $r0 = 273192 (0x42b28);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1fffff5f),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000d800),        //make $r0 = 273248 (0x42b60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800580),        //cb.deqz $r0? 16b10 <at+0x128>;;
     _96(0x000000008000010ae000f600),        //make $r0 = 273368 (0x42bd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x3004fe00),        //lwz $r1 = -8 (0xfffffff8)[$r0];;
     _96(0x000000008000010ae000cc00),        //make $r0 = 273200 (0x42b30);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000cc00),        //make $r0 = 273200 (0x42b30);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000ea00),        //make $r0 = 273320 (0x42ba8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000f600),        //make $r0 = 273368 (0x42bd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000f600),        //make $r0 = 273368 (0x42bd8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000f600),        //make $r0 = 273368 (0x42bd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087fec40),        //cb.dnez $r0? 16a0c <at+0x24>;;
     _96(0x000000008000010ae000d400),        //make $r0 = 273232 (0x42b50);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let aw: list_I = 
 [|
     _64(0x07ffffffe130400c),        //addd $r12 = $r12, -768 (0xfffffffffffffd00);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _64(0x18000000a601b60c),        //sw 728 (0x2d8)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _64(0x18000000a601b70c),        //sw 732 (0x2dc)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _64(0x18000000a601b80c),        //sw 736 (0x2e0)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _64(0x18000000a601b90c),        //sw 740 (0x2e4)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _64(0x18000000a601ba0c),        //sw 744 (0x2e8)[$r12] = $r0;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _64(0x18000000a601bf0c),        //sw 764 (0x2fc)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701b20c),        //sd 712 (0x2c8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601b40c),        //sw 720 (0x2d0)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _64(0x18000000a601b20c),        //sw 712 (0x2c8)[$r12] = $r0;;
     _64(0x18000000a800b30c),        //lhz $r0 = 716 (0x2cc)[$r12];;
     _32(0x60040003),        //make $r1 = 3 (0x3);;
     _32(0x60038001),        //insf $r0 = $r1, 8 (0x8), 0 (0x0);;
     _64(0x18000000a501b30c),        //sh 716 (0x2cc)[$r12] = $r0;;
     _32(0x1fffff76),        //call 169e8 <at>;;
     _64(0x00000000e100b60c),        //addd $r0 = $r12, 728 (0x2d8);;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x1fffff61),        //call 169a8 <as>;;
     _64(0x18000000b004ba0c),        //lwz $r1 = 744 (0x2e8)[$r12];;
     _96(0x000000008000011be000be00),        //make $r0 = 290552 (0x46ef8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x2601280c),        //sw 160 (0xa0)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x26012a0c),        //sw 168 (0xa8)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x26012b0c),        //sw 172 (0xac)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x26012c0c),        //sw 176 (0xb0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x26012e0c),        //sw 184 (0xb8)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x26012f0c),        //sw 188 (0xbc)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x2601300c),        //sw 192 (0xc0)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601330c),        //sw 204 (0xcc)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x2601340c),        //sw 208 (0xd0)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x2601360c),        //sw 216 (0xd8)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x2601370c),        //sw 220 (0xdc)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x26013a0c),        //sw 232 (0xe8)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _32(0x26013b0c),        //sw 236 (0xec)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x26013c0c),        //sw 240 (0xf0)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x26013e0c),        //sw 248 (0xf8)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _64(0x18000000a601aa0c),        //sw 680 (0x2a8)[$r12] = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _64(0x18000000a601ab0c),        //sw 684 (0x2ac)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _64(0x18000000a601ac0c),        //sw 688 (0x2b0)[$r12] = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _64(0x18000000a601ad0c),        //sw 692 (0x2b4)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _64(0x18000000a601ae0c),        //sw 696 (0x2b8)[$r12] = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _64(0x18000000a601af0c),        //sw 700 (0x2bc)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _64(0x18000000a601b00c),        //sw 704 (0x2c0)[$r12] = $r0;;
     _96(0x0000000080000100e004f400),        //make $r1 = 263120 (0x403d0);;
     _32(0x6100400c),        //addd $r0 = $r12, 256 (0x100);;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6004007c),        //make $r1 = 124 (0x7c);;
     _32(0x6a080001),        //copyd $r2 = $r1;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x18000429),        //call 17e10 <memcpy>;;
     _96(0x000000008000010ae000e000),        //make $r0 = 273280 (0x42b80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800f80),        //cb.deqz $r0? 16e78 <aw+0x300>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x1000001c),        //goto 16df8 <aw+0x280>;;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _64(0x00000000e104c00c),        //addd $r1 = $r12, 768 (0x300);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x3000f600),        //lwz $r0 = -40 (0xffffffd8)[$r0];;
     _32(0x1000030c),        //goto 179e4 <aw+0xe6c>;;
     _32(0x7f03f000),        //nop ;;
     _96(0x000000008000010ae000d200),        //make $r0 = 273224 (0x42b48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087ffc00),        //cb.dnez $r0? 16d8c <aw+0x214>;;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087ffb00),        //cb.dnez $r0? 16db8 <aw+0x240>;;
     _64(0x18000000b000a70c),        //lwz $r0 = 668 (0x29c)[$r12];;
     _32(0x68038000),        //extfs $r0 = $r0, 8 (0x8), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x7201b001),        //compw.lt $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _64(0x18000000b000b10c),        //lwz $r0 = 708 (0x2c4)[$r12];;
     _32(0x7501b001),        //compw.gt $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16e78 <aw+0x300>;;
     _96(0x000000008000010ae000e200),        //make $r0 = 273288 (0x42b88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000e200),        //make $r0 = 273288 (0x42b88);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701a20c),        //sd 648 (0x288)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601a40c),        //sw 656 (0x290)[$r12] = $r0;;
     _32(0x60000005),        //make $r0 = 5 (0x5);;
     _64(0x18000000a601a20c),        //sw 648 (0x288)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701140c),        //sd 80 (0x50)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701180c),        //sd 96 (0x60)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011c0c),        //sd 112 (0x70)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701200c),        //sd 128 (0x80)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x2601140c),        //sw 80 (0x50)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x60000007),        //make $r0 = 7 (0x7);;
     _32(0x2601160c),        //sw 88 (0x58)[$r12] = $r0;;
     _32(0x60000007),        //make $r0 = 7 (0x7);;
     _32(0x2601170c),        //sw 92 (0x5c)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x2601180c),        //sw 96 (0x60)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x26011a0c),        //sw 104 (0x68)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x26011b0c),        //sw 108 (0x6c)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x26011c0c),        //sw 112 (0x70)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x26011e0c),        //sw 120 (0x78)[$r12] = $r0;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x26011f0c),        //sw 124 (0x7c)[$r12] = $r0;;
     _32(0x60000007),        //make $r0 = 7 (0x7);;
     _32(0x2601200c),        //sw 128 (0x80)[$r12] = $r0;;
     _32(0x60000007),        //make $r0 = 7 (0x7);;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x2601220c),        //sw 136 (0x88)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601230c),        //sw 140 (0x8c)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601240c),        //sw 144 (0x90)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601260c),        //sw 152 (0x98)[$r12] = $r0;;
     _96(0x000000008000010ae000d400),        //make $r0 = 273232 (0x42b50);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x68038000),        //extfs $r0 = $r0, 8 (0x8), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x1800032e),        //call 17c78 <__moddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000010ae000dc00),        //make $r0 = 273264 (0x42b70);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000011be000bc00),        //make $r0 = 290544 (0x46ef0);;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x38080200),        //ld $r2 = 8 (0x8)[$r0];;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffdfb),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000fa00),        //make $r0 = 273384 (0x42be8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000010ae000dc00),        //make $r0 = 273264 (0x42b70);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7a011002),        //orw $r0 = $r2, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000010ae000fa00),        //make $r0 = 273384 (0x42be8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08808d00),        //cb.deqz $r0? 17978 <aw+0xe00>;;
     _96(0x000000008000010ae000ce00),        //make $r0 = 273208 (0x42b38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _64(0x00000000e104c00c),        //addd $r1 = $r12, 768 (0x300);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x3000ea00),        //lwz $r0 = -88 (0xffffffa8)[$r0];;
     _32(0x08805fc0),        //cb.deqz $r0? 176d0 <aw+0xb58>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x0c804f80),        //cb.weqz $r0? 175d4 <aw+0xa5c>;;
     _32(0x6000038c),        //make $r0 = 908 (0x38c);;
     _64(0x18000000a601940c),        //sw 592 (0x250)[$r12] = $r0;;
     _64(0x18000000a800950c),        //lhz $r0 = 596 (0x254)[$r12];;
     _32(0x60040005),        //make $r1 = 5 (0x5);;
     _32(0x60038001),        //insf $r0 = $r1, 8 (0x8), 0 (0x0);;
     _64(0x18000000a501950c),        //sh 596 (0x254)[$r12] = $r0;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _64(0x18000000a601960c),        //sw 600 (0x258)[$r12] = $r0;;
     _96(0x000000008000010ae000c800),        //make $r0 = 273184 (0x42b20);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x18000000a601be0c),        //sw 760 (0x2f8)[$r12] = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000ea00),        //make $r0 = 273320 (0x42ba8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _64(0x18000000a601bd0c),        //sw 756 (0x2f4)[$r12] = $r0;;
     _96(0x000000008000010ae000f200),        //make $r0 = 273352 (0x42bc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _64(0x18000000a601bc0c),        //sw 752 (0x2f0)[$r12] = $r0;;
     _96(0x000000008000010ae000d800),        //make $r0 = 273248 (0x42b60);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79027001),        //sllw $r0 = $r1, $r0;;
     _64(0x18000000a601bb0c),        //sw 748 (0x2ec)[$r12] = $r0;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800380),        //cb.deqz $r0? 171e4 <aw+0x66c>;;
     _96(0x000000008000010ae000e600),        //make $r0 = 273304 (0x42b98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800240),        //cb.deqz $r0? 171e4 <aw+0x66c>;;
     _96(0x000000008000010ae000da00),        //make $r0 = 273256 (0x42b68);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000f400),        //make $r0 = 273360 (0x42bd0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000000),        //negw $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000ec00),        //make $r0 = 273328 (0x42bb0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000ec00),        //make $r0 = 273328 (0x42bb0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000ec00),        //make $r0 = 273328 (0x42bb0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f401b200),        //compw.le $r0 = $r0, 8 (0x8);;
     _32(0x0c806fc0),        //cb.weqz $r0? 17978 <aw+0xe00>;;
     _64(0x18000000b000bd0c),        //lwz $r0 = 756 (0x2f4)[$r12];;
     _32(0x0c800080),        //cb.weqz $r0? 17290 <aw+0x718>;;
     _32(0x10000050),        //goto 173cc <aw+0x854>;;
     _96(0x000000008000010ae000d600),        //make $r0 = 273240 (0x42b58);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800180),        //cb.deqz $r0? 172b8 <aw+0x740>;;
     _32(0x60040006),        //make $r1 = 6 (0x6);;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffd5b),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000c800),        //make $r0 = 273184 (0x42b20);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x18000000a6019c0c),        //sw 624 (0x270)[$r12] = $r0;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _64(0x18000000b000be0c),        //lwz $r0 = 760 (0x2f8)[$r12];;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000da00),        //make $r0 = 273256 (0x42b68);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b8049a0c),        //ld $r1 = 616 (0x268)[$r12];;
     _64(0x18000000b8089c0c),        //ld $r2 = 624 (0x270)[$r12];;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffd41),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000da00),        //make $r0 = 273256 (0x42b68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087fac80),        //cb.dnez $r0? 16df8 <aw+0x280>;;
     _96(0x000000008000010ae000d400),        //make $r0 = 273232 (0x42b50);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000e200),        //make $r0 = 273288 (0x42b88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000200),        //cb.wnez $r0? 17378 <aw+0x800>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x088000c0),        //cb.deqz $r0? 17378 <aw+0x800>;;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x10000002),        //goto 1737c <aw+0x804>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x000000008000011be000c000),        //make $r0 = 290560 (0x46f00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000de00),        //make $r0 = 273272 (0x42b78);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08ff8740),        //cb.deqz $r0? 16c10 <aw+0x98>;;
     _96(0x000000008000010ae000c800),        //make $r0 = 273184 (0x42b20);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c800),        //make $r0 = 273184 (0x42b20);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x17fffe12),        //goto 16c10 <aw+0x98>;;
     _96(0x000000008000010ae000e200),        //make $r0 = 273288 (0x42b88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087fcd00),        //cb.dnez $r0? 170ac <aw+0x534>;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x088003c0),        //cb.deqz $r0? 1742c <aw+0x8b4>;;
     _96(0x000000008000010ae000c800),        //make $r0 = 273184 (0x42b20);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800280),        //cb.deqz $r0? 1742c <aw+0x8b4>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x38080200),        //ld $r2 = 8 (0x8)[$r0];;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffcfe),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000e600),        //make $r0 = 273304 (0x42b98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000c800),        //make $r0 = 273184 (0x42b20);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x68038000),        //extfs $r0 = $r0, 8 (0x8), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000f200),        //make $r0 = 273352 (0x42bc8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000bc0c),        //lwz $r0 = 752 (0x2f0)[$r12];;
     _32(0x790231c0),        //sllw $r0 = $r0, 7 (0x7);;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a0231c0),        //sraw $r0 = $r0, 7 (0x7);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x00000000800000fce0040600),        //make $r1 = 258072 (0x3f018);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x60038002),        //insf $r0 = $r2, 8 (0x8), 0 (0x0);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000010ae000ee00),        //make $r0 = 273336 (0x42bb8);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x1000001b),        //goto 1753c <aw+0x9c4>;;
     _96(0x000000008000010ae000d600),        //make $r0 = 273240 (0x42b58);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800300),        //cb.deqz $r0? 17514 <aw+0x99c>;;
     _96(0x000000008000010ae000ee00),        //make $r0 = 273336 (0x42bb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _64(0x00000000e104c00c),        //addd $r1 = $r12, 768 (0x300);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x60040008),        //make $r1 = 8 (0x8);;
     _32(0x2605d000),        //sw -192 (0xffffff40)[$r0] = $r1;;
     _96(0x000000008000010ae000ee00),        //make $r0 = 273336 (0x42bb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000ee00),        //make $r0 = 273336 (0x42bb8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000ee00),        //make $r0 = 273336 (0x42bb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f401b080),        //compw.le $r0 = $r0, 2 (0x2);;
     _32(0x0c7ff800),        //cb.wnez $r0? 174d4 <aw+0x95c>;;
     _64(0x18000000b000bf0c),        //lwz $r0 = 764 (0x2fc)[$r12];;
     _32(0x0c000280),        //cb.wnez $r0? 17588 <aw+0xa10>;;
     _96(0x000000008000010ae000f000),        //make $r0 = 273344 (0x42bc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffca7),        //call 16820 <dummy>;;
     _96(0x000000008000010ae004d800),        //make $r1 = 273248 (0x42b60);;
     _64(0x18000000b000bb0c),        //lwz $r0 = 748 (0x2ec)[$r12];;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _64(0x18000000b804940c),        //ld $r1 = 592 (0x250)[$r12];;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b004960c),        //lwz $r1 = 600 (0x258)[$r12];;
     _32(0x26050200),        //sw 8 (0x8)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601980c),        //sw 608 (0x260)[$r12] = $r0;;
     _32(0x10000029),        //goto 17674 <aw+0xafc>;;
     _96(0x000000008000011be000b400),        //make $r0 = 290512 (0x46ed0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _64(0x00000000e104c00c),        //addd $r1 = $r12, 768 (0x300);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x3004ea00),        //lwz $r1 = -88 (0xffffffa8)[$r0];;
     _96(0x000000008000010ae000ce00),        //make $r0 = 273208 (0x42b38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000ce00),        //make $r0 = 273208 (0x42b38);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x17ffffec),        //goto 175d4 <aw+0xa5c>;;
     _96(0x000000008000010ae000e800),        //make $r0 = 273312 (0x42ba0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000011be000bc00),        //make $r0 = 290544 (0x46ef0);;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000d000),        //make $r0 = 273216 (0x42b40);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000d000),        //make $r0 = 273216 (0x42b40);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000d000),        //make $r0 = 273216 (0x42b40);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087ffa40),        //cb.dnez $r0? 17628 <aw+0xab0>;;
     _96(0x000000008000010ae000ca00),        //make $r0 = 273192 (0x42b28);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae000e800),        //make $r0 = 273312 (0x42ba0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000a800a30c),        //lhz $r0 = 652 (0x28c)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x08800180),        //cb.deqz $r0? 176d0 <aw+0xb58>;;
     _96(0x0000000080000100e000f200),        //make $r0 = 263112 (0x403c8);;
     _32(0x1ffffc56),        //call 16820 <dummy>;;
     _32(0x17ffff40),        //goto 173cc <aw+0x854>;;
     _96(0x0000000080000101e0041400),        //make $r1 = 263248 (0x40450);;
     _32(0x6100600c),        //addd $r0 = $r12, 384 (0x180);;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x600400bc),        //make $r1 = 188 (0xbc);;
     _32(0x6a080001),        //copyd $r2 = $r1;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x180001c8),        //call 17e10 <memcpy>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701080c),        //sd 32 (0x20)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701100c),        //sd 64 (0x40)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _64(0x07f342a7e000d23f),        //make $r0 = -854941880 (0xffffffffcd0a9f48);;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x2800090c),        //lhz $r0 = 36 (0x24)[$r12];;
     _32(0x60040002),        //make $r1 = 2 (0x2);;
     _32(0x60038001),        //insf $r0 = $r1, 8 (0x8), 0 (0x0);;
     _32(0x2501090c),        //sh 36 (0x24)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x28000c0c),        //lhz $r0 = 48 (0x30)[$r12];;
     _32(0x60040002),        //make $r1 = 2 (0x2);;
     _32(0x60038001),        //insf $r0 = $r1, 8 (0x8), 0 (0x0);;
     _32(0x25010c0c),        //sh 48 (0x30)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x28000f0c),        //lhz $r0 = 60 (0x3c)[$r12];;
     _32(0x60040004),        //make $r1 = 4 (0x4);;
     _32(0x60038001),        //insf $r0 = $r1, 8 (0x8), 0 (0x0);;
     _32(0x25010f0c),        //sh 60 (0x3c)[$r12] = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x2601100c),        //sw 64 (0x40)[$r12] = $r0;;
     _32(0x60000008),        //make $r0 = 8 (0x8);;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x2800120c),        //lhz $r0 = 72 (0x48)[$r12];;
     _32(0x60040004),        //make $r1 = 4 (0x4);;
     _32(0x60038001),        //insf $r0 = $r1, 8 (0x8), 0 (0x0);;
     _32(0x2501120c),        //sh 72 (0x48)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a7019e0c),        //sd 632 (0x278)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601a00c),        //sw 640 (0x280)[$r12] = $r0;;
     _64(0x00000bbbe000d400),        //make $r0 = 3075920 (0x2eef50);;
     _64(0x18000000a6019e0c),        //sw 632 (0x278)[$r12] = $r0;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800c40),        //cb.deqz $r0? 1789c <aw+0xd24>;;
     _96(0x000000008000010ae000fa00),        //make $r0 = 273384 (0x42be8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x000000008000010ae004f800),        //make $r1 = 273376 (0x42be0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x2802f001),        //lhz.xs $r0 = $r0[$r1];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x1ffffc08),        //call 16848 <aq>;;
     _96(0x000000008000010ae000c000),        //make $r0 = 273152 (0x42b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffbf5),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000c400),        //make $r0 = 273168 (0x42b10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x1ffffbec),        //call 16820 <dummy>;;
     _96(0x000000008000010ae000e400),        //make $r0 = 273296 (0x42b90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000e400),        //make $r0 = 273296 (0x42b90);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000ba0c),        //lwz $r0 = 744 (0x2e8)[$r12];;
     _32(0x08800440),        //cb.deqz $r0? 178e8 <aw+0xd70>;;
     _96(0x000000008000010ae000ca00),        //make $r0 = 273192 (0x42b28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x080011c0),        //cb.dnez $r0? 179d4 <aw+0xe5c>;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x1000001f),        //goto 17960 <aw+0xde8>;;
     _64(0x18000000a800b30c),        //lhz $r0 = 716 (0x2cc)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000000f001b000),        //compw.ne $r0 = $r0, 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _64(0x18000000a601bf0c),        //sw 764 (0x2fc)[$r12] = $r0;;
     _32(0x10000015),        //goto 17960 <aw+0xde8>;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae004f800),        //make $r1 = 273376 (0x42be0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0x250bf001),        //sh.xs $r0[$r1] = $r2;;
     _96(0x000000008000010ae000e600),        //make $r0 = 273304 (0x42b98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000010ae000e600),        //make $r0 = 273304 (0x42b98);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000e600),        //make $r0 = 273304 (0x42b98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087ffa00),        //cb.dnez $r0? 17910 <aw+0xd98>;;
     _32(0x17fffdce),        //goto 170ac <aw+0x534>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x60040009),        //make $r1 = 9 (0x9);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x1000000b),        //goto 179b8 <aw+0xe40>;;
     _96(0x000000008000010ae000c600),        //make $r0 = 273176 (0x42b18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x080003c0),        //cb.dnez $r0? 179dc <aw+0xe64>;;
     _96(0x000000008000010ae000de00),        //make $r0 = 273272 (0x42b78);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010ae000de00),        //make $r0 = 273272 (0x42b78);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087ffc80),        //cb.dnez $r0? 17990 <aw+0xe18>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x10000005),        //goto 179e4 <aw+0xe6c>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x17fffc8e),        //goto 16c10 <aw+0x98>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x17fffc8c),        //goto 16c10 <aw+0x98>;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130c00c),        //addd $r12 = $r12, 768 (0x300);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffc5c),        //call 16b78 <aw>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000080),        //cb.wnez $r0? 17a34 <main+0x3c>;;
     _32(0x180000b0),        //call 17cf0 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let __udivdi3: list_I = 
 [|
     _32(0x88800641),        //cb.deqz $r1? 17aac <__udivdi3+0x64>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000503),        //cb.dnez $r3? 17aa8 <__udivdi3+0x60>;;
     _32(0xf00e2001),        //clzd $r3 = $r1
     _32(0x70122002),        //clzd $r4 = $r2;;
     _32(0x751110c4),        //sbfw $r4 = $r4, $r3;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0x760da042),        //compd.ltu $r3 = $r2, $r1;;
     _32(0x08000103),        //cb.dnez $r3? 17a80 <__udivdi3+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x75090081),        //sbfd $r2 = $r1, $r2;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x0e000284),        //cb.wlez $r4? 17aa8 <__udivdi3+0x60>;;
     _32(0xe0140001),        //make $r5 = 1 (0x1)
     _32(0xfa0c0004),        //copyw $r3 = $r4
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x79126105),        //slld $r4 = $r5, $r4;;
     _32(0x6110ffc4),        //addd $r4 = $r4, -1 (0xffffffff);;
     _32(0x0f000083),        //loopdo $r3, 17aa0 <__udivdi3+0x58>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x78090084),        //andd $r2 = $r4, $r2;;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a2e0000000f0043900),        //pcrel $r1 = 166116 (0x288e4)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 17aa8 <__udivdi3+0x60>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __umoddi3: list_I = 
 [|
     _32(0x888004c1),        //cb.deqz $r1? 17b1c <__umoddi3+0x4c>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x080003c3),        //cb.dnez $r3? 17b18 <__umoddi3+0x48>;;
     _32(0xf0022000),        //clzd $r0 = $r0
     _32(0x700e2001),        //clzd $r3 = $r1;;
     _32(0x750d10c0),        //sbfw $r3 = $r0, $r3;;
     _32(0x790660c1),        //slld $r1 = $r1, $r3;;
     _32(0xf611a042),        //compd.ltu $r4 = $r2, $r1
     _32(0xf5010081),        //sbfd $r0 = $r1, $r2
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x710a0004),        //cmoved.deqz $r4? $r2 = $r0;;
     _32(0x8e000183),        //cb.wlez $r3? 17b18 <__umoddi3+0x48>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x7a000003),        //copyw $r0 = $r3;;
     _32(0x0f000080),        //loopdo $r0, 17b14 <__umoddi3+0x44>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x7b0260c2),        //srld $r0 = $r2, $r3;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a2e0000000f0041d00),        //pcrel $r1 = 166004 (0x28874)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 17b18 <__umoddi3+0x48>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __udivmoddi4: list_I = 
 [|
     _32(0x88800801),        //cb.deqz $r1? 17bc0 <__udivmoddi4+0x80>
     _32(0xf0162001),        //clzd $r5 = $r1
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0xf0122003),        //clzd $r4 = $r3
     _32(0x7601a040),        //compd.ltu $r0 = $r0, $r1;;
     _32(0x75111144),        //sbfw $r4 = $r4, $r5;;
     _32(0x88000580),        //cb.dnez $r0? 17bb0 <__udivmoddi4+0x70>
     _32(0x79166101),        //slld $r5 = $r1, $r4;;
     _32(0xf605a143),        //compd.ltu $r1 = $r3, $r5
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000101),        //cb.dnez $r1? 17b78 <__udivmoddi4+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c5),        //sbfd $r3 = $r5, $r3;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x8e000304),        //cb.wlez $r4? 17ba8 <__udivmoddi4+0x68>
     _32(0xe0180001),        //make $r6 = 1 (0x1)
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0xf91a6106),        //slld $r6 = $r6, $r4
     _32(0xfb162045),        //srld $r5 = $r5, 1 (0x1)
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000081),        //loopdo $r1, 17b9c <__udivmoddi4+0x5c>;;
     _32(0x700d00c5),        //stsud $r3 = $r5, $r3;;
     _32(0xf81500c6),        //andd $r5 = $r6, $r3
     _32(0x7b066103),        //srld $r1 = $r3, $r4;;
     _32(0x71010140),        //addd $r0 = $r0, $r5;;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _32(0xea040003),        //copyd $r1 = $r3
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _96(0x800000a1e0000000f00cf400),        //pcrel $r3 = 165840 (0x287d0)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd03),        //cb.dnez $r3? 17ba8 <__udivmoddi4+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __divdi3: list_I = 
 [|
     _32(0x88800781),        //cb.deqz $r1? 17c58 <__divdi3+0x78>
     _32(0xe40c0000),        //absd $r3 = $r0
     _32(0xe4100001),        //absd $r4 = $r1
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xf01a2003),        //clzd $r6 = $r3
     _32(0xf615a103),        //compd.ltu $r5 = $r3, $r4
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x080004c5),        //cb.dnez $r5? 17c48 <__divdi3+0x68>;;
     _32(0x70162004),        //clzd $r5 = $r4;;
     _32(0x75191146),        //sbfw $r6 = $r6, $r5;;
     _32(0x79126184),        //slld $r4 = $r4, $r6;;
     _32(0x7615a103),        //compd.ltu $r5 = $r3, $r4;;
     _32(0x08000105),        //cb.dnez $r5? 17c20 <__divdi3+0x40>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c4),        //sbfd $r3 = $r4, $r3;;
     _32(0x79026180),        //slld $r0 = $r0, $r6;;
     _32(0x0e000286),        //cb.wlez $r6? 17c48 <__divdi3+0x68>;;
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xfa140006),        //copyw $r5 = $r6
     _32(0x7b122044),        //srld $r4 = $r4, 1 (0x1);;
     _32(0x791a6187),        //slld $r6 = $r7, $r6;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000085),        //loopdo $r5, 17c40 <__divdi3+0x60>;;
     _32(0x700d00c4),        //stsud $r3 = $r4, $r3;;
     _32(0x780d00c6),        //andd $r3 = $r6, $r3;;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0xfc090042),        //xord $r2 = $r2, $r1
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a1e0000000f00cce00),        //pcrel $r3 = 165688 (0x28738)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd83),        //cb.dnez $r3? 17c48 <__divdi3+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __moddi3: list_I = 
 [|
     _32(0x88800581),        //cb.deqz $r1? 17cd0 <__moddi3+0x58>
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xe4000000),        //absd $r0 = $r0
     _32(0x64040001),        //absd $r1 = $r1;;
     _32(0xf0122001),        //clzd $r4 = $r1
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x08000343),        //cb.dnez $r3? 17cc4 <__moddi3+0x4c>;;
     _32(0x700e2000),        //clzd $r3 = $r0;;
     _32(0x75111103),        //sbfw $r4 = $r3, $r4;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0xf615a040),        //compd.ltu $r5 = $r0, $r1
     _32(0xf50d0001),        //sbfd $r3 = $r1, $r0
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x8e000184),        //cb.wlez $r4? 17cc4 <__moddi3+0x4c>
     _32(0x710200c5),        //cmoved.deqz $r5? $r0 = $r3;;
     _32(0x7a0c0004),        //copyw $r3 = $r4;;
     _32(0x0f000083),        //loopdo $r3, 17cc0 <__moddi3+0x48>;;
     _32(0x70010001),        //stsud $r0 = $r1, $r0;;
     _32(0x7b026100),        //srld $r0 = $r0, $r4;;
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a1e0000000f004b000),        //pcrel $r1 = 165568 (0x286c0)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffdc1),        //cb.dnez $r1? 17cc4 <__moddi3+0x4c>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000167),        //call 18298 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000831),        //call 19dc8 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010111100111111000; //0x179f8
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(dummy, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(aq, 0b00010110100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(as, 0b00010110100110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(at, 0b00010110100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(aw, 0b00010110101101111000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010111100111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivdi3, 0b00010111101001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__umoddi3, 0b00010111101011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivmoddi4, 0b00010111101101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__divdi3, 0b00010111101111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__moddi3, 0b00010111110001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111110011110000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x00000000000179f8;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, rcount, wcount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, rcount, wcount, adr_end_main);
print_list_data(mD);
}
