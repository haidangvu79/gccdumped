// executing pipeline strlen_5.c.out.dumped test 
val k1_pipeline_strlen_5: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_strlen_5() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let test_const_global_arrays: list_I = 
 [|
     _32(0x6130a80c),        //addd $r12 = $r12, -352 (0xfffffea0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x000000008000012de0000000),        //make $r0 = 308224 (0x4b400);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x18003114),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 168a8 <test_const_global_arrays+0x88>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012de0080a00),        //make $r2 = 308264 (0x4b428);;
     _32(0x60040023),        //make $r1 = 35 (0x23);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002fdb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012de0000000),        //make $r0 = 308224 (0x4b400);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x180030f5),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 16924 <test_const_global_arrays+0x104>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012de0081800),        //make $r2 = 308320 (0x4b460);;
     _32(0x60040024),        //make $r1 = 36 (0x24);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002fbc),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012de0000040),        //make $r0 = 308225 (0x4b401);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x180030d6),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 169a0 <test_const_global_arrays+0x180>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012de0081c00),        //make $r2 = 308336 (0x4b470);;
     _32(0x60040025),        //make $r1 = 37 (0x25);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002f9d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012de00000c0),        //make $r0 = 308227 (0x4b403);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x180030b7),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 16a1c <test_const_global_arrays+0x1fc>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012de0082000),        //make $r2 = 308352 (0x4b480);;
     _32(0x60040026),        //make $r1 = 38 (0x26);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002f7e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601480c),        //sw 288 (0x120)[$r12] = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x18003094),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 16aa8 <test_const_global_arrays+0x288>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012de0082400),        //make $r2 = 308368 (0x4b490);;
     _32(0x60040029),        //make $r1 = 41 (0x29);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002f5b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18003073),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 16b2c <test_const_global_arrays+0x30c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012de0082600),        //make $r2 = 308376 (0x4b498);;
     _32(0x6004002a),        //make $r1 = 42 (0x2a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002f3a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x18003051),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 16bb4 <test_const_global_arrays+0x394>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012de0082a00),        //make $r2 = 308392 (0x4b4a8);;
     _32(0x6004002b),        //make $r1 = 43 (0x2b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002f18),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x1800302f),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 16c3c <test_const_global_arrays+0x41c>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012de0082e00),        //make $r2 = 308408 (0x4b4b8);;
     _32(0x6004002c),        //make $r1 = 44 (0x2c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002ef6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x3404480c),        //lws $r1 = 288 (0x120)[$r12];;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x1800300a),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 16cd0 <test_const_global_arrays+0x4b0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012de0083200),        //make $r2 = 308424 (0x4b4c8);;
     _32(0x6004002f),        //make $r1 = 47 (0x2f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002ed1),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18002fe4),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 16d68 <test_const_global_arrays+0x548>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012de0083600),        //make $r2 = 308440 (0x4b4d8);;
     _32(0x60040030),        //make $r1 = 48 (0x30);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002eab),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x18002fbe),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 16e00 <test_const_global_arrays+0x5e0>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012de0083a00),        //make $r2 = 308456 (0x4b4e8);;
     _32(0x60040031),        //make $r1 = 49 (0x31);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002e85),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x3404480c),        //lws $r1 = 288 (0x120)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18002f97),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 16e9c <test_const_global_arrays+0x67c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012de0083e00),        //make $r2 = 308472 (0x4b4f8);;
     _32(0x60040033),        //make $r1 = 51 (0x33);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002e5e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18002f6d),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 16f44 <test_const_global_arrays+0x724>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012de0084200),        //make $r2 = 308488 (0x4b508);;
     _32(0x60040034),        //make $r1 = 52 (0x34);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002e34),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x18002f43),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 16fec <test_const_global_arrays+0x7cc>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012de0084600),        //make $r2 = 308504 (0x4b518);;
     _32(0x60040035),        //make $r1 = 53 (0x35);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002e0a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18002f18),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 17098 <test_const_global_arrays+0x878>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012de0084a00),        //make $r2 = 308520 (0x4b528);;
     _32(0x60040037),        //make $r1 = 55 (0x37);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002ddf),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18002eeb),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1714c <test_const_global_arrays+0x92c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012de0084e00),        //make $r2 = 308536 (0x4b538);;
     _32(0x60040038),        //make $r1 = 56 (0x38);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002db2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18002ebe),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17200 <test_const_global_arrays+0x9e0>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012de0085400),        //make $r2 = 308560 (0x4b550);;
     _32(0x60040039),        //make $r1 = 57 (0x39);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002d85),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x18002e9b),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1728c <test_const_global_arrays+0xa6c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x000000008000012de0085a00),        //make $r2 = 308584 (0x4b568);;
     _32(0x6004003b),        //make $r1 = 59 (0x3b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002d62),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x18002e78),        //call 22c90 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17318 <test_const_global_arrays+0xaf8>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x000000008000012de0085a00),        //make $r2 = 308584 (0x4b568);;
     _32(0x6004003c),        //make $r1 = 60 (0x3c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002d3f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _96(0x000000008000012de1000000),        //addd $r0 = $r0, 308224 (0x4b400);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x18002e55),        //call 22c90 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 173a4 <test_const_global_arrays+0xb84>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x000000008000012de0085a00),        //make $r2 = 308584 (0x4b568);;
     _32(0x6004003d),        //make $r1 = 61 (0x3d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002d1c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c0002c0),        //cb.wnez $r0? 173dc <test_const_global_arrays+0xbbc>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130580c),        //addd $r12 = $r12, 352 (0x160);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_const_local_arrays: list_I = 
 [|
     _32(0x6130a00c),        //addd $r12 = $r12, -384 (0xfffffe80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x60000035),        //make $r0 = 53 (0x35);;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x60003635),        //make $r0 = 13877 (0x3635);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010c0c),        //sw 48 (0x30)[$r12] = $r0;;
     _64(0x00000dcde0008d40),        //make $r0 = 3618357 (0x373635);;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _64(0x000e0dcde0008d40),        //make $r0 = 943142453 (0x38373635);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x60000039),        //make $r0 = 57 (0x39);;
     _32(0x2601100c),        //sw 64 (0x40)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x18002e0a),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 174d0 <test_const_local_arrays+0xe0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x000000008000012de0085e00),        //make $r2 = 308600 (0x4b578);;
     _32(0x6004004e),        //make $r1 = 78 (0x4e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002cd1),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x18002ded),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 17544 <test_const_local_arrays+0x154>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x000000008000012de0086000),        //make $r2 = 308608 (0x4b580);;
     _32(0x6004004f),        //make $r1 = 79 (0x4f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002cb4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x18002dcf),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 175bc <test_const_local_arrays+0x1cc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012de0086400),        //make $r2 = 308624 (0x4b590);;
     _32(0x60040050),        //make $r1 = 80 (0x50);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002c96),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x18002db1),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 17634 <test_const_local_arrays+0x244>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012de0086800),        //make $r2 = 308640 (0x4b5a0);;
     _32(0x60040051),        //make $r1 = 81 (0x51);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002c78),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601500c),        //sw 320 (0x140)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x18002d8f),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 176bc <test_const_local_arrays+0x2cc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012de0086c00),        //make $r2 = 308656 (0x4b5b0);;
     _32(0x60040054),        //make $r1 = 84 (0x54);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002c56),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x18002d6f),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1773c <test_const_local_arrays+0x34c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012de0086e00),        //make $r2 = 308664 (0x4b5b8);;
     _32(0x60040055),        //make $r1 = 85 (0x55);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002c36),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x18002d4e),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 177c0 <test_const_local_arrays+0x3d0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012de0087200),        //make $r2 = 308680 (0x4b5c8);;
     _32(0x60040056),        //make $r1 = 86 (0x56);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002c15),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18002d2d),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 17844 <test_const_local_arrays+0x454>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012de0087600),        //make $r2 = 308696 (0x4b5d8);;
     _32(0x60040057),        //make $r1 = 87 (0x57);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002bf4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000500c),        //lwz $r0 = 320 (0x140)[$r12];;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6108080c),        //addd $r2 = $r12, 32 (0x20);;
     _32(0x3404500c),        //lws $r1 = 320 (0x140)[$r12];;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x18002d09),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 178d4 <test_const_local_arrays+0x4e4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012de0087a00),        //make $r2 = 308712 (0x4b5e8);;
     _32(0x6004005a),        //make $r1 = 90 (0x5a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002bd0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x18002ce4),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 17968 <test_const_local_arrays+0x578>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012de0087e00),        //make $r2 = 308728 (0x4b5f8);;
     _32(0x6004005b),        //make $r1 = 91 (0x5b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002bab),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x18002cbf),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 179fc <test_const_local_arrays+0x60c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012de0088200),        //make $r2 = 308744 (0x4b608);;
     _32(0x6004005c),        //make $r1 = 92 (0x5c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002b86),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3408500c),        //lws $r2 = 320 (0x140)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18002c99),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 17a94 <test_const_local_arrays+0x6a4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012de0088600),        //make $r2 = 308760 (0x4b618);;
     _32(0x6004005e),        //make $r1 = 94 (0x5e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002b60),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x18002c70),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 17b38 <test_const_local_arrays+0x748>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012de0088a00),        //make $r2 = 308776 (0x4b628);;
     _32(0x6004005f),        //make $r1 = 95 (0x5f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002b37),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18002c47),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17bdc <test_const_local_arrays+0x7ec>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012de0088e00),        //make $r2 = 308792 (0x4b638);;
     _32(0x60040060),        //make $r1 = 96 (0x60);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002b0e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18002c1d),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 17c84 <test_const_local_arrays+0x894>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012de0089200),        //make $r2 = 308808 (0x4b648);;
     _32(0x60040062),        //make $r1 = 98 (0x62);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002ae4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x18002bf1),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 17d34 <test_const_local_arrays+0x944>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012de0089600),        //make $r2 = 308824 (0x4b658);;
     _32(0x60040063),        //make $r1 = 99 (0x63);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002ab8),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18002bc5),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17de4 <test_const_local_arrays+0x9f4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012de0089c00),        //make $r2 = 308848 (0x4b670);;
     _32(0x60040064),        //make $r1 = 100 (0x64);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002a8c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18002ba3),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 17e6c <test_const_local_arrays+0xa7c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012de008a200),        //make $r2 = 308872 (0x4b688);;
     _32(0x60040066),        //make $r1 = 102 (0x66);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002a6a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18002b81),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17ef4 <test_const_local_arrays+0xb04>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012de008a200),        //make $r2 = 308872 (0x4b688);;
     _32(0x60040067),        //make $r1 = 103 (0x67);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002a48),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x18002b5f),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 17f7c <test_const_local_arrays+0xb8c>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x000000008000012de008a200),        //make $r2 = 308872 (0x4b688);;
     _32(0x60040068),        //make $r1 = 104 (0x68);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002a26),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c0002c0),        //cb.wnez $r0? 17fb4 <test_const_local_arrays+0xbc4>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130600c),        //addd $r12 = $r12, 384 (0x180);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_nonconst_global_arrays: list_I = 
 [|
     _64(0x07ffffffe130700c),        //addd $r12 = $r12, -576 (0xfffffffffffffdc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000128e0000200),        //make $r0 = 303112 (0x4a008);;
     _64(0x18000000a7018e0c),        //sd 568 (0x238)[$r12] = $r0;;
     _64(0x18000000b8008e0c),        //ld $r0 = 568 (0x238)[$r12];;
     _32(0x18002b27),        //call 22c90 <strlen>;;
     _64(0x18000000a6018d0c),        //sw 564 (0x234)[$r12] = $r0;;
     _64(0x18000000b0008d0c),        //lwz $r0 = 564 (0x234)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 18068 <test_nonconst_global_arrays+0xa0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c8e0c),        //ld $r3 = 568 (0x238)[$r12];;
     _96(0x000000008000012de008a600),        //make $r2 = 308888 (0x4b698);;
     _32(0x6004007a),        //make $r1 = 122 (0x7a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180029eb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000200),        //make $r0 = 303112 (0x4a008);;
     _64(0x18000000a7018a0c),        //sd 552 (0x228)[$r12] = $r0;;
     _64(0x18000000b8008a0c),        //ld $r0 = 552 (0x228)[$r12];;
     _32(0x18002b03),        //call 22c90 <strlen>;;
     _64(0x18000000a601890c),        //sw 548 (0x224)[$r12] = $r0;;
     _64(0x18000000b000890c),        //lwz $r0 = 548 (0x224)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 180f8 <test_nonconst_global_arrays+0x130>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c8a0c),        //ld $r3 = 552 (0x228)[$r12];;
     _96(0x000000008000012de008a800),        //make $r2 = 308896 (0x4b6a0);;
     _32(0x6004007b),        //make $r1 = 123 (0x7b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180029c7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000240),        //make $r0 = 303113 (0x4a009);;
     _64(0x18000000a701860c),        //sd 536 (0x218)[$r12] = $r0;;
     _64(0x18000000b800860c),        //ld $r0 = 536 (0x218)[$r12];;
     _32(0x18002adf),        //call 22c90 <strlen>;;
     _64(0x18000000a601850c),        //sw 532 (0x214)[$r12] = $r0;;
     _64(0x18000000b000850c),        //lwz $r0 = 532 (0x214)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 18188 <test_nonconst_global_arrays+0x1c0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c860c),        //ld $r3 = 536 (0x218)[$r12];;
     _96(0x000000008000012de008ac00),        //make $r2 = 308912 (0x4b6b0);;
     _32(0x6004007c),        //make $r1 = 124 (0x7c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180029a3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e00002c0),        //make $r0 = 303115 (0x4a00b);;
     _64(0x18000000a701820c),        //sd 520 (0x208)[$r12] = $r0;;
     _64(0x18000000b800820c),        //ld $r0 = 520 (0x208)[$r12];;
     _32(0x18002abb),        //call 22c90 <strlen>;;
     _64(0x18000000a601810c),        //sw 516 (0x204)[$r12] = $r0;;
     _64(0x18000000b000810c),        //lwz $r0 = 516 (0x204)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000580),        //cb.wnez $r0? 18218 <test_nonconst_global_arrays+0x250>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _64(0x18000000b80c820c),        //ld $r3 = 520 (0x208)[$r12];;
     _96(0x000000008000012de008b000),        //make $r2 = 308928 (0x4b6c0);;
     _32(0x6004007d),        //make $r1 = 125 (0x7d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800297f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601800c),        //sw 512 (0x200)[$r12] = $r0;;
     _64(0x18000000b400800c),        //lws $r0 = 512 (0x200)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27017e0c),        //sd 504 (0x1f8)[$r12] = $r0;;
     _32(0x38007e0c),        //ld $r0 = 504 (0x1f8)[$r12];;
     _32(0x18002a93),        //call 22c90 <strlen>;;
     _32(0x26017d0c),        //sw 500 (0x1f4)[$r12] = $r0;;
     _32(0x30007d0c),        //lwz $r0 = 500 (0x1f4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 182ac <test_nonconst_global_arrays+0x2e4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c7e0c),        //ld $r3 = 504 (0x1f8)[$r12];;
     _96(0x000000008000012de008b400),        //make $r2 = 308944 (0x4b6d0);;
     _32(0x60040080),        //make $r1 = 128 (0x80);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800295a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400800c),        //lws $r0 = 512 (0x200)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27017a0c),        //sd 488 (0x1e8)[$r12] = $r0;;
     _32(0x38007a0c),        //ld $r0 = 488 (0x1e8)[$r12];;
     _32(0x18002a71),        //call 22c90 <strlen>;;
     _32(0x2601790c),        //sw 484 (0x1e4)[$r12] = $r0;;
     _32(0x3000790c),        //lwz $r0 = 484 (0x1e4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 18334 <test_nonconst_global_arrays+0x36c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c7a0c),        //ld $r3 = 488 (0x1e8)[$r12];;
     _96(0x000000008000012de008b600),        //make $r2 = 308952 (0x4b6d8);;
     _32(0x60040081),        //make $r1 = 129 (0x81);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002938),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400800c),        //lws $r0 = 512 (0x200)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701760c),        //sd 472 (0x1d8)[$r12] = $r0;;
     _32(0x3800760c),        //ld $r0 = 472 (0x1d8)[$r12];;
     _32(0x18002a4e),        //call 22c90 <strlen>;;
     _32(0x2601750c),        //sw 468 (0x1d4)[$r12] = $r0;;
     _32(0x3000750c),        //lwz $r0 = 468 (0x1d4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 183c0 <test_nonconst_global_arrays+0x3f8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c760c),        //ld $r3 = 472 (0x1d8)[$r12];;
     _96(0x000000008000012de008ba00),        //make $r2 = 308968 (0x4b6e8);;
     _32(0x60040082),        //make $r1 = 130 (0x82);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002915),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400800c),        //lws $r0 = 512 (0x200)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701720c),        //sd 456 (0x1c8)[$r12] = $r0;;
     _32(0x3800720c),        //ld $r0 = 456 (0x1c8)[$r12];;
     _32(0x18002a2b),        //call 22c90 <strlen>;;
     _32(0x2601710c),        //sw 452 (0x1c4)[$r12] = $r0;;
     _32(0x3000710c),        //lwz $r0 = 452 (0x1c4)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 1844c <test_nonconst_global_arrays+0x484>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c720c),        //ld $r3 = 456 (0x1c8)[$r12];;
     _96(0x000000008000012de008be00),        //make $r2 = 308984 (0x4b6f8);;
     _32(0x60040083),        //make $r1 = 131 (0x83);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180028f2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000800c),        //lwz $r0 = 512 (0x200)[$r12];;
     _32(0x2601700c),        //sw 448 (0x1c0)[$r12] = $r0;;
     _64(0x18000000b404800c),        //lws $r1 = 512 (0x200)[$r12];;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27016e0c),        //sd 440 (0x1b8)[$r12] = $r0;;
     _32(0x38006e0c),        //ld $r0 = 440 (0x1b8)[$r12];;
     _32(0x18002a04),        //call 22c90 <strlen>;;
     _32(0x26016d0c),        //sw 436 (0x1b4)[$r12] = $r0;;
     _32(0x30006d0c),        //lwz $r0 = 436 (0x1b4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 184e8 <test_nonconst_global_arrays+0x520>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c6e0c),        //ld $r3 = 440 (0x1b8)[$r12];;
     _96(0x000000008000012de008c200),        //make $r2 = 309000 (0x4b708);;
     _32(0x60040086),        //make $r1 = 134 (0x86);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180028cb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000700c),        //lwz $r0 = 448 (0x1c0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _64(0x18000000b400800c),        //lws $r0 = 512 (0x200)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27016a0c),        //sd 424 (0x1a8)[$r12] = $r0;;
     _32(0x38006a0c),        //ld $r0 = 424 (0x1a8)[$r12];;
     _32(0x180029dd),        //call 22c90 <strlen>;;
     _32(0x2601690c),        //sw 420 (0x1a4)[$r12] = $r0;;
     _32(0x3000690c),        //lwz $r0 = 420 (0x1a4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 18584 <test_nonconst_global_arrays+0x5bc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c6a0c),        //ld $r3 = 424 (0x1a8)[$r12];;
     _96(0x000000008000012de008c600),        //make $r2 = 309016 (0x4b718);;
     _32(0x60040087),        //make $r1 = 135 (0x87);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180028a4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000700c),        //lwz $r0 = 448 (0x1c0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _64(0x18000000b400800c),        //lws $r0 = 512 (0x200)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701660c),        //sd 408 (0x198)[$r12] = $r0;;
     _32(0x3800660c),        //ld $r0 = 408 (0x198)[$r12];;
     _32(0x180029b6),        //call 22c90 <strlen>;;
     _32(0x2601650c),        //sw 404 (0x194)[$r12] = $r0;;
     _32(0x3000650c),        //lwz $r0 = 404 (0x194)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 18620 <test_nonconst_global_arrays+0x658>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c660c),        //ld $r3 = 408 (0x198)[$r12];;
     _96(0x000000008000012de008ca00),        //make $r2 = 309032 (0x4b728);;
     _32(0x60040088),        //make $r1 = 136 (0x88);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800287d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x18000000b404800c),        //lws $r1 = 512 (0x200)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701620c),        //sd 392 (0x188)[$r12] = $r0;;
     _32(0x3800620c),        //ld $r0 = 392 (0x188)[$r12];;
     _32(0x1800298e),        //call 22c90 <strlen>;;
     _32(0x2601610c),        //sw 388 (0x184)[$r12] = $r0;;
     _32(0x3000610c),        //lwz $r0 = 388 (0x184)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 186c0 <test_nonconst_global_arrays+0x6f8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c620c),        //ld $r3 = 392 (0x188)[$r12];;
     _96(0x000000008000012de008ce00),        //make $r2 = 309048 (0x4b738);;
     _32(0x6004008a),        //make $r1 = 138 (0x8a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002855),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _32(0x3000700c),        //lwz $r0 = 448 (0x1c0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x18002964),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 18768 <test_nonconst_global_arrays+0x7a0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x000000008000012de008d200),        //make $r2 = 309064 (0x4b748);;
     _32(0x6004008b),        //make $r1 = 139 (0x8b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800282b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _32(0x3000700c),        //lwz $r0 = 448 (0x1c0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x1800293a),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 18810 <test_nonconst_global_arrays+0x848>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x000000008000012de008d600),        //make $r2 = 309080 (0x4b758);;
     _32(0x6004008c),        //make $r1 = 140 (0x8c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002801),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x1800290f),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 188bc <test_nonconst_global_arrays+0x8f4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012de008da00),        //make $r2 = 309096 (0x4b768);;
     _32(0x6004008e),        //make $r1 = 142 (0x8e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180027d6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x180028e2),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 18970 <test_nonconst_global_arrays+0x9a8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012de008de00),        //make $r2 = 309112 (0x4b778);;
     _32(0x6004008f),        //make $r1 = 143 (0x8f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180027a9),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x180028b5),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 18a24 <test_nonconst_global_arrays+0xa5c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012de008e400),        //make $r2 = 309136 (0x4b790);;
     _32(0x60040090),        //make $r1 = 144 (0x90);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800277c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000400),        //make $r0 = 303120 (0x4a010);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x18002896),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 18aa0 <test_nonconst_global_arrays+0xad8>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012de008ea00),        //make $r2 = 309160 (0x4b7a8);;
     _32(0x60040094),        //make $r1 = 148 (0x94);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800275d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000400),        //make $r0 = 303120 (0x4a010);;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x18002877),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 18b1c <test_nonconst_global_arrays+0xb54>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012de008ec00),        //make $r2 = 309168 (0x4b7b0);;
     _32(0x60040095),        //make $r1 = 149 (0x95);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800273e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000440),        //make $r0 = 303121 (0x4a011);;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18002858),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 18b98 <test_nonconst_global_arrays+0xbd0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012de008f000),        //make $r2 = 309184 (0x4b7c0);;
     _32(0x60040096),        //make $r1 = 150 (0x96);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800271f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e00004c0),        //make $r0 = 303123 (0x4a013);;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x18002839),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 18c14 <test_nonconst_global_arrays+0xc4c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012de008f400),        //make $r2 = 309200 (0x4b7d0);;
     _32(0x60040097),        //make $r1 = 151 (0x97);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002700),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x26013c0c),        //sw 240 (0xf0)[$r12] = $r0;;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x18002816),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 18ca0 <test_nonconst_global_arrays+0xcd8>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012de008b400),        //make $r2 = 308944 (0x4b6d0);;
     _32(0x6004009a),        //make $r1 = 154 (0x9a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180026dd),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x180027f5),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 18d24 <test_nonconst_global_arrays+0xd5c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012de008b600),        //make $r2 = 308952 (0x4b6d8);;
     _32(0x6004009b),        //make $r1 = 155 (0x9b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180026bc),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x180027d3),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 18dac <test_nonconst_global_arrays+0xde4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012de008ba00),        //make $r2 = 308968 (0x4b6e8);;
     _32(0x6004009c),        //make $r1 = 156 (0x9c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800269a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x180027b1),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 18e34 <test_nonconst_global_arrays+0xe6c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012de008be00),        //make $r2 = 308984 (0x4b6f8);;
     _32(0x6004009d),        //make $r1 = 157 (0x9d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002678),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30003c0c),        //lwz $r0 = 240 (0xf0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x26012c0c),        //sw 176 (0xb0)[$r12] = $r0;;
     _32(0x30002c0c),        //lwz $r0 = 176 (0xb0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18002788),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 18ed8 <test_nonconst_global_arrays+0xf10>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012de008f800),        //make $r2 = 309216 (0x4b7e0);;
     _32(0x600400a0),        //make $r1 = 160 (0xa0);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800264f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34042c0c),        //lws $r1 = 176 (0xb0)[$r12];;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18002765),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 18f64 <test_nonconst_global_arrays+0xf9c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012de008fc00),        //make $r2 = 309232 (0x4b7f0);;
     _32(0x600400a1),        //make $r1 = 161 (0xa1);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800262c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30002c0c),        //lwz $r0 = 176 (0xb0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x34003c0c),        //lws $r0 = 240 (0xf0)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x1800273f),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 18ffc <test_nonconst_global_arrays+0x1034>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012de008c600),        //make $r2 = 309016 (0x4b718);;
     _32(0x600400a2),        //make $r1 = 162 (0xa2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002606),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x30003c0c),        //lwz $r0 = 240 (0xf0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18002713),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 190ac <test_nonconst_global_arrays+0x10e4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012ee0080000),        //make $r2 = 309248 (0x4b800);;
     _32(0x600400a4),        //make $r1 = 164 (0xa4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180025da),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x34042c0c),        //lws $r1 = 176 (0xb0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x180026ea),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 19150 <test_nonconst_global_arrays+0x1188>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012ee0080600),        //make $r2 = 309272 (0x4b818);;
     _32(0x600400a5),        //make $r1 = 165 (0xa5);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180025b1),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x30002c0c),        //lwz $r0 = 176 (0xb0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x180026be),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 19200 <test_nonconst_global_arrays+0x1238>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012ee0080a00),        //make $r2 = 309288 (0x4b828);;
     _32(0x600400a6),        //make $r1 = 166 (0xa6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002585),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601140c),        //sw 80 (0x50)[$r12] = $r0;;
     _32(0x3000140c),        //lwz $r0 = 80 (0x50)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601140c),        //sw 80 (0x50)[$r12] = $r0;;
     _32(0x3400140c),        //lws $r0 = 80 (0x50)[$r12];;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x18002699),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 19294 <test_nonconst_global_arrays+0x12cc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x000000008000012ee0081000),        //make $r2 = 309312 (0x4b840);;
     _32(0x600400ab),        //make $r1 = 171 (0xab);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002560),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000140c),        //lwz $r0 = 80 (0x50)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601140c),        //sw 80 (0x50)[$r12] = $r0;;
     _32(0x3400140c),        //lws $r0 = 80 (0x50)[$r12];;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x18002676),        //call 22c90 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 19320 <test_nonconst_global_arrays+0x1358>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x000000008000012ee0081000),        //make $r2 = 309312 (0x4b840);;
     _32(0x600400ac),        //make $r1 = 172 (0xac);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800253d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000140c),        //lwz $r0 = 80 (0x50)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601140c),        //sw 80 (0x50)[$r12] = $r0;;
     _32(0x3400140c),        //lws $r0 = 80 (0x50)[$r12];;
     _96(0x0000000080000128e1000200),        //addd $r0 = $r0, 303112 (0x4a008);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x18002653),        //call 22c90 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 193ac <test_nonconst_global_arrays+0x13e4>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x000000008000012ee0081000),        //make $r2 = 309312 (0x4b840);;
     _32(0x600400ad),        //make $r1 = 173 (0xad);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800251a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000140c),        //lwz $r0 = 80 (0x50)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c0002c0),        //cb.wnez $r0? 193e4 <test_nonconst_global_arrays+0x141c>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130900c),        //addd $r12 = $r12, 576 (0x240);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test_nonconst_local_arrays: list_I = 
 [|
     _32(0x6130a00c),        //addd $r12 = $r12, -384 (0xfffffe80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x60000035),        //make $r0 = 53 (0x35);;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x60003635),        //make $r0 = 13877 (0x3635);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010c0c),        //sw 48 (0x30)[$r12] = $r0;;
     _64(0x00000dcde0008d40),        //make $r0 = 3618357 (0x373635);;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _64(0x000e0dcde0008d40),        //make $r0 = 943142453 (0x38373635);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x60000039),        //make $r0 = 57 (0x39);;
     _32(0x2601100c),        //sw 64 (0x40)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x18002606),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 194e0 <test_nonconst_local_arrays+0xe0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x000000008000012de0085e00),        //make $r2 = 308600 (0x4b578);;
     _32(0x600400be),        //make $r1 = 190 (0xbe);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180024cd),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x180025e9),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 19554 <test_nonconst_local_arrays+0x154>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x000000008000012de0086000),        //make $r2 = 308608 (0x4b580);;
     _32(0x600400bf),        //make $r1 = 191 (0xbf);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180024b0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x180025cb),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 195cc <test_nonconst_local_arrays+0x1cc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012de0086400),        //make $r2 = 308624 (0x4b590);;
     _32(0x600400c0),        //make $r1 = 192 (0xc0);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002492),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x180025ad),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 19644 <test_nonconst_local_arrays+0x244>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012de0086800),        //make $r2 = 308640 (0x4b5a0);;
     _32(0x600400c1),        //make $r1 = 193 (0xc1);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002474),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601500c),        //sw 320 (0x140)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x1800258b),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 196cc <test_nonconst_local_arrays+0x2cc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012de0086c00),        //make $r2 = 308656 (0x4b5b0);;
     _32(0x600400c4),        //make $r1 = 196 (0xc4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002452),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x1800256b),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1974c <test_nonconst_local_arrays+0x34c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012de0086e00),        //make $r2 = 308664 (0x4b5b8);;
     _32(0x600400c5),        //make $r1 = 197 (0xc5);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002432),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x1800254a),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 197d0 <test_nonconst_local_arrays+0x3d0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012de0087200),        //make $r2 = 308680 (0x4b5c8);;
     _32(0x600400c6),        //make $r1 = 198 (0xc6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002411),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x610000c0),        //addd $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18002529),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 19854 <test_nonconst_local_arrays+0x454>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012de0087600),        //make $r2 = 308696 (0x4b5d8);;
     _32(0x600400c7),        //make $r1 = 199 (0xc7);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180023f0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000500c),        //lwz $r0 = 320 (0x140)[$r12];;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6108080c),        //addd $r2 = $r12, 32 (0x20);;
     _32(0x3404500c),        //lws $r1 = 320 (0x140)[$r12];;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x18002505),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 198e4 <test_nonconst_local_arrays+0x4e4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012de0087a00),        //make $r2 = 308712 (0x4b5e8);;
     _32(0x600400ca),        //make $r1 = 202 (0xca);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180023cc),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x180024e0),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 19978 <test_nonconst_local_arrays+0x578>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012de0087e00),        //make $r2 = 308728 (0x4b5f8);;
     _32(0x600400cb),        //make $r1 = 203 (0xcb);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180023a7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x180024bb),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 19a0c <test_nonconst_local_arrays+0x60c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012de0088200),        //make $r2 = 308744 (0x4b608);;
     _32(0x600400cc),        //make $r1 = 204 (0xcc);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002382),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3408500c),        //lws $r2 = 320 (0x140)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18002495),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 19aa4 <test_nonconst_local_arrays+0x6a4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012de0088600),        //make $r2 = 308760 (0x4b618);;
     _32(0x600400ce),        //make $r1 = 206 (0xce);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800235c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x1800246c),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 19b48 <test_nonconst_local_arrays+0x748>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012de0088a00),        //make $r2 = 308776 (0x4b628);;
     _32(0x600400cf),        //make $r1 = 207 (0xcf);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002333),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18002443),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 19bec <test_nonconst_local_arrays+0x7ec>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012de0088e00),        //make $r2 = 308792 (0x4b638);;
     _32(0x600400d0),        //make $r1 = 208 (0xd0);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800230a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18002419),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 19c94 <test_nonconst_local_arrays+0x894>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012de0089200),        //make $r2 = 308808 (0x4b648);;
     _32(0x600400d2),        //make $r1 = 210 (0xd2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180022e0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x180023ed),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 19d44 <test_nonconst_local_arrays+0x944>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012de0089600),        //make $r2 = 308824 (0x4b658);;
     _32(0x600400d3),        //make $r1 = 211 (0xd3);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180022b4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x180023c1),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 19df4 <test_nonconst_local_arrays+0x9f4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012de0089c00),        //make $r2 = 308848 (0x4b670);;
     _32(0x600400d4),        //make $r1 = 212 (0xd4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002288),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x1800239f),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 19e7c <test_nonconst_local_arrays+0xa7c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012de008a200),        //make $r2 = 308872 (0x4b688);;
     _32(0x600400d6),        //make $r1 = 214 (0xd6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002266),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x1800237d),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 19f04 <test_nonconst_local_arrays+0xb04>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012de008a200),        //make $r2 = 308872 (0x4b688);;
     _32(0x600400d7),        //make $r1 = 215 (0xd7);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002244),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x1800235b),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 19f8c <test_nonconst_local_arrays+0xb8c>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x000000008000012de008a200),        //make $r2 = 308872 (0x4b688);;
     _32(0x600400d8),        //make $r1 = 216 (0xd8);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002222),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c0002c0),        //cb.wnez $r0? 19fc4 <test_nonconst_local_arrays+0xbc4>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130600c),        //addd $r12 = $r12, 384 (0x180);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_const_global_member_arrays: list_I = 
 [|
     _64(0x07ffffffe130300c),        //addd $r12 = $r12, -832 (0xfffffffffffffcc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000012ee0001400),        //make $r0 = 309328 (0x4b850);;
     _64(0x18000000a701ce0c),        //sd 824 (0x338)[$r12] = $r0;;
     _64(0x18000000b800ce0c),        //ld $r0 = 824 (0x338)[$r12];;
     _32(0x18002323),        //call 22c90 <strlen>;;
     _64(0x18000000a601cd0c),        //sw 820 (0x334)[$r12] = $r0;;
     _64(0x18000000b000cd0c),        //lwz $r0 = 820 (0x334)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a078 <test_const_global_member_arrays+0xa0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cce0c),        //ld $r3 = 824 (0x338)[$r12];;
     _96(0x000000008000012ee0082000),        //make $r2 = 309376 (0x4b880);;
     _32(0x600400ed),        //make $r1 = 237 (0xed);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180021e7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001400),        //make $r0 = 309328 (0x4b850);;
     _64(0x18000000a701ca0c),        //sd 808 (0x328)[$r12] = $r0;;
     _64(0x18000000b800ca0c),        //ld $r0 = 808 (0x328)[$r12];;
     _32(0x180022ff),        //call 22c90 <strlen>;;
     _64(0x18000000a601c90c),        //sw 804 (0x324)[$r12] = $r0;;
     _64(0x18000000b000c90c),        //lwz $r0 = 804 (0x324)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a108 <test_const_global_member_arrays+0x130>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cca0c),        //ld $r3 = 808 (0x328)[$r12];;
     _96(0x000000008000012ee0082400),        //make $r2 = 309392 (0x4b890);;
     _32(0x600400ee),        //make $r1 = 238 (0xee);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180021c3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001440),        //make $r0 = 309329 (0x4b851);;
     _64(0x18000000a701c60c),        //sd 792 (0x318)[$r12] = $r0;;
     _64(0x18000000b800c60c),        //ld $r0 = 792 (0x318)[$r12];;
     _32(0x180022db),        //call 22c90 <strlen>;;
     _64(0x18000000a601c50c),        //sw 788 (0x314)[$r12] = $r0;;
     _64(0x18000000b000c50c),        //lwz $r0 = 788 (0x314)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1a198 <test_const_global_member_arrays+0x1c0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cc60c),        //ld $r3 = 792 (0x318)[$r12];;
     _96(0x000000008000012ee0082800),        //make $r2 = 309408 (0x4b8a0);;
     _32(0x600400ef),        //make $r1 = 239 (0xef);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800219f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001480),        //make $r0 = 309330 (0x4b852);;
     _64(0x18000000a701c20c),        //sd 776 (0x308)[$r12] = $r0;;
     _64(0x18000000b800c20c),        //ld $r0 = 776 (0x308)[$r12];;
     _32(0x180022b7),        //call 22c90 <strlen>;;
     _64(0x18000000a601c10c),        //sw 772 (0x304)[$r12] = $r0;;
     _64(0x18000000b000c10c),        //lwz $r0 = 772 (0x304)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1a228 <test_const_global_member_arrays+0x250>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cc20c),        //ld $r3 = 776 (0x308)[$r12];;
     _96(0x000000008000012ee0082c00),        //make $r2 = 309424 (0x4b8b0);;
     _32(0x600400f0),        //make $r1 = 240 (0xf0);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800217b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601c00c),        //sw 768 (0x300)[$r12] = $r0;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701be0c),        //sd 760 (0x2f8)[$r12] = $r0;;
     _64(0x18000000b800be0c),        //ld $r0 = 760 (0x2f8)[$r12];;
     _32(0x1800228d),        //call 22c90 <strlen>;;
     _64(0x18000000a601bd0c),        //sw 756 (0x2f4)[$r12] = $r0;;
     _64(0x18000000b000bd0c),        //lwz $r0 = 756 (0x2f4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a2d0 <test_const_global_member_arrays+0x2f8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cbe0c),        //ld $r3 = 760 (0x2f8)[$r12];;
     _96(0x000000008000012ee0083000),        //make $r2 = 309440 (0x4b8c0);;
     _32(0x600400f3),        //make $r1 = 243 (0xf3);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002151),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701ba0c),        //sd 744 (0x2e8)[$r12] = $r0;;
     _64(0x18000000b800ba0c),        //ld $r0 = 744 (0x2e8)[$r12];;
     _32(0x18002266),        //call 22c90 <strlen>;;
     _64(0x18000000a601b90c),        //sw 740 (0x2e4)[$r12] = $r0;;
     _64(0x18000000b000b90c),        //lwz $r0 = 740 (0x2e4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a36c <test_const_global_member_arrays+0x394>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cba0c),        //ld $r3 = 744 (0x2e8)[$r12];;
     _96(0x000000008000012ee0083400),        //make $r2 = 309456 (0x4b8d0);;
     _32(0x600400f4),        //make $r1 = 244 (0xf4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800212a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701b60c),        //sd 728 (0x2d8)[$r12] = $r0;;
     _64(0x18000000b800b60c),        //ld $r0 = 728 (0x2d8)[$r12];;
     _32(0x1800223e),        //call 22c90 <strlen>;;
     _64(0x18000000a601b50c),        //sw 724 (0x2d4)[$r12] = $r0;;
     _64(0x18000000b000b50c),        //lwz $r0 = 724 (0x2d4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1a40c <test_const_global_member_arrays+0x434>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cb60c),        //ld $r3 = 728 (0x2d8)[$r12];;
     _96(0x000000008000012ee0083800),        //make $r2 = 309472 (0x4b8e0);;
     _32(0x600400f5),        //make $r1 = 245 (0xf5);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002102),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701b20c),        //sd 712 (0x2c8)[$r12] = $r0;;
     _64(0x18000000b800b20c),        //ld $r0 = 712 (0x2c8)[$r12];;
     _32(0x18002216),        //call 22c90 <strlen>;;
     _64(0x18000000a601b10c),        //sw 708 (0x2c4)[$r12] = $r0;;
     _64(0x18000000b000b10c),        //lwz $r0 = 708 (0x2c4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1a4ac <test_const_global_member_arrays+0x4d4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cb20c),        //ld $r3 = 712 (0x2c8)[$r12];;
     _96(0x000000008000012ee0083c00),        //make $r2 = 309488 (0x4b8f0);;
     _32(0x600400f6),        //make $r1 = 246 (0xf6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180020da),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _64(0x18000000a601b00c),        //sw 704 (0x2c0)[$r12] = $r0;;
     _64(0x18000000b404b00c),        //lws $r1 = 704 (0x2c0)[$r12];;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701ae0c),        //sd 696 (0x2b8)[$r12] = $r0;;
     _64(0x18000000b800ae0c),        //ld $r0 = 696 (0x2b8)[$r12];;
     _32(0x180021e8),        //call 22c90 <strlen>;;
     _64(0x18000000a601ad0c),        //sw 692 (0x2b4)[$r12] = $r0;;
     _64(0x18000000b000ad0c),        //lwz $r0 = 692 (0x2b4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a564 <test_const_global_member_arrays+0x58c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cae0c),        //ld $r3 = 696 (0x2b8)[$r12];;
     _96(0x000000008000012ee0084000),        //make $r2 = 309504 (0x4b900);;
     _32(0x600400f9),        //make $r1 = 249 (0xf9);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180020ac),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701aa0c),        //sd 680 (0x2a8)[$r12] = $r0;;
     _64(0x18000000b800aa0c),        //ld $r0 = 680 (0x2a8)[$r12];;
     _32(0x180021bb),        //call 22c90 <strlen>;;
     _64(0x18000000a601a90c),        //sw 676 (0x2a4)[$r12] = $r0;;
     _64(0x18000000b000a90c),        //lwz $r0 = 676 (0x2a4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1a618 <test_const_global_member_arrays+0x640>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80caa0c),        //ld $r3 = 680 (0x2a8)[$r12];;
     _96(0x000000008000012ee0084400),        //make $r2 = 309520 (0x4b910);;
     _32(0x600400fa),        //make $r1 = 250 (0xfa);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800207f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701a60c),        //sd 664 (0x298)[$r12] = $r0;;
     _64(0x18000000b800a60c),        //ld $r0 = 664 (0x298)[$r12];;
     _32(0x1800218e),        //call 22c90 <strlen>;;
     _64(0x18000000a601a50c),        //sw 660 (0x294)[$r12] = $r0;;
     _64(0x18000000b000a50c),        //lwz $r0 = 660 (0x294)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1a6cc <test_const_global_member_arrays+0x6f4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80ca60c),        //ld $r3 = 664 (0x298)[$r12];;
     _96(0x000000008000012ee0084a00),        //make $r2 = 309544 (0x4b928);;
     _32(0x600400fb),        //make $r1 = 251 (0xfb);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002052),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x18000000b404c00c),        //lws $r1 = 768 (0x300)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701a20c),        //sd 648 (0x288)[$r12] = $r0;;
     _64(0x18000000b800a20c),        //ld $r0 = 648 (0x288)[$r12];;
     _32(0x18002161),        //call 22c90 <strlen>;;
     _64(0x18000000a601a10c),        //sw 644 (0x284)[$r12] = $r0;;
     _64(0x18000000b000a10c),        //lwz $r0 = 644 (0x284)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a780 <test_const_global_member_arrays+0x7a8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80ca20c),        //ld $r3 = 648 (0x288)[$r12];;
     _96(0x000000008000012ee0085000),        //make $r2 = 309568 (0x4b940);;
     _32(0x600400fd),        //make $r1 = 253 (0xfd);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18002025),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a7019e0c),        //sd 632 (0x278)[$r12] = $r0;;
     _64(0x18000000b8009e0c),        //ld $r0 = 632 (0x278)[$r12];;
     _32(0x18002131),        //call 22c90 <strlen>;;
     _64(0x18000000a6019d0c),        //sw 628 (0x274)[$r12] = $r0;;
     _64(0x18000000b0009d0c),        //lwz $r0 = 628 (0x274)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1a840 <test_const_global_member_arrays+0x868>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c9e0c),        //ld $r3 = 632 (0x278)[$r12];;
     _96(0x000000008000012ee0085400),        //make $r2 = 309584 (0x4b950);;
     _32(0x600400fe),        //make $r1 = 254 (0xfe);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ff5),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a7019a0c),        //sd 616 (0x268)[$r12] = $r0;;
     _64(0x18000000b8009a0c),        //ld $r0 = 616 (0x268)[$r12];;
     _32(0x18002101),        //call 22c90 <strlen>;;
     _64(0x18000000a601990c),        //sw 612 (0x264)[$r12] = $r0;;
     _64(0x18000000b000990c),        //lwz $r0 = 612 (0x264)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1a900 <test_const_global_member_arrays+0x928>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80c9a0c),        //ld $r3 = 616 (0x268)[$r12];;
     _96(0x000000008000012ee0085a00),        //make $r2 = 309608 (0x4b968);;
     _32(0x600400ff),        //make $r1 = 255 (0xff);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001fc5),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701960c),        //sd 600 (0x258)[$r12] = $r0;;
     _64(0x18000000b800960c),        //ld $r0 = 600 (0x258)[$r12];;
     _32(0x180020d1),        //call 22c90 <strlen>;;
     _64(0x18000000a601950c),        //sw 596 (0x254)[$r12] = $r0;;
     _64(0x18000000b000950c),        //lwz $r0 = 596 (0x254)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1a9c0 <test_const_global_member_arrays+0x9e8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c960c),        //ld $r3 = 600 (0x258)[$r12];;
     _96(0x000000008000012ee0086000),        //make $r2 = 309632 (0x4b980);;
     _32(0x60040101),        //make $r1 = 257 (0x101);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001f95),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a701920c),        //sd 584 (0x248)[$r12] = $r0;;
     _64(0x18000000b800920c),        //ld $r0 = 584 (0x248)[$r12];;
     _32(0x1800209f),        //call 22c90 <strlen>;;
     _64(0x18000000a601910c),        //sw 580 (0x244)[$r12] = $r0;;
     _64(0x18000000b000910c),        //lwz $r0 = 580 (0x244)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1aa88 <test_const_global_member_arrays+0xab0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c920c),        //ld $r3 = 584 (0x248)[$r12];;
     _96(0x000000008000012ee0086600),        //make $r2 = 309656 (0x4b998);;
     _32(0x60040102),        //make $r1 = 258 (0x102);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001f63),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _64(0x18000000a7018e0c),        //sd 568 (0x238)[$r12] = $r0;;
     _64(0x18000000b8008e0c),        //ld $r0 = 568 (0x238)[$r12];;
     _32(0x1800206d),        //call 22c90 <strlen>;;
     _64(0x18000000a6018d0c),        //sw 564 (0x234)[$r12] = $r0;;
     _64(0x18000000b0008d0c),        //lwz $r0 = 564 (0x234)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1ab50 <test_const_global_member_arrays+0xb78>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80c8e0c),        //ld $r3 = 568 (0x238)[$r12];;
     _96(0x000000008000012ee0086c00),        //make $r2 = 309680 (0x4b9b0);;
     _32(0x60040103),        //make $r1 = 259 (0x103);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001f31),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001600),        //make $r0 = 309336 (0x4b858);;
     _64(0x18000000a7018a0c),        //sd 552 (0x228)[$r12] = $r0;;
     _64(0x18000000b8008a0c),        //ld $r0 = 552 (0x228)[$r12];;
     _32(0x18002049),        //call 22c90 <strlen>;;
     _64(0x18000000a601890c),        //sw 548 (0x224)[$r12] = $r0;;
     _64(0x18000000b000890c),        //lwz $r0 = 548 (0x224)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1abe0 <test_const_global_member_arrays+0xc08>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c8a0c),        //ld $r3 = 552 (0x228)[$r12];;
     _96(0x000000008000012ee0087200),        //make $r2 = 309704 (0x4b9c8);;
     _32(0x60040107),        //make $r1 = 263 (0x107);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001f0d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001600),        //make $r0 = 309336 (0x4b858);;
     _64(0x18000000a701860c),        //sd 536 (0x218)[$r12] = $r0;;
     _64(0x18000000b800860c),        //ld $r0 = 536 (0x218)[$r12];;
     _32(0x18002025),        //call 22c90 <strlen>;;
     _64(0x18000000a601850c),        //sw 532 (0x214)[$r12] = $r0;;
     _64(0x18000000b000850c),        //lwz $r0 = 532 (0x214)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1ac70 <test_const_global_member_arrays+0xc98>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c860c),        //ld $r3 = 536 (0x218)[$r12];;
     _96(0x000000008000012ee0087600),        //make $r2 = 309720 (0x4b9d8);;
     _32(0x60040108),        //make $r1 = 264 (0x108);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ee9),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001640),        //make $r0 = 309337 (0x4b859);;
     _64(0x18000000a701820c),        //sd 520 (0x208)[$r12] = $r0;;
     _64(0x18000000b800820c),        //ld $r0 = 520 (0x208)[$r12];;
     _32(0x18002001),        //call 22c90 <strlen>;;
     _64(0x18000000a601810c),        //sw 516 (0x204)[$r12] = $r0;;
     _64(0x18000000b000810c),        //lwz $r0 = 516 (0x204)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1ad00 <test_const_global_member_arrays+0xd28>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c820c),        //ld $r3 = 520 (0x208)[$r12];;
     _96(0x000000008000012ee0087a00),        //make $r2 = 309736 (0x4b9e8);;
     _32(0x60040109),        //make $r1 = 265 (0x109);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ec5),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001680),        //make $r0 = 309338 (0x4b85a);;
     _32(0x27017e0c),        //sd 504 (0x1f8)[$r12] = $r0;;
     _32(0x38007e0c),        //ld $r0 = 504 (0x1f8)[$r12];;
     _32(0x18001fdf),        //call 22c90 <strlen>;;
     _32(0x26017d0c),        //sw 500 (0x1f4)[$r12] = $r0;;
     _32(0x30007d0c),        //lwz $r0 = 500 (0x1f4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1ad7c <test_const_global_member_arrays+0xda4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c7e0c),        //ld $r3 = 504 (0x1f8)[$r12];;
     _96(0x000000008000012ee0087e00),        //make $r2 = 309752 (0x4b9f8);;
     _32(0x6004010a),        //make $r1 = 266 (0x10a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ea6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x26017c0c),        //sw 496 (0x1f0)[$r12] = $r0;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27017a0c),        //sd 488 (0x1e8)[$r12] = $r0;;
     _32(0x38007a0c),        //ld $r0 = 488 (0x1e8)[$r12];;
     _32(0x18001fbc),        //call 22c90 <strlen>;;
     _32(0x2601790c),        //sw 484 (0x1e4)[$r12] = $r0;;
     _32(0x3000790c),        //lwz $r0 = 484 (0x1e4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1ae08 <test_const_global_member_arrays+0xe30>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c7a0c),        //ld $r3 = 488 (0x1e8)[$r12];;
     _96(0x000000008000012ee0083000),        //make $r2 = 309440 (0x4b8c0);;
     _32(0x6004010d),        //make $r1 = 269 (0x10d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001e83),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701760c),        //sd 472 (0x1d8)[$r12] = $r0;;
     _32(0x3800760c),        //ld $r0 = 472 (0x1d8)[$r12];;
     _32(0x18001f9b),        //call 22c90 <strlen>;;
     _32(0x2601750c),        //sw 468 (0x1d4)[$r12] = $r0;;
     _32(0x3000750c),        //lwz $r0 = 468 (0x1d4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1ae8c <test_const_global_member_arrays+0xeb4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c760c),        //ld $r3 = 472 (0x1d8)[$r12];;
     _96(0x000000008000012ee0083400),        //make $r2 = 309456 (0x4b8d0);;
     _32(0x6004010e),        //make $r1 = 270 (0x10e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001e62),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701720c),        //sd 456 (0x1c8)[$r12] = $r0;;
     _32(0x3800720c),        //ld $r0 = 456 (0x1c8)[$r12];;
     _32(0x18001f79),        //call 22c90 <strlen>;;
     _32(0x2601710c),        //sw 452 (0x1c4)[$r12] = $r0;;
     _32(0x3000710c),        //lwz $r0 = 452 (0x1c4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1af14 <test_const_global_member_arrays+0xf3c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c720c),        //ld $r3 = 456 (0x1c8)[$r12];;
     _96(0x000000008000012ee0083800),        //make $r2 = 309472 (0x4b8e0);;
     _32(0x6004010f),        //make $r1 = 271 (0x10f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001e40),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27016e0c),        //sd 440 (0x1b8)[$r12] = $r0;;
     _32(0x38006e0c),        //ld $r0 = 440 (0x1b8)[$r12];;
     _32(0x18001f57),        //call 22c90 <strlen>;;
     _32(0x26016d0c),        //sw 436 (0x1b4)[$r12] = $r0;;
     _32(0x30006d0c),        //lwz $r0 = 436 (0x1b4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1af9c <test_const_global_member_arrays+0xfc4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c6e0c),        //ld $r3 = 440 (0x1b8)[$r12];;
     _96(0x000000008000012ee0083c00),        //make $r2 = 309488 (0x4b8f0);;
     _32(0x60040110),        //make $r1 = 272 (0x110);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001e1e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x26016c0c),        //sw 432 (0x1b0)[$r12] = $r0;;
     _32(0x34046c0c),        //lws $r1 = 432 (0x1b0)[$r12];;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27016a0c),        //sd 424 (0x1a8)[$r12] = $r0;;
     _32(0x38006a0c),        //ld $r0 = 424 (0x1a8)[$r12];;
     _32(0x18001f31),        //call 22c90 <strlen>;;
     _32(0x2601690c),        //sw 420 (0x1a4)[$r12] = $r0;;
     _32(0x3000690c),        //lwz $r0 = 420 (0x1a4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1b034 <test_const_global_member_arrays+0x105c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c6a0c),        //ld $r3 = 424 (0x1a8)[$r12];;
     _96(0x000000008000012ee0084000),        //make $r2 = 309504 (0x4b900);;
     _32(0x60040113),        //make $r1 = 275 (0x113);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001df8),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701660c),        //sd 408 (0x198)[$r12] = $r0;;
     _32(0x3800660c),        //ld $r0 = 408 (0x198)[$r12];;
     _32(0x18001f0b),        //call 22c90 <strlen>;;
     _32(0x2601650c),        //sw 404 (0x194)[$r12] = $r0;;
     _32(0x3000650c),        //lwz $r0 = 404 (0x194)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1b0cc <test_const_global_member_arrays+0x10f4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c660c),        //ld $r3 = 408 (0x198)[$r12];;
     _96(0x000000008000012ee0084400),        //make $r2 = 309520 (0x4b910);;
     _32(0x60040114),        //make $r1 = 276 (0x114);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001dd2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701620c),        //sd 392 (0x188)[$r12] = $r0;;
     _32(0x3800620c),        //ld $r0 = 392 (0x188)[$r12];;
     _32(0x18001ee5),        //call 22c90 <strlen>;;
     _32(0x2601610c),        //sw 388 (0x184)[$r12] = $r0;;
     _32(0x3000610c),        //lwz $r0 = 388 (0x184)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1b164 <test_const_global_member_arrays+0x118c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c620c),        //ld $r3 = 392 (0x188)[$r12];;
     _96(0x000000008000012ee0084a00),        //make $r2 = 309544 (0x4b928);;
     _32(0x60040115),        //make $r1 = 277 (0x115);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001dac),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x34046c0c),        //lws $r1 = 432 (0x1b0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x18001ebc),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1b208 <test_const_global_member_arrays+0x1230>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x000000008000012ee0088200),        //make $r2 = 309768 (0x4ba08);;
     _32(0x60040117),        //make $r1 = 279 (0x117);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001d83),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x18001e90),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1b2b8 <test_const_global_member_arrays+0x12e0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x000000008000012ee0088800),        //make $r2 = 309792 (0x4ba20);;
     _32(0x60040118),        //make $r1 = 280 (0x118);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001d57),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x18001e64),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1b368 <test_const_global_member_arrays+0x1390>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012ee0088e00),        //make $r2 = 309816 (0x4ba38);;
     _32(0x60040119),        //make $r1 = 281 (0x119);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001d2b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x18001e37),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1b41c <test_const_global_member_arrays+0x1444>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012ee0089400),        //make $r2 = 309840 (0x4ba50);;
     _32(0x6004011b),        //make $r1 = 283 (0x11b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001cfe),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x18001e08),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1b4d8 <test_const_global_member_arrays+0x1500>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012ee0089a00),        //make $r2 = 309864 (0x4ba68);;
     _32(0x6004011c),        //make $r1 = 284 (0x11c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ccf),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x18001dd9),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1b594 <test_const_global_member_arrays+0x15bc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012ee008a200),        //make $r2 = 309896 (0x4ba88);;
     _32(0x6004011d),        //make $r1 = 285 (0x11d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ca0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001c00),        //make $r0 = 309360 (0x4b870);;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x18001dba),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1b610 <test_const_global_member_arrays+0x1638>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012ee008aa00),        //make $r2 = 309928 (0x4baa8);;
     _32(0x60040121),        //make $r1 = 289 (0x121);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001c81),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001c00),        //make $r0 = 309360 (0x4b870);;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18001d9b),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1b68c <test_const_global_member_arrays+0x16b4>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012ee008ae00),        //make $r2 = 309944 (0x4bab8);;
     _32(0x60040122),        //make $r1 = 290 (0x122);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001c62),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001c40),        //make $r0 = 309361 (0x4b871);;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x18001d7c),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1b708 <test_const_global_member_arrays+0x1730>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012ee008b200),        //make $r2 = 309960 (0x4bac8);;
     _32(0x60040123),        //make $r1 = 291 (0x123);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001c43),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000012ee0001d00),        //make $r0 = 309364 (0x4b874);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x18001d5d),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1b784 <test_const_global_member_arrays+0x17ac>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012ee008b600),        //make $r2 = 309976 (0x4bad8);;
     _32(0x60040124),        //make $r1 = 292 (0x124);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001c24),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x18001d3a),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1b810 <test_const_global_member_arrays+0x1838>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012ee0083000),        //make $r2 = 309440 (0x4b8c0);;
     _32(0x60040127),        //make $r1 = 295 (0x127);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001c01),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18001d19),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1b894 <test_const_global_member_arrays+0x18bc>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012ee0083400),        //make $r2 = 309456 (0x4b8d0);;
     _32(0x60040128),        //make $r1 = 296 (0x128);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001be0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x18001cf7),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1b91c <test_const_global_member_arrays+0x1944>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012ee0083800),        //make $r2 = 309472 (0x4b8e0);;
     _32(0x60040129),        //make $r1 = 297 (0x129);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001bbe),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18001cd5),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1b9a4 <test_const_global_member_arrays+0x19cc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012ee008ba00),        //make $r2 = 309992 (0x4bae8);;
     _32(0x6004012a),        //make $r1 = 298 (0x12a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001b9c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x2601280c),        //sw 160 (0xa0)[$r12] = $r0;;
     _32(0x3404280c),        //lws $r1 = 160 (0xa0)[$r12];;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18001caf),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1ba3c <test_const_global_member_arrays+0x1a64>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012ee0084000),        //make $r2 = 309504 (0x4b900);;
     _32(0x6004012d),        //make $r1 = 301 (0x12d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001b76),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x18001c89),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1bad4 <test_const_global_member_arrays+0x1afc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012ee0084400),        //make $r2 = 309520 (0x4b910);;
     _32(0x6004012e),        //make $r1 = 302 (0x12e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001b50),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18001c62),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1bb70 <test_const_global_member_arrays+0x1b98>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012ee008be00),        //make $r2 = 310008 (0x4baf8);;
     _32(0x6004012f),        //make $r1 = 303 (0x12f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001b29),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3404280c),        //lws $r1 = 160 (0xa0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18001c39),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1bc14 <test_const_global_member_arrays+0x1c3c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012ee008c400),        //make $r2 = 310032 (0x4bb10);;
     _32(0x60040131),        //make $r1 = 305 (0x131);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001b00),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18001c0d),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1bcc4 <test_const_global_member_arrays+0x1cec>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012ee008ca00),        //make $r2 = 310056 (0x4bb28);;
     _32(0x60040132),        //make $r1 = 306 (0x132);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001ad4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x18001be0),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1bd78 <test_const_global_member_arrays+0x1da0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x000000008000012ee008d000),        //make $r2 = 310080 (0x4bb40);;
     _32(0x60040133),        //make $r1 = 307 (0x133);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001aa7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x18001bb3),        //call 22c90 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1be2c <test_const_global_member_arrays+0x1e54>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x000000008000012ee008d600),        //make $r2 = 310104 (0x4bb58);;
     _32(0x60040135),        //make $r1 = 309 (0x135);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001a7a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x18001b84),        //call 22c90 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1bee8 <test_const_global_member_arrays+0x1f10>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x000000008000012ee008dc00),        //make $r2 = 310128 (0x4bb70);;
     _32(0x60040136),        //make $r1 = 310 (0x136);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001a4b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x000000008000012ee1001400),        //addd $r0 = $r0, 309328 (0x4b850);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x18001b54),        //call 22c90 <strlen>;;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1bfa8 <test_const_global_member_arrays+0x1fd0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c060c),        //ld $r3 = 24 (0x18)[$r12];;
     _96(0x000000008000012ee008e400),        //make $r2 = 310160 (0x4bb90);;
     _32(0x60040137),        //make $r1 = 311 (0x137);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001a1b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130d00c),        //addd $r12 = $r12, 832 (0x340);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_const_local_member_arrays: list_I = 
 [|
     _64(0x07ffffffe130200c),        //addd $r12 = $r12, -896 (0xfffffffffffffc80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x60000035),        //make $r0 = 53 (0x35);;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x60003635),        //make $r0 = 13877 (0x3635);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010c0c),        //sw 48 (0x30)[$r12] = $r0;;
     _32(0x60003635),        //make $r0 = 13877 (0x3635);;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _64(0x00000dcde0008d40),        //make $r0 = 3618357 (0x373635);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x2601100c),        //sw 64 (0x40)[$r12] = $r0;;
     _64(0x000e0dcde0008d40),        //make $r0 = 943142453 (0x38373635);;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x60000039),        //make $r0 = 57 (0x39);;
     _32(0x2601120c),        //sw 72 (0x48)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601130c),        //sw 76 (0x4c)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _64(0x18000000a701de0c),        //sd 888 (0x378)[$r12] = $r0;;
     _64(0x18000000b800de0c),        //ld $r0 = 888 (0x378)[$r12];;
     _32(0x18001b0c),        //call 22c90 <strlen>;;
     _64(0x18000000a601dd0c),        //sw 884 (0x374)[$r12] = $r0;;
     _64(0x18000000b000dd0c),        //lwz $r0 = 884 (0x374)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c0d4 <test_const_local_member_arrays+0x114>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cde0c),        //ld $r3 = 888 (0x378)[$r12];;
     _96(0x000000008000012ee008ec00),        //make $r2 = 310192 (0x4bbb0);;
     _32(0x60040148),        //make $r1 = 328 (0x148);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180019d0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _64(0x18000000a701da0c),        //sd 872 (0x368)[$r12] = $r0;;
     _64(0x18000000b800da0c),        //ld $r0 = 872 (0x368)[$r12];;
     _32(0x18001aea),        //call 22c90 <strlen>;;
     _64(0x18000000a601d90c),        //sw 868 (0x364)[$r12] = $r0;;
     _64(0x18000000b000d90c),        //lwz $r0 = 868 (0x364)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c15c <test_const_local_member_arrays+0x19c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cda0c),        //ld $r3 = 872 (0x368)[$r12];;
     _96(0x000000008000012ee008ee00),        //make $r2 = 310200 (0x4bbb8);;
     _32(0x60040149),        //make $r1 = 329 (0x149);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180019ae),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _64(0x18000000a701d60c),        //sd 856 (0x358)[$r12] = $r0;;
     _64(0x18000000b800d60c),        //ld $r0 = 856 (0x358)[$r12];;
     _32(0x18001ac7),        //call 22c90 <strlen>;;
     _64(0x18000000a601d50c),        //sw 852 (0x354)[$r12] = $r0;;
     _64(0x18000000b000d50c),        //lwz $r0 = 852 (0x354)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1c1e8 <test_const_local_member_arrays+0x228>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cd60c),        //ld $r3 = 856 (0x358)[$r12];;
     _96(0x000000008000012ee008f200),        //make $r2 = 310216 (0x4bbc8);;
     _32(0x6004014a),        //make $r1 = 330 (0x14a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800198b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _64(0x18000000a701d20c),        //sd 840 (0x348)[$r12] = $r0;;
     _64(0x18000000b800d20c),        //ld $r0 = 840 (0x348)[$r12];;
     _32(0x18001aa4),        //call 22c90 <strlen>;;
     _64(0x18000000a601d10c),        //sw 836 (0x344)[$r12] = $r0;;
     _64(0x18000000b000d10c),        //lwz $r0 = 836 (0x344)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1c274 <test_const_local_member_arrays+0x2b4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cd20c),        //ld $r3 = 840 (0x348)[$r12];;
     _96(0x000000008000012ee008f600),        //make $r2 = 310232 (0x4bbd8);;
     _32(0x6004014b),        //make $r1 = 331 (0x14b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001968),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601d00c),        //sw 832 (0x340)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ce0c),        //sd 824 (0x338)[$r12] = $r0;;
     _64(0x18000000b800ce0c),        //ld $r0 = 824 (0x338)[$r12];;
     _32(0x18001a7b),        //call 22c90 <strlen>;;
     _64(0x18000000a601cd0c),        //sw 820 (0x334)[$r12] = $r0;;
     _64(0x18000000b000cd0c),        //lwz $r0 = 820 (0x334)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c318 <test_const_local_member_arrays+0x358>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cce0c),        //ld $r3 = 824 (0x338)[$r12];;
     _96(0x000000008000012ee008fa00),        //make $r2 = 310248 (0x4bbe8);;
     _32(0x6004014e),        //make $r1 = 334 (0x14e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800193f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ca0c),        //sd 808 (0x328)[$r12] = $r0;;
     _64(0x18000000b800ca0c),        //ld $r0 = 808 (0x328)[$r12];;
     _32(0x18001a55),        //call 22c90 <strlen>;;
     _64(0x18000000a601c90c),        //sw 804 (0x324)[$r12] = $r0;;
     _64(0x18000000b000c90c),        //lwz $r0 = 804 (0x324)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c3b0 <test_const_local_member_arrays+0x3f0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cca0c),        //ld $r3 = 808 (0x328)[$r12];;
     _96(0x000000008000012ee008fc00),        //make $r2 = 310256 (0x4bbf0);;
     _32(0x6004014f),        //make $r1 = 335 (0x14f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001919),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701c60c),        //sd 792 (0x318)[$r12] = $r0;;
     _64(0x18000000b800c60c),        //ld $r0 = 792 (0x318)[$r12];;
     _32(0x18001a2e),        //call 22c90 <strlen>;;
     _64(0x18000000a601c50c),        //sw 788 (0x314)[$r12] = $r0;;
     _64(0x18000000b000c50c),        //lwz $r0 = 788 (0x314)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1c44c <test_const_local_member_arrays+0x48c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cc60c),        //ld $r3 = 792 (0x318)[$r12];;
     _96(0x000000008000012fe0080000),        //make $r2 = 310272 (0x4bc00);;
     _32(0x60040150),        //make $r1 = 336 (0x150);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180018f2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701c20c),        //sd 776 (0x308)[$r12] = $r0;;
     _64(0x18000000b800c20c),        //ld $r0 = 776 (0x308)[$r12];;
     _32(0x18001a07),        //call 22c90 <strlen>;;
     _64(0x18000000a601c10c),        //sw 772 (0x304)[$r12] = $r0;;
     _64(0x18000000b000c10c),        //lwz $r0 = 772 (0x304)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1c4e8 <test_const_local_member_arrays+0x528>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cc20c),        //ld $r3 = 776 (0x308)[$r12];;
     _96(0x000000008000012fe0080400),        //make $r2 = 310288 (0x4bc10);;
     _32(0x60040151),        //make $r1 = 337 (0x151);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180018cb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000d00c),        //lwz $r0 = 832 (0x340)[$r12];;
     _64(0x18000000a601c00c),        //sw 768 (0x300)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b408c00c),        //lws $r2 = 768 (0x300)[$r12];;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701be0c),        //sd 760 (0x2f8)[$r12] = $r0;;
     _64(0x18000000b800be0c),        //ld $r0 = 760 (0x2f8)[$r12];;
     _32(0x180019da),        //call 22c90 <strlen>;;
     _64(0x18000000a601bd0c),        //sw 756 (0x2f4)[$r12] = $r0;;
     _64(0x18000000b000bd0c),        //lwz $r0 = 756 (0x2f4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c59c <test_const_local_member_arrays+0x5dc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cbe0c),        //ld $r3 = 760 (0x2f8)[$r12];;
     _96(0x000000008000012fe0080800),        //make $r2 = 310304 (0x4bc20);;
     _32(0x60040154),        //make $r1 = 340 (0x154);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800189e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ba0c),        //sd 744 (0x2e8)[$r12] = $r0;;
     _64(0x18000000b800ba0c),        //ld $r0 = 744 (0x2e8)[$r12];;
     _32(0x180019ae),        //call 22c90 <strlen>;;
     _64(0x18000000a601b90c),        //sw 740 (0x2e4)[$r12] = $r0;;
     _64(0x18000000b000b90c),        //lwz $r0 = 740 (0x2e4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1c64c <test_const_local_member_arrays+0x68c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cba0c),        //ld $r3 = 744 (0x2e8)[$r12];;
     _96(0x000000008000012fe0080c00),        //make $r2 = 310320 (0x4bc30);;
     _32(0x60040155),        //make $r1 = 341 (0x155);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001872),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701b60c),        //sd 728 (0x2d8)[$r12] = $r0;;
     _64(0x18000000b800b60c),        //ld $r0 = 728 (0x2d8)[$r12];;
     _32(0x18001982),        //call 22c90 <strlen>;;
     _64(0x18000000a601b50c),        //sw 724 (0x2d4)[$r12] = $r0;;
     _64(0x18000000b000b50c),        //lwz $r0 = 724 (0x2d4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1c6fc <test_const_local_member_arrays+0x73c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cb60c),        //ld $r3 = 728 (0x2d8)[$r12];;
     _96(0x000000008000012fe0081000),        //make $r2 = 310336 (0x4bc40);;
     _32(0x60040156),        //make $r1 = 342 (0x156);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001846),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b408d00c),        //lws $r2 = 832 (0x340)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701b20c),        //sd 712 (0x2c8)[$r12] = $r0;;
     _64(0x18000000b800b20c),        //ld $r0 = 712 (0x2c8)[$r12];;
     _32(0x18001956),        //call 22c90 <strlen>;;
     _64(0x18000000a601b10c),        //sw 708 (0x2c4)[$r12] = $r0;;
     _64(0x18000000b000b10c),        //lwz $r0 = 708 (0x2c4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c7ac <test_const_local_member_arrays+0x7ec>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cb20c),        //ld $r3 = 712 (0x2c8)[$r12];;
     _96(0x000000008000012fe0081400),        //make $r2 = 310352 (0x4bc50);;
     _32(0x60040158),        //make $r1 = 344 (0x158);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800181a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ae0c),        //sd 696 (0x2b8)[$r12] = $r0;;
     _64(0x18000000b800ae0c),        //ld $r0 = 696 (0x2b8)[$r12];;
     _32(0x18001927),        //call 22c90 <strlen>;;
     _64(0x18000000a601ad0c),        //sw 692 (0x2b4)[$r12] = $r0;;
     _64(0x18000000b000ad0c),        //lwz $r0 = 692 (0x2b4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1c868 <test_const_local_member_arrays+0x8a8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cae0c),        //ld $r3 = 696 (0x2b8)[$r12];;
     _96(0x000000008000012fe0081800),        //make $r2 = 310368 (0x4bc60);;
     _32(0x60040159),        //make $r1 = 345 (0x159);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180017eb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701aa0c),        //sd 680 (0x2a8)[$r12] = $r0;;
     _64(0x18000000b800aa0c),        //ld $r0 = 680 (0x2a8)[$r12];;
     _32(0x180018f8),        //call 22c90 <strlen>;;
     _64(0x18000000a601a90c),        //sw 676 (0x2a4)[$r12] = $r0;;
     _64(0x18000000b000a90c),        //lwz $r0 = 676 (0x2a4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1c924 <test_const_local_member_arrays+0x964>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80caa0c),        //ld $r3 = 680 (0x2a8)[$r12];;
     _96(0x000000008000012fe0081e00),        //make $r2 = 310392 (0x4bc78);;
     _32(0x6004015a),        //make $r1 = 346 (0x15a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180017bc),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701a60c),        //sd 664 (0x298)[$r12] = $r0;;
     _64(0x18000000b800a60c),        //ld $r0 = 664 (0x298)[$r12];;
     _32(0x180018c9),        //call 22c90 <strlen>;;
     _64(0x18000000a601a50c),        //sw 660 (0x294)[$r12] = $r0;;
     _64(0x18000000b000a50c),        //lwz $r0 = 660 (0x294)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1c9e0 <test_const_local_member_arrays+0xa20>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80ca60c),        //ld $r3 = 664 (0x298)[$r12];;
     _96(0x000000008000012fe0082400),        //make $r2 = 310416 (0x4bc90);;
     _32(0x6004015c),        //make $r1 = 348 (0x15c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800178d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701a20c),        //sd 648 (0x288)[$r12] = $r0;;
     _64(0x18000000b800a20c),        //ld $r0 = 648 (0x288)[$r12];;
     _32(0x18001898),        //call 22c90 <strlen>;;
     _64(0x18000000a601a10c),        //sw 644 (0x284)[$r12] = $r0;;
     _64(0x18000000b000a10c),        //lwz $r0 = 644 (0x284)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1caa4 <test_const_local_member_arrays+0xae4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80ca20c),        //ld $r3 = 648 (0x288)[$r12];;
     _96(0x000000008000012fe0082800),        //make $r2 = 310432 (0x4bca0);;
     _32(0x6004015d),        //make $r1 = 349 (0x15d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800175c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a7019e0c),        //sd 632 (0x278)[$r12] = $r0;;
     _64(0x18000000b8009e0c),        //ld $r0 = 632 (0x278)[$r12];;
     _32(0x18001867),        //call 22c90 <strlen>;;
     _64(0x18000000a6019d0c),        //sw 628 (0x274)[$r12] = $r0;;
     _64(0x18000000b0009d0c),        //lwz $r0 = 628 (0x274)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1cb68 <test_const_local_member_arrays+0xba8>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80c9e0c),        //ld $r3 = 632 (0x278)[$r12];;
     _96(0x000000008000012fe0082e00),        //make $r2 = 310456 (0x4bcb8);;
     _32(0x6004015e),        //make $r1 = 350 (0x15e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800172b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _64(0x18000000a7019a0c),        //sd 616 (0x268)[$r12] = $r0;;
     _64(0x18000000b8009a0c),        //ld $r0 = 616 (0x268)[$r12];;
     _32(0x18001844),        //call 22c90 <strlen>;;
     _64(0x18000000a601990c),        //sw 612 (0x264)[$r12] = $r0;;
     _64(0x18000000b000990c),        //lwz $r0 = 612 (0x264)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1cbf4 <test_const_local_member_arrays+0xc34>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c9a0c),        //ld $r3 = 616 (0x268)[$r12];;
     _96(0x000000008000012fe0083400),        //make $r2 = 310480 (0x4bcd0);;
     _32(0x60040162),        //make $r1 = 354 (0x162);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001708),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _64(0x18000000a701960c),        //sd 600 (0x258)[$r12] = $r0;;
     _64(0x18000000b800960c),        //ld $r0 = 600 (0x258)[$r12];;
     _32(0x18001821),        //call 22c90 <strlen>;;
     _64(0x18000000a601950c),        //sw 596 (0x254)[$r12] = $r0;;
     _64(0x18000000b000950c),        //lwz $r0 = 596 (0x254)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1cc80 <test_const_local_member_arrays+0xcc0>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c960c),        //ld $r3 = 600 (0x258)[$r12];;
     _96(0x000000008000012fe0083600),        //make $r2 = 310488 (0x4bcd8);;
     _32(0x60040163),        //make $r1 = 355 (0x163);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180016e5),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000240),        //addd $r0 = $r0, 9 (0x9);;
     _64(0x18000000a701920c),        //sd 584 (0x248)[$r12] = $r0;;
     _64(0x18000000b800920c),        //ld $r0 = 584 (0x248)[$r12];;
     _32(0x180017fe),        //call 22c90 <strlen>;;
     _64(0x18000000a601910c),        //sw 580 (0x244)[$r12] = $r0;;
     _64(0x18000000b000910c),        //lwz $r0 = 580 (0x244)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1cd0c <test_const_local_member_arrays+0xd4c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c920c),        //ld $r3 = 584 (0x248)[$r12];;
     _96(0x000000008000012fe0083a00),        //make $r2 = 310504 (0x4bce8);;
     _32(0x60040164),        //make $r1 = 356 (0x164);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180016c2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _64(0x18000000a7018e0c),        //sd 568 (0x238)[$r12] = $r0;;
     _64(0x18000000b8008e0c),        //ld $r0 = 568 (0x238)[$r12];;
     _32(0x180017db),        //call 22c90 <strlen>;;
     _64(0x18000000a6018d0c),        //sw 564 (0x234)[$r12] = $r0;;
     _64(0x18000000b0008d0c),        //lwz $r0 = 564 (0x234)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1cd98 <test_const_local_member_arrays+0xdd8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c8e0c),        //ld $r3 = 568 (0x238)[$r12];;
     _96(0x000000008000012fe0083e00),        //make $r2 = 310520 (0x4bcf8);;
     _32(0x60040165),        //make $r1 = 357 (0x165);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800169f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _64(0x18000000a6018c0c),        //sw 560 (0x230)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a7018a0c),        //sd 552 (0x228)[$r12] = $r0;;
     _64(0x18000000b8008a0c),        //ld $r0 = 552 (0x228)[$r12];;
     _32(0x180017b2),        //call 22c90 <strlen>;;
     _64(0x18000000a601890c),        //sw 548 (0x224)[$r12] = $r0;;
     _64(0x18000000b000890c),        //lwz $r0 = 548 (0x224)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1ce3c <test_const_local_member_arrays+0xe7c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c8a0c),        //ld $r3 = 552 (0x228)[$r12];;
     _96(0x000000008000012ee008fa00),        //make $r2 = 310248 (0x4bbe8);;
     _32(0x60040168),        //make $r1 = 360 (0x168);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001676),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701860c),        //sd 536 (0x218)[$r12] = $r0;;
     _64(0x18000000b800860c),        //ld $r0 = 536 (0x218)[$r12];;
     _32(0x1800178c),        //call 22c90 <strlen>;;
     _64(0x18000000a601850c),        //sw 532 (0x214)[$r12] = $r0;;
     _64(0x18000000b000850c),        //lwz $r0 = 532 (0x214)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1ced4 <test_const_local_member_arrays+0xf14>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c860c),        //ld $r3 = 536 (0x218)[$r12];;
     _96(0x000000008000012ee008fc00),        //make $r2 = 310256 (0x4bbf0);;
     _32(0x60040169),        //make $r1 = 361 (0x169);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001650),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701820c),        //sd 520 (0x208)[$r12] = $r0;;
     _64(0x18000000b800820c),        //ld $r0 = 520 (0x208)[$r12];;
     _32(0x18001765),        //call 22c90 <strlen>;;
     _64(0x18000000a601810c),        //sw 516 (0x204)[$r12] = $r0;;
     _64(0x18000000b000810c),        //lwz $r0 = 516 (0x204)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1cf70 <test_const_local_member_arrays+0xfb0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c820c),        //ld $r3 = 520 (0x208)[$r12];;
     _96(0x000000008000012fe0080000),        //make $r2 = 310272 (0x4bc00);;
     _32(0x6004016a),        //make $r1 = 362 (0x16a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001629),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27017e0c),        //sd 504 (0x1f8)[$r12] = $r0;;
     _32(0x38007e0c),        //ld $r0 = 504 (0x1f8)[$r12];;
     _32(0x18001740),        //call 22c90 <strlen>;;
     _32(0x26017d0c),        //sw 500 (0x1f4)[$r12] = $r0;;
     _32(0x30007d0c),        //lwz $r0 = 500 (0x1f4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1cff8 <test_const_local_member_arrays+0x1038>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c7e0c),        //ld $r3 = 504 (0x1f8)[$r12];;
     _96(0x000000008000012fe0080400),        //make $r2 = 310288 (0x4bc10);;
     _32(0x6004016b),        //make $r1 = 363 (0x16b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001607),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b0008c0c),        //lwz $r0 = 560 (0x230)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x26017c0c),        //sw 496 (0x1f0)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x34087c0c),        //lws $r2 = 496 (0x1f0)[$r12];;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27017a0c),        //sd 488 (0x1e8)[$r12] = $r0;;
     _32(0x38007a0c),        //ld $r0 = 488 (0x1e8)[$r12];;
     _32(0x18001719),        //call 22c90 <strlen>;;
     _32(0x2601790c),        //sw 484 (0x1e4)[$r12] = $r0;;
     _32(0x3000790c),        //lwz $r0 = 484 (0x1e4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1d094 <test_const_local_member_arrays+0x10d4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c7a0c),        //ld $r3 = 488 (0x1e8)[$r12];;
     _96(0x000000008000012fe0080800),        //make $r2 = 310304 (0x4bc20);;
     _32(0x6004016e),        //make $r1 = 366 (0x16e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180015e0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701760c),        //sd 472 (0x1d8)[$r12] = $r0;;
     _32(0x3800760c),        //ld $r0 = 472 (0x1d8)[$r12];;
     _32(0x180016f3),        //call 22c90 <strlen>;;
     _32(0x2601750c),        //sw 468 (0x1d4)[$r12] = $r0;;
     _32(0x3000750c),        //lwz $r0 = 468 (0x1d4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1d12c <test_const_local_member_arrays+0x116c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c760c),        //ld $r3 = 472 (0x1d8)[$r12];;
     _96(0x000000008000012fe0080c00),        //make $r2 = 310320 (0x4bc30);;
     _32(0x6004016f),        //make $r1 = 367 (0x16f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180015ba),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701720c),        //sd 456 (0x1c8)[$r12] = $r0;;
     _32(0x3800720c),        //ld $r0 = 456 (0x1c8)[$r12];;
     _32(0x180016cd),        //call 22c90 <strlen>;;
     _32(0x2601710c),        //sw 452 (0x1c4)[$r12] = $r0;;
     _32(0x3000710c),        //lwz $r0 = 452 (0x1c4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1d1c4 <test_const_local_member_arrays+0x1204>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c720c),        //ld $r3 = 456 (0x1c8)[$r12];;
     _96(0x000000008000012fe0081000),        //make $r2 = 310336 (0x4bc40);;
     _32(0x60040170),        //make $r1 = 368 (0x170);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001594),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x34087c0c),        //lws $r2 = 496 (0x1f0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27016e0c),        //sd 440 (0x1b8)[$r12] = $r0;;
     _32(0x38006e0c),        //ld $r0 = 440 (0x1b8)[$r12];;
     _32(0x180016a5),        //call 22c90 <strlen>;;
     _32(0x26016d0c),        //sw 436 (0x1b4)[$r12] = $r0;;
     _32(0x30006d0c),        //lwz $r0 = 436 (0x1b4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1d264 <test_const_local_member_arrays+0x12a4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c6e0c),        //ld $r3 = 440 (0x1b8)[$r12];;
     _96(0x000000008000012fe0084200),        //make $r2 = 310536 (0x4bd08);;
     _32(0x60040172),        //make $r1 = 370 (0x172);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800156c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27016a0c),        //sd 424 (0x1a8)[$r12] = $r0;;
     _32(0x38006a0c),        //ld $r0 = 424 (0x1a8)[$r12];;
     _32(0x1800167a),        //call 22c90 <strlen>;;
     _32(0x2601690c),        //sw 420 (0x1a4)[$r12] = $r0;;
     _32(0x3000690c),        //lwz $r0 = 420 (0x1a4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1d310 <test_const_local_member_arrays+0x1350>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c6a0c),        //ld $r3 = 424 (0x1a8)[$r12];;
     _96(0x000000008000012fe0084800),        //make $r2 = 310560 (0x4bd20);;
     _32(0x60040173),        //make $r1 = 371 (0x173);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001541),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701660c),        //sd 408 (0x198)[$r12] = $r0;;
     _32(0x3800660c),        //ld $r0 = 408 (0x198)[$r12];;
     _32(0x1800164f),        //call 22c90 <strlen>;;
     _32(0x2601650c),        //sw 404 (0x194)[$r12] = $r0;;
     _32(0x3000650c),        //lwz $r0 = 404 (0x194)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1d3bc <test_const_local_member_arrays+0x13fc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c660c),        //ld $r3 = 408 (0x198)[$r12];;
     _96(0x000000008000012fe0084e00),        //make $r2 = 310584 (0x4bd38);;
     _32(0x60040174),        //make $r1 = 372 (0x174);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001516),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701620c),        //sd 392 (0x188)[$r12] = $r0;;
     _32(0x3800620c),        //ld $r0 = 392 (0x188)[$r12];;
     _32(0x18001623),        //call 22c90 <strlen>;;
     _32(0x2601610c),        //sw 388 (0x184)[$r12] = $r0;;
     _32(0x3000610c),        //lwz $r0 = 388 (0x184)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1d46c <test_const_local_member_arrays+0x14ac>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c620c),        //ld $r3 = 392 (0x188)[$r12];;
     _96(0x000000008000012fe0085400),        //make $r2 = 310608 (0x4bd50);;
     _32(0x60040176),        //make $r1 = 374 (0x176);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180014ea),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x180015f5),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1d524 <test_const_local_member_arrays+0x1564>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x000000008000012fe0085a00),        //make $r2 = 310632 (0x4bd68);;
     _32(0x60040177),        //make $r1 = 375 (0x177);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180014bc),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x180015c7),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1d5dc <test_const_local_member_arrays+0x161c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x000000008000012fe0086000),        //make $r2 = 310656 (0x4bd80);;
     _32(0x60040178),        //make $r1 = 376 (0x178);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800148e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000800),        //addd $r0 = $r0, 32 (0x20);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x180015a9),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1d654 <test_const_local_member_arrays+0x1694>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012fe0086600),        //make $r2 = 310680 (0x4bd98);;
     _32(0x6004017c),        //make $r1 = 380 (0x17c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001470),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000800),        //addd $r0 = $r0, 32 (0x20);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x1800158b),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1d6cc <test_const_local_member_arrays+0x170c>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012fe0086800),        //make $r2 = 310688 (0x4bda0);;
     _32(0x6004017d),        //make $r1 = 381 (0x17d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001452),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000840),        //addd $r0 = $r0, 33 (0x21);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x1800156d),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1d744 <test_const_local_member_arrays+0x1784>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012fe0086c00),        //make $r2 = 310704 (0x4bdb0);;
     _32(0x6004017e),        //make $r1 = 382 (0x17e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001434),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000900),        //addd $r0 = $r0, 36 (0x24);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x1800154f),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1d7bc <test_const_local_member_arrays+0x17fc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012fe0087000),        //make $r2 = 310720 (0x4bdc0);;
     _32(0x6004017f),        //make $r1 = 383 (0x17f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001416),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601480c),        //sw 288 (0x120)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x1800152d),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1d844 <test_const_local_member_arrays+0x1884>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012ee008fa00),        //make $r2 = 310248 (0x4bbe8);;
     _32(0x60040182),        //make $r1 = 386 (0x182);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180013f4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x1800150d),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1d8c4 <test_const_local_member_arrays+0x1904>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012ee008fc00),        //make $r2 = 310256 (0x4bbf0);;
     _32(0x60040183),        //make $r1 = 387 (0x183);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180013d4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x180014ec),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1d948 <test_const_local_member_arrays+0x1988>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012fe0080000),        //make $r2 = 310272 (0x4bc00);;
     _32(0x60040184),        //make $r1 = 388 (0x184);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180013b3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x180014cb),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1d9cc <test_const_local_member_arrays+0x1a0c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012fe0087400),        //make $r2 = 310736 (0x4bdd0);;
     _32(0x60040185),        //make $r1 = 389 (0x185);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001392),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3408380c),        //lws $r2 = 224 (0xe0)[$r12];;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x180014a6),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1da60 <test_const_local_member_arrays+0x1aa0>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012fe0080800),        //make $r2 = 310304 (0x4bc20);;
     _32(0x60040188),        //make $r1 = 392 (0x188);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800136d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18001481),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1daf4 <test_const_local_member_arrays+0x1b34>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012fe0080c00),        //make $r2 = 310320 (0x4bc30);;
     _32(0x60040189),        //make $r1 = 393 (0x189);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001348),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x1800145b),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1db8c <test_const_local_member_arrays+0x1bcc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012fe0087800),        //make $r2 = 310752 (0x4bde0);;
     _32(0x6004018a),        //make $r1 = 394 (0x18a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001322),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3408380c),        //lws $r2 = 224 (0xe0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18001433),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1dc2c <test_const_local_member_arrays+0x1c6c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012fe0087c00),        //make $r2 = 310768 (0x4bdf0);;
     _32(0x6004018c),        //make $r1 = 396 (0x18c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180012fa),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18001408),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1dcd8 <test_const_local_member_arrays+0x1d18>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012fe0088200),        //make $r2 = 310792 (0x4be08);;
     _32(0x6004018d),        //make $r1 = 397 (0x18d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180012cf),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x180013dc),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1dd88 <test_const_local_member_arrays+0x1dc8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012fe0088800),        //make $r2 = 310816 (0x4be20);;
     _32(0x6004018e),        //make $r1 = 398 (0x18e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180012a3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x180013b0),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1de38 <test_const_local_member_arrays+0x1e78>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012fe0088e00),        //make $r2 = 310840 (0x4be38);;
     _32(0x60040190),        //make $r1 = 400 (0x190);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001277),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18001382),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1def0 <test_const_local_member_arrays+0x1f30>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012fe0089400),        //make $r2 = 310864 (0x4be50);;
     _32(0x60040191),        //make $r1 = 401 (0x191);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001249),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18001353),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1dfac <test_const_local_member_arrays+0x1fec>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012fe0089a00),        //make $r2 = 310888 (0x4be68);;
     _32(0x60040192),        //make $r1 = 402 (0x192);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800121a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130e00c),        //addd $r12 = $r12, 896 (0x380);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test_nonconst_global_member_arrays: list_I = 
 [|
     _64(0x07ffffffe130300c),        //addd $r12 = $r12, -832 (0xfffffffffffffcc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000128e0000c00),        //make $r0 = 303152 (0x4a030);;
     _64(0x18000000a701ce0c),        //sd 824 (0x338)[$r12] = $r0;;
     _64(0x18000000b800ce0c),        //ld $r0 = 824 (0x338)[$r12];;
     _32(0x18001327),        //call 22c90 <strlen>;;
     _64(0x18000000a601cd0c),        //sw 820 (0x334)[$r12] = $r0;;
     _64(0x18000000b000cd0c),        //lwz $r0 = 820 (0x334)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e068 <test_nonconst_global_member_arrays+0xa0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cce0c),        //ld $r3 = 824 (0x338)[$r12];;
     _96(0x000000008000012fe008a000),        //make $r2 = 310912 (0x4be80);;
     _32(0x600401a2),        //make $r1 = 418 (0x1a2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180011eb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000c00),        //make $r0 = 303152 (0x4a030);;
     _64(0x18000000a701ca0c),        //sd 808 (0x328)[$r12] = $r0;;
     _64(0x18000000b800ca0c),        //ld $r0 = 808 (0x328)[$r12];;
     _32(0x18001303),        //call 22c90 <strlen>;;
     _64(0x18000000a601c90c),        //sw 804 (0x324)[$r12] = $r0;;
     _64(0x18000000b000c90c),        //lwz $r0 = 804 (0x324)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e0f8 <test_nonconst_global_member_arrays+0x130>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cca0c),        //ld $r3 = 808 (0x328)[$r12];;
     _96(0x000000008000012fe008a400),        //make $r2 = 310928 (0x4be90);;
     _32(0x600401a3),        //make $r1 = 419 (0x1a3);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180011c7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000c40),        //make $r0 = 303153 (0x4a031);;
     _64(0x18000000a701c60c),        //sd 792 (0x318)[$r12] = $r0;;
     _64(0x18000000b800c60c),        //ld $r0 = 792 (0x318)[$r12];;
     _32(0x180012df),        //call 22c90 <strlen>;;
     _64(0x18000000a601c50c),        //sw 788 (0x314)[$r12] = $r0;;
     _64(0x18000000b000c50c),        //lwz $r0 = 788 (0x314)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1e188 <test_nonconst_global_member_arrays+0x1c0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cc60c),        //ld $r3 = 792 (0x318)[$r12];;
     _96(0x000000008000012fe008a800),        //make $r2 = 310944 (0x4bea0);;
     _32(0x600401a4),        //make $r1 = 420 (0x1a4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180011a3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000c80),        //make $r0 = 303154 (0x4a032);;
     _64(0x18000000a701c20c),        //sd 776 (0x308)[$r12] = $r0;;
     _64(0x18000000b800c20c),        //ld $r0 = 776 (0x308)[$r12];;
     _32(0x180012bb),        //call 22c90 <strlen>;;
     _64(0x18000000a601c10c),        //sw 772 (0x304)[$r12] = $r0;;
     _64(0x18000000b000c10c),        //lwz $r0 = 772 (0x304)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1e218 <test_nonconst_global_member_arrays+0x250>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cc20c),        //ld $r3 = 776 (0x308)[$r12];;
     _96(0x000000008000012fe008ac00),        //make $r2 = 310960 (0x4beb0);;
     _32(0x600401a5),        //make $r1 = 421 (0x1a5);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800117f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601c00c),        //sw 768 (0x300)[$r12] = $r0;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701be0c),        //sd 760 (0x2f8)[$r12] = $r0;;
     _64(0x18000000b800be0c),        //ld $r0 = 760 (0x2f8)[$r12];;
     _32(0x18001291),        //call 22c90 <strlen>;;
     _64(0x18000000a601bd0c),        //sw 756 (0x2f4)[$r12] = $r0;;
     _64(0x18000000b000bd0c),        //lwz $r0 = 756 (0x2f4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e2c0 <test_nonconst_global_member_arrays+0x2f8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cbe0c),        //ld $r3 = 760 (0x2f8)[$r12];;
     _96(0x000000008000012fe008b000),        //make $r2 = 310976 (0x4bec0);;
     _32(0x600401a8),        //make $r1 = 424 (0x1a8);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001155),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701ba0c),        //sd 744 (0x2e8)[$r12] = $r0;;
     _64(0x18000000b800ba0c),        //ld $r0 = 744 (0x2e8)[$r12];;
     _32(0x1800126a),        //call 22c90 <strlen>;;
     _64(0x18000000a601b90c),        //sw 740 (0x2e4)[$r12] = $r0;;
     _64(0x18000000b000b90c),        //lwz $r0 = 740 (0x2e4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e35c <test_nonconst_global_member_arrays+0x394>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cba0c),        //ld $r3 = 744 (0x2e8)[$r12];;
     _96(0x000000008000012fe008b400),        //make $r2 = 310992 (0x4bed0);;
     _32(0x600401a9),        //make $r1 = 425 (0x1a9);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800112e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701b60c),        //sd 728 (0x2d8)[$r12] = $r0;;
     _64(0x18000000b800b60c),        //ld $r0 = 728 (0x2d8)[$r12];;
     _32(0x18001242),        //call 22c90 <strlen>;;
     _64(0x18000000a601b50c),        //sw 724 (0x2d4)[$r12] = $r0;;
     _64(0x18000000b000b50c),        //lwz $r0 = 724 (0x2d4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1e3fc <test_nonconst_global_member_arrays+0x434>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cb60c),        //ld $r3 = 728 (0x2d8)[$r12];;
     _96(0x000000008000012fe008b800),        //make $r2 = 311008 (0x4bee0);;
     _32(0x600401aa),        //make $r1 = 426 (0x1aa);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001106),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701b20c),        //sd 712 (0x2c8)[$r12] = $r0;;
     _64(0x18000000b800b20c),        //ld $r0 = 712 (0x2c8)[$r12];;
     _32(0x1800121a),        //call 22c90 <strlen>;;
     _64(0x18000000a601b10c),        //sw 708 (0x2c4)[$r12] = $r0;;
     _64(0x18000000b000b10c),        //lwz $r0 = 708 (0x2c4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1e49c <test_nonconst_global_member_arrays+0x4d4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cb20c),        //ld $r3 = 712 (0x2c8)[$r12];;
     _96(0x000000008000012fe008bc00),        //make $r2 = 311024 (0x4bef0);;
     _32(0x600401ab),        //make $r1 = 427 (0x1ab);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180010de),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _64(0x18000000a601b00c),        //sw 704 (0x2c0)[$r12] = $r0;;
     _64(0x18000000b404b00c),        //lws $r1 = 704 (0x2c0)[$r12];;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701ae0c),        //sd 696 (0x2b8)[$r12] = $r0;;
     _64(0x18000000b800ae0c),        //ld $r0 = 696 (0x2b8)[$r12];;
     _32(0x180011ec),        //call 22c90 <strlen>;;
     _64(0x18000000a601ad0c),        //sw 692 (0x2b4)[$r12] = $r0;;
     _64(0x18000000b000ad0c),        //lwz $r0 = 692 (0x2b4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e554 <test_nonconst_global_member_arrays+0x58c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cae0c),        //ld $r3 = 696 (0x2b8)[$r12];;
     _96(0x000000008000012fe008c000),        //make $r2 = 311040 (0x4bf00);;
     _32(0x600401ae),        //make $r1 = 430 (0x1ae);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180010b0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701aa0c),        //sd 680 (0x2a8)[$r12] = $r0;;
     _64(0x18000000b800aa0c),        //ld $r0 = 680 (0x2a8)[$r12];;
     _32(0x180011bf),        //call 22c90 <strlen>;;
     _64(0x18000000a601a90c),        //sw 676 (0x2a4)[$r12] = $r0;;
     _64(0x18000000b000a90c),        //lwz $r0 = 676 (0x2a4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1e608 <test_nonconst_global_member_arrays+0x640>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80caa0c),        //ld $r3 = 680 (0x2a8)[$r12];;
     _96(0x000000008000012fe008c400),        //make $r2 = 311056 (0x4bf10);;
     _32(0x600401af),        //make $r1 = 431 (0x1af);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001083),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _64(0x18000000b400c00c),        //lws $r0 = 768 (0x300)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701a60c),        //sd 664 (0x298)[$r12] = $r0;;
     _64(0x18000000b800a60c),        //ld $r0 = 664 (0x298)[$r12];;
     _32(0x18001192),        //call 22c90 <strlen>;;
     _64(0x18000000a601a50c),        //sw 660 (0x294)[$r12] = $r0;;
     _64(0x18000000b000a50c),        //lwz $r0 = 660 (0x294)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1e6bc <test_nonconst_global_member_arrays+0x6f4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80ca60c),        //ld $r3 = 664 (0x298)[$r12];;
     _96(0x000000008000012fe008ca00),        //make $r2 = 311080 (0x4bf28);;
     _32(0x600401b0),        //make $r1 = 432 (0x1b0);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001056),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x18000000b404c00c),        //lws $r1 = 768 (0x300)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701a20c),        //sd 648 (0x288)[$r12] = $r0;;
     _64(0x18000000b800a20c),        //ld $r0 = 648 (0x288)[$r12];;
     _32(0x18001165),        //call 22c90 <strlen>;;
     _64(0x18000000a601a10c),        //sw 644 (0x284)[$r12] = $r0;;
     _64(0x18000000b000a10c),        //lwz $r0 = 644 (0x284)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e770 <test_nonconst_global_member_arrays+0x7a8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80ca20c),        //ld $r3 = 648 (0x288)[$r12];;
     _96(0x000000008000012fe008d000),        //make $r2 = 311104 (0x4bf40);;
     _32(0x600401b2),        //make $r1 = 434 (0x1b2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18001029),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a7019e0c),        //sd 632 (0x278)[$r12] = $r0;;
     _64(0x18000000b8009e0c),        //ld $r0 = 632 (0x278)[$r12];;
     _32(0x18001135),        //call 22c90 <strlen>;;
     _64(0x18000000a6019d0c),        //sw 628 (0x274)[$r12] = $r0;;
     _64(0x18000000b0009d0c),        //lwz $r0 = 628 (0x274)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1e830 <test_nonconst_global_member_arrays+0x868>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c9e0c),        //ld $r3 = 632 (0x278)[$r12];;
     _96(0x000000008000012fe008d400),        //make $r2 = 311120 (0x4bf50);;
     _32(0x600401b3),        //make $r1 = 435 (0x1b3);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000ff9),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _64(0x18000000b000b00c),        //lwz $r0 = 704 (0x2c0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a7019a0c),        //sd 616 (0x268)[$r12] = $r0;;
     _64(0x18000000b8009a0c),        //ld $r0 = 616 (0x268)[$r12];;
     _32(0x18001105),        //call 22c90 <strlen>;;
     _64(0x18000000a601990c),        //sw 612 (0x264)[$r12] = $r0;;
     _64(0x18000000b000990c),        //lwz $r0 = 612 (0x264)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1e8f0 <test_nonconst_global_member_arrays+0x928>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80c9a0c),        //ld $r3 = 616 (0x268)[$r12];;
     _96(0x000000008000012fe008da00),        //make $r2 = 311144 (0x4bf68);;
     _32(0x600401b4),        //make $r1 = 436 (0x1b4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000fc9),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701960c),        //sd 600 (0x258)[$r12] = $r0;;
     _64(0x18000000b800960c),        //ld $r0 = 600 (0x258)[$r12];;
     _32(0x180010d5),        //call 22c90 <strlen>;;
     _64(0x18000000a601950c),        //sw 596 (0x254)[$r12] = $r0;;
     _64(0x18000000b000950c),        //lwz $r0 = 596 (0x254)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1e9b0 <test_nonconst_global_member_arrays+0x9e8>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c960c),        //ld $r3 = 600 (0x258)[$r12];;
     _96(0x000000008000012fe008e000),        //make $r2 = 311168 (0x4bf80);;
     _32(0x600401b6),        //make $r1 = 438 (0x1b6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000f99),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a701920c),        //sd 584 (0x248)[$r12] = $r0;;
     _64(0x18000000b800920c),        //ld $r0 = 584 (0x248)[$r12];;
     _32(0x180010a3),        //call 22c90 <strlen>;;
     _64(0x18000000a601910c),        //sw 580 (0x244)[$r12] = $r0;;
     _64(0x18000000b000910c),        //lwz $r0 = 580 (0x244)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 1ea78 <test_nonconst_global_member_arrays+0xab0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c920c),        //ld $r3 = 584 (0x248)[$r12];;
     _96(0x000000008000012fe008e600),        //make $r2 = 311192 (0x4bf98);;
     _32(0x600401b7),        //make $r1 = 439 (0x1b7);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000f67),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _64(0x18000000a7018e0c),        //sd 568 (0x238)[$r12] = $r0;;
     _64(0x18000000b8008e0c),        //ld $r0 = 568 (0x238)[$r12];;
     _32(0x18001071),        //call 22c90 <strlen>;;
     _64(0x18000000a6018d0c),        //sw 564 (0x234)[$r12] = $r0;;
     _64(0x18000000b0008d0c),        //lwz $r0 = 564 (0x234)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 1eb40 <test_nonconst_global_member_arrays+0xb78>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80c8e0c),        //ld $r3 = 568 (0x238)[$r12];;
     _96(0x000000008000012fe008ec00),        //make $r2 = 311216 (0x4bfb0);;
     _32(0x600401b8),        //make $r1 = 440 (0x1b8);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000f35),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000e00),        //make $r0 = 303160 (0x4a038);;
     _64(0x18000000a7018a0c),        //sd 552 (0x228)[$r12] = $r0;;
     _64(0x18000000b8008a0c),        //ld $r0 = 552 (0x228)[$r12];;
     _32(0x1800104d),        //call 22c90 <strlen>;;
     _64(0x18000000a601890c),        //sw 548 (0x224)[$r12] = $r0;;
     _64(0x18000000b000890c),        //lwz $r0 = 548 (0x224)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1ebd0 <test_nonconst_global_member_arrays+0xc08>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c8a0c),        //ld $r3 = 552 (0x228)[$r12];;
     _96(0x000000008000012fe008f200),        //make $r2 = 311240 (0x4bfc8);;
     _32(0x600401bc),        //make $r1 = 444 (0x1bc);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000f11),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000e00),        //make $r0 = 303160 (0x4a038);;
     _64(0x18000000a701860c),        //sd 536 (0x218)[$r12] = $r0;;
     _64(0x18000000b800860c),        //ld $r0 = 536 (0x218)[$r12];;
     _32(0x18001029),        //call 22c90 <strlen>;;
     _64(0x18000000a601850c),        //sw 532 (0x214)[$r12] = $r0;;
     _64(0x18000000b000850c),        //lwz $r0 = 532 (0x214)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 1ec60 <test_nonconst_global_member_arrays+0xc98>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c860c),        //ld $r3 = 536 (0x218)[$r12];;
     _96(0x000000008000012fe008f600),        //make $r2 = 311256 (0x4bfd8);;
     _32(0x600401bd),        //make $r1 = 445 (0x1bd);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000eed),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000e40),        //make $r0 = 303161 (0x4a039);;
     _64(0x18000000a701820c),        //sd 520 (0x208)[$r12] = $r0;;
     _64(0x18000000b800820c),        //ld $r0 = 520 (0x208)[$r12];;
     _32(0x18001005),        //call 22c90 <strlen>;;
     _64(0x18000000a601810c),        //sw 516 (0x204)[$r12] = $r0;;
     _64(0x18000000b000810c),        //lwz $r0 = 516 (0x204)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 1ecf0 <test_nonconst_global_member_arrays+0xd28>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c820c),        //ld $r3 = 520 (0x208)[$r12];;
     _96(0x000000008000012fe008fa00),        //make $r2 = 311272 (0x4bfe8);;
     _32(0x600401be),        //make $r1 = 446 (0x1be);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000ec9),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0000e80),        //make $r0 = 303162 (0x4a03a);;
     _32(0x27017e0c),        //sd 504 (0x1f8)[$r12] = $r0;;
     _32(0x38007e0c),        //ld $r0 = 504 (0x1f8)[$r12];;
     _32(0x18000fe3),        //call 22c90 <strlen>;;
     _32(0x26017d0c),        //sw 500 (0x1f4)[$r12] = $r0;;
     _32(0x30007d0c),        //lwz $r0 = 500 (0x1f4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1ed6c <test_nonconst_global_member_arrays+0xda4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c7e0c),        //ld $r3 = 504 (0x1f8)[$r12];;
     _96(0x000000008000012fe008fe00),        //make $r2 = 311288 (0x4bff8);;
     _32(0x600401bf),        //make $r1 = 447 (0x1bf);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000eaa),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x26017c0c),        //sw 496 (0x1f0)[$r12] = $r0;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27017a0c),        //sd 488 (0x1e8)[$r12] = $r0;;
     _32(0x38007a0c),        //ld $r0 = 488 (0x1e8)[$r12];;
     _32(0x18000fc0),        //call 22c90 <strlen>;;
     _32(0x2601790c),        //sw 484 (0x1e4)[$r12] = $r0;;
     _32(0x3000790c),        //lwz $r0 = 484 (0x1e4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1edf8 <test_nonconst_global_member_arrays+0xe30>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c7a0c),        //ld $r3 = 488 (0x1e8)[$r12];;
     _96(0x000000008000012fe008b000),        //make $r2 = 310976 (0x4bec0);;
     _32(0x600401c2),        //make $r1 = 450 (0x1c2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000e87),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701760c),        //sd 472 (0x1d8)[$r12] = $r0;;
     _32(0x3800760c),        //ld $r0 = 472 (0x1d8)[$r12];;
     _32(0x18000f9f),        //call 22c90 <strlen>;;
     _32(0x2601750c),        //sw 468 (0x1d4)[$r12] = $r0;;
     _32(0x3000750c),        //lwz $r0 = 468 (0x1d4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1ee7c <test_nonconst_global_member_arrays+0xeb4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c760c),        //ld $r3 = 472 (0x1d8)[$r12];;
     _96(0x000000008000012fe008b400),        //make $r2 = 310992 (0x4bed0);;
     _32(0x600401c3),        //make $r1 = 451 (0x1c3);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000e66),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701720c),        //sd 456 (0x1c8)[$r12] = $r0;;
     _32(0x3800720c),        //ld $r0 = 456 (0x1c8)[$r12];;
     _32(0x18000f7d),        //call 22c90 <strlen>;;
     _32(0x2601710c),        //sw 452 (0x1c4)[$r12] = $r0;;
     _32(0x3000710c),        //lwz $r0 = 452 (0x1c4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1ef04 <test_nonconst_global_member_arrays+0xf3c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c720c),        //ld $r3 = 456 (0x1c8)[$r12];;
     _96(0x000000008000012fe008b800),        //make $r2 = 311008 (0x4bee0);;
     _32(0x600401c4),        //make $r1 = 452 (0x1c4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000e44),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27016e0c),        //sd 440 (0x1b8)[$r12] = $r0;;
     _32(0x38006e0c),        //ld $r0 = 440 (0x1b8)[$r12];;
     _32(0x18000f5b),        //call 22c90 <strlen>;;
     _32(0x26016d0c),        //sw 436 (0x1b4)[$r12] = $r0;;
     _32(0x30006d0c),        //lwz $r0 = 436 (0x1b4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1ef8c <test_nonconst_global_member_arrays+0xfc4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c6e0c),        //ld $r3 = 440 (0x1b8)[$r12];;
     _96(0x000000008000012fe008bc00),        //make $r2 = 311024 (0x4bef0);;
     _32(0x600401c5),        //make $r1 = 453 (0x1c5);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000e22),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x26016c0c),        //sw 432 (0x1b0)[$r12] = $r0;;
     _32(0x34046c0c),        //lws $r1 = 432 (0x1b0)[$r12];;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27016a0c),        //sd 424 (0x1a8)[$r12] = $r0;;
     _32(0x38006a0c),        //ld $r0 = 424 (0x1a8)[$r12];;
     _32(0x18000f35),        //call 22c90 <strlen>;;
     _32(0x2601690c),        //sw 420 (0x1a4)[$r12] = $r0;;
     _32(0x3000690c),        //lwz $r0 = 420 (0x1a4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1f024 <test_nonconst_global_member_arrays+0x105c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c6a0c),        //ld $r3 = 424 (0x1a8)[$r12];;
     _96(0x000000008000012fe008c000),        //make $r2 = 311040 (0x4bf00);;
     _32(0x600401c8),        //make $r1 = 456 (0x1c8);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000dfc),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701660c),        //sd 408 (0x198)[$r12] = $r0;;
     _32(0x3800660c),        //ld $r0 = 408 (0x198)[$r12];;
     _32(0x18000f0f),        //call 22c90 <strlen>;;
     _32(0x2601650c),        //sw 404 (0x194)[$r12] = $r0;;
     _32(0x3000650c),        //lwz $r0 = 404 (0x194)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1f0bc <test_nonconst_global_member_arrays+0x10f4>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c660c),        //ld $r3 = 408 (0x198)[$r12];;
     _96(0x000000008000012fe008c400),        //make $r2 = 311056 (0x4bf10);;
     _32(0x600401c9),        //make $r1 = 457 (0x1c9);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000dd6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x34007c0c),        //lws $r0 = 496 (0x1f0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701620c),        //sd 392 (0x188)[$r12] = $r0;;
     _32(0x3800620c),        //ld $r0 = 392 (0x188)[$r12];;
     _32(0x18000ee9),        //call 22c90 <strlen>;;
     _32(0x2601610c),        //sw 388 (0x184)[$r12] = $r0;;
     _32(0x3000610c),        //lwz $r0 = 388 (0x184)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1f154 <test_nonconst_global_member_arrays+0x118c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c620c),        //ld $r3 = 392 (0x188)[$r12];;
     _96(0x000000008000012fe008ca00),        //make $r2 = 311080 (0x4bf28);;
     _32(0x600401ca),        //make $r1 = 458 (0x1ca);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000db0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x34046c0c),        //lws $r1 = 432 (0x1b0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x18000ec0),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1f1f8 <test_nonconst_global_member_arrays+0x1230>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x0000000080000130e0080200),        //make $r2 = 311304 (0x4c008);;
     _32(0x600401cc),        //make $r1 = 460 (0x1cc);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000d87),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x18000e94),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1f2a8 <test_nonconst_global_member_arrays+0x12e0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x0000000080000130e0080800),        //make $r2 = 311328 (0x4c020);;
     _32(0x600401cd),        //make $r1 = 461 (0x1cd);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000d5b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x30006c0c),        //lwz $r0 = 432 (0x1b0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x18000e68),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1f358 <test_nonconst_global_member_arrays+0x1390>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x0000000080000130e0080e00),        //make $r2 = 311352 (0x4c038);;
     _32(0x600401ce),        //make $r1 = 462 (0x1ce);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000d2f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x18000e3b),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1f40c <test_nonconst_global_member_arrays+0x1444>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x0000000080000130e0081400),        //make $r2 = 311376 (0x4c050);;
     _32(0x600401d0),        //make $r1 = 464 (0x1d0);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000d02),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x18000e0c),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1f4c8 <test_nonconst_global_member_arrays+0x1500>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x0000000080000130e0081a00),        //make $r2 = 311400 (0x4c068);;
     _32(0x600401d1),        //make $r1 = 465 (0x1d1);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000cd3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x18000ddd),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1f584 <test_nonconst_global_member_arrays+0x15bc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x0000000080000130e0082200),        //make $r2 = 311432 (0x4c088);;
     _32(0x600401d2),        //make $r1 = 466 (0x1d2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000ca4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0001400),        //make $r0 = 303184 (0x4a050);;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x18000dbe),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1f600 <test_nonconst_global_member_arrays+0x1638>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x0000000080000130e0082a00),        //make $r2 = 311464 (0x4c0a8);;
     _32(0x600401d6),        //make $r1 = 470 (0x1d6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000c85),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0001400),        //make $r0 = 303184 (0x4a050);;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18000d9f),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1f67c <test_nonconst_global_member_arrays+0x16b4>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x0000000080000130e0082e00),        //make $r2 = 311480 (0x4c0b8);;
     _32(0x600401d7),        //make $r1 = 471 (0x1d7);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000c66),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0001440),        //make $r0 = 303185 (0x4a051);;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x18000d80),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1f6f8 <test_nonconst_global_member_arrays+0x1730>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x0000000080000130e0083200),        //make $r2 = 311496 (0x4c0c8);;
     _32(0x600401d8),        //make $r1 = 472 (0x1d8);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000c47),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0001500),        //make $r0 = 303188 (0x4a054);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x18000d61),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1f774 <test_nonconst_global_member_arrays+0x17ac>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x0000000080000130e0083600),        //make $r2 = 311512 (0x4c0d8);;
     _32(0x600401d9),        //make $r1 = 473 (0x1d9);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000c28),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x18000d3e),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1f800 <test_nonconst_global_member_arrays+0x1838>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012fe008b000),        //make $r2 = 310976 (0x4bec0);;
     _32(0x600401dc),        //make $r1 = 476 (0x1dc);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000c05),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18000d1d),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1f884 <test_nonconst_global_member_arrays+0x18bc>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012fe008b400),        //make $r2 = 310992 (0x4bed0);;
     _32(0x600401dd),        //make $r1 = 477 (0x1dd);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000be4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x18000cfb),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1f90c <test_nonconst_global_member_arrays+0x1944>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012fe008b800),        //make $r2 = 311008 (0x4bee0);;
     _32(0x600401de),        //make $r1 = 478 (0x1de);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000bc2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18000cd9),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1f994 <test_nonconst_global_member_arrays+0x19cc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x0000000080000130e0083a00),        //make $r2 = 311528 (0x4c0e8);;
     _32(0x600401df),        //make $r1 = 479 (0x1df);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000ba0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x2601280c),        //sw 160 (0xa0)[$r12] = $r0;;
     _32(0x3404280c),        //lws $r1 = 160 (0xa0)[$r12];;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18000cb3),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1fa2c <test_nonconst_global_member_arrays+0x1a64>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012fe008c000),        //make $r2 = 311040 (0x4bf00);;
     _32(0x600401e2),        //make $r1 = 482 (0x1e2);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000b7a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x18000c8d),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1fac4 <test_nonconst_global_member_arrays+0x1afc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012fe008c400),        //make $r2 = 311056 (0x4bf10);;
     _32(0x600401e3),        //make $r1 = 483 (0x1e3);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000b54),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x3400380c),        //lws $r0 = 224 (0xe0)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18000c66),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1fb60 <test_nonconst_global_member_arrays+0x1b98>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x0000000080000130e0083e00),        //make $r2 = 311544 (0x4c0f8);;
     _32(0x600401e4),        //make $r1 = 484 (0x1e4);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000b2d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3404280c),        //lws $r1 = 160 (0xa0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18000c3d),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 1fc04 <test_nonconst_global_member_arrays+0x1c3c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x0000000080000130e0084400),        //make $r2 = 311568 (0x4c110);;
     _32(0x600401e6),        //make $r1 = 486 (0x1e6);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000b04),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18000c11),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1fcb4 <test_nonconst_global_member_arrays+0x1cec>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x0000000080000130e0084a00),        //make $r2 = 311592 (0x4c128);;
     _32(0x600401e7),        //make $r1 = 487 (0x1e7);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000ad8),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x3000280c),        //lwz $r0 = 160 (0xa0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x18000be4),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1fd68 <test_nonconst_global_member_arrays+0x1da0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x0000000080000130e0085000),        //make $r2 = 311616 (0x4c140);;
     _32(0x600401e8),        //make $r1 = 488 (0x1e8);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000aab),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x18000bb7),        //call 22c90 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 1fe1c <test_nonconst_global_member_arrays+0x1e54>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x0000000080000130e0085600),        //make $r2 = 311640 (0x4c158);;
     _32(0x600401ea),        //make $r1 = 490 (0x1ea);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000a7e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x18000b88),        //call 22c90 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 1fed8 <test_nonconst_global_member_arrays+0x1f10>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000130e0085c00),        //make $r2 = 311664 (0x4c170);;
     _32(0x600401eb),        //make $r1 = 491 (0x1eb);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000a4f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6907f000),        //sxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _96(0x0000000080000128e1000c00),        //addd $r0 = $r0, 303152 (0x4a030);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x18000b58),        //call 22c90 <strlen>;;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 1ff98 <test_nonconst_global_member_arrays+0x1fd0>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c060c),        //ld $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000130e0086400),        //make $r2 = 311696 (0x4c190);;
     _32(0x600401ec),        //make $r1 = 492 (0x1ec);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000a1f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130d00c),        //addd $r12 = $r12, 832 (0x340);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_nonconst_local_member_arrays: list_I = 
 [|
     _64(0x07ffffffe130200c),        //addd $r12 = $r12, -896 (0xfffffffffffffc80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x60000035),        //make $r0 = 53 (0x35);;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x60003635),        //make $r0 = 13877 (0x3635);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010c0c),        //sw 48 (0x30)[$r12] = $r0;;
     _32(0x60003635),        //make $r0 = 13877 (0x3635);;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _64(0x00000dcde0008d40),        //make $r0 = 3618357 (0x373635);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _64(0x000d0ccce0008c40),        //make $r0 = 875770417 (0x34333231);;
     _32(0x2601100c),        //sw 64 (0x40)[$r12] = $r0;;
     _64(0x000e0dcde0008d40),        //make $r0 = 943142453 (0x38373635);;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x60000039),        //make $r0 = 57 (0x39);;
     _32(0x2601120c),        //sw 72 (0x48)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601130c),        //sw 76 (0x4c)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _64(0x18000000a701de0c),        //sd 888 (0x378)[$r12] = $r0;;
     _64(0x18000000b800de0c),        //ld $r0 = 888 (0x378)[$r12];;
     _32(0x18000b10),        //call 22c90 <strlen>;;
     _64(0x18000000a601dd0c),        //sw 884 (0x374)[$r12] = $r0;;
     _64(0x18000000b000dd0c),        //lwz $r0 = 884 (0x374)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 200c4 <test_nonconst_local_member_arrays+0x114>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cde0c),        //ld $r3 = 888 (0x378)[$r12];;
     _96(0x000000008000012ee008ec00),        //make $r2 = 310192 (0x4bbb0);;
     _32(0x600401fd),        //make $r1 = 509 (0x1fd);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180009d4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _64(0x18000000a701da0c),        //sd 872 (0x368)[$r12] = $r0;;
     _64(0x18000000b800da0c),        //ld $r0 = 872 (0x368)[$r12];;
     _32(0x18000aee),        //call 22c90 <strlen>;;
     _64(0x18000000a601d90c),        //sw 868 (0x364)[$r12] = $r0;;
     _64(0x18000000b000d90c),        //lwz $r0 = 868 (0x364)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 2014c <test_nonconst_local_member_arrays+0x19c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cda0c),        //ld $r3 = 872 (0x368)[$r12];;
     _96(0x000000008000012ee008ee00),        //make $r2 = 310200 (0x4bbb8);;
     _32(0x600401fe),        //make $r1 = 510 (0x1fe);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180009b2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _64(0x18000000a701d60c),        //sd 856 (0x358)[$r12] = $r0;;
     _64(0x18000000b800d60c),        //ld $r0 = 856 (0x358)[$r12];;
     _32(0x18000acb),        //call 22c90 <strlen>;;
     _64(0x18000000a601d50c),        //sw 852 (0x354)[$r12] = $r0;;
     _64(0x18000000b000d50c),        //lwz $r0 = 852 (0x354)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 201d8 <test_nonconst_local_member_arrays+0x228>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cd60c),        //ld $r3 = 856 (0x358)[$r12];;
     _96(0x000000008000012ee008f200),        //make $r2 = 310216 (0x4bbc8);;
     _32(0x600401ff),        //make $r1 = 511 (0x1ff);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800098f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _64(0x18000000a701d20c),        //sd 840 (0x348)[$r12] = $r0;;
     _64(0x18000000b800d20c),        //ld $r0 = 840 (0x348)[$r12];;
     _32(0x18000aa8),        //call 22c90 <strlen>;;
     _64(0x18000000a601d10c),        //sw 836 (0x344)[$r12] = $r0;;
     _64(0x18000000b000d10c),        //lwz $r0 = 836 (0x344)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 20264 <test_nonconst_local_member_arrays+0x2b4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cd20c),        //ld $r3 = 840 (0x348)[$r12];;
     _96(0x000000008000012ee008f600),        //make $r2 = 310232 (0x4bbd8);;
     _32(0x60040200),        //make $r1 = 512 (0x200);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800096c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601d00c),        //sw 832 (0x340)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ce0c),        //sd 824 (0x338)[$r12] = $r0;;
     _64(0x18000000b800ce0c),        //ld $r0 = 824 (0x338)[$r12];;
     _32(0x18000a7f),        //call 22c90 <strlen>;;
     _64(0x18000000a601cd0c),        //sw 820 (0x334)[$r12] = $r0;;
     _64(0x18000000b000cd0c),        //lwz $r0 = 820 (0x334)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 20308 <test_nonconst_local_member_arrays+0x358>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cce0c),        //ld $r3 = 824 (0x338)[$r12];;
     _96(0x000000008000012ee008fa00),        //make $r2 = 310248 (0x4bbe8);;
     _32(0x60040203),        //make $r1 = 515 (0x203);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000943),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ca0c),        //sd 808 (0x328)[$r12] = $r0;;
     _64(0x18000000b800ca0c),        //ld $r0 = 808 (0x328)[$r12];;
     _32(0x18000a59),        //call 22c90 <strlen>;;
     _64(0x18000000a601c90c),        //sw 804 (0x324)[$r12] = $r0;;
     _64(0x18000000b000c90c),        //lwz $r0 = 804 (0x324)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 203a0 <test_nonconst_local_member_arrays+0x3f0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cca0c),        //ld $r3 = 808 (0x328)[$r12];;
     _96(0x000000008000012ee008fc00),        //make $r2 = 310256 (0x4bbf0);;
     _32(0x60040204),        //make $r1 = 516 (0x204);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800091d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701c60c),        //sd 792 (0x318)[$r12] = $r0;;
     _64(0x18000000b800c60c),        //ld $r0 = 792 (0x318)[$r12];;
     _32(0x18000a32),        //call 22c90 <strlen>;;
     _64(0x18000000a601c50c),        //sw 788 (0x314)[$r12] = $r0;;
     _64(0x18000000b000c50c),        //lwz $r0 = 788 (0x314)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 2043c <test_nonconst_local_member_arrays+0x48c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cc60c),        //ld $r3 = 792 (0x318)[$r12];;
     _96(0x000000008000012fe0080000),        //make $r2 = 310272 (0x4bc00);;
     _32(0x60040205),        //make $r1 = 517 (0x205);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180008f6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701c20c),        //sd 776 (0x308)[$r12] = $r0;;
     _64(0x18000000b800c20c),        //ld $r0 = 776 (0x308)[$r12];;
     _32(0x18000a0b),        //call 22c90 <strlen>;;
     _64(0x18000000a601c10c),        //sw 772 (0x304)[$r12] = $r0;;
     _64(0x18000000b000c10c),        //lwz $r0 = 772 (0x304)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 204d8 <test_nonconst_local_member_arrays+0x528>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cc20c),        //ld $r3 = 776 (0x308)[$r12];;
     _96(0x000000008000012fe0080400),        //make $r2 = 310288 (0x4bc10);;
     _32(0x60040206),        //make $r1 = 518 (0x206);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180008cf),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000d00c),        //lwz $r0 = 832 (0x340)[$r12];;
     _64(0x18000000a601c00c),        //sw 768 (0x300)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b408c00c),        //lws $r2 = 768 (0x300)[$r12];;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701be0c),        //sd 760 (0x2f8)[$r12] = $r0;;
     _64(0x18000000b800be0c),        //ld $r0 = 760 (0x2f8)[$r12];;
     _32(0x180009de),        //call 22c90 <strlen>;;
     _64(0x18000000a601bd0c),        //sw 756 (0x2f4)[$r12] = $r0;;
     _64(0x18000000b000bd0c),        //lwz $r0 = 756 (0x2f4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 2058c <test_nonconst_local_member_arrays+0x5dc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cbe0c),        //ld $r3 = 760 (0x2f8)[$r12];;
     _96(0x000000008000012fe0080800),        //make $r2 = 310304 (0x4bc20);;
     _32(0x60040209),        //make $r1 = 521 (0x209);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180008a2),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ba0c),        //sd 744 (0x2e8)[$r12] = $r0;;
     _64(0x18000000b800ba0c),        //ld $r0 = 744 (0x2e8)[$r12];;
     _32(0x180009b2),        //call 22c90 <strlen>;;
     _64(0x18000000a601b90c),        //sw 740 (0x2e4)[$r12] = $r0;;
     _64(0x18000000b000b90c),        //lwz $r0 = 740 (0x2e4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 2063c <test_nonconst_local_member_arrays+0x68c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cba0c),        //ld $r3 = 744 (0x2e8)[$r12];;
     _96(0x000000008000012fe0080c00),        //make $r2 = 310320 (0x4bc30);;
     _32(0x6004020a),        //make $r1 = 522 (0x20a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000876),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b400d00c),        //lws $r0 = 832 (0x340)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701b60c),        //sd 728 (0x2d8)[$r12] = $r0;;
     _64(0x18000000b800b60c),        //ld $r0 = 728 (0x2d8)[$r12];;
     _32(0x18000986),        //call 22c90 <strlen>;;
     _64(0x18000000a601b50c),        //sw 724 (0x2d4)[$r12] = $r0;;
     _64(0x18000000b000b50c),        //lwz $r0 = 724 (0x2d4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 206ec <test_nonconst_local_member_arrays+0x73c>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80cb60c),        //ld $r3 = 728 (0x2d8)[$r12];;
     _96(0x000000008000012fe0081000),        //make $r2 = 310336 (0x4bc40);;
     _32(0x6004020b),        //make $r1 = 523 (0x20b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800084a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b408d00c),        //lws $r2 = 832 (0x340)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701b20c),        //sd 712 (0x2c8)[$r12] = $r0;;
     _64(0x18000000b800b20c),        //ld $r0 = 712 (0x2c8)[$r12];;
     _32(0x1800095a),        //call 22c90 <strlen>;;
     _64(0x18000000a601b10c),        //sw 708 (0x2c4)[$r12] = $r0;;
     _64(0x18000000b000b10c),        //lwz $r0 = 708 (0x2c4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 2079c <test_nonconst_local_member_arrays+0x7ec>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80cb20c),        //ld $r3 = 712 (0x2c8)[$r12];;
     _96(0x000000008000012fe0081400),        //make $r2 = 310352 (0x4bc50);;
     _32(0x6004020d),        //make $r1 = 525 (0x20d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800081e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701ae0c),        //sd 696 (0x2b8)[$r12] = $r0;;
     _64(0x18000000b800ae0c),        //ld $r0 = 696 (0x2b8)[$r12];;
     _32(0x1800092b),        //call 22c90 <strlen>;;
     _64(0x18000000a601ad0c),        //sw 692 (0x2b4)[$r12] = $r0;;
     _64(0x18000000b000ad0c),        //lwz $r0 = 692 (0x2b4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 20858 <test_nonconst_local_member_arrays+0x8a8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80cae0c),        //ld $r3 = 696 (0x2b8)[$r12];;
     _96(0x000000008000012fe0081800),        //make $r2 = 310368 (0x4bc60);;
     _32(0x6004020e),        //make $r1 = 526 (0x20e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180007ef),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _64(0x18000000b000c00c),        //lwz $r0 = 768 (0x300)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701aa0c),        //sd 680 (0x2a8)[$r12] = $r0;;
     _64(0x18000000b800aa0c),        //ld $r0 = 680 (0x2a8)[$r12];;
     _32(0x180008fc),        //call 22c90 <strlen>;;
     _64(0x18000000a601a90c),        //sw 676 (0x2a4)[$r12] = $r0;;
     _64(0x18000000b000a90c),        //lwz $r0 = 676 (0x2a4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 20914 <test_nonconst_local_member_arrays+0x964>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80caa0c),        //ld $r3 = 680 (0x2a8)[$r12];;
     _96(0x000000008000012fe0081e00),        //make $r2 = 310392 (0x4bc78);;
     _32(0x6004020f),        //make $r1 = 527 (0x20f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180007c0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701a60c),        //sd 664 (0x298)[$r12] = $r0;;
     _64(0x18000000b800a60c),        //ld $r0 = 664 (0x298)[$r12];;
     _32(0x180008cd),        //call 22c90 <strlen>;;
     _64(0x18000000a601a50c),        //sw 660 (0x294)[$r12] = $r0;;
     _64(0x18000000b000a50c),        //lwz $r0 = 660 (0x294)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 209d0 <test_nonconst_local_member_arrays+0xa20>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80ca60c),        //ld $r3 = 664 (0x298)[$r12];;
     _96(0x000000008000012fe0082400),        //make $r2 = 310416 (0x4bc90);;
     _32(0x60040211),        //make $r1 = 529 (0x211);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000791),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701a20c),        //sd 648 (0x288)[$r12] = $r0;;
     _64(0x18000000b800a20c),        //ld $r0 = 648 (0x288)[$r12];;
     _32(0x1800089c),        //call 22c90 <strlen>;;
     _64(0x18000000a601a10c),        //sw 644 (0x284)[$r12] = $r0;;
     _64(0x18000000b000a10c),        //lwz $r0 = 644 (0x284)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 20a94 <test_nonconst_local_member_arrays+0xae4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80ca20c),        //ld $r3 = 648 (0x288)[$r12];;
     _96(0x000000008000012fe0082800),        //make $r2 = 310432 (0x4bca0);;
     _32(0x60040212),        //make $r1 = 530 (0x212);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000760),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x300c0000),        //lwz $r3 = 0 (0x0)[$r0];;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a7019e0c),        //sd 632 (0x278)[$r12] = $r0;;
     _64(0x18000000b8009e0c),        //ld $r0 = 632 (0x278)[$r12];;
     _32(0x1800086b),        //call 22c90 <strlen>;;
     _64(0x18000000a6019d0c),        //sw 628 (0x274)[$r12] = $r0;;
     _64(0x18000000b0009d0c),        //lwz $r0 = 628 (0x274)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000580),        //cb.wnez $r0? 20b58 <test_nonconst_local_member_arrays+0xba8>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _64(0x18000000b80c9e0c),        //ld $r3 = 632 (0x278)[$r12];;
     _96(0x000000008000012fe0082e00),        //make $r2 = 310456 (0x4bcb8);;
     _32(0x60040213),        //make $r1 = 531 (0x213);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800072f),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _64(0x18000000a7019a0c),        //sd 616 (0x268)[$r12] = $r0;;
     _64(0x18000000b8009a0c),        //ld $r0 = 616 (0x268)[$r12];;
     _32(0x18000848),        //call 22c90 <strlen>;;
     _64(0x18000000a601990c),        //sw 612 (0x264)[$r12] = $r0;;
     _64(0x18000000b000990c),        //lwz $r0 = 612 (0x264)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 20be4 <test_nonconst_local_member_arrays+0xc34>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c9a0c),        //ld $r3 = 616 (0x268)[$r12];;
     _96(0x000000008000012fe0083400),        //make $r2 = 310480 (0x4bcd0);;
     _32(0x60040217),        //make $r1 = 535 (0x217);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800070c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _64(0x18000000a701960c),        //sd 600 (0x258)[$r12] = $r0;;
     _64(0x18000000b800960c),        //ld $r0 = 600 (0x258)[$r12];;
     _32(0x18000825),        //call 22c90 <strlen>;;
     _64(0x18000000a601950c),        //sw 596 (0x254)[$r12] = $r0;;
     _64(0x18000000b000950c),        //lwz $r0 = 596 (0x254)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 20c70 <test_nonconst_local_member_arrays+0xcc0>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c960c),        //ld $r3 = 600 (0x258)[$r12];;
     _96(0x000000008000012fe0083600),        //make $r2 = 310488 (0x4bcd8);;
     _32(0x60040218),        //make $r1 = 536 (0x218);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180006e9),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000240),        //addd $r0 = $r0, 9 (0x9);;
     _64(0x18000000a701920c),        //sd 584 (0x248)[$r12] = $r0;;
     _64(0x18000000b800920c),        //ld $r0 = 584 (0x248)[$r12];;
     _32(0x18000802),        //call 22c90 <strlen>;;
     _64(0x18000000a601910c),        //sw 580 (0x244)[$r12] = $r0;;
     _64(0x18000000b000910c),        //lwz $r0 = 580 (0x244)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 20cfc <test_nonconst_local_member_arrays+0xd4c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c920c),        //ld $r3 = 584 (0x248)[$r12];;
     _96(0x000000008000012fe0083a00),        //make $r2 = 310504 (0x4bce8);;
     _32(0x60040219),        //make $r1 = 537 (0x219);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180006c6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _64(0x18000000a7018e0c),        //sd 568 (0x238)[$r12] = $r0;;
     _64(0x18000000b8008e0c),        //ld $r0 = 568 (0x238)[$r12];;
     _32(0x180007df),        //call 22c90 <strlen>;;
     _64(0x18000000a6018d0c),        //sw 564 (0x234)[$r12] = $r0;;
     _64(0x18000000b0008d0c),        //lwz $r0 = 564 (0x234)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000580),        //cb.wnez $r0? 20d88 <test_nonconst_local_member_arrays+0xdd8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _64(0x18000000b80c8e0c),        //ld $r3 = 568 (0x238)[$r12];;
     _96(0x000000008000012fe0083e00),        //make $r2 = 310520 (0x4bcf8);;
     _32(0x6004021a),        //make $r1 = 538 (0x21a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180006a3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _64(0x18000000a6018c0c),        //sw 560 (0x230)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a7018a0c),        //sd 552 (0x228)[$r12] = $r0;;
     _64(0x18000000b8008a0c),        //ld $r0 = 552 (0x228)[$r12];;
     _32(0x180007b6),        //call 22c90 <strlen>;;
     _64(0x18000000a601890c),        //sw 548 (0x224)[$r12] = $r0;;
     _64(0x18000000b000890c),        //lwz $r0 = 548 (0x224)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 20e2c <test_nonconst_local_member_arrays+0xe7c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c8a0c),        //ld $r3 = 552 (0x228)[$r12];;
     _96(0x000000008000012ee008fa00),        //make $r2 = 310248 (0x4bbe8);;
     _32(0x6004021d),        //make $r1 = 541 (0x21d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800067a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701860c),        //sd 536 (0x218)[$r12] = $r0;;
     _64(0x18000000b800860c),        //ld $r0 = 536 (0x218)[$r12];;
     _32(0x18000790),        //call 22c90 <strlen>;;
     _64(0x18000000a601850c),        //sw 532 (0x214)[$r12] = $r0;;
     _64(0x18000000b000850c),        //lwz $r0 = 532 (0x214)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000580),        //cb.wnez $r0? 20ec4 <test_nonconst_local_member_arrays+0xf14>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _64(0x18000000b80c860c),        //ld $r3 = 536 (0x218)[$r12];;
     _96(0x000000008000012ee008fc00),        //make $r2 = 310256 (0x4bbf0);;
     _32(0x6004021e),        //make $r1 = 542 (0x21e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000654),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _64(0x18000000a701820c),        //sd 520 (0x208)[$r12] = $r0;;
     _64(0x18000000b800820c),        //ld $r0 = 520 (0x208)[$r12];;
     _32(0x18000769),        //call 22c90 <strlen>;;
     _64(0x18000000a601810c),        //sw 516 (0x204)[$r12] = $r0;;
     _64(0x18000000b000810c),        //lwz $r0 = 516 (0x204)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000580),        //cb.wnez $r0? 20f60 <test_nonconst_local_member_arrays+0xfb0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _64(0x18000000b80c820c),        //ld $r3 = 520 (0x208)[$r12];;
     _96(0x000000008000012fe0080000),        //make $r2 = 310272 (0x4bc00);;
     _32(0x6004021f),        //make $r1 = 543 (0x21f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800062d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27017e0c),        //sd 504 (0x1f8)[$r12] = $r0;;
     _32(0x38007e0c),        //ld $r0 = 504 (0x1f8)[$r12];;
     _32(0x18000744),        //call 22c90 <strlen>;;
     _32(0x26017d0c),        //sw 500 (0x1f4)[$r12] = $r0;;
     _32(0x30007d0c),        //lwz $r0 = 500 (0x1f4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 20fe8 <test_nonconst_local_member_arrays+0x1038>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c7e0c),        //ld $r3 = 504 (0x1f8)[$r12];;
     _96(0x000000008000012fe0080400),        //make $r2 = 310288 (0x4bc10);;
     _32(0x60040220),        //make $r1 = 544 (0x220);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800060b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b0008c0c),        //lwz $r0 = 560 (0x230)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x26017c0c),        //sw 496 (0x1f0)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x34087c0c),        //lws $r2 = 496 (0x1f0)[$r12];;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27017a0c),        //sd 488 (0x1e8)[$r12] = $r0;;
     _32(0x38007a0c),        //ld $r0 = 488 (0x1e8)[$r12];;
     _32(0x1800071d),        //call 22c90 <strlen>;;
     _32(0x2601790c),        //sw 484 (0x1e4)[$r12] = $r0;;
     _32(0x3000790c),        //lwz $r0 = 484 (0x1e4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 21084 <test_nonconst_local_member_arrays+0x10d4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c7a0c),        //ld $r3 = 488 (0x1e8)[$r12];;
     _96(0x000000008000012fe0080800),        //make $r2 = 310304 (0x4bc20);;
     _32(0x60040223),        //make $r1 = 547 (0x223);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180005e4),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701760c),        //sd 472 (0x1d8)[$r12] = $r0;;
     _32(0x3800760c),        //ld $r0 = 472 (0x1d8)[$r12];;
     _32(0x180006f7),        //call 22c90 <strlen>;;
     _32(0x2601750c),        //sw 468 (0x1d4)[$r12] = $r0;;
     _32(0x3000750c),        //lwz $r0 = 468 (0x1d4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 2111c <test_nonconst_local_member_arrays+0x116c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c760c),        //ld $r3 = 472 (0x1d8)[$r12];;
     _96(0x000000008000012fe0080c00),        //make $r2 = 310320 (0x4bc30);;
     _32(0x60040224),        //make $r1 = 548 (0x224);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180005be),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _64(0x18000000b4008c0c),        //lws $r0 = 560 (0x230)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701720c),        //sd 456 (0x1c8)[$r12] = $r0;;
     _32(0x3800720c),        //ld $r0 = 456 (0x1c8)[$r12];;
     _32(0x180006d1),        //call 22c90 <strlen>;;
     _32(0x2601710c),        //sw 452 (0x1c4)[$r12] = $r0;;
     _32(0x3000710c),        //lwz $r0 = 452 (0x1c4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 211b4 <test_nonconst_local_member_arrays+0x1204>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c720c),        //ld $r3 = 456 (0x1c8)[$r12];;
     _96(0x000000008000012fe0081000),        //make $r2 = 310336 (0x4bc40);;
     _32(0x60040225),        //make $r1 = 549 (0x225);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000598),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x34087c0c),        //lws $r2 = 496 (0x1f0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27016e0c),        //sd 440 (0x1b8)[$r12] = $r0;;
     _32(0x38006e0c),        //ld $r0 = 440 (0x1b8)[$r12];;
     _32(0x180006a9),        //call 22c90 <strlen>;;
     _32(0x26016d0c),        //sw 436 (0x1b4)[$r12] = $r0;;
     _32(0x30006d0c),        //lwz $r0 = 436 (0x1b4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 21254 <test_nonconst_local_member_arrays+0x12a4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c6e0c),        //ld $r3 = 440 (0x1b8)[$r12];;
     _96(0x000000008000012fe0084200),        //make $r2 = 310536 (0x4bd08);;
     _32(0x60040227),        //make $r1 = 551 (0x227);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000570),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27016a0c),        //sd 424 (0x1a8)[$r12] = $r0;;
     _32(0x38006a0c),        //ld $r0 = 424 (0x1a8)[$r12];;
     _32(0x1800067e),        //call 22c90 <strlen>;;
     _32(0x2601690c),        //sw 420 (0x1a4)[$r12] = $r0;;
     _32(0x3000690c),        //lwz $r0 = 420 (0x1a4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 21300 <test_nonconst_local_member_arrays+0x1350>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c6a0c),        //ld $r3 = 424 (0x1a8)[$r12];;
     _96(0x000000008000012fe0084800),        //make $r2 = 310560 (0x4bd20);;
     _32(0x60040228),        //make $r1 = 552 (0x228);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000545),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x30007c0c),        //lwz $r0 = 496 (0x1f0)[$r12];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701660c),        //sd 408 (0x198)[$r12] = $r0;;
     _32(0x3800660c),        //ld $r0 = 408 (0x198)[$r12];;
     _32(0x18000653),        //call 22c90 <strlen>;;
     _32(0x2601650c),        //sw 404 (0x194)[$r12] = $r0;;
     _32(0x3000650c),        //lwz $r0 = 404 (0x194)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 213ac <test_nonconst_local_member_arrays+0x13fc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c660c),        //ld $r3 = 408 (0x198)[$r12];;
     _96(0x000000008000012fe0084e00),        //make $r2 = 310584 (0x4bd38);;
     _32(0x60040229),        //make $r1 = 553 (0x229);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800051a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701620c),        //sd 392 (0x188)[$r12] = $r0;;
     _32(0x3800620c),        //ld $r0 = 392 (0x188)[$r12];;
     _32(0x18000627),        //call 22c90 <strlen>;;
     _32(0x2601610c),        //sw 388 (0x184)[$r12] = $r0;;
     _32(0x3000610c),        //lwz $r0 = 388 (0x184)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 2145c <test_nonconst_local_member_arrays+0x14ac>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c620c),        //ld $r3 = 392 (0x188)[$r12];;
     _96(0x000000008000012fe0085400),        //make $r2 = 310608 (0x4bd50);;
     _32(0x6004022b),        //make $r1 = 555 (0x22b);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180004ee),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _32(0x38005e0c),        //ld $r0 = 376 (0x178)[$r12];;
     _32(0x180005f9),        //call 22c90 <strlen>;;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 21514 <test_nonconst_local_member_arrays+0x1564>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c5e0c),        //ld $r3 = 376 (0x178)[$r12];;
     _96(0x000000008000012fe0085a00),        //make $r2 = 310632 (0x4bd68);;
     _32(0x6004022c),        //make $r1 = 556 (0x22c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180004c0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x38005a0c),        //ld $r0 = 360 (0x168)[$r12];;
     _32(0x180005cb),        //call 22c90 <strlen>;;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 215cc <test_nonconst_local_member_arrays+0x161c>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c5a0c),        //ld $r3 = 360 (0x168)[$r12];;
     _96(0x000000008000012fe0086000),        //make $r2 = 310656 (0x4bd80);;
     _32(0x6004022d),        //make $r1 = 557 (0x22d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000492),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000800),        //addd $r0 = $r0, 32 (0x20);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x3800560c),        //ld $r0 = 344 (0x158)[$r12];;
     _32(0x180005ad),        //call 22c90 <strlen>;;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 21644 <test_nonconst_local_member_arrays+0x1694>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c560c),        //ld $r3 = 344 (0x158)[$r12];;
     _96(0x000000008000012fe0086600),        //make $r2 = 310680 (0x4bd98);;
     _32(0x60040231),        //make $r1 = 561 (0x231);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000474),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000800),        //addd $r0 = $r0, 32 (0x20);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x3800520c),        //ld $r0 = 328 (0x148)[$r12];;
     _32(0x1800058f),        //call 22c90 <strlen>;;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 216bc <test_nonconst_local_member_arrays+0x170c>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c520c),        //ld $r3 = 328 (0x148)[$r12];;
     _96(0x000000008000012fe0086800),        //make $r2 = 310688 (0x4bda0);;
     _32(0x60040232),        //make $r1 = 562 (0x232);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000456),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000840),        //addd $r0 = $r0, 33 (0x21);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x18000571),        //call 22c90 <strlen>;;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 21734 <test_nonconst_local_member_arrays+0x1784>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c4e0c),        //ld $r3 = 312 (0x138)[$r12];;
     _96(0x000000008000012fe0086c00),        //make $r2 = 310704 (0x4bdb0);;
     _32(0x60040233),        //make $r1 = 563 (0x233);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000438),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x61000900),        //addd $r0 = $r0, 36 (0x24);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x38004a0c),        //ld $r0 = 296 (0x128)[$r12];;
     _32(0x18000553),        //call 22c90 <strlen>;;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 217ac <test_nonconst_local_member_arrays+0x17fc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c4a0c),        //ld $r3 = 296 (0x128)[$r12];;
     _96(0x000000008000012fe0087000),        //make $r2 = 310720 (0x4bdc0);;
     _32(0x60040234),        //make $r1 = 564 (0x234);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800041a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000004),        //make $r0 = 4 (0x4);;
     _32(0x2601480c),        //sw 288 (0x120)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x3800460c),        //ld $r0 = 280 (0x118)[$r12];;
     _32(0x18000531),        //call 22c90 <strlen>;;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 21834 <test_nonconst_local_member_arrays+0x1884>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c460c),        //ld $r3 = 280 (0x118)[$r12];;
     _96(0x000000008000012ee008fa00),        //make $r2 = 310248 (0x4bbe8);;
     _32(0x60040237),        //make $r1 = 567 (0x237);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180003f8),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x3800420c),        //ld $r0 = 264 (0x108)[$r12];;
     _32(0x18000511),        //call 22c90 <strlen>;;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 218b4 <test_nonconst_local_member_arrays+0x1904>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c420c),        //ld $r3 = 264 (0x108)[$r12];;
     _96(0x000000008000012ee008fc00),        //make $r2 = 310256 (0x4bbf0);;
     _32(0x60040238),        //make $r1 = 568 (0x238);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180003d8),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x38003e0c),        //ld $r0 = 248 (0xf8)[$r12];;
     _32(0x180004f0),        //call 22c90 <strlen>;;
     _32(0x26013d0c),        //sw 244 (0xf4)[$r12] = $r0;;
     _32(0x30003d0c),        //lwz $r0 = 244 (0xf4)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 21938 <test_nonconst_local_member_arrays+0x1988>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _96(0x000000008000012fe0080000),        //make $r2 = 310272 (0x4bc00);;
     _32(0x60040239),        //make $r1 = 569 (0x239);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180003b7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x180004cf),        //call 22c90 <strlen>;;
     _32(0x2601390c),        //sw 228 (0xe4)[$r12] = $r0;;
     _32(0x3000390c),        //lwz $r0 = 228 (0xe4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 219bc <test_nonconst_local_member_arrays+0x1a0c>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c3a0c),        //ld $r3 = 232 (0xe8)[$r12];;
     _96(0x000000008000012fe0087400),        //make $r2 = 310736 (0x4bdd0);;
     _32(0x6004023a),        //make $r1 = 570 (0x23a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000396),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x2601380c),        //sw 224 (0xe0)[$r12] = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3408380c),        //lws $r2 = 224 (0xe0)[$r12];;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x180004aa),        //call 22c90 <strlen>;;
     _32(0x2601350c),        //sw 212 (0xd4)[$r12] = $r0;;
     _32(0x3000350c),        //lwz $r0 = 212 (0xd4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 21a50 <test_nonconst_local_member_arrays+0x1aa0>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c360c),        //ld $r3 = 216 (0xd8)[$r12];;
     _96(0x000000008000012fe0080800),        //make $r2 = 310304 (0x4bc20);;
     _32(0x6004023d),        //make $r1 = 573 (0x23d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000371),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x18000485),        //call 22c90 <strlen>;;
     _32(0x2601310c),        //sw 196 (0xc4)[$r12] = $r0;;
     _32(0x3000310c),        //lwz $r0 = 196 (0xc4)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 21ae4 <test_nonconst_local_member_arrays+0x1b34>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _96(0x000000008000012fe0080c00),        //make $r2 = 310320 (0x4bc30);;
     _32(0x6004023e),        //make $r1 = 574 (0x23e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800034c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x1800045f),        //call 22c90 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 21b7c <test_nonconst_local_member_arrays+0x1bcc>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x000000008000012fe0087800),        //make $r2 = 310752 (0x4bde0);;
     _32(0x6004023f),        //make $r1 = 575 (0x23f);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000326),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x3408380c),        //lws $r2 = 224 (0xe0)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x18000437),        //call 22c90 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 21c1c <test_nonconst_local_member_arrays+0x1c6c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x000000008000012fe0087c00),        //make $r2 = 310768 (0x4bdf0);;
     _32(0x60040241),        //make $r1 = 577 (0x241);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180002fe),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x1800040c),        //call 22c90 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 21cc8 <test_nonconst_local_member_arrays+0x1d18>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x000000008000012fe0088200),        //make $r2 = 310792 (0x4be08);;
     _32(0x60040242),        //make $r1 = 578 (0x242);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180002d3),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _32(0x3000380c),        //lwz $r0 = 224 (0xe0)[$r12];;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x180003e0),        //call 22c90 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 21d78 <test_nonconst_local_member_arrays+0x1dc8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x000000008000012fe0088800),        //make $r2 = 310816 (0x4be20);;
     _32(0x60040243),        //make $r1 = 579 (0x243);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180002a7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x180003b4),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000540),        //cb.wnez $r0? 21e28 <test_nonconst_local_member_arrays+0x1e78>;;
     _32(0x60100009),        //make $r4 = 9 (0x9);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x000000008000012fe0088e00),        //make $r2 = 310840 (0x4be38);;
     _32(0x60040245),        //make $r1 = 581 (0x245);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800027b),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18000386),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000540),        //cb.wnez $r0? 21ee0 <test_nonconst_local_member_arrays+0x1f30>;;
     _32(0x60100008),        //make $r4 = 8 (0x8);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x000000008000012fe0089400),        //make $r2 = 310864 (0x4be50);;
     _32(0x60040246),        //make $r1 = 582 (0x246);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800024d),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x780cffc0),        //zxwd $r3 = $r0;;
     _96(0x000000008000014ae000c200),        //make $r0 = 338696 (0x52b08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6104080c),        //addd $r1 = $r12, 32 (0x20);;
     _32(0x690bf000),        //sxwd $r2 = $r0;;
     _32(0x6903f003),        //sxwd $r0 = $r3;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18000357),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 21f9c <test_nonconst_local_member_arrays+0x1fec>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x000000008000012fe0089a00),        //make $r2 = 310888 (0x4be68);;
     _32(0x60040247),        //make $r1 = 583 (0x247);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800021e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130e00c),        //addd $r12 = $r12, 896 (0x380);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test_const_union_member_arrays: list_I = 
 [|
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000130e0006c00),        //make $r0 = 311728 (0x4c1b0);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x1800032e),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 22040 <test_const_union_member_arrays+0x88>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x0000000080000130e0086e00),        //make $r2 = 311736 (0x4c1b8);;
     _32(0x60040258),        //make $r1 = 600 (0x258);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180001f5),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000130e0006d00),        //make $r0 = 311732 (0x4c1b4);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x1800030f),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000540),        //cb.wnez $r0? 220bc <test_const_union_member_arrays+0x104>;;
     _32(0x60100001),        //make $r4 = 1 (0x1);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x0000000080000130e0087000),        //make $r2 = 311744 (0x4c1c0);;
     _32(0x60040259),        //make $r1 = 601 (0x259);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180001d6),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000130e0006c00),        //make $r0 = 311728 (0x4c1b0);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x180002f0),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 22138 <test_const_union_member_arrays+0x180>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x0000000080000130e0087200),        //make $r2 = 311752 (0x4c1c8);;
     _32(0x6004025a),        //make $r1 = 602 (0x25a);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180001b7),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x60000031),        //make $r0 = 49 (0x31);;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x60000032),        //make $r0 = 50 (0x32);;
     _32(0x2401064c),        //sb 25 (0x19)[$r12] = $r0;;
     _32(0x60000033),        //make $r0 = 51 (0x33);;
     _32(0x2401068c),        //sb 26 (0x1a)[$r12] = $r0;;
     _32(0x60000034),        //make $r0 = 52 (0x34);;
     _32(0x240106cc),        //sb 27 (0x1b)[$r12] = $r0;;
     _32(0x60000035),        //make $r0 = 53 (0x35);;
     _32(0x2401070c),        //sb 28 (0x1c)[$r12] = $r0;;
     _32(0x60000036),        //make $r0 = 54 (0x36);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x180002c5),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 221e4 <test_const_union_member_arrays+0x22c>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x0000000080000130e0087400),        //make $r2 = 311760 (0x4c1d0);;
     _32(0x60040260),        //make $r1 = 608 (0x260);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800018c),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x180002a7),        //call 22c90 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 2225c <test_const_union_member_arrays+0x2a4>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x0000000080000130e0087600),        //make $r2 = 311768 (0x4c1d8);;
     _32(0x60040261),        //make $r1 = 609 (0x261);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800016e),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x1800028a),        //call 22c90 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 222d0 <test_const_union_member_arrays+0x318>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000130e0087800),        //make $r2 = 311776 (0x4c1e0);;
     _32(0x60040262),        //make $r1 = 610 (0x262);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000151),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130200c),        //addd $r12 = $r12, 128 (0x80);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test_nonconst_union_member_arrays: list_I = 
 [|
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000128e0001800),        //make $r0 = 303200 (0x4a060);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18000262),        //call 22c90 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 22370 <test_nonconst_union_member_arrays+0x88>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x0000000080000130e0087a00),        //make $r2 = 311784 (0x4c1e8);;
     _32(0x6004026c),        //make $r1 = 620 (0x26c);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000129),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0001900),        //make $r0 = 303204 (0x4a064);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18000243),        //call 22c90 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 223ec <test_nonconst_union_member_arrays+0x104>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x0000000080000130e0087c00),        //make $r2 = 311792 (0x4c1f0);;
     _32(0x6004026d),        //make $r1 = 621 (0x26d);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x1800010a),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000128e0001800),        //make $r0 = 303200 (0x4a060);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18000224),        //call 22c90 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 22468 <test_nonconst_union_member_arrays+0x180>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x0000000080000130e0087e00),        //make $r2 = 311800 (0x4c1f8);;
     _32(0x6004026e),        //make $r1 = 622 (0x26e);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180000eb),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x60000031),        //make $r0 = 49 (0x31);;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x60000032),        //make $r0 = 50 (0x32);;
     _32(0x2401064c),        //sb 25 (0x19)[$r12] = $r0;;
     _32(0x60000033),        //make $r0 = 51 (0x33);;
     _32(0x2401068c),        //sb 26 (0x1a)[$r12] = $r0;;
     _32(0x60000034),        //make $r0 = 52 (0x34);;
     _32(0x240106cc),        //sb 27 (0x1b)[$r12] = $r0;;
     _32(0x60000035),        //make $r0 = 53 (0x35);;
     _32(0x2401070c),        //sb 28 (0x1c)[$r12] = $r0;;
     _32(0x60000036),        //make $r0 = 54 (0x36);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x60000037),        //make $r0 = 55 (0x37);;
     _32(0x2401078c),        //sb 30 (0x1e)[$r12] = $r0;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x180001f7),        //call 22c90 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b1c0),        //compw.eq $r0 = $r0, 7 (0x7);;
     _32(0x0c000540),        //cb.wnez $r0? 2251c <test_nonconst_union_member_arrays+0x234>;;
     _32(0x60100007),        //make $r4 = 7 (0x7);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x0000000080000130e0088000),        //make $r2 = 311808 (0x4c200);;
     _32(0x60040274),        //make $r1 = 628 (0x274);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180000be),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x180001d9),        //call 22c90 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 22594 <test_nonconst_union_member_arrays+0x2ac>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x0000000080000130e0088200),        //make $r2 = 311816 (0x4c208);;
     _32(0x60040275),        //make $r1 = 629 (0x275);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x180000a0),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x180001bc),        //call 22c90 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b1c0),        //compw.eq $r0 = $r0, 7 (0x7);;
     _32(0x0c000540),        //cb.wnez $r0? 22608 <test_nonconst_union_member_arrays+0x320>;;
     _32(0x60100007),        //make $r4 = 7 (0x7);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000130e0088400),        //make $r2 = 311824 (0x4c210);;
     _32(0x60040276),        //make $r1 = 630 (0x276);;
     _96(0x000000008000012de0000c00),        //make $r0 = 308272 (0x4b430);;
     _32(0x18000083),        //call 227e8 <printf>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130200c),        //addd $r12 = $r12, 128 (0x80);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffd07d),        //call 16820 <test_const_global_arrays>;;
     _32(0x1fffd370),        //call 173f0 <test_const_local_arrays>;;
     _32(0x1fffd665),        //call 17fc8 <test_nonconst_global_arrays>;;
     _32(0x1fffdb72),        //call 19400 <test_nonconst_local_arrays>;;
     _32(0x1fffde67),        //call 19fd8 <test_const_global_member_arrays>;;
     _32(0x1fffe660),        //call 1bfc0 <test_const_local_member_arrays>;;
     _32(0x1fffee61),        //call 1dfc8 <test_nonconst_global_member_arrays>;;
     _32(0x1ffff65a),        //call 1ffb0 <test_nonconst_local_member_arrays>;;
     _32(0x1ffffe5b),        //call 21fb8 <test_const_union_member_arrays>;;
     _32(0x1fffff26),        //call 222e8 <test_nonconst_union_member_arrays>;;
     _96(0x000000008000014ae000c000),        //make $r0 = 338688 (0x52b00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800080),        //cb.deqz $r0? 2266c <main+0x4c>;;
     _32(0x18000006),        //call 22680 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x9800011b),        //call 22af8 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98002bc9),        //call 2d5b8 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let __libc_fini_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x80000108a749040ce0480000),        //make $r18 = 270336 (0x42000)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _96(0x80000108a739020ce5380012),        //sbfd $r14 = $r18, 270336 (0x42000)
     _32(0x00000000),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa3a20ce),        //srad $r14 = $r14, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x0880014e),        //cb.deqz $r14? 226e4 <__libc_fini_array+0x44>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x3802f392),        //ld.xs $r0 = $r14[$r18];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x087fff4e),        //cb.dnez $r14? 226d4 <__libc_fini_array+0x34>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_init_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x80000108a849020ce04c0000),        //make $r19 = 270336 (0x42000)
     _32(0x00000000),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x88000108a739000ce5480013),        //sbfd $r18 = $r19, 270336 (0x42000)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xfa4a20d2),        //srad $r18 = $r18, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x08800192),        //cb.deqz $r18? 2274c <__libc_init_array+0x4c>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 22738 <__libc_init_array+0x38>;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x0800000088000108e04c0000),        //make $r19 = 270336 (0x42000);;
     _96(0x0000000080000108e5480013),        //sbfd $r18 = $r19, 270336 (0x42000);;
     _32(0x7a4a20d2),        //srad $r18 = $r18, 3 (0x3);;
     _32(0x08800192),        //cb.deqz $r18? 22784 <__libc_init_array+0x84>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 22770 <__libc_init_array+0x70>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _printf_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0xe10c0c0c),        //addd $r3 = $r12, 48 (0x30)
     _32(0xea080001),        //copyd $r2 = $r1
     _32(0x28090c0c),        //sq 48 (0x30)[$r12] = $r2r3;;
     _32(0x2811100c),        //sq 64 (0x40)[$r12] = $r4r5;;
     _32(0x2819140c),        //sq 80 (0x50)[$r12] = $r6r7;;
     _32(0x2821180c),        //sq 96 (0x60)[$r12] = $r8r9;;
     _32(0x28291c0c),        //sq 112 (0x70)[$r12] = $r10r11;;
     _32(0x270d060c),        //sd 24 (0x18)[$r12] = $r3;;
     _32(0x98000157),        //call 22d28 <_vfprintf_r>
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0xe130200c),        //addd $r12 = $r12, 128 (0x80)
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let printf: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130e00c),        //addd $r12 = $r12, -128 (0xffffff80)
     _96(0x0800000088000128e03c2000),        //make $r15 = 303232 (0x4a080);;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0xe10c0a0c),        //addd $r3 = $r12, 40 (0x28)
     _32(0x28090c0c),        //sq 48 (0x30)[$r12] = $r2r3;;
     _32(0x27050a0c),        //sd 40 (0x28)[$r12] = $r1;;
     _32(0x3800000f),        //ld $r0 = 0 (0x0)[$r15];;
     _32(0x2811100c),        //sq 64 (0x40)[$r12] = $r4r5;;
     _32(0x2819140c),        //sq 80 (0x50)[$r12] = $r6r7;;
     _32(0x2821180c),        //sq 96 (0x60)[$r12] = $r8r9;;
     _32(0x28291c0c),        //sq 112 (0x70)[$r12] = $r10r11;;
     _32(0x270d060c),        //sd 24 (0x18)[$r12] = $r3;;
     _32(0x98000140),        //call 22d28 <_vfprintf_r>
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0xe130200c),        //addd $r12 = $r12, 128 (0x80)
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _init_signal_r_part_0: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040100),        //make $r1 = 256 (0x100);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98001581),        //call 27e58 <_malloc_r>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x888003c0),        //cb.deqz $r0? 22898 <_init_signal_r.part.0+0x58>
     _64(0x18000001a701460e),        //sd 1304 (0x518)[$r14] = $r0;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x0f0000c1),        //loopdo $r1, 22880 <_init_signal_r.part.0+0x40>;;
     _32(0xe1080042),        //addd $r2 = $r2, 1 (0x1)
     _32(0x270ff080),        //sd.xs $r2[$r0] = $r3;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x97fffffb),        //goto 22884 <_init_signal_r.part.0+0x44>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal_r: list_I = 
 [|
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 228bc <_init_signal_r+0x14>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffffe1)        //goto 22840 <_init_signal_r.part.0>;;
 |];

let _signal_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f80db7c1),        //compw.leu $r3 = $r1, 31 (0x1f);;
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800383),        //cb.weqz $r3? 2291c <_signal_r+0x5c>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088004c2),        //cb.deqz $r2? 22940 <_signal_r+0x80>;;
     _32(0x6907f013),        //sxwd $r1 = $r19;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x274bf042),        //sd.xs $r1[$r2] = $r18;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffffc0),        //call 22840 <_init_signal_r.part.0>;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb81),        //cb.wnez $r1? 22904 <_signal_r+0x44>;;
     _32(0x97ffffea),        //goto 228f8 <_signal_r+0x38>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x7f03f000)        //nop ;;
 |];

let _raise_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe907f012),        //sxwd $r1 = $r18
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800a82),        //cb.weqz $r2? 22a30 <_raise_r+0xd0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8004600),        //ld $r0 = 1304 (0x518)[$r0];;
     _32(0x08800440),        //cb.deqz $r0? 229dc <_raise_r+0x7c>;;
     _32(0x380ef040),        //ld.xs $r3 = $r1[$r0];;
     _32(0xe1110043),        //compd.eq $r4 = $r3, 1 (0x1)
     _32(0x6009ffc3),        //compd.ne $r2 = $r3, -1 (0xffffffff);;
     _32(0x08800343),        //cb.deqz $r3? 229dc <_raise_r+0x7c>;;
     _32(0x08000144),        //cb.dnez $r4? 229c0 <_raise_r+0x60>;;
     _32(0x08800582),        //cb.deqz $r2? 22a08 <_raise_r+0xa8>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x274ff040),        //sd.xs $r1[$r0] = $r19;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x980000ab),        //call 22c88 <_getpid_r>
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0xfa080012),        //copyw $r2 = $r18
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000007f),        //goto 22c00 <_kill_r>;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _32(0x604c0001),        //make $r19 = 1 (0x1);;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _64(0x083fffffe04cffc0),        //make $r19 = 4294967295 (0xffffffff);;
     _32(0x97ffffe1),        //goto 229c0 <_raise_r+0x60>
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sigtramp_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x8c800802),        //cb.weqz $r2? 22ae8 <__sigtramp_r+0xa0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088005c2),        //cb.deqz $r2? 22ad4 <__sigtramp_r+0x8c>;;
     _32(0xe90ff012),        //sxwd $r3 = $r18
     _32(0xf4118092),        //addx8wd $r4 = $r18, $r2
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x380af0c2),        //ld.xs $r2 = $r3[$r2];;
     _32(0x6105ffc2),        //compd.eq $r1 = $r2, -1 (0xffffffff);;
     _32(0x088002c2),        //cb.deqz $r2? 22abc <__sigtramp_r+0x74>;;
     _32(0x88000281),        //cb.dnez $r1? 22abc <__sigtramp_r+0x74>
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0xe1050042),        //compd.eq $r1 = $r2, 1 (0x1)
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x08000181),        //cb.dnez $r1? 22abc <__sigtramp_r+0x74>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x7a000012),        //copyw $r0 = $r18;;
     _32(0x8fdc0002),        //icall $r2
     _32(0x27050004),        //sd 0 (0x0)[$r4] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffff5b),        //call 22840 <_init_signal_r.part.0>;;
     _32(0x0c000100),        //cb.wnez $r0? 22ae8 <__sigtramp_r+0xa0>;;
     _32(0x97ffffe8),        //goto 22a7c <__sigtramp_r+0x34>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x97fffff5),        //goto 22abc <__sigtramp_r+0x74>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let raise: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000128e0082000),        //make $r2 = 303232 (0x4a080);;
     _32(0x97ffff96),        //goto 22960 <_raise_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let signal: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e00c2000),        //make $r3 = 303232 (0x4a080);;
     _32(0xea380001),        //copyd $r14 = $r1
     _64(0xa739000cf809b7c0),        //compw.leu $r2 = $r0, 31 (0x1f)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf848ffc0),        //zxwd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x8c800382),        //cb.weqz $r2? 22b78 <signal+0x68>
     _32(0x384c0003),        //ld $r19 = 0 (0x0)[$r3];;
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x088004c2),        //cb.deqz $r2? 22b9c <signal+0x8c>;;
     _32(0x6907f012),        //sxwd $r1 = $r18;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x273bf042),        //sd.xs $r1[$r2] = $r14;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffff29),        //call 22840 <_init_signal_r.part.0>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb41),        //cb.wnez $r1? 22b60 <signal+0x50>;;
     _32(0x97ffffe9),        //goto 22b54 <signal+0x44>
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal: list_I = 
 [|
     _96(0x0000000080000128e0002000),        //make $r0 = 303232 (0x4a080);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 22be4 <_init_signal+0x24>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffff17)        //goto 22840 <_init_signal_r.part.0>;;
 |];

let __sigtramp: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000128e0082000),        //make $r2 = 303232 (0x4a080);;
     _32(0x97ffff94),        //goto 22a48 <__sigtramp_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let _kill_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xfa040002),        //copyw $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000003),        //copyw $r0 = $r3
     _96(0x8800014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98002b63),        //call 2d9c0 <_kill>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 22c60 <_kill_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 22c48 <_kill_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _getpid_r: list_I = 
 [|
     _32(0x10002b5a),        //goto 2d9f0 <_getpid>;;
     _32(0x00000000)        //errop ;;
 |];

let strlen: list_I = 
 [|
     _32(0x680401c0),        //andd $r1 = $r0, 7 (0x7);;
     _32(0x08800281),        //cb.deqz $r1? 22cbc <strlen+0x2c>;;
     _32(0x90000005),        //goto 22cac <strlen+0x1c>
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x61040041),        //addd $r1 = $r1, 1 (0x1);;
     _32(0x680801c1),        //andd $r2 = $r1, 7 (0x7);;
     _32(0x08800182),        //cb.deqz $r2? 22cc0 <strlen+0x30>;;
     _32(0x24080001),        //lbs $r2 = 0 (0x0)[$r1];;
     _32(0x0c7fff02),        //cb.wnez $r2? 22ca0 <strlen+0x10>;;
     _32(0x8fd00000),        //ret 
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x38080001),        //ld $r2 = 0 (0x0)[$r1];;
     _96(0x07f7f7f787bfbfbfe10cbfc2),        //addd $r3 = $r2, 18374403900871474943 (0xfefefefefefefeff);;
     _32(0x7e0900c2),        //andnd $r2 = $r2, $r3;;
     _96(0x0404040480202020e8082002),        //andd $r2 = $r2, 9259542123273814144 (0x8080808080808080);;
     _32(0x08000342),        //cb.dnez $r2? 22d14 <strlen+0x84>;;
     _32(0xe1040201),        //addd $r1 = $r1, 8 (0x8)
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _96(0x07f7f7f787bfbfbfe10cbfc2),        //addd $r3 = $r2, 18374403900871474943 (0xfefefefefefefeff);;
     _32(0x7e0900c2),        //andnd $r2 = $r2, $r3;;
     _96(0x0404040480202020e8082002),        //andd $r2 = $r2, 9259542123273814144 (0x8080808080808080);;
     _32(0x08fffdc2),        //cb.deqz $r2? 22ce4 <strlen+0x54>;;
     _32(0x10000002),        //goto 22d14 <strlen+0x84>;;
     _32(0x61040041),        //addd $r1 = $r1, 1 (0x1);;
     _32(0x24080001),        //lbs $r2 = 0 (0x0)[$r1];;
     _32(0x0c7fff82),        //cb.wnez $r2? 22d10 <strlen+0x80>;;
     _32(0x8fd00000),        //ret 
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x00000000)        //errop ;;
 |];

let _vfprintf_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _64(0x07ffffffe130700c),        //addd $r12 = $r12, -576 (0xfffffffffffffdc0);;
     _32(0xea780000),        //copyd $r30 = $r0
     _32(0xea7c0001),        //copyd $r31 = $r1
     _32(0x28751a0c),        //so 104 (0x68)[$r12] = $r28r29r30r31;;
     _32(0xea580003),        //copyd $r22 = $r3
     _32(0x28550a0c),        //so 40 (0x28)[$r12] = $r20r21r22r23;;
     _32(0xea6c0002),        //copyd $r27 = $r2
     _32(0x2865120c),        //so 72 (0x48)[$r12] = $r24r25r26r27;;
     _32(0x2741220c),        //sd 136 (0x88)[$r12] = $r16;;
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x980012c0),        //call 27858 <_localeconv_r>
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x9fffffcb),        //call 22c90 <strlen>
     _32(0x27013c0c),        //sd 240 (0xf0)[$r12] = $r0;;
     _32(0x8880011e),        //cb.deqz $r30? 22d7c <_vfprintf_r+0x54>
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x3000141e),        //lwz $r0 = 80 (0x50)[$r30];;
     _32(0x0c806a40),        //cb.weqz $r0? 2341c <_vfprintf_r+0x6f4>;;
     _32(0x3008421f),        //lwz $r2 = 264 (0x108)[$r31];;
     _32(0x2804041f),        //lhz $r1 = 16 (0x10)[$r31];;
     _32(0x8b000142),        //cb.odd $r2? 22d98 <_vfprintf_r+0x70>
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _64(0x00000000f8088000),        //andw $r2 = $r0, 512 (0x200);;
     _32(0x0c812cc2),        //cb.weqz $r2? 24060 <_vfprintf_r+0x1338>;;
     _64(0x00000008f8080000),        //andw $r2 = $r0, 8192 (0x2000);;
     _32(0x0c000242),        //cb.wnez $r2? 22dc4 <_vfprintf_r+0x9c>;;
     _64(0xb008421fea000001),        //ord $r0 = $r1, 8192 (0x2000)
     _32(0x00000008),        //lwz $r2 = 264 (0x108)[$r31];;
     _32(0xe403f000),        //zxhd $r0 = $r0
     _32(0x2501041f),        //sh 16 (0x10)[$r31] = $r0;;
     _64(0x07fffff7f804ffc2),        //andw $r1 = $r2, -8193 (0xffffffffffffdfff);;
     _32(0x2605421f),        //sw 264 (0x108)[$r31] = $r1;;
     _32(0x78040200),        //andw $r1 = $r0, 8 (0x8);;
     _32(0x0c803141),        //cb.weqz $r1? 230dc <_vfprintf_r+0x3b4>;;
     _32(0x3804061f),        //ld $r1 = 24 (0x18)[$r31];;
     _32(0x088030c1),        //cb.deqz $r1? 230dc <_vfprintf_r+0x3b4>;;
     _32(0x68040680),        //andd $r1 = $r0, 26 (0x1a);;
     _64(0x00000000f005b281),        //compw.ne $r1 = $r1, 10 (0xa);;
     _32(0x0c803201),        //cb.weqz $r1? 23100 <_vfprintf_r+0x3d8>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe154700c),        //addd $r21 = $r12, 448 (0x1c0)
     _96(0x1800000098000131e04c3c00),        //make $r19 = 312560 (0x4c4f0);;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x2705380c),        //sd 224 (0xe0)[$r12] = $r1;;
     _32(0x2705260c),        //sd 152 (0x98)[$r12] = $r1;;
     _32(0x27052e0c),        //sd 184 (0xb8)[$r12] = $r1;;
     _32(0x2755500c),        //sd 320 (0x140)[$r12] = $r21;;
     _32(0x2701540c),        //sd 336 (0x150)[$r12] = $r0;;
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x2701400c),        //sd 256 (0x100)[$r12] = $r0;;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0xea38001b),        //copyd $r14 = $r27
     _32(0x2014001b),        //lbz $r5 = 0 (0x0)[$r27];;
     _32(0x68037005),        //sxbd $r0 = $r5;;
     _64(0xf001b140f005b000),        //compw.ne $r1 = $r0, 0 (0x0)
     _64(0x0800000180000000),        //compw.ne $r0 = $r0, 37 (0x25);;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x0c800780),        //cb.weqz $r0? 22ec8 <_vfprintf_r+0x1a0>;;
     _32(0xea48000e),        //copyd $r18 = $r14
     _32(0x6138004e),        //addd $r14 = $r14, 1 (0x1);;
     _32(0x2014000e),        //lbz $r5 = 0 (0x0)[$r14];;
     _32(0x680f7005),        //sxbd $r3 = $r5;;
     _64(0xf00db143f011b003),        //compw.ne $r4 = $r3, 0 (0x0)
     _64(0x0800000180000000),        //compw.ne $r3 = $r3, 37 (0x25);;
     _32(0x780d10c4),        //andw $r3 = $r4, $r3;;
     _32(0x0c7ffdc3),        //cb.wnez $r3? 22e54 <_vfprintf_r+0x12c>;;
     _32(0x7551139b),        //sbfw $r20 = $r27, $r14;;
     _32(0x6907f014),        //sxwd $r1 = $r20;;
     _32(0x08800454),        //cb.deqz $r20? 22ec8 <_vfprintf_r+0x1a0>;;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0x3808540c),        //ld $r2 = 336 (0x150)[$r12];;
     _32(0x2705fe07),        //sd -8 (0xfffffff8)[$r7] = $r1;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x276dfc07),        //sd -16 (0xfffffff0)[$r7] = $r27;;
     _32(0xf1050042),        //addd $r1 = $r2, $r1
     _64(0xa601520cf509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x2705540c),        //sd 336 (0x150)[$r12] = $r1;;
     _32(0x0c002882),        //cb.wnez $r2? 2313c <_vfprintf_r+0x414>;;
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x20140052),        //lbz $r5 = 1 (0x1)[$r18];;
     _32(0x71011500),        //addw $r0 = $r0, $r20;;
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0x088169c5),        //cb.deqz $r5? 24564 <_vfprintf_r+0x183c>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe16c004e),        //addd $r27 = $r14, 1 (0x1)
     _64(0xa428004ee070ffc0),        //make $r28 = 4294967295 (0xffffffff)
     _32(0x103fffff),        //lbs $r10 = 1 (0x1)[$r14];;
     _32(0xe0480000),        //make $r18 = 0 (0x0)
     _32(0xe0640000),        //make $r25 = 0 (0x0)
     _32(0xe050002b),        //make $r20 = 43 (0x2b)
     _32(0x2401440c),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0x60680020),        //make $r26 = 32 (0x20);;
     _32(0xe16c005b),        //addd $r27 = $r27, 1 (0x1)
     _32(0x7860ffca),        //zxwd $r24 = $r10;;
     _32(0x7108f818),        //addw $r2 = $r24, -32 (0xffffffe0);;
     _64(0x00000002f901b682),        //compw.gtu $r0 = $r2, 90 (0x5a);;
     _32(0x0c0005c0),        //cb.wnez $r0? 22f64 <_vfprintf_r+0x23c>;;
     _32(0xf808ffc2),        //zxwd $r2 = $r2
     _96(0x0800000088000130e0008600),        //make $r0 = 311832 (0x4c218);;
     _32(0x3802f080),        //ld.xs $r0 = $r2[$r0];;
     _32(0x0fd80000),        //igoto $r0;;
     _32(0xe0480000),        //make $r18 = 0 (0x0)
     _32(0x7100f418),        //addw $r0 = $r24, -48 (0xffffffd0);;
     _32(0xf2495492),        //addx4w $r18 = $r18, $r18
     _32(0xe16c005b),        //addd $r27 = $r27, 1 (0x1)
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0x70495012),        //addx2w $r18 = $r18, $r0;;
     _32(0x7848ffd2),        //zxwd $r18 = $r18;;
     _32(0xf100f40a),        //addw $r0 = $r10, -48 (0xffffffd0)
     _32(0x7860ffca),        //zxwd $r24 = $r10;;
     _64(0x00000000f805b240),        //compw.leu $r1 = $r0, 9 (0x9);;
     _32(0x0c7ffdc1),        //cb.wnez $r1? 22f2c <_vfprintf_r+0x204>;;
     _32(0x7108f818),        //addw $r2 = $r24, -32 (0xffffffe0);;
     _64(0x00000002f901b682),        //compw.gtu $r0 = $r2, 90 (0x5a);;
     _32(0x0cfffac0),        //cb.weqz $r0? 22f0c <_vfprintf_r+0x1e4>;;
     _32(0x08816018),        //cb.deqz $r24? 24564 <_vfprintf_r+0x183c>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0380001),        //make $r14 = 1 (0x1)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0x2461560c),        //sb 344 (0x158)[$r12] = $r24;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0xe0500001),        //make $r20 = 1 (0x1)
     _32(0x2401440c),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0xe174560c),        //addd $r29 = $r12, 344 (0x158)
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0xe8042119),        //andd $r1 = $r25, 132 (0x84)
     _32(0xf8000099),        //andw $r0 = $r25, 2 (0x2)
     _32(0xf110008e),        //addw $r4 = $r14, 2 (0x2)
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xf83a0100),        //cmoved.wnez $r0? $r14 = $r4
     _32(0xf85c2119),        //andw $r23 = $r25, 132 (0x84)
     _32(0x7880ffc0),        //zxwd $r32 = $r0;;
     _32(0x08000101),        //cb.dnez $r1? 22fc8 <_vfprintf_r+0x2a0>;;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x7511148e),        //sbfw $r4 = $r14, $r18;;
     _32(0x0e802840),        //cb.wgtz $r0? 23248 <_vfprintf_r+0x520>;;
     _32(0x08800382),        //cb.deqz $r2? 23000 <_vfprintf_r+0x2d8>;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xe108440c),        //addd $r2 = $r12, 272 (0x110)
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27050207),        //sd 8 (0x8)[$r7] = $r1;;
     _32(0x2709fc07),        //sd -16 (0xfffffff0)[$r7] = $r2;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa601520cf505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c003341),        //cb.wnez $r1? 23330 <_vfprintf_r+0x608>;;
     _32(0x088003a0),        //cb.deqz $r32? 23038 <_vfprintf_r+0x310>;;
     _32(0xe0040002),        //make $r1 = 2 (0x2)
     _32(0xe108460c),        //addd $r2 = $r12, 280 (0x118)
     _32(0xe10c0083),        //addd $r3 = $r3, 2 (0x2)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27050207),        //sd 8 (0x8)[$r7] = $r1;;
     _32(0x2709fc07),        //sd -16 (0xfffffff0)[$r7] = $r2;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa601520cf505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c00cb81),        //cb.wnez $r1? 23cec <_vfprintf_r+0xfc4>;;
     _64(0x00000004f05db017),        //compw.ne $r23 = $r23, 128 (0x80);;
     _32(0x0c809ad7),        //cb.weqz $r23? 239ec <_vfprintf_r+0xcc4>;;
     _32(0xf5011714),        //sbfw $r0 = $r20, $r28
     _32(0x75711714),        //sbfw $r28 = $r20, $r28;;
     _32(0x0e80a880),        //cb.wgtz $r0? 23ad4 <_vfprintf_r+0xdac>;;
     _32(0x78004019),        //andw $r0 = $r25, 256 (0x100);;
     _32(0x0c008700),        //cb.wnez $r0? 238c4 <_vfprintf_r+0xb9c>;;
     _32(0xe953f014),        //sxwd $r20 = $r20
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0xf10d0503),        //addd $r3 = $r3, $r20
     _32(0x27750007),        //sd 0 (0x0)[$r7] = $r29;;
     _32(0x27510207),        //sd 8 (0x8)[$r7] = $r20;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa601520cf505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c003601),        //cb.wnez $r1? 233e0 <_vfprintf_r+0x6b8>;;
     _32(0x611c0407),        //addd $r7 = $r7, 16 (0x10);;
     _32(0x782c0119),        //andw $r11 = $r25, 4 (0x4);;
     _32(0x0c80010b),        //cb.weqz $r11? 2309c <_vfprintf_r+0x374>;;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x7551148e),        //sbfw $r20 = $r14, $r18;;
     _32(0x0e80c740),        //cb.wgtz $r0? 23d0c <_vfprintf_r+0xfe4>;;
     _32(0xf3391392),        //maxw $r14 = $r18, $r14
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x7101100e),        //addw $r0 = $r14, $r0;;
     _32(0x88000b03),        //cb.dnez $r3? 23158 <_vfprintf_r+0x430>
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x6a04001a),        //copyd $r1 = $r26;;
     _32(0x8880011a),        //cb.deqz $r26? 230c8 <_vfprintf_r+0x3a0>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x98001098),        //call 27320 <_free_r>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x97ffff5a),        //goto 22e30 <_vfprintf_r+0x108>
     _32(0x6a1c0015),        //copyd $r7 = $r21;;
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0x97ffff88),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x7a640419),        //orw $r25 = $r25, 16 (0x10);;
     _32(0x98000895),        //call 25330 <__swsetup_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c01de40),        //cb.wnez $r0? 24ecc <_vfprintf_r+0x21a4>;;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x68040680),        //andd $r1 = $r0, 26 (0x1a);;
     _64(0x00000000f005b281),        //compw.ne $r1 = $r1, 10 (0xa);;
     _32(0x0c7fce81),        //cb.wnez $r1? 22de4 <_vfprintf_r+0xbc>;;
     _32(0x2c04049f),        //lhs $r1 = 18 (0x12)[$r31];;
     _32(0x0d7fce01),        //cb.wltz $r1? 22de4 <_vfprintf_r+0xbc>;;
     _32(0x3004421f),        //lwz $r1 = 264 (0x108)[$r31];;
     _32(0x0b000101),        //cb.odd $r1? 2311c <_vfprintf_r+0x3f4>;;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c818200),        //cb.weqz $r0? 24938 <_vfprintf_r+0x1c10>;;
     _32(0x98000841),        //call 25220 <__sbprintf>
     _32(0xea0c0016),        //copyd $r3 = $r22
     _32(0xea08001b),        //copyd $r2 = $r27
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x90000017),        //goto 23190 <_vfprintf_r+0x468>
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0x98001cdf),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c000300),        //cb.wnez $r0? 2317c <_vfprintf_r+0x454>;;
     _32(0x97ffff5a),        //goto 22eb8 <_vfprintf_r+0x190>
     _32(0x6a1c0015),        //copyd $r7 = $r21;;
     _32(0x98001cd8),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0cfff480),        //cb.weqz $r0? 230b0 <_vfprintf_r+0x388>;;
     _32(0x0880011a),        //cb.deqz $r26? 2317c <_vfprintf_r+0x454>;;
     _32(0x9800106c),        //call 27320 <_free_r>
     _32(0xea04001a),        //copyd $r1 = $r26
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x3004421f),        //lwz $r1 = 264 (0x108)[$r31];;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x0b8027c1),        //cb.even $r1? 23400 <_vfprintf_r+0x6d8>;;
     _32(0x78001000),        //andw $r0 = $r0, 64 (0x40);;
     _32(0x0c01d600),        //cb.wnez $r0? 24eec <_vfprintf_r+0x21c4>;;
     _32(0x3840220c),        //ld $r16 = 136 (0x88)[$r12];;
     _32(0x3000240c),        //lwz $r0 = 144 (0x90)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x3c540a0c),        //lo $r20r21r22r23 = 40 (0x28)[$r12];;
     _32(0x3c64120c),        //lo $r24r25r26r27 = 72 (0x48)[$r12];;
     _32(0x8fd00000),        //ret 
     _64(0xbc741a0ce130900c),        //addd $r12 = $r12, 576 (0x240)
     _32(0x00000000),        //lo $r28r29r30r31 = 104 (0x68)[$r12];;
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _96(0x8fffffffb8080016e000ffc0),        //make $r0 = 9218868437227405311 (0x7fefffffffffffff)
     _32(0x0bff7fff),        //ld $r2 = 0 (0x0)[$r22];;
     _32(0x2709380c),        //sd 224 (0xe0)[$r12] = $r2;;
     _32(0x71072002),        //fabsd $r1 = $r2;;
     _32(0x7d030040),        //fcompd.uge $r0 = $r0, $r1;;
     _32(0x0800f680),        //cb.dnez $r0? 24144 <_vfprintf_r+0x141c>;;
     _64(0x00000000fc030002),        //fcompd.olt $r0 = $r2, 0 (0x0);;
     _32(0x08019180),        //cb.dnez $r0? 24b00 <_vfprintf_r+0x1dd8>;;
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _64(0xe0047e00f401b1d8),        //compw.le $r0 = $r24, 71 (0x47)
     _96(0x8800013480000002e0748000),        //make $r1 = 315896 (0x4d1f8)
     _96(0x100000009000013488000000),        //make $r29 = 315904 (0x4d200);;
     _32(0xf8760040),        //cmoved.wnez $r0? $r29 = $r1
     _32(0xe0380003),        //make $r14 = 3 (0x3)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _64(0x183fffffe864dfd9),        //andd $r25 = $r25, 4294967167 (0xffffff7f);;
     _32(0x60500003),        //make $r20 = 3 (0x3);;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x60700000),        //make $r28 = 0 (0x0);;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x88ffd642),        //cb.deqz $r2? 22f9c <_vfprintf_r+0x274>
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x97ffff57),        //goto 22f9c <_vfprintf_r+0x274>
     _32(0x7138004e),        //addw $r14 = $r14, 1 (0x1);;
     _32(0xe0440010),        //make $r17 = 16 (0x10)
     _64(0xe0184000f405b400),        //compw.le $r1 = $r0, 16 (0x10)
     _96(0x9000013188000000b000520c),        //make $r6 = 312576 (0x4c500)
     _32(0x10000000),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0x0c8001c1),        //cb.weqz $r1? 23280 <_vfprintf_r+0x558>;;
     _32(0x10000025),        //goto 232fc <_vfprintf_r+0x5d4>;;
     _32(0x7108fc04),        //addw $r2 = $r4, -16 (0xfffffff0);;
     _32(0xf810ffc2),        //zxwd $r4 = $r2
     _64(0x08000000f505b402),        //compw.gt $r1 = $r2, 16 (0x10);;
     _32(0x0c800801),        //cb.weqz $r1? 232fc <_vfprintf_r+0x5d4>;;
     _32(0xf1080040),        //addw $r2 = $r0, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27190007),        //sd 0 (0x0)[$r7] = $r6;;
     _32(0xf800ffc2),        //zxwd $r0 = $r2
     _64(0xa745fe07f505b1c2),        //compw.gt $r1 = $r2, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r17;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc81),        //cb.weqz $r1? 2326c <_vfprintf_r+0x544>
     _32(0x2609520c),        //sw 328 (0x148)[$r12] = $r2;;
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x27192c0c),        //sd 176 (0xb0)[$r12] = $r6;;
     _32(0x27112a0c),        //sd 168 (0xa8)[$r12] = $r4;;
     _32(0x98001c7e),        //call 2a4b8 <__sprint_r>
     _32(0x2781280c),        //sd 160 (0xa0)[$r12] = $r32;;
     _32(0x0c7fea40),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0xe0440010),        //make $r17 = 16 (0x10)
     _32(0x38102a0c),        //ld $r4 = 168 (0xa8)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0xf108fc04),        //addw $r2 = $r4, -16 (0xfffffff0)
     _32(0x38182c0c),        //ld $r6 = 176 (0xb0)[$r12];;
     _32(0xf810ffc2),        //zxwd $r4 = $r2
     _64(0xb880280cf505b402),        //compw.gt $r1 = $r2, 16 (0x10)
     _32(0x08000000),        //ld $r32 = 160 (0xa0)[$r12];;
     _32(0x0c7ff881),        //cb.wnez $r1? 23280 <_vfprintf_r+0x558>;;
     _32(0xe90bf004),        //sxwd $r2 = $r4
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27190007),        //sd 0 (0x0)[$r7] = $r6;;
     _32(0xf10d0083),        //addd $r3 = $r3, $r2
     _64(0xa709fe07f505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r2;;
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x8c010f81),        //cb.wnez $r1? 24418 <_vfprintf_r+0x16f0>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x97ffff28),        //goto 22fc8 <_vfprintf_r+0x2a0>
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0x98001c62),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x2781280c),        //sd 160 (0xa0)[$r12] = $r32;;
     _32(0x0c7fe280),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffff2c),        //goto 23000 <_vfprintf_r+0x2d8>
     _32(0x3880280c),        //ld $r32 = 160 (0xa0)[$r12];;
     _32(0x0bffd319),        //cb.even $r25? 23088 <_vfprintf_r+0x360>;;
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x38083c0c),        //ld $r2 = 240 (0xf0)[$r12];;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0xf10d00c0),        //addd $r3 = $r0, $r3
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x27090007),        //sd 0 (0x0)[$r7] = $r2;;
     _64(0xa70d540cf509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x00000000),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c819ec2),        //cb.weqz $r2? 24d78 <_vfprintf_r+0x2050>;;
     _32(0x98001c4a),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7fdcc0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0d01a980),        //cb.wltz $r0? 24e4c <_vfprintf_r+0x2124>;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x3400260c),        //lws $r0 = 152 (0x98)[$r12];;
     _32(0x27750007),        //sd 0 (0x0)[$r7] = $r29;;
     _32(0xf10d0003),        //addd $r3 = $r3, $r0
     _64(0xa7010207f509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x08000000),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x8cffcac2),        //cb.weqz $r2? 23084 <_vfprintf_r+0x35c>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x98001c36),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7fd7c0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97ffff25),        //goto 23088 <_vfprintf_r+0x360>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _64(0x00000000f8048000),        //andw $r1 = $r0, 512 (0x200);;
     _32(0x0c7fd801),        //cb.wnez $r1? 23188 <_vfprintf_r+0x460>;;
     _32(0x980011eb),        //call 27bb8 <__libc_lock_release>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x97ffff5d),        //goto 23188 <_vfprintf_r+0x460>
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x98000eab),        //call 26ec8 <__sinit>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x17fffe56),        //goto 22d7c <_vfprintf_r+0x54>;;
     _32(0x7a640419),        //orw $r25 = $r25, 16 (0x10);;
     _32(0xf8000819),        //andw $r0 = $r25, 32 (0x20)
     _32(0x61040216),        //addd $r1 = $r22, 8 (0x8);;
     _32(0x0c001100),        //cb.wnez $r0? 23544 <_vfprintf_r+0x81c>;;
     _32(0x78000419),        //andw $r0 = $r25, 16 (0x10);;
     _32(0x0c001080),        //cb.wnez $r0? 23544 <_vfprintf_r+0x81c>;;
     _32(0x78001019),        //andw $r0 = $r25, 64 (0x40);;
     _32(0x0c812400),        //cb.weqz $r0? 24684 <_vfprintf_r+0x195c>;;
     _32(0x2c080016),        //lhs $r2 = 0 (0x0)[$r22];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x09001000),        //cb.dltz $r0? 23550 <_vfprintf_r+0x828>;;
     _32(0xea5c0019),        //copyd $r23 = $r25
     _32(0xea580001),        //copyd $r22 = $r1
     _32(0xe00d0002),        //compd.ne $r3 = $r2, 0 (0x0)
     _64(0x1ffffffff001b7dc),        //compw.ne $r0 = $r28, 4294967295 (0xffffffff);;
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xe1746f0c),        //addd $r29 = $r12, 444 (0x1bc)
     _64(0x103fffffe864dfd9),        //andd $r25 = $r25, 4294967167 (0xffffff7f);;
     _32(0x0c801540),        //cb.weqz $r0? 235cc <_vfprintf_r+0x8a4>;;
     _64(0x00000000f001b01c),        //compw.ne $r0 = $r28, 0 (0x0);;
     _32(0x7a0110c0),        //orw $r0 = $r0, $r3;;
     _32(0x0c001400),        //cb.wnez $r0? 235c8 <_vfprintf_r+0x8a0>;;
     _32(0x90000057),        //goto 235e8 <_vfprintf_r+0x8c0>
     _32(0x60700000),        //make $r28 = 0 (0x0);;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _32(0xe0380001),        //make $r14 = 1 (0x1)
     _32(0x30000016),        //lwz $r0 = 0 (0x0)[$r22];;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0x2405440c),        //sb 272 (0x110)[$r12] = $r1;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0500001),        //make $r20 = 1 (0x1)
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0x2401560c),        //sb 344 (0x158)[$r12] = $r0;;
     _32(0xe174560c),        //addd $r29 = $r12, 344 (0x158)
     _32(0x2705300c),        //sd 192 (0xc0)[$r12] = $r1;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x97fffeb3),        //goto 22f9c <_vfprintf_r+0x274>
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0xe90bf01c),        //sxwd $r2 = $r28
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _32(0x38740016),        //ld $r29 = 0 (0x0)[$r22];;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _64(0xa401440cf101b7dc),        //compw.eq $r0 = $r28, 4294967295 (0xffffffff)
     _32(0x0fffffff),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0x0880e79d),        //cb.deqz $r29? 24370 <_vfprintf_r+0x1648>;;
     _32(0x8c0107c0),        //cb.wnez $r0? 24578 <_vfprintf_r+0x1850>
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0x980014dd),        //call 28878 <memchr>
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x88819180),        //cb.deqz $r0? 24e24 <_vfprintf_r+0x20fc>
     _32(0xea680000),        //copyd $r26 = $r0
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _32(0xf551101d),        //sbfw $r20 = $r29, $r0
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0xf3380014),        //maxw $r14 = $r20, 0 (0x0)
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x08ffa602),        //cb.deqz $r2? 22f9c <_vfprintf_r+0x274>;;
     _32(0x17ffff40),        //goto 23240 <_vfprintf_r+0x518>;;
     _32(0x38000016),        //ld $r0 = 0 (0x0)[$r22];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x09fff080),        //cb.dgez $r0? 23454 <_vfprintf_r+0x72c>;;
     _32(0xe000002d),        //make $r0 = 45 (0x2d)
     _32(0xea580001),        //copyd $r22 = $r1
     _32(0xe5080002),        //negd $r2 = $r2
     _32(0x6a5c0019),        //copyd $r23 = $r25;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _64(0xa401440cf101b7dc),        //compw.eq $r0 = $r28, 4294967295 (0xffffffff)
     _32(0x0fffffff),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0x0c800dc0),        //cb.weqz $r0? 2364c <_vfprintf_r+0x924>;;
     _32(0xe1506f0c),        //addd $r20 = $r12, 444 (0x1bc)
     _64(0xf105b081f101b041),        //compw.eq $r0 = $r1, 1 (0x1)
     _64(0x1000000088000000),        //compw.eq $r1 = $r1, 2 (0x2);;
     _32(0x6a740014),        //copyd $r29 = $r20;;
     _32(0x0c000400),        //cb.wnez $r0? 235cc <_vfprintf_r+0x8a4>;;
     _32(0x0c0061c1),        //cb.wnez $r1? 23bac <_vfprintf_r+0xe84>;;
     _32(0xe80001c2),        //andd $r0 = $r2, 7 (0x7)
     _32(0xfb0a20c2),        //srld $r2 = $r2, 3 (0x3)
     _32(0xea04001d),        //copyd $r1 = $r29
     _32(0x6174ffdd),        //addd $r29 = $r29, -1 (0xffffffff);;
     _32(0x61000c00),        //addd $r0 = $r0, 48 (0x30);;
     _32(0x887ffec2),        //cb.dnez $r2? 23594 <_vfprintf_r+0x86c>
     _32(0x2401001d),        //sb 0 (0x0)[$r29] = $r0;;
     _32(0x60010c00),        //compd.ne $r0 = $r0, 48 (0x30);;
     _32(0x780115c0),        //andw $r0 = $r0, $r23;;
     _32(0x0c00b4c0),        //cb.wnez $r0? 24104 <_vfprintf_r+0x13dc>;;
     _32(0x9000000b),        //goto 235e8 <_vfprintf_r+0x8c0>
     _32(0xf551151d),        //sbfw $r20 = $r29, $r20
     _32(0x6a640017),        //copyd $r25 = $r23;;
     _32(0x6a5c0019),        //copyd $r23 = $r25;;
     _32(0xe8010242),        //compd.leu $r0 = $r2, 9 (0x9)
     _32(0xea640017),        //copyd $r25 = $r23
     _32(0xe0500001),        //make $r20 = 1 (0x1)
     _32(0x61746ecc),        //addd $r29 = $r12, 443 (0x1bb);;
     _32(0x0880e980),        //cb.deqz $r0? 24474 <_vfprintf_r+0x174c>;;
     _32(0x71080c02),        //addw $r2 = $r2, 48 (0x30);;
     _32(0x24096ecc),        //sb 443 (0x1bb)[$r12] = $r2;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xf339151c),        //maxw $r14 = $r28, $r20
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x08ff9982),        //cb.deqz $r2? 22f9c <_vfprintf_r+0x274>;;
     _32(0x17ffff0e),        //goto 23240 <_vfprintf_r+0x518>;;
     _32(0x7a640419),        //orw $r25 = $r25, 16 (0x10);;
     _32(0xf8000819),        //andw $r0 = $r25, 32 (0x20)
     _32(0x61040216),        //addd $r1 = $r22, 8 (0x8);;
     _32(0x0c0000c0),        //cb.wnez $r0? 23624 <_vfprintf_r+0x8fc>;;
     _32(0x78000419),        //andw $r0 = $r25, 16 (0x10);;
     _32(0x0c80b000),        //cb.weqz $r0? 24120 <_vfprintf_r+0x13f8>;;
     _32(0x38080016),        //ld $r2 = 0 (0x0)[$r22];;
     _32(0xea580001),        //copyd $r22 = $r1
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _64(0x103ffffee85cffd9),        //andd $r23 = $r25, 4294966271 (0xfffffbff);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0xa401440cf101b7dc),        //compw.eq $r0 = $r28, 4294967295 (0xffffffff)
     _32(0x07ffffff),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0x0c7ff2c0),        //cb.wnez $r0? 23574 <_vfprintf_r+0x84c>;;
     _32(0xe00d0002),        //compd.ne $r3 = $r2, 0 (0x0)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _64(0xe864dfd7f001b01c),        //compw.ne $r0 = $r28, 0 (0x0)
     _64(0x183fffff90000000),        //andd $r25 = $r23, 4294967167 (0xffffff7f);;
     _32(0xfa0110c0),        //orw $r0 = $r0, $r3
     _32(0x61746f0c),        //addd $r29 = $r12, 444 (0x1bc);;
     _32(0x0c00da40),        //cb.wnez $r0? 24410 <_vfprintf_r+0x16e8>;;
     _32(0x887ff781),        //cb.dnez $r1? 235e8 <_vfprintf_r+0x8c0>
     _32(0x60700000),        //make $r28 = 0 (0x0);;
     _32(0x8bfff717),        //cb.even $r23? 235e8 <_vfprintf_r+0x8c0>
     _32(0x68500057),        //andd $r20 = $r23, 1 (0x1);;
     _32(0xe0000030),        //make $r0 = 48 (0x30)
     _32(0x61746ecc),        //addd $r29 = $r12, 443 (0x1bb);;
     _32(0x97ffffd8),        //goto 235e8 <_vfprintf_r+0x8c0>
     _32(0x24016ecc),        //sb 443 (0x1bb)[$r12] = $r0;;
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _64(0x00000003f001b20a),        //compw.ne $r0 = $r10, 104 (0x68);;
     _32(0x0c80c1c0),        //cb.weqz $r0? 242b8 <_vfprintf_r+0x1590>;;
     _32(0x97fffe15),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x7a641019),        //orw $r25 = $r25, 64 (0x40);;
     _32(0x7a5c0419),        //orw $r23 = $r25, 16 (0x10);;
     _32(0xf8000817),        //andw $r0 = $r23, 32 (0x20)
     _32(0x610c0216),        //addd $r3 = $r22, 8 (0x8);;
     _32(0x0c000280),        //cb.wnez $r0? 236dc <_vfprintf_r+0x9b4>;;
     _32(0x78000417),        //andw $r0 = $r23, 16 (0x10);;
     _32(0x0c000200),        //cb.wnez $r0? 236dc <_vfprintf_r+0x9b4>;;
     _32(0xf8001017),        //andw $r0 = $r23, 64 (0x40)
     _32(0x30080016),        //lwz $r2 = 0 (0x0)[$r22];;
     _32(0x0c80fa00),        //cb.weqz $r0? 24668 <_vfprintf_r+0x1940>;;
     _32(0x97ffffdb),        //goto 23638 <_vfprintf_r+0x910>
     _32(0xe40bf002),        //zxhd $r2 = $r2
     _32(0xea580003),        //copyd $r22 = $r3
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x97ffffd7),        //goto 23638 <_vfprintf_r+0x910>
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xea580003),        //copyd $r22 = $r3
     _32(0x38080016),        //ld $r2 = 0 (0x0)[$r22];;
     _32(0x97fffe02),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0xfa642019),        //orw $r25 = $r25, 128 (0x80)
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0xe104005b),        //addd $r1 = $r27, 1 (0x1)
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0xf860ffca),        //zxwd $r24 = $r10
     _64(0x08000001f101b28a),        //compw.eq $r0 = $r10, 42 (0x2a);;
     _32(0x7108f418),        //addw $r2 = $r24, -48 (0xffffffd0);;
     _32(0x0c01aa00),        //cb.wnez $r0? 251b4 <_vfprintf_r+0x248c>;;
     _32(0xf100f418),        //addw $r0 = $r24, -48 (0xffffffd0)
     _32(0x6a6c0001),        //copyd $r27 = $r1;;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0cff7d40),        //cb.weqz $r0? 22efc <_vfprintf_r+0x1d4>;;
     _32(0xf25d571c),        //addx4w $r23 = $r28, $r28
     _32(0xe16c005b),        //addd $r27 = $r27, 1 (0x1)
     _32(0x2404001b),        //lbs $r1 = 0 (0x0)[$r27];;
     _32(0x705d5097),        //addx2w $r23 = $r23, $r2;;
     _32(0x7870ffd7),        //zxwd $r28 = $r23;;
     _32(0xf100f401),        //addw $r0 = $r1, -48 (0xffffffd0)
     _32(0xf108f401),        //addw $r2 = $r1, -48 (0xffffffd0)
     _32(0x7860ffc1),        //zxwd $r24 = $r1;;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffd80),        //cb.wnez $r0? 2372c <_vfprintf_r+0xa04>;;
     _32(0x17fffde9),        //goto 22efc <_vfprintf_r+0x1d4>;;
     _32(0x2000001b),        //lbz $r0 = 0 (0x0)[$r27];;
     _32(0x97fffde5),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0xe82b7000),        //sxbd $r10 = $r0
     _32(0x7a640119),        //orw $r25 = $r25, 4 (0x4);;
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0x97fffde1),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x2451440c),        //sb 272 (0x110)[$r12] = $r20;;
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _32(0x30480016),        //lwz $r18 = 0 (0x0)[$r22];;
     _32(0x2000001b),        //lbz $r0 = 0 (0x0)[$r27];;
     _32(0x8dff7712),        //cb.wgez $r18? 22ef4 <_vfprintf_r+0x1cc>
     _32(0x682b7000),        //sxbd $r10 = $r0;;
     _32(0x75480012),        //negw $r18 = $r18;;
     _32(0x97fffff4),        //goto 23760 <_vfprintf_r+0xa38>
     _32(0x7848ffd2),        //zxwd $r18 = $r18;;
     _32(0x98001030),        //call 27858 <_localeconv_r>
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x9ffffd3a),        //call 22c90 <strlen>
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x98001028),        //call 27858 <_localeconv_r>
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2705400c),        //sd 256 (0x100)[$r12] = $r1;;
     _32(0xe005000e),        //compd.ne $r1 = $r14, 0 (0x0)
     _32(0x38080400),        //ld $r2 = 16 (0x10)[$r0];;
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _32(0x2709360c),        //sd 216 (0xd8)[$r12] = $r2;;
     _32(0x60010002),        //compd.ne $r0 = $r2, 0 (0x0);;
     _32(0x78051001),        //andw $r1 = $r1, $r0;;
     _32(0x0c80ad41),        //cb.weqz $r1? 242b0 <_vfprintf_r+0x1588>;;
     _32(0xea2c0019),        //copyd $r11 = $r25
     _64(0xa4040002fa000019),        //orw $r0 = $r25, 1024 (0x400)
     _32(0x08000001),        //lbs $r1 = 0 (0x0)[$r2];;
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0x782e0001),        //cmoved.wnez $r1? $r11 = $r0;;
     _32(0x97fffdbf),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x6a64000b),        //copyd $r25 = $r11;;
     _32(0x97fffdbd),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0xfa640059),        //orw $r25 = $r25, 1 (0x1)
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0x2400440c),        //lbs $r0 = 272 (0x110)[$r12];;
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0x0c7f6e00),        //cb.wnez $r0? 22ef4 <_vfprintf_r+0x1cc>;;
     _32(0x97fffdb7),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x2469440c),        //sb 272 (0x110)[$r12] = $r26;;
     _32(0x97fffdb5),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0xfa640219),        //orw $r25 = $r25, 8 (0x8)
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0xf8000819),        //andw $r0 = $r25, 32 (0x20)
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _32(0x38040016),        //ld $r1 = 0 (0x0)[$r22];;
     _32(0x0c008c00),        //cb.wnez $r0? 240f8 <_vfprintf_r+0x13d0>;;
     _32(0x78000419),        //andw $r0 = $r25, 16 (0x10);;
     _32(0x0c008b80),        //cb.wnez $r0? 240f8 <_vfprintf_r+0x13d0>;;
     _32(0x78001019),        //andw $r0 = $r25, 64 (0x40);;
     _32(0x0c010d80),        //cb.wnez $r0? 24920 <_vfprintf_r+0x1bf8>;;
     _64(0xb800240cf82c8019),        //andw $r11 = $r25, 512 (0x200)
     _32(0x00000000),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x0c81744b),        //cb.weqz $r11? 24f9c <_vfprintf_r+0x2274>;;
     _32(0x97fffd75),        //goto 22e30 <_vfprintf_r+0x108>
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _64(0x00000003f001b30a),        //compw.ne $r0 = $r10, 108 (0x6c);;
     _32(0x0c7f8640),        //cb.wnez $r0? 230d4 <_vfprintf_r+0x3ac>;;
     _32(0xfa640819),        //orw $r25 = $r25, 32 (0x20)
     _32(0xe16c005b),        //addd $r27 = $r27, 1 (0x1)
     _32(0x2000005b),        //lbz $r0 = 1 (0x1)[$r27];;
     _32(0x97fffd9d),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x682b7000),        //sxbd $r10 = $r0;;
     _32(0x97fffd9b),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0xfa640819),        //orw $r25 = $r25, 32 (0x20)
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0xe0007830),        //make $r0 = 30768 (0x7830)
     _32(0xfa5c0099),        //orw $r23 = $r25, 2 (0x2)
     _96(0x90000134b8080016e0048600),        //make $r1 = 315928 (0x4d218)
     _32(0x10000000),        //ld $r2 = 0 (0x0)[$r22];;
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _32(0xe0040002),        //make $r1 = 2 (0x2)
     _32(0xe0600078),        //make $r24 = 120 (0x78)
     _32(0x27052e0c),        //sd 184 (0xb8)[$r12] = $r1;;
     _32(0x97ffff5f),        //goto 23638 <_vfprintf_r+0x910>
     _32(0x2501460c),        //sh 280 (0x118)[$r12] = $r0;;
     _64(0x00000003f429b158),        //compw.le $r10 = $r24, 101 (0x65);;
     _32(0x0c0031ca),        //cb.wnez $r10? 23be8 <_vfprintf_r+0xec0>;;
     _32(0x3800380c),        //ld $r0 = 224 (0xe0)[$r12];;
     _64(0x00000000fb030000),        //fcompd.une $r0 = $r0, 0 (0x0);;
     _32(0x08005140),        //cb.dnez $r0? 23df0 <_vfprintf_r+0x10c8>;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _96(0x90000134b000520ce0089400),        //make $r2 = 315984 (0x4d250)
     _32(0x10000000),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27050207),        //sd 8 (0x8)[$r7] = $r1;;
     _32(0x2709fc07),        //sd -16 (0xfffffff0)[$r7] = $r2;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa601520cf505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c00b2c1),        //cb.wnez $r1? 24444 <_vfprintf_r+0x171c>;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x7201b040),        //compw.lt $r0 = $r0, $r1;;
     _32(0x0c807300),        //cb.weqz $r0? 24058 <_vfprintf_r+0x1330>;;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0x38043a0c),        //ld $r1 = 232 (0xe8)[$r12];;
     _32(0x38083c0c),        //ld $r2 = 240 (0xf0)[$r12];;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x2705fe07),        //sd -8 (0xfffffff8)[$r7] = $r1;;
     _32(0xf10d0043),        //addd $r3 = $r3, $r1
     _64(0xa709fc07f505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -16 (0xfffffff0)[$r7] = $r2;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8c009781),        //cb.wnez $r1? 242d0 <_vfprintf_r+0x15a8>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0xf100ffc1),        //addw $r0 = $r1, -1 (0xffffffff)
     _32(0x7150ffc1),        //addw $r20 = $r1, -1 (0xffffffff);;
     _32(0x0e7f71c0),        //cb.wlez $r0? 23088 <_vfprintf_r+0x360>;;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0xb004520cf401b400),        //compw.le $r0 = $r0, 16 (0x10)
     _32(0x08000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0c00ae40),        //cb.wnez $r0? 24464 <_vfprintf_r+0x173c>;;
     _32(0x10000006),        //goto 2399c <_vfprintf_r+0xc74>;;
     _32(0x7100fc14),        //addw $r0 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc0),        //zxwd $r20 = $r0
     _64(0x08000000f509b400),        //compw.gt $r2 = $r0, 16 (0x10);;
     _32(0x0c80acc2),        //cb.weqz $r2? 24464 <_vfprintf_r+0x173c>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _64(0xa75dfe07f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc82),        //cb.weqz $r2? 23988 <_vfprintf_r+0xc60>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x98001abc),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f7940),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffffe9),        //goto 23988 <_vfprintf_r+0xc60>
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x755d148e),        //sbfw $r23 = $r14, $r18;;
     _32(0x0e7f6500),        //cb.wlez $r0? 23044 <_vfprintf_r+0x31c>;;
     _32(0xe0100010),        //make $r4 = 16 (0x10)
     _64(0xb008520cf401b400),        //compw.le $r0 = $r0, 16 (0x10)
     _32(0x08000000),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x0c000800),        //cb.wnez $r0? 23a88 <_vfprintf_r+0xd60>;;
     _32(0x10000006),        //goto 23a24 <_vfprintf_r+0xcfc>;;
     _32(0x7104fc17),        //addw $r1 = $r23, -16 (0xfffffff0);;
     _32(0xf85cffc1),        //zxwd $r23 = $r1
     _64(0x08000000f501b401),        //compw.gt $r0 = $r1, 16 (0x10);;
     _32(0x0c800680),        //cb.weqz $r0? 23a88 <_vfprintf_r+0xd60>;;
     _32(0xf1000042),        //addw $r0 = $r2, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf808ffc0),        //zxwd $r2 = $r0
     _64(0xa711fe07f505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r4;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc81),        //cb.weqz $r1? 23a10 <_vfprintf_r+0xce8>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x98001a9a),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f70c0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xf104fc17),        //addw $r1 = $r23, -16 (0xfffffff0)
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0xe0100010),        //make $r4 = 16 (0x10)
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xf85cffc1),        //zxwd $r23 = $r1
     _64(0xb008520cf501b401),        //compw.gt $r0 = $r1, 16 (0x10)
     _32(0x08000000),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x0c7ffa00),        //cb.wnez $r0? 23a24 <_vfprintf_r+0xcfc>;;
     _32(0xe907f017),        //sxwd $r1 = $r23
     _32(0xf1080042),        //addw $r2 = $r2, 1 (0x1)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf10d0043),        //addd $r3 = $r3, $r1
     _64(0xa705fe07f501b1c2),        //compw.gt $r0 = $r2, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r1;;
     _32(0x2609520c),        //sw 328 (0x148)[$r12] = $r2;;
     _32(0x8cff5980),        //cb.weqz $r0? 23044 <_vfprintf_r+0x31c>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x98001a81),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f6a80),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffd5f),        //goto 23044 <_vfprintf_r+0x31c>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0xb008520cf401b400),        //compw.le $r0 = $r0, 16 (0x10)
     _32(0x08000000),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x0c0007c0),        //cb.wnez $r0? 23b60 <_vfprintf_r+0xe38>;;
     _32(0x10000006),        //goto 23b00 <_vfprintf_r+0xdd8>;;
     _32(0x7110fc1c),        //addw $r4 = $r28, -16 (0xfffffff0);;
     _32(0xf870ffc4),        //zxwd $r28 = $r4
     _64(0x08000000f505b404),        //compw.gt $r1 = $r4, 16 (0x10);;
     _32(0x0c800641),        //cb.weqz $r1? 23b60 <_vfprintf_r+0xe38>;;
     _32(0xf1100042),        //addw $r4 = $r2, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf808ffc4),        //zxwd $r2 = $r4
     _64(0xa75dfe07f505b1c4),        //compw.gt $r1 = $r4, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc81),        //cb.weqz $r1? 23aec <_vfprintf_r+0xdc4>
     _32(0x2611520c),        //sw 328 (0x148)[$r12] = $r4;;
     _32(0x98001a63),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x8c7f6300),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>
     _32(0x7110fc1c),        //addw $r4 = $r28, -16 (0xfffffff0);;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0xf870ffc4),        //zxwd $r28 = $r4
     _64(0xb80c540cf505b404),        //compw.gt $r1 = $r4, 16 (0x10)
     _32(0x10000000),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x3008520c),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x0c7ffa41),        //cb.wnez $r1? 23b00 <_vfprintf_r+0xdd8>;;
     _32(0xe913f01c),        //sxwd $r4 = $r28
     _32(0xf1080042),        //addw $r2 = $r2, 1 (0x1)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf10d0103),        //addd $r3 = $r3, $r4
     _64(0xa711fe07f501b1c2),        //compw.gt $r0 = $r2, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r4;;
     _32(0x2609520c),        //sw 328 (0x148)[$r12] = $r2;;
     _32(0x8cff4cc0),        //cb.weqz $r0? 23050 <_vfprintf_r+0x328>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x98001a4b),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f5d00),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffd2c),        //goto 23050 <_vfprintf_r+0x328>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xe80003c2),        //andd $r0 = $r2, 15 (0xf)
     _32(0xfb0a2102),        //srld $r2 = $r2, 4 (0x4)
     _32(0xe174ffdd),        //addd $r29 = $r29, -1 (0xffffffff)
     _32(0x38042e0c),        //ld $r1 = 184 (0xb8)[$r12];;
     _32(0x2002e001),        //lbz $r0 = $r0[$r1];;
     _32(0x88ff9fc2),        //cb.deqz $r2? 235bc <_vfprintf_r+0x894>
     _32(0x2401001d),        //sb 0 (0x0)[$r29] = $r0;;
     _32(0xe80003c2),        //andd $r0 = $r2, 15 (0xf)
     _32(0xfb0a2102),        //srld $r2 = $r2, 4 (0x4)
     _32(0xe174ffdd),        //addd $r29 = $r29, -1 (0xffffffff)
     _32(0x38042e0c),        //ld $r1 = 184 (0xb8)[$r12];;
     _32(0x2002e001),        //lbz $r0 = $r0[$r1];;
     _32(0x887ffd02),        //cb.dnez $r2? 23bac <_vfprintf_r+0xe84>
     _32(0x2401001d),        //sb 0 (0x0)[$r29] = $r0;;
     _32(0x17fffe76),        //goto 235bc <_vfprintf_r+0x894>;;
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x3010520c),        //lwz $r4 = 328 (0x148)[$r12];;
     _32(0xe1000407),        //addd $r0 = $r7, 16 (0x10)
     _64(0x08000000f505b040),        //compw.gt $r1 = $r0, 1 (0x1);;
     _32(0xf1180044),        //addw $r6 = $r4, 1 (0x1)
     _32(0x71080044),        //addw $r2 = $r4, 1 (0x1);;
     _32(0x0c8037c1),        //cb.weqz $r1? 23f84 <_vfprintf_r+0x125c>;;
     _32(0xe0100001),        //make $r4 = 1 (0x1)
     _64(0xa7750007f405b1c6),        //compw.le $r1 = $r6, 7 (0x7)
     _32(0x08000000),        //sd 0 (0x0)[$r7] = $r29;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x2619520c),        //sw 328 (0x148)[$r12] = $r6;;
     _32(0x8c807c81),        //cb.weqz $r1? 243ec <_vfprintf_r+0x16c4>
     _32(0x27110207),        //sd 8 (0x8)[$r7] = $r4;;
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _32(0xe1000400),        //addd $r0 = $r0, 16 (0x10)
     _32(0xf1080042),        //addw $r2 = $r2, 1 (0x1)
     _32(0x38103a0c),        //ld $r4 = 232 (0xe8)[$r12];;
     _32(0x38143c0c),        //ld $r5 = 240 (0xf0)[$r12];;
     _32(0x2711fe00),        //sd -8 (0xfffffff8)[$r0] = $r4;;
     _32(0xf10d0103),        //addd $r3 = $r3, $r4
     _64(0xa715fc00f511b1c1),        //compw.gt $r4 = $r1, 7 (0x7)
     _32(0x08000000),        //sd -16 (0xfffffff0)[$r0] = $r5;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8c007704),        //cb.wnez $r4? 243c8 <_vfprintf_r+0x16a0>
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0xf1100042),        //addw $r4 = $r2, 1 (0x1)
     _32(0xe11c0400),        //addd $r7 = $r0, 16 (0x10)
     _32(0x3804380c),        //ld $r1 = 224 (0xe0)[$r12];;
     _32(0x3814260c),        //ld $r5 = 152 (0x98)[$r12];;
     _64(0xf1040042fa1b0001),        //fcompd.oeq $r6 = $r1, 0 (0x0)
     _32(0x00000000),        //addw $r1 = $r2, 1 (0x1);;
     _32(0xf120ffc5),        //addw $r8 = $r5, -1 (0xffffffff)
     _32(0x7150ffc5),        //addw $r20 = $r5, -1 (0xffffffff);;
     _32(0x08003586),        //cb.dnez $r6? 23fdc <_vfprintf_r+0x12b4>;;
     _32(0xe923f008),        //sxwd $r8 = $r8
     _32(0xe114005d),        //addd $r5 = $r29, 1 (0x1)
     _64(0xa605520cf511b1c1),        //compw.gt $r4 = $r1, 7 (0x7)
     _32(0x10000000),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0xf10d0203),        //addd $r3 = $r3, $r8
     _32(0xe1040800),        //addd $r1 = $r0, 32 (0x20)
     _32(0x27150000),        //sd 0 (0x0)[$r0] = $r5;;
     _32(0xea000007),        //copyd $r0 = $r7
     _32(0xea1c0001),        //copyd $r7 = $r1
     _32(0x27210200),        //sd 8 (0x8)[$r0] = $r8;;
     _32(0x8c002fc4),        //cb.wnez $r4? 23fb0 <_vfprintf_r+0x1288>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x71100082),        //addw $r4 = $r2, 2 (0x2);;
     _32(0xe1084c0c),        //addd $r2 = $r12, 304 (0x130)
     _64(0xb4043e0cf415b1c4),        //compw.le $r5 = $r4, 7 (0x7)
     _32(0x08000000),        //lws $r1 = 248 (0xf8)[$r12];;
     _32(0x2611520c),        //sw 328 (0x148)[$r12] = $r4;;
     _32(0x27090000),        //sd 0 (0x0)[$r0] = $r2;;
     _32(0xf10d00c1),        //addd $r3 = $r1, $r3
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _32(0x8c7f3a85),        //cb.wnez $r5? 23088 <_vfprintf_r+0x360>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x17fffdbe),        //goto 233e0 <_vfprintf_r+0x6b8>;;
     _32(0x980019f3),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f4700),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffcce),        //goto 23038 <_vfprintf_r+0x310>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0xe0184000f401b400),        //compw.le $r0 = $r0, 16 (0x10)
     _96(0x9000013188000000b004520c),        //make $r6 = 312576 (0x4c500)
     _32(0x10000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0c8001c0),        //cb.weqz $r0? 23d44 <_vfprintf_r+0x101c>;;
     _32(0x10000020),        //goto 23dac <_vfprintf_r+0x1084>;;
     _32(0x7108fc14),        //addw $r2 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc2),        //zxwd $r20 = $r2
     _64(0x08000000f501b402),        //compw.gt $r0 = $r2, 16 (0x10);;
     _32(0x0c8006c0),        //cb.weqz $r0? 23dac <_vfprintf_r+0x1084>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27190007),        //sd 0 (0x0)[$r7] = $r6;;
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _64(0xa75dfe07f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc82),        //cb.weqz $r2? 23d30 <_vfprintf_r+0x1008>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x980019d2),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x2719280c),        //sd 160 (0xa0)[$r12] = $r6;;
     _32(0x0c7f3e80),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xf108fc14),        //addw $r2 = $r20, -16 (0xfffffff0)
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xf850ffc2),        //zxwd $r20 = $r2
     _64(0xb004520cf501b402),        //compw.gt $r0 = $r2, 16 (0x10)
     _32(0x08000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x3818280c),        //ld $r6 = 160 (0xa0)[$r12];;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 23d44 <_vfprintf_r+0x101c>;;
     _32(0xe90bf014),        //sxwd $r2 = $r20
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x27190007),        //sd 0 (0x0)[$r7] = $r6;;
     _32(0xf10d0083),        //addd $r3 = $r3, $r2
     _64(0xa7090207f401b1c1),        //compw.le $r0 = $r1, 7 (0x7)
     _32(0x08000000),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x8c7f2d00),        //cb.wnez $r0? 2309c <_vfprintf_r+0x374>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x980019b9),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f3880),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffcad),        //goto 2309c <_vfprintf_r+0x374>
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x0e002800),        //cb.wlez $r0? 24074 <_vfprintf_r+0x134c>;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x72511040),        //minw $r20 = $r0, $r1;;
     _32(0x6907f014),        //sxwd $r1 = $r20;;
     _32(0x0e000314),        //cb.wlez $r20? 23e38 <_vfprintf_r+0x1110>;;
     _32(0xf10d0043),        //addd $r3 = $r3, $r1
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0x2705fe07),        //sd -8 (0xfffffff8)[$r7] = $r1;;
     _32(0x2775fc07),        //sd -16 (0xfffffff0)[$r7] = $r29;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa601520cf505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c00f241),        //cb.wnez $r1? 24d58 <_vfprintf_r+0x2030>;;
     _32(0xf3500014),        //maxw $r20 = $r20, 0 (0x0)
     _32(0x3804320c),        //ld $r1 = 200 (0xc8)[$r12];;
     _32(0xf5011054),        //sbfw $r0 = $r20, $r1
     _32(0x75511054),        //sbfw $r20 = $r20, $r1;;
     _32(0x0e807680),        //cb.wgtz $r0? 245b0 <_vfprintf_r+0x1888>;;
     _64(0xb804320cf8000019),        //andw $r0 = $r25, 1024 (0x400)
     _32(0x00000001),        //ld $r1 = 200 (0xc8)[$r12];;
     _32(0x8c00cb80),        //cb.wnez $r0? 24b10 <_vfprintf_r+0x1de8>
     _32(0x78614741),        //addwd $r24 = $r1, $r29;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x7205b040),        //compw.lt $r1 = $r0, $r1;;
     _32(0x0c000081),        //cb.wnez $r1? 23e74 <_vfprintf_r+0x114c>;;
     _32(0x0b80a899),        //cb.even $r25? 248f8 <_vfprintf_r+0x1bd0>;;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x38083a0c),        //ld $r2 = 232 (0xe8)[$r12];;
     _32(0x38103c0c),        //ld $r4 = 240 (0xf0)[$r12];;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2709fe07),        //sd -8 (0xfffffff8)[$r7] = $r2;;
     _32(0xf10d0083),        //addd $r3 = $r3, $r2
     _64(0xa711fc07f509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x08000000),        //sd -16 (0xfffffff0)[$r7] = $r4;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8c00f082),        //cb.wnez $r2? 24da8 <_vfprintf_r+0x2080>
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x3808260c),        //ld $r2 = 152 (0x98)[$r12];;
     _32(0xf8514742),        //addwd $r20 = $r2, $r29
     _32(0xf5051080),        //sbfw $r1 = $r0, $r2
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x75511518),        //sbfw $r20 = $r24, $r20;;
     _32(0xf2091501),        //minw $r2 = $r1, $r20
     _32(0x72511501),        //minw $r20 = $r1, $r20;;
     _32(0x0e000342),        //cb.wlez $r2? 23ef8 <_vfprintf_r+0x11d0>;;
     _32(0xe90bf002),        //sxwd $r2 = $r2
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0xf10d0083),        //addd $r3 = $r3, $r2
     _32(0x2709fe07),        //sd -8 (0xfffffff8)[$r7] = $r2;;
     _32(0x2761fc07),        //sd -16 (0xfffffff0)[$r7] = $r24;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa605520cf509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x0c00ed82),        //cb.wnez $r2? 24dcc <_vfprintf_r+0x20a4>;;
     _32(0x73500014),        //maxw $r20 = $r20, 0 (0x0);;
     _32(0xf5051014),        //sbfw $r1 = $r20, $r0
     _32(0x75511014),        //sbfw $r20 = $r20, $r0;;
     _32(0x0e7f1841),        //cb.wlez $r1? 23088 <_vfprintf_r+0x360>;;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0xb004520cf401b401),        //compw.le $r0 = $r1, 16 (0x10)
     _32(0x08000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0c0054c0),        //cb.wnez $r0? 24464 <_vfprintf_r+0x173c>;;
     _32(0x10000006),        //goto 23f34 <_vfprintf_r+0x120c>;;
     _32(0x7100fc14),        //addw $r0 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc0),        //zxwd $r20 = $r0
     _64(0x08000000f509b400),        //compw.gt $r2 = $r0, 16 (0x10);;
     _32(0x0c805342),        //cb.weqz $r2? 24464 <_vfprintf_r+0x173c>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _64(0xa75dfe07f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc82),        //cb.weqz $r2? 23f20 <_vfprintf_r+0x11f8>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x98001956),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f1fc0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffffe9),        //goto 23f20 <_vfprintf_r+0x11f8>
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0b7fc899),        //cb.odd $r25? 23c0c <_vfprintf_r+0xee4>;;
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xf1100084),        //addw $r4 = $r4, 2 (0x2)
     _64(0xa7750007f505b1c6),        //compw.gt $r1 = $r6, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r7] = $r29;;
     _32(0xe11c0807),        //addd $r7 = $r7, 32 (0x20)
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cffd181),        //cb.weqz $r1? 23cc0 <_vfprintf_r+0xf98>
     _32(0x2619520c),        //sw 328 (0x148)[$r12] = $r6;;
     _32(0x98001942),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f1ac0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xe11c740c),        //addd $r7 = $r12, 464 (0x1d0)
     _32(0xea000015),        //copyd $r0 = $r21
     _32(0x3010520c),        //lwz $r4 = 328 (0x148)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffff3b),        //goto 23cc0 <_vfprintf_r+0xf98>
     _32(0x71100044),        //addw $r4 = $r4, 1 (0x1);;
     _32(0x0e7fce48),        //cb.wlez $r8? 23cc0 <_vfprintf_r+0xf98>;;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0x08000000f421b408),        //compw.le $r8 = $r8, 16 (0x10);;
     _32(0x0c011e48),        //cb.wnez $r8? 251d0 <_vfprintf_r+0x24a8>;;
     _32(0x10000007),        //goto 2400c <_vfprintf_r+0x12e4>;;
     _32(0x7104fc14),        //addw $r1 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc1),        //zxwd $r20 = $r1
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _64(0x10000000f511b401),        //compw.gt $r4 = $r1, 16 (0x10);;
     _32(0x0c806244),        //cb.weqz $r4? 2462c <_vfprintf_r+0x1904>;;
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xf808ffc1),        //zxwd $r2 = $r1
     _64(0xa74d0000f511b1c1),        //compw.gt $r4 = $r1, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r0] = $r19;;
     _32(0xe1000400),        //addd $r0 = $r0, 16 (0x10)
     _32(0x275d0200),        //sd 8 (0x8)[$r0] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc84),        //cb.weqz $r4? 23ff4 <_vfprintf_r+0x12cc>
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x98001921),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7f1280),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea000015),        //copyd $r0 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffffe9),        //goto 23ff4 <_vfprintf_r+0x12cc>
     _32(0x3008520c),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x0bff0319),        //cb.even $r25? 23088 <_vfprintf_r+0x360>;;
     _32(0x17fffe34),        //goto 2392c <_vfprintf_r+0xc04>;;
     _32(0x98000e92),        //call 27aa8 <__libc_lock_acquire>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x2804041f),        //lhz $r1 = 16 (0x10)[$r31];;
     _32(0x97fffb4b),        //goto 22d98 <_vfprintf_r+0x70>
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _96(0x90000134b004520ce0109400),        //make $r4 = 315984 (0x4d250)
     _32(0x10000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2711fc07),        //sd -16 (0xfffffff0)[$r7] = $r4;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa605520cf509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x0c00c882),        //cb.wnez $r2? 24d34 <_vfprintf_r+0x200c>;;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x7a051001),        //orw $r1 = $r1, $r0;;
     _32(0x0cff2a01),        //cb.weqz $r1? 23358 <_vfprintf_r+0x630>;;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x38083a0c),        //ld $r2 = 232 (0xe8)[$r12];;
     _32(0x38103c0c),        //ld $r4 = 240 (0xf0)[$r12];;
     _32(0x2709fe07),        //sd -8 (0xfffffff8)[$r7] = $r2;;
     _32(0xf10d00c2),        //addd $r3 = $r2, $r3
     _32(0xf1080041),        //addw $r2 = $r1, 1 (0x1)
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2711fc07),        //sd -16 (0xfffffff0)[$r7] = $r4;;
     _64(0xa70d540cf511b1c2),        //compw.gt $r4 = $r2, 7 (0x7)
     _32(0x00000000),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x2609520c),        //sw 328 (0x148)[$r12] = $r2;;
     _32(0x0cff2c44),        //cb.weqz $r4? 233b4 <_vfprintf_r+0x68c>;;
     _32(0x17fffca7),        //goto 23390 <_vfprintf_r+0x668>;;
     _32(0x3400240c),        //lws $r0 = 144 (0x90)[$r12];;
     _32(0x97fffb4d),        //goto 22e30 <_vfprintf_r+0x108>
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _32(0xe104ff81),        //addd $r1 = $r1, -2 (0xfffffffe)
     _32(0xe0000030),        //make $r0 = 48 (0x30)
     _32(0x6a640017),        //copyd $r25 = $r23;;
     _32(0x97fffd36),        //goto 235e8 <_vfprintf_r+0x8c0>
     _32(0xf5511501),        //sbfw $r20 = $r1, $r20
     _32(0xea740001),        //copyd $r29 = $r1
     _32(0x2401ffdd),        //sb -1 (0xffffffff)[$r29] = $r0;;
     _32(0xf80c1019),        //andw $r3 = $r25, 64 (0x40)
     _64(0xb0000016f8108019),        //andw $r4 = $r25, 512 (0x200)
     _32(0x08000000),        //lwz $r0 = 0 (0x0)[$r22];;
     _32(0xe40bf000),        //zxhd $r2 = $r0
     _32(0x78143fc0),        //zxbd $r5 = $r0;;
     _32(0x78020144),        //cmoved.wnez $r4? $r0 = $r5;;
     _32(0x97fffd3b),        //goto 23628 <_vfprintf_r+0x900>
     _32(0x790a0003),        //cmoved.weqz $r3? $r2 = $r0;;
     _32(0xf85cf7d8),        //andw $r23 = $r24, -33 (0xffffffdf)
     _32(0x3800380c),        //ld $r0 = 224 (0xe0)[$r12];;
     _32(0x7f030000),        //fcompd.ult $r0 = $r0, $r0;;
     _32(0x0800fcc0),        //cb.dnez $r0? 2511c <_vfprintf_r+0x23f4>;;
     _64(0x00000002f001b057),        //compw.ne $r0 = $r23, 65 (0x41);;
     _32(0x0c005400),        //cb.wnez $r0? 2469c <_vfprintf_r+0x1974>;;
     _32(0xe0040058),        //make $r1 = 88 (0x58)
     _32(0xe0080030),        //make $r2 = 48 (0x30)
     _64(0xf401b0dcf139b058),        //compw.eq $r14 = $r24, 97 (0x61)
     _64(0x1800000390000003),        //compw.le $r0 = $r28, 99 (0x63);;
     _32(0xe8061e0e),        //cmoved.wnez $r14? $r1 = 120 (0x78)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0xe174560c),        //addd $r29 = $r12, 344 (0x158)
     _32(0x2409460c),        //sb 280 (0x118)[$r12] = $r2;;
     _32(0x8c807bc0),        //cb.weqz $r0? 24944 <_vfprintf_r+0x1c1c>
     _32(0x2405464c),        //sb 281 (0x119)[$r12] = $r1;;
     _32(0xe024002d),        //make $r9 = 45 (0x2d)
     _32(0xe104480c),        //addd $r1 = $r12, 288 (0x120)
     _32(0x380c380c),        //ld $r3 = 224 (0xe0)[$r12];;
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0xe70bf803),        //extfz $r2 = $r3, 63 (0x3f), 32 (0x20)
     _32(0x70032003),        //fnegd $r0 = $r3;;
     _32(0xeb260002),        //cmoved.wgez $r2? $r9 = 0 (0x0)
     _32(0x7a0e0002),        //cmoved.wltz $r2? $r3 = $r0;;
     _32(0x980017ac),        //call 2a060 <frexp>
     _32(0xea000003),        //copyd $r0 = $r3
     _32(0x2725260c),        //sd 152 (0x98)[$r12] = $r9;;
     _96(0x80000000b824260ce0040000),        //make $r1 = 4593671619917905920 (0x3fc0000000000000)
     _32(0x01fe0000),        //ld $r9 = 152 (0x98)[$r12];;
     _32(0xd8017040),        //fmuld $r0 = $r0, $r1
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _64(0x00000000fb070000),        //fcompd.une $r1 = $r0, 0 (0x0);;
     _32(0x08807501),        //cb.deqz $r1? 2492c <_vfprintf_r+0x1c04>;;
     _32(0xe10c005c),        //addd $r3 = $r28, 1 (0x1)
     _32(0xea04001d),        //copyd $r1 = $r29
     _96(0x90000134e0508c00e0088600),        //make $r2 = 315928 (0x4d218)
     _96(0x180000009800013490000000),        //make $r20 = 315952 (0x4d230);;
     _32(0xf852008e),        //cmoved.wnez $r14? $r20 = $r2
     _32(0xf11500dd),        //addd $r5 = $r29, $r3
     _32(0xf121171d),        //addw $r8 = $r29, $r28
     _96(0x1a01800098000000e0800000),        //make $r32 = 4625196817309499392 (0x4030000000000000);;
     _32(0xe10cffc3),        //addd $r3 = $r3, -1 (0xffffffff)
     _32(0xea700001),        //copyd $r28 = $r1
     _32(0xd8017800),        //fmuld $r0 = $r0, $r32
     _32(0x61040041),        //addd $r1 = $r1, 1 (0x1);;
     _32(0x75391201),        //sbfw $r14 = $r1, $r8;;
     _32(0x460b3000),        //fixedd.rz $r2 = $r0, 0 (0x0);;
     _32(0xe913f002),        //sxwd $r4 = $r2
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0xc41b0004),        //floatd.rn $r6 = $r4, 0 (0x0)
     _32(0x2012e114),        //lbz $r4 = $r4[$r20];;
     _32(0x2411ffc1),        //sb -1 (0xffffffff)[$r1] = $r4;;
     _32(0x88007ec3),        //cb.dnez $r3? 24a30 <_vfprintf_r+0x1d08>
     _32(0x54027006),        //fsbfd $r0 = $r6, $r0;;
     _64(0x003fffffe038ffc0),        //make $r14 = 4294967295 (0xffffffff);;
     _96(0x01ff000080000000e0040000),        //make $r1 = 4602678819172646912 (0x3fe0000000000000);;
     _32(0x7c0f0001),        //fcompd.olt $r3 = $r1, $r0;;
     _32(0x0800e503),        //cb.dnez $r3? 250b4 <_vfprintf_r+0x238c>;;
     _32(0x7b030040),        //fcompd.une $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 24274 <_vfprintf_r+0x154c>;;
     _32(0x0b00e442),        //cb.odd $r2? 250b4 <_vfprintf_r+0x238c>;;
     _32(0x8d00024e),        //cb.wltz $r14? 24298 <_vfprintf_r+0x1570>
     _64(0xe0040030f801404e),        //addwd $r0 = $r14, 1 (0x1)
     _32(0x00000000),        //make $r1 = 48 (0x30);;
     _32(0x71010005),        //addd $r0 = $r5, $r0;;
     _32(0x75010005),        //sbfd $r0 = $r5, $r0;;
     _32(0x0f0000c0),        //loopdo $r0, 24298 <_vfprintf_r+0x1570>;;
     _32(0xe1140045),        //addd $r5 = $r5, 1 (0x1)
     _32(0x24050005),        //sb 0 (0x0)[$r5] = $r1;;
     _32(0xfa640099),        //orw $r25 = $r25, 2 (0x2)
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0xf501115d),        //sbfw $r0 = $r29, $r5
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x9000012f),        //goto 24764 <_vfprintf_r+0x1a3c>
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x97fffb11),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x2428001b),        //lbs $r10 = 0 (0x0)[$r27];;
     _32(0xe16c005b),        //addd $r27 = $r27, 1 (0x1)
     _64(0xa000005bfa648019),        //orw $r25 = $r25, 512 (0x200)
     _32(0x08000000),        //lbz $r0 = 1 (0x1)[$r27];;
     _32(0x97fffb0b),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x682b7000),        //sxbd $r10 = $r0;;
     _32(0x9800187a),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7ee8c0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffd9f),        //goto 23960 <_vfprintf_r+0xc38>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fffcef),        //goto 236ac <_vfprintf_r+0x984>
     _32(0x6a5c0019),        //copyd $r23 = $r25;;
     _96(0x0000000080000134e0008600),        //make $r0 = 315928 (0x4d218);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0xf8000819),        //andw $r0 = $r25, 32 (0x20)
     _32(0x61040216),        //addd $r1 = $r22, 8 (0x8);;
     _32(0x0c000940),        //cb.wnez $r0? 243a4 <_vfprintf_r+0x167c>;;
     _32(0x78000419),        //andw $r0 = $r25, 16 (0x10);;
     _32(0x0c0008c0),        //cb.wnez $r0? 243a4 <_vfprintf_r+0x167c>;;
     _32(0xf80c1019),        //andw $r3 = $r25, 64 (0x40)
     _64(0xb0000016f8108019),        //andw $r4 = $r25, 512 (0x200)
     _32(0x08000000),        //lwz $r0 = 0 (0x0)[$r22];;
     _32(0xe40bf000),        //zxhd $r2 = $r0
     _32(0x78143fc0),        //zxbd $r5 = $r0;;
     _32(0x78020144),        //cmoved.wnez $r4? $r0 = $r5;;
     _32(0x790a0003),        //cmoved.weqz $r3? $r2 = $r0;;
     _32(0x60010002),        //compd.ne $r0 = $r2, 0 (0x0);;
     _32(0x78011019),        //andw $r0 = $r25, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 243b4 <_vfprintf_r+0x168c>;;
     _32(0x97fffcbc),        //goto 23638 <_vfprintf_r+0x910>
     _32(0xea580001),        //copyd $r22 = $r1
     _32(0xe0040002),        //make $r1 = 2 (0x2)
     _64(0x103ffffee85cffd9),        //andd $r23 = $r25, 4294966271 (0xfffffbff);;
     _96(0x0000000080000134e0008c00),        //make $r0 = 315952 (0x4d230);;
     _32(0x97ffffe8),        //goto 24308 <_vfprintf_r+0x15e0>
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xf638019c),        //minuw $r14 = $r28, 6 (0x6)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0xea50000e),        //copyd $r20 = $r14
     _96(0x90000134a701300ce0749200),        //make $r29 = 315976 (0x4d248)
     _32(0x10000000),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x97fffb00),        //goto 22f9c <_vfprintf_r+0x274>
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x38080016),        //ld $r2 = 0 (0x0)[$r22];;
     _32(0x60010002),        //compd.ne $r0 = $r2, 0 (0x0);;
     _32(0x78011019),        //andw $r0 = $r25, $r0;;
     _32(0x0cfff980),        //cb.weqz $r0? 24348 <_vfprintf_r+0x1620>;;
     _32(0xe0000030),        //make $r0 = 48 (0x30)
     _32(0xfa640099),        //orw $r25 = $r25, 2 (0x2)
     _32(0x2461464c),        //sb 281 (0x119)[$r12] = $r24;;
     _32(0x97ffffe2),        //goto 24348 <_vfprintf_r+0x1620>
     _32(0x2401460c),        //sb 280 (0x118)[$r12] = $r0;;
     _32(0x9800183c),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7ed940),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea000015),        //copyd $r0 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fffe1f),        //goto 23c60 <_vfprintf_r+0xf38>
     _32(0x3008520c),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x98001833),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7ed700),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea000015),        //copyd $r0 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fffe09),        //goto 23c2c <_vfprintf_r+0xf04>
     _32(0x3008520c),        //lwz $r2 = 328 (0x148)[$r12];;
     _32(0x97fffc59),        //goto 23574 <_vfprintf_r+0x84c>
     _32(0x6a5c0019),        //copyd $r23 = $r25;;
     _32(0x98001828),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x2781280c),        //sd 160 (0xa0)[$r12] = $r32;;
     _32(0x0c7ed400),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fffae3),        //goto 22fc8 <_vfprintf_r+0x2a0>
     _32(0x3880280c),        //ld $r32 = 160 (0xa0)[$r12];;
     _32(0x9800181d),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7ed180),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffd31),        //goto 2391c <_vfprintf_r+0xbf4>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fffbd8),        //goto 233c4 <_vfprintf_r+0x69c>
     _32(0xe903f014),        //sxwd $r0 = $r20
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xe1506f0c),        //addd $r20 = $r12, 444 (0x1bc)
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _64(0x10000001f8680017),        //andw $r26 = $r23, 1024 (0x400);;
     _32(0xf868ffda),        //zxwd $r26 = $r26
     _32(0xea0c0014),        //copyd $r3 = $r20
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0xe174ffc3),        //addd $r29 = $r3, -1 (0xffffffff)
     _96(0x0e6666668b333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0xd9841002),        //muludt $r32r33 = $r2, $r0
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x7b3a20e1),        //srld $r14 = $r33, 3 (0x3);;
     _32(0x71040040),        //addw $r1 = $r0, 1 (0x1);;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0xf201438e),        //addx4d $r0 = $r14, $r14
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x71014080),        //sbfx2d $r0 = $r0, $r2;;
     _32(0x71000c00),        //addw $r0 = $r0, 48 (0x30);;
     _32(0x8880025a),        //cb.deqz $r26? 244e8 <_vfprintf_r+0x17c0>
     _32(0x2401ffc3),        //sb -1 (0xffffffff)[$r3] = $r0;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x240c0000),        //lbs $r3 = 0 (0x0)[$r0];;
     _32(0xf101b043),        //compw.eq $r0 = $r3, $r1
     _64(0x08000003f00db7c3),        //compw.ne $r3 = $r3, 127 (0x7f);;
     _32(0x780110c0),        //andw $r0 = $r0, $r3;;
     _32(0x0c000280),        //cb.wnez $r0? 2450c <_vfprintf_r+0x17e4>;;
     _32(0xe90d0242),        //compd.gtu $r3 = $r2, 9 (0x9)
     _96(0x0e6666668b333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x08ff0c03),        //cb.deqz $r3? 235bc <_vfprintf_r+0x894>;;
     _32(0x97ffffe4),        //goto 24490 <_vfprintf_r+0x1768>
     _32(0xfb0a20c1),        //srld $r2 = $r1, 3 (0x3)
     _32(0x6a0c001d),        //copyd $r3 = $r29;;
     _32(0x69090242),        //compd.gtu $r2 = $r2, 9 (0x9);;
     _32(0x08ff0ac2),        //cb.deqz $r2? 235bc <_vfprintf_r+0x894>;;
     _32(0x3800400c),        //ld $r0 = 256 (0x100)[$r12];;
     _32(0x3804420c),        //ld $r1 = 264 (0x108)[$r12];;
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0xf5750740),        //sbfd $r29 = $r0, $r29
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x9800177d),        //call 2a320 <strncpy>
     _32(0xea00001d),        //copyd $r0 = $r29
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0xea08000e),        //copyd $r2 = $r14
     _32(0xea0c001d),        //copyd $r3 = $r29
     _32(0x3804360c),        //ld $r1 = 216 (0xd8)[$r12];;
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _32(0x24000041),        //lbs $r0 = 1 (0x1)[$r1];;
     _64(0x00000000f001b000),        //compw.ne $r0 = $r0, 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x97ffffcd),        //goto 24490 <_vfprintf_r+0x1768>
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800540c),        //ld $r0 = 336 (0x150)[$r12];;
     _32(0x08008cc0),        //cb.dnez $r0? 24e34 <_vfprintf_r+0x210c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x97fffb03),        //goto 2317c <_vfprintf_r+0x454>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x9ffff9c6),        //call 22c90 <strlen>
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0xf850ffc0),        //zxwd $r20 = $r0
     _32(0xf3380000),        //maxw $r14 = $r0, 0 (0x0)
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x88fe9f82),        //cb.deqz $r2? 22f9c <_vfprintf_r+0x274>
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x17fffb25),        //goto 23240 <_vfprintf_r+0x518>;;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0xb004520cf401b400),        //compw.le $r0 = $r0, 16 (0x10)
     _32(0x08000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0c002ec0),        //cb.wnez $r0? 248ac <_vfprintf_r+0x1b84>;;
     _32(0x10000006),        //goto 245dc <_vfprintf_r+0x18b4>;;
     _32(0x7100fc14),        //addw $r0 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc0),        //zxwd $r20 = $r0
     _64(0x08000000f509b400),        //compw.gt $r2 = $r0, 16 (0x10);;
     _32(0x0c802d42),        //cb.weqz $r2? 248ac <_vfprintf_r+0x1b84>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _64(0xa75dfe07f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc82),        //cb.weqz $r2? 245c8 <_vfprintf_r+0x18a0>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x980017ac),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7eb540),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffffe9),        //goto 245c8 <_vfprintf_r+0x18a0>
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0xf1100042),        //addw $r4 = $r2, 1 (0x1)
     _32(0x61140400),        //addd $r5 = $r0, 16 (0x10);;
     _32(0xe907f014),        //sxwd $r1 = $r20
     _32(0xe11c0405),        //addd $r7 = $r5, 16 (0x10)
     _64(0xa74d0000f509b1c4),        //compw.gt $r2 = $r4, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r0] = $r19;;
     _32(0xf10d0043),        //addd $r3 = $r3, $r1
     _32(0xf1100044),        //addw $r4 = $r4, 1 (0x1)
     _32(0x2611520c),        //sw 328 (0x148)[$r12] = $r4;;
     _32(0xea000005),        //copyd $r0 = $r5
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _32(0x8c7f9542),        //cb.wnez $r2? 23fb0 <_vfprintf_r+0x1288>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x17fffd97),        //goto 23cc0 <_vfprintf_r+0xf98>;;
     _32(0xf8103fc2),        //zxbd $r4 = $r2
     _32(0xea580003),        //copyd $r22 = $r3
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _64(0x18000000f8008017),        //andw $r0 = $r23, 512 (0x200);;
     _32(0x97fffbef),        //goto 23638 <_vfprintf_r+0x910>
     _32(0x780a0100),        //cmoved.wnez $r0? $r2 = $r4;;
     _64(0x00000000f8008019),        //andw $r0 = $r25, 512 (0x200);;
     _32(0x0c802880),        //cb.weqz $r0? 24914 <_vfprintf_r+0x1bec>;;
     _32(0x24080016),        //lbs $r2 = 0 (0x0)[$r22];;
     _32(0x97fffb6f),        //goto 23450 <_vfprintf_r+0x728>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0xe105001c),        //compd.eq $r1 = $r28, 0 (0x0)
     _32(0xfa684019),        //orw $r26 = $r25, 256 (0x100)
     _32(0xe0240000),        //make $r9 = 0 (0x0)
     _64(0x1ffffffff101b7dc),        //compw.eq $r0 = $r28, 4294967295 (0xffffffff);;
     _32(0x60380001),        //make $r14 = 1 (0x1);;
     _32(0x0c002b80),        //cb.wnez $r0? 2496c <_vfprintf_r+0x1c44>;;
     _64(0x00000002f101b1d7),        //compw.eq $r0 = $r23, 71 (0x47);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c802ac0),        //cb.weqz $r0? 24970 <_vfprintf_r+0x1c48>;;
     _32(0xe0700001),        //make $r28 = 1 (0x1)
     _32(0x3850380c),        //ld $r20 = 224 (0xe0)[$r12];;
     _32(0x6703f814),        //extfz $r0 = $r20, 63 (0x3f), 32 (0x20);;
     _32(0x0d009900),        //cb.wltz $r0? 25064 <_vfprintf_r+0x233c>;;
     _32(0xfa0c000e),        //copyw $r3 = $r14
     _32(0xe1184e0c),        //addd $r6 = $r12, 312 (0x138)
     _32(0xe1144a0c),        //addd $r5 = $r12, 296 (0x128)
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0xe110480c),        //addd $r4 = $r12, 288 (0x120)
     _32(0xe0080002),        //make $r2 = 2 (0x2)
     _32(0xea040014),        //copyd $r1 = $r20
     _32(0x2725260c),        //sd 152 (0x98)[$r12] = $r9;;
     _32(0x980003f2),        //call 256c0 <_dtoa_r>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xf801400e),        //addwd $r0 = $r14, $r0
     _32(0xea740000),        //copyd $r29 = $r0
     _64(0xb824260cf00db1d7),        //compw.ne $r3 = $r23, 71 (0x47)
     _32(0x10000002),        //ld $r9 = 152 (0x98)[$r12];;
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _32(0x0c0082c3),        //cb.wnez $r3? 24f44 <_vfprintf_r+0x221c>;;
     _32(0x0b002d99),        //cb.odd $r25? 249f4 <_vfprintf_r+0x1ccc>;;
     _32(0x38104e0c),        //ld $r4 = 312 (0x138)[$r12];;
     _32(0xf505111d),        //sbfw $r1 = $r29, $r4
     _32(0xf551011d),        //sbfd $r20 = $r29, $r4
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x2705260c),        //sd 152 (0x98)[$r12] = $r1;;
     _32(0x8c0031c3),        //cb.wnez $r3? 24a50 <_vfprintf_r+0x1d28>
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x7201b01c),        //compw.lt $r0 = $r28, $r0;;
     _64(0x07fffffff205b741),        //compw.lt $r1 = $r1, 4294967293 (0xfffffffd);;
     _32(0x7a011040),        //orw $r0 = $r0, $r1;;
     _32(0x0c803580),        //cb.weqz $r0? 24aa8 <_vfprintf_r+0x1d80>;;
     _32(0xf100ff98),        //addw $r0 = $r24, -2 (0xfffffffe)
     _32(0x60680000),        //make $r26 = 0 (0x0);;
     _32(0xf860ffc0),        //zxwd $r24 = $r0
     _32(0x785cf7c0),        //andw $r23 = $r0, -33 (0xffffffdf);;
     _32(0xf10403d8),        //addw $r1 = $r24, 15 (0xf)
     _32(0xf80c3fd8),        //zxbd $r3 = $r24
     _64(0xb814320cf011b057),        //compw.ne $r4 = $r23, 65 (0x41)
     _32(0x10000002),        //ld $r5 = 200 (0xc8)[$r12];;
     _32(0xf8043fc1),        //zxbd $r1 = $r1
     _32(0x6018002b),        //make $r6 = 43 (0x2b);;
     _32(0x780600c4),        //cmoved.wnez $r4? $r1 = $r3;;
     _32(0xf108ffc5),        //addw $r2 = $r5, -1 (0xffffffff)
     _32(0xf100ffc5),        //addw $r0 = $r5, -1 (0xffffffff)
     _32(0x24054c0c),        //sb 304 (0x130)[$r12] = $r1;;
     _32(0x2609480c),        //sw 288 (0x120)[$r12] = $r2;;
     _32(0x0d8000c2),        //cb.wgez $r2? 247a0 <_vfprintf_r+0x1a78>;;
     _32(0xf5000045),        //sbfw $r0 = $r5, 1 (0x1)
     _32(0x6018002d),        //make $r6 = 45 (0x2d);;
     _64(0xa4194c4cf405b240),        //compw.le $r1 = $r0, 9 (0x9)
     _32(0x00000000),        //sb 305 (0x131)[$r12] = $r6;;
     _32(0x0c008cc1),        //cb.wnez $r1? 25078 <_vfprintf_r+0x2350>;;
     _32(0xe10c4fcc),        //addd $r3 = $r12, 319 (0x13f)
     _64(0x08199999e03899c0),        //make $r14 = 1717986919 (0x66666667);;
     _32(0x6a100003),        //copyd $r4 = $r3;;
     _32(0xfa0a37c0),        //sraw $r2 = $r0, 31 (0x1f)
     _32(0xf818ffc0),        //zxwd $r6 = $r0
     _32(0xd8043380),        //mulwd $r1 = $r0, $r14
     _32(0x6a200004),        //copyd $r8 = $r4;;
     _32(0xe110ffc4),        //addd $r4 = $r4, -1 (0xffffffff)
     _64(0x08000003f519b0c6),        //compw.gt $r6 = $r6, 99 (0x63);;
     _32(0x7a062881),        //srad $r1 = $r1, 34 (0x22);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x72095041),        //addx4w $r2 = $r1, $r1;;
     _32(0xf1095002),        //sbfx2w $r2 = $r2, $r0
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x71040c02),        //addw $r1 = $r2, 48 (0x30);;
     _32(0x8c7ffcc6),        //cb.wnez $r6? 247c0 <_vfprintf_r+0x1a98>
     _32(0x24050004),        //sb 0 (0x0)[$r4] = $r1;;
     _32(0xe104ff88),        //addd $r1 = $r8, -2 (0xfffffffe)
     _32(0xf1000c00),        //addw $r0 = $r0, 48 (0x30)
     _32(0x60080002),        //make $r2 = 2 (0x2);;
     _32(0xf805a043),        //compd.leu $r1 = $r3, $r1
     _32(0xf8003fc0),        //zxbd $r0 = $r0
     _32(0xe1084c0c),        //addd $r2 = $r12, 304 (0x130)
     _32(0x27093e0c),        //sd 248 (0xf8)[$r12] = $r2;;
     _32(0x2401ffc4),        //sb -1 (0xffffffff)[$r4] = $r0;;
     _32(0x08000381),        //cb.dnez $r1? 24854 <_vfprintf_r+0x1b2c>;;
     _32(0xf50500c8),        //sbfd $r1 = $r8, $r3
     _32(0x600cffff),        //make $r3 = -1 (0xffffffff);;
     _32(0x61040081),        //addd $r1 = $r1, 2 (0x2);;
     _32(0xe104ffc1),        //addd $r1 = $r1, -1 (0xffffffff)
     _32(0x711100c2),        //addd $r4 = $r2, $r3;;
     _32(0x240100c4),        //sb 3 (0x3)[$r4] = $r0;;
     _32(0x080020c1),        //cb.dnez $r1? 24a44 <_vfprintf_r+0x1d1c>;;
     _32(0xe100504c),        //addd $r0 = $r12, 321 (0x141)
     _32(0x61044c8c),        //addd $r1 = $r12, 306 (0x132);;
     _32(0x75010008),        //sbfd $r0 = $r8, $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x3808260c),        //ld $r2 = 152 (0x98)[$r12];;
     _32(0x380c3e0c),        //ld $r3 = 248 (0xf8)[$r12];;
     _64(0x00000000f501b042),        //compw.gt $r0 = $r2, 1 (0x1);;
     _32(0xf10510c2),        //addw $r1 = $r2, $r3
     _32(0x715110c2),        //addw $r20 = $r2, $r3;;
     _32(0x0c808e00),        //cb.weqz $r0? 2514c <_vfprintf_r+0x2424>;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x71511001),        //addw $r20 = $r1, $r0;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xf3380014),        //maxw $r14 = $r20, 0 (0x0)
     _64(0x103ffffee82cffd9),        //andd $r11 = $r25, 4294966271 (0xfffffbff);;
     _32(0xea64400b),        //ord $r25 = $r11, 256 (0x100)
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x08002509),        //cb.dnez $r9? 24ae8 <_vfprintf_r+0x1dc0>;;
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0x08fe6f82),        //cb.deqz $r2? 22f9c <_vfprintf_r+0x274>;;
     _32(0x17fffa66),        //goto 23240 <_vfprintf_r+0x518>;;
     _32(0xe903f014),        //sxwd $r0 = $r20
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf10d0003),        //addd $r3 = $r3, $r0
     _64(0xa701fe07f509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r0;;
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x8cff57c2),        //cb.weqz $r2? 23e4c <_vfprintf_r+0x1124>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x980016f8),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e8840),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffd58),        //goto 23e4c <_vfprintf_r+0x1124>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x3808260c),        //ld $r2 = 152 (0x98)[$r12];;
     _32(0xf8054742),        //addwd $r1 = $r2, $r29
     _32(0xf5511080),        //sbfw $r20 = $r0, $r2
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x75051058),        //sbfw $r1 = $r24, $r1;;
     _32(0x97fffd7b),        //goto 23ef8 <_vfprintf_r+0x11d0>
     _32(0x72511054),        //minw $r20 = $r20, $r1;;
     _32(0x34080016),        //lws $r2 = 0 (0x0)[$r22];;
     _32(0x97ffface),        //goto 23450 <_vfprintf_r+0x728>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x97fff943),        //goto 22e30 <_vfprintf_r+0x108>
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x97fffe2c),        //goto 241e0 <_vfprintf_r+0x14b8>
     _32(0x2605480c),        //sw 288 (0x120)[$r12] = $r1;;
     _32(0x98000ca0),        //call 27bb8 <__libc_lock_release>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x17fff9f7),        //goto 2311c <_vfprintf_r+0x3f4>;;
     _32(0xf104005c),        //addw $r1 = $r28, 1 (0x1)
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x271d260c),        //sd 152 (0x98)[$r12] = $r7;;
     _32(0x98000d42),        //call 27e58 <_malloc_r>
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x08808900),        //cb.deqz $r0? 251e8 <_vfprintf_r+0x24c0>;;
     _32(0x97fffe0d),        //goto 24190 <_vfprintf_r+0x1468>
     _32(0xea740000),        //copyd $r29 = $r0
     _32(0xea680000),        //copyd $r26 = $r0
     _32(0x381c260c),        //ld $r7 = 152 (0x98)[$r12];;
     _32(0x60700006),        //make $r28 = 6 (0x6);;
     _32(0xfa684019),        //orw $r26 = $r25, 256 (0x100)
     _32(0xe0240000),        //make $r9 = 0 (0x0)
     _32(0x3850380c),        //ld $r20 = 224 (0xe0)[$r12];;
     _32(0x6703f814),        //extfz $r0 = $r20, 63 (0x3f), 32 (0x20);;
     _32(0x0d006e80),        //cb.wltz $r0? 25068 <_vfprintf_r+0x2340>;;
     _32(0xe0080003),        //make $r2 = 3 (0x3)
     _32(0xea040014),        //copyd $r1 = $r20
     _32(0xe1184e0c),        //addd $r6 = $r12, 312 (0x138)
     _64(0x18000002f101b197),        //compw.eq $r0 = $r23, 70 (0x46);;
     _32(0xe1144a0c),        //addd $r5 = $r12, 296 (0x128)
     _32(0xe110480c),        //addd $r4 = $r12, 288 (0x120)
     _32(0x7a0c001c),        //copyw $r3 = $r28;;
     _32(0x0c805580),        //cb.weqz $r0? 24efc <_vfprintf_r+0x21d4>;;
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0x98000344),        //call 256c0 <_dtoa_r>
     _32(0x2725260c),        //sd 152 (0x98)[$r12] = $r9;;
     _32(0xe90bf01c),        //sxwd $r2 = $r28
     _64(0xea740000fb070014),        //fcompd.une $r1 = $r20, 0 (0x0)
     _32(0xa4000000),        //copyd $r29 = $r0
     _32(0x08000000),        //lbs $r0 = 0 (0x0)[$r0];;
     _32(0x3824260c),        //ld $r9 = 152 (0x98)[$r12];;
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _64(0x00000001f101b400),        //compw.eq $r0 = $r0, 48 (0x30);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c0078c0),        //cb.wnez $r0? 2516c <_vfprintf_r+0x2444>;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0xf8014080),        //addwd $r0 = $r0, $r2
     _32(0x600c0001),        //make $r3 = 1 (0x1);;
     _32(0x7101001d),        //addd $r0 = $r29, $r0;;
     _64(0xea100000fa530014),        //fcompd.oeq $r20 = $r20, 0 (0x0)
     _32(0x00000000),        //copyd $r4 = $r0;;
     _32(0x087fd254),        //cb.dnez $r20? 24724 <_vfprintf_r+0x19fc>;;
     _32(0xe0080030),        //make $r2 = 48 (0x30)
     _32(0x38104e0c),        //ld $r4 = 312 (0x138)[$r12];;
     _32(0x7705a004),        //compd.geu $r1 = $r4, $r0;;
     _32(0x087fd141),        //cb.dnez $r1? 24724 <_vfprintf_r+0x19fc>;;
     _32(0x61040044),        //addd $r1 = $r4, 1 (0x1);;
     _32(0x27054e0c),        //sd 312 (0x138)[$r12] = $r1;;
     _32(0x24090004),        //sb 0 (0x0)[$r4] = $r2;;
     _32(0x38104e0c),        //ld $r4 = 312 (0x138)[$r12];;
     _32(0x7905a100),        //compd.gtu $r1 = $r0, $r4;;
     _32(0x087ffec1),        //cb.dnez $r1? 24a14 <_vfprintf_r+0x1cec>;;
     _32(0x17ffff3e),        //goto 24724 <_vfprintf_r+0x19fc>;;
     _64(0x00000000fb130000),        //fcompd.une $r4 = $r0, 0 (0x0);;
     _32(0x087f7e04),        //cb.dnez $r4? 24218 <_vfprintf_r+0x14f0>;;
     _32(0x97fffe06),        //goto 24254 <_vfprintf_r+0x152c>
     _32(0x6a140001),        //copyd $r5 = $r1;;
     _32(0x97ffff7a),        //goto 2482c <_vfprintf_r+0x1b04>
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x2002e0c8),        //lbz $r0 = $r3[$r8];;
     _32(0xf8040059),        //andw $r1 = $r25, 1 (0x1)
     _64(0x08000002f101b197),        //compw.eq $r0 = $r23, 70 (0x46);;
     _32(0x7a051701),        //orw $r1 = $r1, $r28;;
     _32(0x0c807780),        //cb.weqz $r0? 251d8 <_vfprintf_r+0x24b0>;;
     _32(0xe0600066),        //make $r24 = 102 (0x66)
     _32(0x3850320c),        //ld $r20 = 200 (0xc8)[$r12];;
     _32(0x0e007114),        //cb.wlez $r20? 2517c <_vfprintf_r+0x2454>;;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x71011500),        //addw $r0 = $r0, $r20;;
     _32(0x71211700),        //addw $r8 = $r0, $r28;;
     _32(0x70520201),        //cmoved.dnez $r1? $r20 = $r8;;
     _32(0xf3380014),        //maxw $r14 = $r20, 0 (0x0)
     _64(0x08000001f82c0019),        //andw $r11 = $r25, 1024 (0x400);;
     _32(0x0c0051cb),        //cb.wnez $r11? 24fa8 <_vfprintf_r+0x2280>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xea64001a),        //copyd $r25 = $r26
     _32(0x60680000),        //make $r26 = 0 (0x0);;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x97ffff7e),        //goto 24898 <_vfprintf_r+0x1b70>
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x3808320c),        //ld $r2 = 200 (0xc8)[$r12];;
     _32(0x7501b080),        //compw.gt $r0 = $r0, $r2;;
     _32(0x0c003440),        //cb.wnez $r0? 24df8 <_vfprintf_r+0x20d0>;;
     _32(0xea500002),        //copyd $r20 = $r2
     _64(0xb80c3a0cf8000019),        //andw $r0 = $r25, 1024 (0x400)
     _32(0x08000001),        //ld $r3 = 232 (0xe8)[$r12];;
     _32(0x71051083),        //addw $r1 = $r3, $r2;;
     _32(0x8c800100),        //cb.weqz $r0? 24adc <_vfprintf_r+0x1db4>
     _32(0x76520059),        //cmoved.odd $r25? $r20 = $r1;;
     _32(0x3800320c),        //ld $r0 = 200 (0xc8)[$r12];;
     _32(0x0e804cc0),        //cb.wgtz $r0? 24fa4 <_vfprintf_r+0x227c>;;
     _32(0x97ffffed),        //goto 24a90 <_vfprintf_r+0x1d68>
     _32(0xf3380014),        //maxw $r14 = $r20, 0 (0x0)
     _32(0x60600067),        //make $r24 = 103 (0x67);;
     _32(0xe000002d),        //make $r0 = 45 (0x2d)
     _32(0xe008002d),        //make $r2 = 45 (0x2d)
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0x7138004e),        //addw $r14 = $r14, 1 (0x1);;
     _32(0x97fff929),        //goto 22f9c <_vfprintf_r+0x274>
     _32(0x2401440c),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0xe000002d),        //make $r0 = 45 (0x2d)
     _32(0x6008002d),        //make $r2 = 45 (0x2d);;
     _32(0x97fff9ba),        //goto 231f0 <_vfprintf_r+0x4c8>
     _32(0x2401440c),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _32(0x3800340c),        //ld $r0 = 208 (0xd0)[$r12];;
     _32(0x3804300c),        //ld $r1 = 192 (0xc0)[$r12];;
     _64(0x00000000f501b000),        //compw.gt $r0 = $r0, 0 (0x0);;
     _64(0x00000000f505b001),        //compw.gt $r1 = $r1, 0 (0x0);;
     _32(0x7a011040),        //orw $r0 = $r0, $r1;;
     _32(0x0c806240),        //cb.weqz $r0? 25154 <_vfprintf_r+0x242c>;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x90000033),        //goto 24c04 <_vfprintf_r+0x1edc>
     _32(0x78514740),        //addwd $r20 = $r0, $r29;;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0x3804400c),        //ld $r1 = 256 (0x100)[$r12];;
     _32(0x3808420c),        //ld $r2 = 264 (0x108)[$r12];;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x2705fe07),        //sd -8 (0xfffffff8)[$r7] = $r1;;
     _32(0xf10d0043),        //addd $r3 = $r3, $r1
     _64(0xa709fc07f505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -16 (0xfffffff0)[$r7] = $r2;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8c001741),        //cb.wnez $r1? 24ce8 <_vfprintf_r+0x1fc0>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0xf5711518),        //sbfw $r28 = $r24, $r20
     _32(0x3808360c),        //ld $r2 = 216 (0xd8)[$r12];;
     _32(0x2751280c),        //sd 160 (0xa0)[$r12] = $r20;;
     _32(0x24040002),        //lbs $r1 = 0 (0x0)[$r2];;
     _32(0xf2711701),        //minw $r28 = $r1, $r28
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x0e0003dc),        //cb.wlez $r28? 24bd0 <_vfprintf_r+0x1ea8>;;
     _32(0xe907f01c),        //sxwd $r1 = $r28
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0xf10d0043),        //addd $r3 = $r3, $r1
     _32(0x2705fe07),        //sd -8 (0xfffffff8)[$r7] = $r1;;
     _32(0x2761fc07),        //sd -16 (0xfffffff0)[$r7] = $r24;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _64(0xa601520cf505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x0c001441),        //cb.wnez $r1? 24d08 <_vfprintf_r+0x1fe0>;;
     _32(0x24040002),        //lbs $r1 = 0 (0x0)[$r2];;
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x7370001c),        //maxw $r28 = $r28, 0 (0x0);;
     _32(0xf509101c),        //sbfw $r2 = $r28, $r0
     _32(0x7571101c),        //sbfw $r28 = $r28, $r0;;
     _32(0x0e8004c2),        //cb.wgtz $r2? 24c28 <_vfprintf_r+0x1f00>;;
     _32(0xf1610058),        //addd $r24 = $r24, $r1
     _32(0x3800340c),        //ld $r0 = 208 (0xd0)[$r12];;
     _32(0x3808300c),        //ld $r2 = 192 (0xc0)[$r12];;
     _64(0x00000000f501b000),        //compw.gt $r0 = $r0, 0 (0x0);;
     _64(0x00000000f509b002),        //compw.gt $r2 = $r2, 0 (0x0);;
     _32(0x7a011080),        //orw $r0 = $r0, $r2;;
     _32(0x0c805600),        //cb.weqz $r0? 25160 <_vfprintf_r+0x2438>;;
     _32(0x3800300c),        //ld $r0 = 192 (0xc0)[$r12];;
     _32(0x087ff380),        //cb.dnez $r0? 24b40 <_vfprintf_r+0x1e18>;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x6100ffc0),        //addd $r0 = $r0, -1 (0xffffffff);;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _32(0x3800340c),        //ld $r0 = 208 (0xd0)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x97ffffca),        //goto 24b48 <_vfprintf_r+0x1e20>
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _64(0xb004520cf409b402),        //compw.le $r2 = $r2, 16 (0x10)
     _32(0x00000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0c8001c2),        //cb.weqz $r2? 24c50 <_vfprintf_r+0x1f28>;;
     _32(0x1000001e),        //goto 24cb0 <_vfprintf_r+0x1f88>;;
     _32(0x7100fc1c),        //addw $r0 = $r28, -16 (0xfffffff0);;
     _32(0xf870ffc0),        //zxwd $r28 = $r0
     _64(0x08000000f509b400),        //compw.gt $r2 = $r0, 16 (0x10);;
     _32(0x0c800642),        //cb.weqz $r2? 24cb0 <_vfprintf_r+0x1f88>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _64(0xa75dfe07f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc82),        //cb.weqz $r2? 24c3c <_vfprintf_r+0x1f14>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x9800160f),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e4e00),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xf100fc1c),        //addw $r0 = $r28, -16 (0xfffffff0)
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0xf870ffc0),        //zxwd $r28 = $r0
     _64(0xb004520cf509b400),        //compw.gt $r2 = $r0, 16 (0x10)
     _32(0x08000000),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x0c7ffa42),        //cb.wnez $r2? 24c50 <_vfprintf_r+0x1f28>;;
     _32(0xe903f01c),        //sxwd $r0 = $r28
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf10d0003),        //addd $r3 = $r3, $r0
     _64(0xa701fe07f509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r0;;
     _32(0x2605520c),        //sw 328 (0x148)[$r12] = $r1;;
     _32(0x8c000ac2),        //cb.wnez $r2? 24d80 <_vfprintf_r+0x2058>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x97ffffc0),        //goto 24be0 <_vfprintf_r+0x1eb8>
     _32(0x24040000),        //lbs $r1 = 0 (0x0)[$r0];;
     _32(0x980015f4),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e4740),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97ffffa0),        //goto 24b7c <_vfprintf_r+0x1e54>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x980015ec),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e4540),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x24040000),        //lbs $r1 = 0 (0x0)[$r0];;
     _32(0x97ffffa9),        //goto 24bd0 <_vfprintf_r+0x1ea8>
     _32(0x7800ffc1),        //zxwd $r0 = $r1;;
     _32(0x980015e1),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e4280),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x97fffcd8),        //goto 240b0 <_vfprintf_r+0x1388>
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x980015d8),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e4040),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0x97fffc33),        //goto 23e38 <_vfprintf_r+0x1110>
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fff990),        //goto 233b8 <_vfprintf_r+0x690>
     _32(0x611c0407),        //addd $r7 = $r7, 16 (0x10);;
     _32(0x980015ce),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e3dc0),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffff90),        //goto 24be0 <_vfprintf_r+0x1eb8>
     _32(0x24040000),        //lbs $r1 = 0 (0x0)[$r0];;
     _32(0x980015c4),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e3b40),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x97fffc39),        //goto 23ea8 <_vfprintf_r+0x1180>
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x980015bb),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e3900),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fffc42),        //goto 23ef8 <_vfprintf_r+0x11d0>
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0xe0600067),        //make $r24 = 103 (0x67)
     _32(0x38043a0c),        //ld $r1 = 232 (0xe8)[$r12];;
     _32(0xf1011501),        //addw $r0 = $r1, $r20
     _32(0xf1511501),        //addw $r20 = $r1, $r20
     _32(0x3804320c),        //ld $r1 = 200 (0xc8)[$r12];;
     _32(0x0effc741),        //cb.wgtz $r1? 24a80 <_vfprintf_r+0x1d58>;;
     _32(0x75500041),        //sbfw $r20 = $r1, 1 (0x1);;
     _32(0xf1391014),        //addw $r14 = $r20, $r0
     _32(0x71511014),        //addw $r20 = $r20, $r0;;
     _32(0x97ffff1d),        //goto 24a90 <_vfprintf_r+0x1d68>
     _32(0x7338000e),        //maxw $r14 = $r14, 0 (0x0);;
     _32(0x97fff901),        //goto 23228 <_vfprintf_r+0x500>
     _32(0xea38001c),        //copyd $r14 = $r28
     _32(0xea50001c),        //copyd $r20 = $r28
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _32(0x980015a1),        //call 2a4b8 <__sprint_r>
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0cff7280),        //cb.weqz $r0? 2456c <_vfprintf_r+0x1844>;;
     _32(0x17fff8cd),        //goto 2317c <_vfprintf_r+0x454>;;
     _32(0xf5000000),        //negw $r0 = $r0
     _32(0xe05c0010),        //make $r23 = 16 (0x10)
     _64(0x17fffffff309b400),        //compw.ge $r2 = $r0, 4294967280 (0xfffffff0);;
     _32(0x7850ffc0),        //zxwd $r20 = $r0;;
     _32(0x0c000ec2),        //cb.wnez $r2? 24f4c <_vfprintf_r+0x2224>;;
     _32(0x10000006),        //goto 24e7c <_vfprintf_r+0x2154>;;
     _32(0x7100fc14),        //addw $r0 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc0),        //zxwd $r20 = $r0
     _64(0x08000000f509b400),        //compw.gt $r2 = $r0, 16 (0x10);;
     _32(0x0c800d42),        //cb.weqz $r2? 24f4c <_vfprintf_r+0x2224>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xe11c0407),        //addd $r7 = $r7, 16 (0x10)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _64(0xa75dfe07f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x08000000),        //sd -8 (0xfffffff8)[$r7] = $r23;;
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x8cfffc82),        //cb.weqz $r2? 24e68 <_vfprintf_r+0x2140>
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x98001584),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e2b40),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97ffffe9),        //goto 24e68 <_vfprintf_r+0x2140>
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x3000421f),        //lwz $r0 = 264 (0x108)[$r31];;
     _32(0x0b0001c0),        //cb.odd $r0? 24eec <_vfprintf_r+0x21c4>;;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c0000c0),        //cb.wnez $r0? 24eec <_vfprintf_r+0x21c4>;;
     _32(0x98000b35),        //call 27bb8 <__libc_lock_release>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x97fff8a7),        //goto 23190 <_vfprintf_r+0x468>
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0xf10c005c),        //addw $r3 = $r28, 1 (0x1)
     _32(0xe1184e0c),        //addd $r6 = $r12, 312 (0x138)
     _32(0xe1144a0c),        //addd $r5 = $r12, 296 (0x128)
     _64(0x18000002f001b157),        //compw.ne $r0 = $r23, 69 (0x45);;
     _32(0xe110480c),        //addd $r4 = $r12, 288 (0x120)
     _32(0xe0080002),        //make $r2 = 2 (0x2)
     _32(0xea040014),        //copyd $r1 = $r20
     _32(0x7138005c),        //addw $r14 = $r28, 1 (0x1);;
     _32(0x0c002c00),        //cb.wnez $r0? 251e0 <_vfprintf_r+0x24b8>;;
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x271d280c),        //sd 160 (0xa0)[$r12] = $r7;;
     _32(0x980001e5),        //call 256c0 <_dtoa_r>
     _32(0x2725260c),        //sd 152 (0x98)[$r12] = $r9;;
     _32(0xe00c0001),        //make $r3 = 1 (0x1)
     _32(0xea740000),        //copyd $r29 = $r0
     _32(0x3824260c),        //ld $r9 = 152 (0x98)[$r12];;
     _32(0x381c280c),        //ld $r7 = 160 (0xa0)[$r12];;
     _32(0x97fffeac),        //goto 249f4 <_vfprintf_r+0x1ccc>
     _32(0x7801474e),        //addwd $r0 = $r14, $r29;;
     _32(0xe903f014),        //sxwd $r0 = $r20
     _32(0xf1080041),        //addw $r2 = $r1, 1 (0x1)
     _32(0x274d0007),        //sd 0 (0x0)[$r7] = $r19;;
     _32(0xf10d0003),        //addd $r3 = $r3, $r0
     _32(0xf804ffc2),        //zxwd $r1 = $r2
     _64(0xa7010207f511b1c2),        //compw.gt $r4 = $r2, 7 (0x7)
     _32(0x10000000),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x2609520c),        //sw 328 (0x148)[$r12] = $r2;;
     _32(0x8cffe084),        //cb.weqz $r4? 24d78 <_vfprintf_r+0x2050>
     _32(0x270d540c),        //sd 336 (0x150)[$r12] = $r3;;
     _32(0x98001550),        //call 2a4b8 <__sprint_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108500c),        //addd $r2 = $r12, 320 (0x140)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0c7e1e40),        //cb.wnez $r0? 2316c <_vfprintf_r+0x444>;;
     _32(0xea1c0015),        //copyd $r7 = $r21
     _32(0x380c540c),        //ld $r3 = 336 (0x150)[$r12];;
     _32(0x97fff909),        //goto 233b8 <_vfprintf_r+0x690>
     _32(0x3004520c),        //lwz $r1 = 328 (0x148)[$r12];;
     _32(0x97fff7a5),        //goto 22e30 <_vfprintf_r+0x108>
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60600067),        //make $r24 = 103 (0x67);;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x24000000),        //lbs $r0 = 0 (0x0)[$r0];;
     _64(0x00000003f105b7c0),        //compw.eq $r1 = $r0, 127 (0x7f);;
     _32(0x0c000741),        //cb.wnez $r1? 2502c <_vfprintf_r+0x2304>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x2705300c),        //sd 192 (0xc0)[$r12] = $r1;;
     _32(0x9000000b),        //goto 24ff0 <_vfprintf_r+0x22c8>
     _32(0x2705340c),        //sd 208 (0xd0)[$r12] = $r1;;
     _32(0xe1040041),        //addd $r1 = $r1, 1 (0x1)
     _32(0x3808340c),        //ld $r2 = 208 (0xd0)[$r12];;
     _32(0x2705360c),        //sd 216 (0xd8)[$r12] = $r1;;
     _32(0x71080042),        //addw $r2 = $r2, 1 (0x1);;
     _32(0x2709340c),        //sd 208 (0xd0)[$r12] = $r2;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _64(0x00000003f005b7c0),        //compw.ne $r1 = $r0, 127 (0x7f);;
     _32(0x0c8004c1),        //cb.weqz $r1? 25038 <_vfprintf_r+0x2310>;;
     _32(0xf808ffc0),        //zxwd $r2 = $r0
     _32(0x380c320c),        //ld $r3 = 200 (0xc8)[$r12];;
     _32(0xf305b0c0),        //compw.ge $r1 = $r0, $r3
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x0c000381),        //cb.wnez $r1? 25038 <_vfprintf_r+0x2310>;;
     _32(0x3804360c),        //ld $r1 = 216 (0xd8)[$r12];;
     _32(0x2709320c),        //sd 200 (0xc8)[$r12] = $r2;;
     _32(0x20000041),        //lbz $r0 = 1 (0x1)[$r1];;
     _32(0x087ffbc0),        //cb.dnez $r0? 24fcc <_vfprintf_r+0x22a4>;;
     _32(0x3804300c),        //ld $r1 = 192 (0xc0)[$r12];;
     _32(0x3800360c),        //ld $r0 = 216 (0xd8)[$r12];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x97ffffef),        //goto 24fe0 <_vfprintf_r+0x22b8>
     _32(0x2705300c),        //sd 192 (0xc0)[$r12] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0xfa380014),        //copyw $r14 = $r20
     _32(0xea64001a),        //copyd $r25 = $r26
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0x3804340c),        //ld $r1 = 208 (0xd0)[$r12];;
     _32(0x3800300c),        //ld $r0 = 192 (0xc0)[$r12];;
     _32(0xf1011040),        //addw $r0 = $r0, $r1
     _32(0x3804400c),        //ld $r1 = 256 (0x100)[$r12];;
     _32(0x53383040),        //maddw $r14 = $r0, $r1;;
     _32(0x97fffe10),        //goto 24898 <_vfprintf_r+0x1b70>
     _32(0xf850ffce),        //zxwd $r20 = $r14
     _32(0x7338000e),        //maxw $r14 = $r14, 0 (0x0);;
     _32(0x60700001),        //make $r28 = 1 (0x1);;
     _32(0xe024002d),        //make $r9 = 45 (0x2d)
     _32(0x3800380c),        //ld $r0 = 224 (0xe0)[$r12];;
     _32(0x97fffe45),        //goto 24984 <_vfprintf_r+0x1c5c>
     _32(0x70532000),        //fnegd $r20 = $r0;;
     _32(0xe1044c8c),        //addd $r1 = $r12, 306 (0x132)
     _64(0x08000002f109b057),        //compw.eq $r2 = $r23, 65 (0x41);;
     _32(0x0c000102),        //cb.wnez $r2? 25094 <_vfprintf_r+0x236c>;;
     _32(0xe0080030),        //make $r2 = 48 (0x30)
     _32(0x61044ccc),        //addd $r1 = $r12, 307 (0x133);;
     _32(0x24094c8c),        //sb 306 (0x132)[$r12] = $r2;;
     _32(0xf1000c00),        //addw $r0 = $r0, 48 (0x30)
     _64(0x08000000e108900c),        //addd $r2 = $r12, 576 (0x240);;
     _32(0xf5090042),        //sbfd $r2 = $r2, $r1
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _32(0x71004442),        //addw $r0 = $r2, 273 (0x111);;
     _32(0x97fffdea),        //goto 24854 <_vfprintf_r+0x1b2c>
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0xea000005),        //copyd $r0 = $r5
     _32(0xe0180030),        //make $r6 = 48 (0x30)
     _32(0x27714e0c),        //sd 312 (0x138)[$r12] = $r28;;
     _32(0x2004ffc5),        //lbz $r1 = -1 (0xffffffff)[$r5];;
     _32(0x241003d4),        //lbs $r4 = 15 (0xf)[$r20];;
     _32(0x680b7001),        //sxbd $r2 = $r1;;
     _32(0x700db084),        //compw.ne $r3 = $r4, $r2;;
     _32(0x0c000243),        //cb.wnez $r3? 250f4 <_vfprintf_r+0x23cc>;;
     _32(0x2419ffc0),        //sb -1 (0xffffffff)[$r0] = $r6;;
     _32(0x38004e0c),        //ld $r0 = 312 (0x138)[$r12];;
     _32(0x6104ffc0),        //addd $r1 = $r0, -1 (0xffffffff);;
     _32(0x27054e0c),        //sd 312 (0x138)[$r12] = $r1;;
     _32(0x2004ffc0),        //lbz $r1 = -1 (0xffffffff)[$r0];;
     _32(0x680b7001),        //sxbd $r2 = $r1;;
     _32(0x710db084),        //compw.eq $r3 = $r4, $r2;;
     _32(0x0c7ffe43),        //cb.wnez $r3? 250d4 <_vfprintf_r+0x23ac>;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _64(0x08000001f009b642),        //compw.ne $r2 = $r2, 57 (0x39);;
     _32(0x78043fc1),        //zxbd $r1 = $r1;;
     _32(0x0c8000c2),        //cb.weqz $r2? 25110 <_vfprintf_r+0x23e8>;;
     _32(0x97fffc64),        //goto 24298 <_vfprintf_r+0x1570>
     _32(0x2405ffc0),        //sb -1 (0xffffffff)[$r0] = $r1;;
     _32(0x20040294),        //lbz $r1 = 10 (0xa)[$r20];;
     _32(0x97fffc61),        //goto 24298 <_vfprintf_r+0x1570>
     _32(0x2405ffc0),        //sb -1 (0xffffffff)[$r0] = $r1;;
     _32(0x3800380c),        //ld $r0 = 224 (0xe0)[$r12];;
     _32(0x09000840),        //cb.dltz $r0? 251a4 <_vfprintf_r+0x247c>;;
     _32(0x2008440c),        //lbz $r2 = 272 (0x110)[$r12];;
     _64(0xe0048200f401b1d8),        //compw.le $r0 = $r24, 71 (0x47)
     _96(0x8800013480000002e0748400),        //make $r1 = 315912 (0x4d208)
     _96(0x100000009000013488000000),        //make $r29 = 315920 (0x4d210);;
     _32(0x17fff832),        //goto 23210 <_vfprintf_r+0x4e8>;;
     _32(0x0bff72d9),        //cb.even $r25? 24878 <_vfprintf_r+0x1b50>;;
     _32(0x17fffdc8),        //goto 24870 <_vfprintf_r+0x1b48>;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x78014740),        //addwd $r0 = $r0, $r29;;
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0x3800280c),        //ld $r0 = 160 (0xa0)[$r12];;
     _32(0x97fffb3f),        //goto 23e60 <_vfprintf_r+0x1138>
     _32(0x76610018),        //minud $r24 = $r24, $r0;;
     _32(0xf504005c),        //sbfw $r1 = $r28, 1 (0x1)
     _32(0x7500005c),        //sbfw $r0 = $r28, 1 (0x1);;
     _32(0x97fffe1d),        //goto 249e8 <_vfprintf_r+0x1cc0>
     _32(0x2605480c),        //sw 288 (0x120)[$r12] = $r1;;
     _32(0x88ff9141),        //cb.deqz $r1? 24a90 <_vfprintf_r+0x1d68>
     _32(0xe0380001),        //make $r14 = 1 (0x1)
     _32(0xe0600066),        //make $r24 = 102 (0x66)
     _32(0x60500001),        //make $r20 = 1 (0x1);;
     _32(0x38003a0c),        //ld $r0 = 232 (0xe8)[$r12];;
     _32(0x71500040),        //addw $r20 = $r0, 1 (0x1);;
     _32(0xf1391714),        //addw $r14 = $r20, $r28
     _32(0x71511714),        //addw $r20 = $r20, $r28;;
     _32(0x97fffe3d),        //goto 24a90 <_vfprintf_r+0x1d68>
     _32(0x7338000e),        //maxw $r14 = $r14, 0 (0x0);;
     _32(0xe000002d),        //make $r0 = 45 (0x2d)
     _32(0x6008002d),        //make $r2 = 45 (0x2d);;
     _32(0x97ffffdf),        //goto 25128 <_vfprintf_r+0x2400>
     _32(0x2401440c),        //sb 272 (0x110)[$r12] = $r0;;
     _32(0xe1580216),        //addd $r22 = $r22, 8 (0x8)
     _32(0x30200016),        //lwz $r8 = 0 (0x0)[$r22];;
     _32(0xea6c0001),        //copyd $r27 = $r1
     _32(0x2000005b),        //lbz $r0 = 1 (0x1)[$r27];;
     _32(0x7370ffc8),        //maxw $r28 = $r8, -1 (0xffffffff);;
     _32(0x97fff74b),        //goto 22ef4 <_vfprintf_r+0x1cc>
     _32(0x682b7000),        //sxbd $r10 = $r0;;
     _32(0x97fffd19),        //goto 24634 <_vfprintf_r+0x190c>
     _32(0x6a140007),        //copyd $r5 = $r7;;
     _32(0x97fffd63),        //goto 24764 <_vfprintf_r+0x1a3c>
     _32(0x60680000),        //make $r26 = 0 (0x0);;
     _32(0x97fffd3e),        //goto 246d8 <_vfprintf_r+0x19b0>
     _32(0x6a38001c),        //copyd $r14 = $r28;;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x7a001000),        //orw $r0 = $r0, 64 (0x40);;
     _32(0x97fff7e3),        //goto 2317c <_vfprintf_r+0x454>
     _32(0x2501041f)        //sh 16 (0x10)[$r31] = $r0;;
 |];

let vfprintf: list_I = 
 [|
     _32(0xea100000),        //copyd $r4 = $r0
     _32(0xea0c0002),        //copyd $r3 = $r2
     _32(0xea080001),        //copyd $r2 = $r1
     _96(0x1800000098000128e0002000),        //make $r0 = 303232 (0x4a080);;
     _32(0x97fff6c6),        //goto 22d28 <_vfprintf_r>
     _32(0xea040004),        //copyd $r1 = $r4
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7f03f000)        //nop ;;
 |];

let __sbprintf: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _64(0x0ffffffee130900c),        //addd $r12 = $r12, -1472 (0xfffffffffffffa40);;
     _32(0xea480001),        //copyd $r18 = $r1
     _32(0xe114100c),        //addd $r5 = $r12, 64 (0x40)
     _32(0xe0180000),        //make $r6 = 0 (0x0)
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0xea500002),        //copyd $r20 = $r2
     _32(0xea540003),        //copyd $r21 = $r3
     _32(0x2851080c),        //sq 32 (0x20)[$r12] = $r20r21;;
     _64(0xa739020ce1381fcc),        //addd $r14 = $r12, 1151 (0x47f)
     _32(0x00000001),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xe838f00e),        //andd $r14 = $r14, -64 (0xffffffc0)
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0xe158300e),        //addd $r22 = $r14, 192 (0xc0)
     _32(0x27590c0c),        //sd 48 (0x30)[$r12] = $r22;;
     _32(0xea000016),        //copyd $r0 = $r22
     _32(0x28040401),        //lhz $r1 = 16 (0x10)[$r1];;
     _32(0x30284212),        //lwz $r10 = 264 (0x108)[$r18];;
     _32(0x28240492),        //lhz $r9 = 18 (0x12)[$r18];;
     _32(0xf804ff41),        //andw $r1 = $r1, -3 (0xfffffffd)
     _32(0x38200c12),        //ld $r8 = 48 (0x30)[$r18];;
     _32(0x381c1012),        //ld $r7 = 64 (0x40)[$r18];;
     _32(0x2715000e),        //sd 0 (0x0)[$r14] = $r5;;
     _32(0x2629420e),        //sw 264 (0x108)[$r14] = $r10;;
     _32(0x2525048e),        //sh 18 (0x12)[$r14] = $r9;;
     _32(0x27210c0e),        //sd 48 (0x30)[$r14] = $r8;;
     _32(0x271d100e),        //sd 64 (0x40)[$r14] = $r7;;
     _32(0x2715060e),        //sd 24 (0x18)[$r14] = $r5;;
     _32(0x2611030e),        //sw 12 (0xc)[$r14] = $r4;;
     _32(0x2611080e),        //sw 32 (0x20)[$r14] = $r4;;
     _32(0x26190a0e),        //sw 40 (0x28)[$r14] = $r6;;
     _32(0x980009c7),        //call 279c8 <__libc_lock_init>
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x9ffff69d),        //call 22d28 <_vfprintf_r>
     _32(0xea080014),        //copyd $r2 = $r20
     _32(0xea0c0015),        //copyd $r3 = $r21
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x8d000200),        //cb.wltz $r0? 252e8 <__sbprintf+0xc8>
     _32(0x7850ffc0),        //zxwd $r20 = $r0;;
     _32(0x98000636),        //call 26ba8 <_fflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _64(0x003fffffe004ffc0),        //make $r1 = 4294967295 (0xffffffff);;
     _32(0x78520040),        //cmoved.wnez $r0? $r20 = $r1;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x78001000),        //andw $r0 = $r0, 64 (0x40);;
     _32(0x0c800100),        //cb.weqz $r0? 25300 <__sbprintf+0xe0>;;
     _32(0x28000412),        //lhz $r0 = 16 (0x10)[$r18];;
     _32(0x7a001000),        //orw $r0 = $r0, 64 (0x40);;
     _32(0x25010412),        //sh 16 (0x10)[$r18] = $r0;;
     _32(0x980009b6),        //call 279d8 <__libc_lock_close>
     _32(0x6a000016),        //copyd $r0 = $r22;;
     _32(0xfa000014),        //copyw $r0 = $r20
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50080c),        //lq $r20r21 = 32 (0x20)[$r12];;
     _32(0x8fd00000),        //ret 
     _64(0xb8580c0ce130700c),        //addd $r12 = $r12, 1472 (0x5c0)
     _32(0x00000001)        //ld $r22 = 48 (0x30)[$r12];;
 |];

let __swsetup_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e0082000),        //make $r2 = 303232 (0x4a080);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38080002),        //ld $r2 = 0 (0x0)[$r2];;
     _32(0x088000c2),        //cb.deqz $r2? 25368 <__swsetup_r+0x38>;;
     _32(0x30001402),        //lwz $r0 = 80 (0x50)[$r2];;
     _32(0x0c800e80),        //cb.weqz $r0? 2544c <__swsetup_r+0x11c>;;
     _32(0x2808040e),        //lhz $r2 = 16 (0x10)[$r14];;
     _32(0xe407f002),        //zxhd $r1 = $r2
     _32(0x78000202),        //andw $r0 = $r2, 8 (0x8);;
     _32(0x0c800440),        //cb.weqz $r0? 253b8 <__swsetup_r+0x88>;;
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x088009c3),        //cb.deqz $r3? 25418 <__swsetup_r+0xe8>;;
     _32(0x0b800601),        //cb.even $r1? 253e0 <__swsetup_r+0xb0>;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0x3000080e),        //lwz $r0 = 32 (0x20)[$r14];;
     _32(0x2611030e),        //sw 12 (0xc)[$r14] = $r4;;
     _32(0x75000000),        //negw $r0 = $r0;;
     _32(0x88800683),        //cb.deqz $r3? 253fc <__swsetup_r+0xcc>
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x26010a0e),        //sw 40 (0x28)[$r14] = $r0;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xf8000401),        //andw $r0 = $r1, 16 (0x10)
     _32(0x78040101),        //andw $r1 = $r1, 4 (0x4);;
     _32(0x0c800dc0),        //cb.weqz $r0? 2549c <__swsetup_r+0x16c>;;
     _32(0x0c000941),        //cb.wnez $r1? 25458 <__swsetup_r+0x128>;;
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x6a080202),        //ord $r2 = $r2, 8 (0x8);;
     _32(0x887ffb03),        //cb.dnez $r3? 25380 <__swsetup_r+0x50>
     _32(0xe407f002),        //zxhd $r1 = $r2
     _32(0x2509040e),        //sh 16 (0x10)[$r14] = $r2;;
     _32(0x1000000f),        //goto 25418 <__swsetup_r+0xe8>;;
     _32(0xf8000081),        //andw $r0 = $r1, 2 (0x2)
     _32(0x60100000),        //make $r4 = 0 (0x0);;
     _32(0x0c000080),        //cb.wnez $r0? 253f0 <__swsetup_r+0xc0>;;
     _32(0x3010080e),        //lwz $r4 = 32 (0x20)[$r14];;
     _32(0x887ffb03),        //cb.dnez $r3? 253a0 <__swsetup_r+0x70>
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x2611030e),        //sw 12 (0xc)[$r14] = $r4;;
     _32(0x78042001),        //andw $r1 = $r1, 128 (0x80);;
     _32(0x0cfffa01),        //cb.weqz $r1? 253a0 <__swsetup_r+0x70>;;
     _32(0xfa081002),        //orw $r2 = $r2, 64 (0x40)
     _64(0x083fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x97ffffe4),        //goto 253a0 <__swsetup_r+0x70>
     _32(0x2509040e),        //sh 16 (0x10)[$r14] = $r2;;
     _64(0x00000000e800a001),        //andd $r0 = $r1, 640 (0x280);;
     _64(0x00000010f101b000),        //compw.eq $r0 = $r0, 512 (0x200);;
     _32(0x0c7ff580),        //cb.wnez $r0? 25380 <__swsetup_r+0x50>;;
     _32(0x98000a43),        //call 27d38 <__smakebuf_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x2808040e),        //lhz $r2 = 16 (0x10)[$r14];;
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x6407f002),        //zxhd $r1 = $r2;;
     _32(0x0bfff9c1),        //cb.even $r1? 253e0 <__swsetup_r+0xb0>;;
     _32(0x17ffffcf),        //goto 25384 <__swsetup_r+0x54>;;
     _32(0x9800069f),        //call 26ec8 <__sinit>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x17ffffc5),        //goto 25368 <__swsetup_r+0x38>;;
     _32(0xe1001d0e),        //addd $r0 = $r14, 116 (0x74)
     _32(0x3804160e),        //ld $r1 = 88 (0x58)[$r14];;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x088001c1),        //cb.deqz $r1? 25480 <__swsetup_r+0x150>;;
     _32(0x08000100),        //cb.dnez $r0? 25478 <__swsetup_r+0x148>;;
     _32(0x980007ad),        //call 27320 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x2808040e),        //lhz $r2 = 16 (0x10)[$r14];;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701160e),        //sd 88 (0x58)[$r14] = $r0;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _64(0xb80c060ee808f6c2),        //andd $r2 = $r2, 65499 (0xffdb)
     _32(0x0800003f),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x2601020e),        //sw 8 (0x8)[$r14] = $r0;;
     _32(0x97ffffce),        //goto 253cc <__swsetup_r+0x9c>
     _32(0x270d000e),        //sd 0 (0x0)[$r14] = $r3;;
     _32(0xe0040009),        //make $r1 = 9 (0x9)
     _32(0xfa081002),        //orw $r2 = $r2, 64 (0x40)
     _64(0x103fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x26050012),        //sw 0 (0x0)[$r18] = $r1;;
     _32(0x97ffffbc),        //goto 253a0 <__swsetup_r+0x70>
     _32(0x2509040e)        //sh 16 (0x10)[$r14] = $r2;;
 |];

let quorem: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xe1580601),        //addd $r22 = $r1, 24 (0x18)
     _32(0x28550a0c),        //so 40 (0x28)[$r12] = $r20r21r22r23;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xea4c0001),        //copyd $r19 = $r1
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0xe1600612),        //addd $r24 = $r18, 24 (0x18)
     _32(0x2861120c),        //sq 72 (0x48)[$r12] = $r24r25;;
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0x30540501),        //lwz $r21 = 20 (0x14)[$r1];;
     _32(0x30000500),        //lwz $r0 = 20 (0x14)[$r0];;
     _32(0x715cffd5),        //addw $r23 = $r21, -1 (0xffffffff);;
     _32(0xe95ff017),        //sxwd $r23 = $r23
     _32(0xf201b540),        //compw.lt $r0 = $r0, $r21
     _32(0x7154ffd5),        //addw $r21 = $r21, -1 (0xffffffff);;
     _32(0x793a2097),        //slld $r14 = $r23, 2 (0x2);;
     _32(0x0c001940),        //cb.wnez $r0? 25698 <quorem+0x1e0>;;
     _32(0xf1590396),        //addd $r22 = $r22, $r14
     _32(0xf1390398),        //addd $r14 = $r24, $r14
     _32(0x3006f5d6),        //lwz.xs $r1 = $r23[$r22];;
     _32(0x3066f5d8),        //lwz.xs $r25 = $r23[$r24];;
     _32(0xf1500041),        //addw $r20 = $r1, 1 (0x1)
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x980031c6),        //call 31c38 <__udivdi3>
     _32(0xea000019),        //copyd $r0 = $r25
     _32(0x7665b519),        //compw.ltu $r25 = $r25, $r20;;
     _32(0x7850ffc0),        //zxwd $r20 = $r0;;
     _32(0x0c000b99),        //cb.wnez $r25? 255e8 <quorem+0x130>;;
     _32(0xe0040018),        //make $r1 = 24 (0x18)
     _32(0xe0140000),        //make $r5 = 0 (0x0)
     _32(0x60200000),        //make $r8 = 0 (0x0);;
     _32(0x301ae053),        //lwz $r6 = $r1[$r19];;
     _32(0x300ee052),        //lwz $r3 = $r1[$r18];;
     _32(0xe403f006),        //zxhd $r0 = $r6
     _32(0x7b1e3406),        //srlw $r7 = $r6, 16 (0x10);;
     _32(0xe40bf003),        //zxhd $r2 = $r3
     _32(0xfb0e3403),        //srlw $r3 = $r3, 16 (0x10)
     _32(0x53143500),        //maddw $r5 = $r0, $r20;;
     _32(0x71091202),        //addw $r2 = $r2, $r8;;
     _32(0xe413f005),        //zxhd $r4 = $r5
     _32(0x7b1a3405),        //srlw $r6 = $r5, 16 (0x10);;
     _32(0xfa140006),        //copyw $r5 = $r6
     _32(0x75111084),        //sbfw $r4 = $r4, $r2;;
     _32(0xe413f004),        //zxhd $r4 = $r4
     _32(0xfa023404),        //sraw $r0 = $r4, 16 (0x10)
     _32(0x53143507),        //maddw $r5 = $r7, $r20;;
     _32(0xe40bf005),        //zxhd $r2 = $r5
     _32(0x7b163405),        //srlw $r5 = $r5, 16 (0x10);;
     _32(0xf50910c2),        //sbfw $r2 = $r2, $r3
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x71091002),        //addw $r2 = $r2, $r0;;
     _32(0xf9023402),        //sllw $r0 = $r2, 16 (0x10)
     _32(0x7a0a3402),        //sraw $r2 = $r2, 16 (0x10);;
     _32(0xfa111100),        //orw $r4 = $r0, $r4
     _32(0x7820ffc2),        //zxwd $r8 = $r2;;
     _32(0xe1040101),        //addd $r1 = $r1, 4 (0x4)
     _32(0x2613e052),        //sw $r1[$r18] = $r4;;
     _32(0x71010053),        //addd $r0 = $r19, $r1;;
     _32(0x7701a016),        //compd.geu $r0 = $r22, $r0;;
     _32(0x087ff900),        //cb.dnez $r0? 25540 <quorem+0x88>;;
     _32(0x3002f5d8),        //lwz.xs $r0 = $r23[$r24];;
     _32(0x0c000300),        //cb.wnez $r0? 255e8 <quorem+0x130>;;
     _32(0x6138ff0e),        //addd $r14 = $r14, -4 (0xfffffffc);;
     _32(0x7601a398),        //compd.ltu $r0 = $r24, $r14;;
     _32(0x08000100),        //cb.dnez $r0? 255d4 <quorem+0x11c>;;
     _32(0x10000007),        //goto 255e4 <quorem+0x12c>;;
     _32(0x88000181),        //cb.dnez $r1? 255e4 <quorem+0x12c>
     _32(0x7154ffd5),        //addw $r21 = $r21, -1 (0xffffffff);;
     _32(0xe138ff0e),        //addd $r14 = $r14, -4 (0xfffffffc)
     _32(0x3000000e),        //lwz $r0 = 0 (0x0)[$r14];;
     _32(0x7705a398),        //compd.geu $r1 = $r24, $r14;;
     _32(0x0cfffec0),        //cb.weqz $r0? 255cc <quorem+0x114>;;
     _32(0x26550512),        //sw 20 (0x14)[$r18] = $r21;;
     _32(0x9800102a),        //call 29690 <__mcmp>
     _32(0xea040013),        //copyd $r1 = $r19
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0d000a00),        //cb.wltz $r0? 25694 <quorem+0x1dc>;;
     _32(0xf1500054),        //addw $r20 = $r20, 1 (0x1)
     _32(0xe0140018),        //make $r5 = 24 (0x18)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x300ee152),        //lwz $r3 = $r5[$r18];;
     _32(0x3006e153),        //lwz $r1 = $r5[$r19];;
     _32(0xe413f003),        //zxhd $r4 = $r3
     _32(0x7b0e3403),        //srlw $r3 = $r3, 16 (0x10);;
     _32(0xe41bf001),        //zxhd $r6 = $r1
     _32(0xfb0a3401),        //srlw $r2 = $r1, 16 (0x10)
     _32(0x71111004),        //addw $r4 = $r4, $r0;;
     _32(0xf50910c2),        //sbfw $r2 = $r2, $r3
     _32(0x750d1106),        //sbfw $r3 = $r6, $r4;;
     _32(0xe40ff003),        //zxhd $r3 = $r3
     _32(0x7a023403),        //sraw $r0 = $r3, 16 (0x10);;
     _32(0x71091002),        //addw $r2 = $r2, $r0;;
     _32(0xf9063402),        //sllw $r1 = $r2, 16 (0x10)
     _32(0x7a0a3402),        //sraw $r2 = $r2, 16 (0x10);;
     _32(0xfa0d10c1),        //orw $r3 = $r1, $r3
     _32(0x7800ffc2),        //zxwd $r0 = $r2;;
     _32(0xe1140105),        //addd $r5 = $r5, 4 (0x4)
     _32(0x260fe152),        //sw $r5[$r18] = $r3;;
     _32(0x71050153),        //addd $r1 = $r19, $r5;;
     _32(0x7705a056),        //compd.geu $r1 = $r22, $r1;;
     _32(0x087ffb01),        //cb.dnez $r1? 25604 <quorem+0x14c>;;
     _32(0xe907f015),        //sxwd $r1 = $r21
     _32(0x72018615),        //addx4wd $r0 = $r21, $r24;;
     _32(0x3006f058),        //lwz.xs $r1 = $r1[$r24];;
     _32(0x0c000301),        //cb.wnez $r1? 25694 <quorem+0x1dc>;;
     _32(0x6100ff00),        //addd $r0 = $r0, -4 (0xfffffffc);;
     _32(0x7605a018),        //compd.ltu $r1 = $r24, $r0;;
     _32(0x08000101),        //cb.dnez $r1? 25680 <quorem+0x1c8>;;
     _32(0x10000007),        //goto 25690 <quorem+0x1d8>;;
     _32(0x88000182),        //cb.dnez $r2? 25690 <quorem+0x1d8>
     _32(0x7154ffd5),        //addw $r21 = $r21, -1 (0xffffffff);;
     _32(0xe100ff00),        //addd $r0 = $r0, -4 (0xfffffffc)
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x7709a018),        //compd.geu $r2 = $r24, $r0;;
     _32(0x0cfffec1),        //cb.weqz $r1? 25678 <quorem+0x1c0>;;
     _32(0x26550512),        //sw 20 (0x14)[$r18] = $r21;;
     _32(0x7850ffd4),        //zxwd $r20 = $r20;;
     _32(0xfa000014),        //copyw $r0 = $r20
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c540a0c),        //lo $r20r21r22r23 = 40 (0x28)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c60120c),        //lq $r24r25 = 72 (0x48)[$r12];;
     _32(0x7f03f000)        //nop ;;
 |];

let _dtoa_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130c80c),        //addd $r12 = $r12, -224 (0xffffff20);;
     _32(0xf854ffc2),        //zxwd $r21 = $r2
     _32(0xea580004),        //copyd $r22 = $r4
     _32(0xea500005),        //copyd $r20 = $r5
     _32(0x2855080c),        //so 32 (0x20)[$r12] = $r20r21r22r23;;
     _32(0xea480006),        //copyd $r18 = $r6
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea4c000e),        //copyd $r19 = $r14
     _32(0xf868ffc3),        //zxwd $r26 = $r3
     _32(0x2865100c),        //so 64 (0x40)[$r12] = $r24r25r26r27;;
     _32(0xea780000),        //copyd $r30 = $r0
     _32(0x2875180c),        //so 96 (0x60)[$r12] = $r28r29r30r31;;
     _32(0x2741200c),        //sd 128 (0x80)[$r12] = $r16;;
     _32(0x38041800),        //ld $r1 = 96 (0x60)[$r0];;
     _32(0x08800201),        //cb.deqz $r1? 25728 <_dtoa_r+0x68>;;
     _32(0x300c1a00),        //lwz $r3 = 104 (0x68)[$r0];;
     _32(0x260d0201),        //sw 8 (0x8)[$r1] = $r3;;
     _32(0x790a70c2),        //sllw $r2 = $r2, $r3;;
     _32(0x98000dac),        //call 28dc8 <_Bfree>
     _32(0x26090301),        //sw 12 (0xc)[$r1] = $r2;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701181e),        //sd 96 (0x60)[$r30] = $r0;;
     _32(0xe703f80e),        //extfz $r0 = $r14, 63 (0x3f), 32 (0x20)
     _32(0xfb5e280e),        //srld $r23 = $r14, 32 (0x20)
     _32(0x6a6c000e),        //copyd $r27 = $r14;;
     _32(0x0d005540),        //cb.wltz $r0? 25c88 <_dtoa_r+0x5c8>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0xa6010014fe000017),        //andnw $r0 = $r23, 2146435072 (0x7ff00000)
     _32(0x001ffc00),        //sw 0 (0x0)[$r20] = $r0;;
     _32(0x0c805640),        //cb.weqz $r0? 25cac <_dtoa_r+0x5ec>;;
     _64(0x00000000fb03001b),        //fcompd.une $r0 = $r27, 0 (0x0);;
     _32(0x080004c0),        //cb.dnez $r0? 257a0 <_dtoa_r+0xe0>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _96(0x0800000088000134e04c9440),        //make $r19 = 315985 (0x4d251);;
     _32(0x88807bd2),        //cb.deqz $r18? 25f24 <_dtoa_r+0x864>
     _32(0x26010016),        //sw 0 (0x0)[$r22] = $r0;;
     _32(0xe14cffd3),        //addd $r19 = $r19, -1 (0xffffffff)
     _32(0x274d0012),        //sd 0 (0x0)[$r18] = $r19;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3840200c),        //ld $r16 = 128 (0x80)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54080c),        //lo $r20r21r22r23 = 32 (0x20)[$r12];;
     _32(0x3c64100c),        //lo $r24r25r26r27 = 64 (0x40)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130380c),        //addd $r12 = $r12, 224 (0xe0)
     _32(0x3c74180c),        //lo $r28r29r30r31 = 96 (0x60)[$r12];;
     _32(0x980010e6),        //call 29b38 <__d2b>
     _32(0xe108360c),        //addd $r2 = $r12, 216 (0xd8)
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0xe10c340c),        //addd $r3 = $r12, 208 (0xd0)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xfb062517),        //srld $r1 = $r23, 20 (0x14)
     _32(0xfb0a3517),        //srlw $r2 = $r23, 20 (0x14)
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x08005201),        //cb.dnez $r1? 25ce0 <_dtoa_r+0x620>;;
     _32(0xf838ffce),        //zxwd $r14 = $r14
     _32(0x3010340c),        //lwz $r4 = 208 (0xd0)[$r12];;
     _32(0x3008360c),        //lwz $r2 = 216 (0xd8)[$r12];;
     _32(0x71091102),        //addw $r2 = $r2, $r4;;
     _64(0x00000001f1000c82),        //addw $r0 = $r2, 1074 (0x432);;
     _64(0x00000001f405b000),        //compw.le $r1 = $r0, 32 (0x20);;
     _32(0x0c007501),        //cb.wnez $r1? 25f34 <_dtoa_r+0x874>;;
     _32(0xf5041000),        //sbfw $r1 = $r0, 64 (0x40)
     _64(0x08000001f1000482),        //addw $r0 = $r2, 1042 (0x412);;
     _32(0xf95e7057),        //sllw $r23 = $r23, $r1
     _32(0x7b02700e),        //srlw $r0 = $r14, $r0;;
     _32(0x7a011017),        //orw $r0 = $r23, $r0;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xf108ffc2),        //addw $r2 = $r2, -1 (0xffffffff)
     _32(0x45030000),        //floatud.rn $r0 = $r0, 0 (0x0);;
     _32(0x27052a0c),        //sd 168 (0xa8)[$r12] = $r1;;
     _32(0x6707f800),        //extfz $r1 = $r0, 63 (0x3f), 32 (0x20);;
     _64(0x07ff8400f1040001),        //addw $r1 = $r1, -32505856 (0xfffffffffe100000);;
     _32(0x6303f801),        //insf $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0xe90ff002),        //sxwd $r3 = $r2
     _96(0x88000000e020d840e0240000),        //make $r9 = 4609434218613702656 (0x3ff8000000000000)
     _96(0x11fe943d91d8dbd089ffc000),        //make $r8 = 4598887322496222049 (0x3fd287a7636f4361);;
     _96(0xd4027009e0147ec0e0042cc0),        //make $r1 = 4595512376519870643 (0x3fc68a288b60c8b3)
     _96(0x8cd427de81fe34518222d832),        //make $r5 = 4599094494223104507 (0x3fd34413509f79fb)
     _32(0x09fe9a20),        //fsbfd $r0 = $r9, $r0;;
     _32(0x440f0003),        //floatd.rn $r3 = $r3, 0 (0x0);;
     _32(0x50057200),        //ffmad $r1 = $r0, $r8;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x50017143),        //ffmad $r0 = $r3, $r5;;
     _64(0xc6173000fc070000),        //fcompd.olt $r1 = $r0, 0 (0x0)
     _32(0x00000000),        //fixedd.rz $r5 = $r0, 0 (0x0);;
     _32(0x888001c1),        //cb.deqz $r1? 25890 <_dtoa_r+0x1d0>
     _32(0x7874ffc5),        //zxwd $r29 = $r5;;
     _32(0xe907f01d),        //sxwd $r1 = $r29
     _32(0x710cffdd),        //addw $r3 = $r29, -1 (0xffffffff);;
     _32(0x44070001),        //floatd.rn $r1 = $r1, 0 (0x0);;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x717600c0),        //cmoved.deqz $r0? $r29 = $r3;;
     _32(0xf5091102),        //sbfw $r2 = $r2, $r4
     _64(0x08000000f901b59d),        //compw.gtu $r0 = $r29, 22 (0x16);;
     _32(0xf104ffc2),        //addw $r1 = $r2, -1 (0xffffffff)
     _32(0x717cffc2),        //addw $r31 = $r2, -1 (0xffffffff);;
     _32(0x0c006440),        //cb.wnez $r0? 25ee8 <_dtoa_r+0x828>;;
     _32(0xe90ff01d),        //sxwd $r3 = $r29
     _96(0x0800000088000131e0005e00),        //make $r0 = 312696 (0x4c578);;
     _32(0x3802f0c0),        //ld.xs $r0 = $r3[$r0];;
     _32(0x7c03001b),        //fcompd.olt $r0 = $r27, $r0;;
     _32(0x088044c0),        //cb.deqz $r0? 25d0c <_dtoa_r+0x64c>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x7174ffdd),        //addw $r29 = $r29, -1 (0xffffffff);;
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0x0d0044c1),        //cb.wltz $r1? 25d1c <_dtoa_r+0x65c>;;
     _32(0x8d80455d),        //cb.wgez $r29? 25d28 <_dtoa_r+0x668>
     _32(0x60640000),        //make $r25 = 0 (0x0);;
     _32(0xf500001d),        //negw $r0 = $r29
     _32(0xf565165d),        //sbfw $r25 = $r29, $r25
     _32(0xea60001d),        //copyd $r24 = $r29
     _32(0x60740000),        //make $r29 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0xa701260cf901b255),        //compw.gtu $r0 = $r21, 9 (0x9)
     _32(0x00000000),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x0c004480),        //cb.wnez $r0? 25d44 <_dtoa_r+0x684>;;
     _32(0xe0700001),        //make $r28 = 1 (0x1)
     _64(0x08000000f401b155),        //compw.le $r0 = $r21, 5 (0x5);;
     _32(0x0c0000c0),        //cb.wnez $r0? 25918 <_dtoa_r+0x258>;;
     _32(0xf154ff15),        //addw $r21 = $r21, -4 (0xfffffffc)
     _32(0x60700000),        //make $r28 = 0 (0x0);;
     _64(0x00000000f101b115),        //compw.eq $r0 = $r21, 4 (0x4);;
     _32(0x0c00bec0),        //cb.wnez $r0? 2650c <_dtoa_r+0xe4c>;;
     _64(0x00000000f101b155),        //compw.eq $r0 = $r21, 5 (0x5);;
     _32(0x0c0087c0),        //cb.wnez $r0? 261a8 <_dtoa_r+0xae8>;;
     _64(0x00000000f101b095),        //compw.eq $r0 = $r21, 2 (0x2);;
     _32(0x0c805bc0),        //cb.weqz $r0? 25ef4 <_dtoa_r+0x834>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0x0e009ada),        //cb.wlez $r26? 262f0 <_dtoa_r+0xc30>;;
     _32(0xea5c001a),        //copyd $r23 = $r26
     _32(0xea10001a),        //copyd $r4 = $r26
     _32(0x27692c0c),        //sd 176 (0xb0)[$r12] = $r26;;
     _32(0xe913f004),        //sxwd $r4 = $r4
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _64(0xf801b397f405b7c4),        //compw.le $r1 = $r4, 31 (0x1f)
     _64(0x1800000090000000),        //compw.leu $r0 = $r23, 14 (0xe);;
     _32(0xf871001c),        //andd $r28 = $r28, $r0
     _32(0xe0080004),        //make $r2 = 4 (0x4)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x26091a1e),        //sw 104 (0x68)[$r30] = $r2;;
     _32(0x0c00f301),        //cb.wnez $r1? 268ac <_dtoa_r+0x11ec>;;
     _32(0xf90a3042),        //sllw $r2 = $r2, 1 (0x1)
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0xf808ffc2f80d4702),        //addwd $r3 = $r2, 28 (0x1c)
     _32(0x00000000),        //zxwd $r2 = $r2;;
     _32(0x770da0c4),        //compd.geu $r3 = $r4, $r3;;
     _32(0x087ffe43),        //cb.dnez $r3? 25980 <_dtoa_r+0x2c0>;;
     _32(0x26051a1e),        //sw 104 (0x68)[$r30] = $r1;;
     _32(0x98000cdf),        //call 28d20 <_Balloc>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x8880111c),        //cb.deqz $r28? 25abc <_dtoa_r+0x3fc>
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0x2701181e),        //sd 96 (0x60)[$r30] = $r0;;
     _32(0x8e006e18),        //cb.wlez $r24? 26098 <_dtoa_r+0x9d8>
     _32(0x7a0a3118),        //sraw $r2 = $r24, 4 (0x4);;
     _32(0xf80c0402),        //andw $r3 = $r2, 16 (0x10)
     _32(0xe80403d8),        //andd $r1 = $r24, 15 (0xf)
     _32(0xea00001b),        //copyd $r0 = $r27
     _96(0x1800000098000131e0105e00),        //make $r4 = 312696 (0x4c578);;
     _32(0xe04c0002),        //make $r19 = 2 (0x2)
     _32(0xf838ffc2),        //zxwd $r14 = $r2
     _32(0x3872f044),        //ld.xs $r28 = $r1[$r4];;
     _32(0x0c800203),        //cb.weqz $r3? 25a04 <_dtoa_r+0x344>;;
     _32(0xe83803c2),        //andd $r14 = $r2, 15 (0xf)
     _32(0xe04c0003),        //make $r19 = 3 (0x3)
     _96(0x1000000090000131e0045400),        //make $r1 = 312656 (0x4c550);;
     _32(0x98003139),        //call 31ee0 <__divdf3>
     _32(0x38040801),        //ld $r1 = 32 (0x20)[$r1];;
     _32(0x0880034e),        //cb.deqz $r14? 25a38 <_dtoa_r+0x378>;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _96(0x0800000088000131e0105400),        //make $r4 = 312656 (0x4c550);;
     _32(0x8b80014e),        //cb.even $r14? 25a2c <_dtoa_r+0x36c>
     _32(0x7a06304e),        //sraw $r1 = $r14, 1 (0x1);;
     _32(0xf14c0053),        //addw $r19 = $r19, 1 (0x1)
     _32(0x380ef084),        //ld.xs $r3 = $r2[$r4];;
     _32(0x587170dc),        //fmuld $r28 = $r28, $r3;;
     _32(0x8c7ffec1),        //cb.wnez $r1? 25a18 <_dtoa_r+0x358>
     _32(0xf838ffc1),        //zxwd $r14 = $r1
     _32(0x61080042),        //addd $r2 = $r2, 1 (0x1);;
     _32(0x9800312a),        //call 31ee0 <__divdf3>
     _32(0x6a04001c),        //copyd $r1 = $r28;;
     _32(0x3804280c),        //ld $r1 = 160 (0xa0)[$r12];;
     _32(0x08800181),        //cb.deqz $r1? 25a5c <_dtoa_r+0x39c>;;
     _96(0x01ff800080000000e0040000),        //make $r1 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x7c070040),        //fcompd.olt $r1 = $r0, $r1;;
     _32(0x08004ec1),        //cb.dnez $r1? 25f44 <_dtoa_r+0x884>;;
     _32(0xe94ff013),        //sxwd $r19 = $r19
     _32(0xea240018),        //copyd $r9 = $r24
     _32(0xea0c0017),        //copyd $r3 = $r23
     _96(0x1a00e00098000000e0080000),        //make $r2 = 4619567317775286272 (0x401c000000000000);;
     _32(0x444f0013),        //floatd.rn $r19 = $r19, 0 (0x0);;
     _32(0x50097013),        //ffmad $r2 = $r19, $r0;;
     _32(0xe707f802),        //extfz $r1 = $r2, 63 (0x3f), 32 (0x20)
     _32(0x6a4c0002),        //copyd $r19 = $r2;;
     _64(0x07ff3000f1040001),        //addw $r1 = $r1, -54525952 (0xfffffffffcc00000);;
     _32(0x880050d7),        //cb.dnez $r23? 25f98 <_dtoa_r+0x8d8>
     _32(0x634ff801),        //insf $r19 = $r1, 63 (0x3f), 32 (0x20);;
     _96(0x0200a00080000000e0080000),        //make $r2 = 4617315517961601024 (0x4014000000000000);;
     _32(0xf00b2013),        //fnegd $r2 = $r19
     _32(0x543a7002),        //fsbfd $r14 = $r2, $r0;;
     _32(0x7c030393),        //fcompd.olt $r0 = $r19, $r14;;
     _32(0x0800acc0),        //cb.dnez $r0? 26578 <_dtoa_r+0xeb8>;;
     _32(0x7c0b008e),        //fcompd.olt $r2 = $r14, $r2;;
     _32(0x08009942),        //cb.dnez $r2? 26448 <_dtoa_r+0xd88>;;
     _32(0x6a4c001b),        //copyd $r19 = $r27;;
     _32(0xea700019),        //copyd $r28 = $r25
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _64(0xb008360cf401b398),        //compw.le $r0 = $r24, 14 (0xe)
     _32(0x10000000),        //lwz $r2 = 216 (0xd8)[$r12];;
     _32(0x7c04ffc2),        //notw $r1 = $r2;;
     _32(0x7b0637c1),        //srlw $r1 = $r1, 31 (0x1f);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c006380),        //cb.wnez $r0? 26114 <_dtoa_r+0xa54>;;
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x386c260c),        //ld $r27 = 152 (0x98)[$r12];;
     _32(0x08800600),        //cb.deqz $r0? 25b48 <_dtoa_r+0x488>;;
     _32(0xf10cffd7),        //addw $r3 = $r23, -1 (0xffffffff)
     _32(0xf104ffd7),        //addw $r1 = $r23, -1 (0xffffffff)
     _64(0x10000000f501b055),        //compw.gt $r0 = $r21, 1 (0x1);;
     _32(0x0c80a400),        //cb.weqz $r0? 2653c <_dtoa_r+0xe7c>;;
     _32(0x3808260c),        //ld $r2 = 152 (0x98)[$r12];;
     _32(0xf201b0c2),        //compw.lt $r0 = $r2, $r3
     _32(0x756d1083),        //sbfw $r27 = $r3, $r2;;
     _32(0x0c800180),        //cb.weqz $r0? 25b24 <_dtoa_r+0x464>;;
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x2705260c),        //sd 152 (0x98)[$r12] = $r1;;
     _32(0x750110c0),        //sbfw $r0 = $r0, $r3;;
     _32(0x71751740),        //addw $r29 = $r0, $r29;;
     _32(0x8d000157),        //cb.wltz $r23? 25b38 <_dtoa_r+0x478>
     _32(0x75711657),        //sbfw $r28 = $r23, $r25;;
     _32(0xea700019),        //copyd $r28 = $r25
     _32(0xf17d15df),        //addw $r31 = $r31, $r23
     _32(0x716515d9),        //addw $r25 = $r25, $r23;;
     _32(0x98000d88),        //call 29158 <__i2b>
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x6a380000),        //copyd $r14 = $r0;;
     _64(0xf505b01ff501b01c),        //compw.gt $r0 = $r28, 0 (0x0)
     _64(0x0800000080000000),        //compw.gt $r1 = $r31, 0 (0x0);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c800140),        //cb.weqz $r0? 25b70 <_dtoa_r+0x4b0>;;
     _32(0x720117dc),        //minw $r0 = $r28, $r31;;
     _32(0xf5651640),        //sbfw $r25 = $r0, $r25
     _32(0xf5711700),        //sbfw $r28 = $r0, $r28
     _32(0x757d17c0),        //sbfw $r31 = $r0, $r31;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x08800200),        //cb.deqz $r0? 25b94 <_dtoa_r+0x4d4>;;
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x08809e40),        //cb.deqz $r0? 26560 <_dtoa_r+0xea0>;;
     _32(0x0e808d5b),        //cb.wgtz $r27? 26454 <_dtoa_r+0xd94>;;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0xf501105b),        //sbfw $r0 = $r27, $r1
     _32(0x7509105b),        //sbfw $r2 = $r27, $r1;;
     _32(0x08009000),        //cb.dnez $r0? 26490 <_dtoa_r+0xdd0>;;
     _32(0x98000d71),        //call 29158 <__i2b>
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x0e805c5d),        //cb.wgtz $r29? 26164 <_dtoa_r+0xaa4>;;
     _32(0xea6c0000),        //copyd $r27 = $r0
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _64(0x10000000f501b055),        //compw.gt $r0 = $r21, 1 (0x1);;
     _32(0x2705260c),        //sd 152 (0x98)[$r12] = $r1;;
     _32(0x0c809600),        //cb.weqz $r0? 26518 <_dtoa_r+0xe58>;;
     _32(0x88005d1d),        //cb.dnez $r29? 2618c <_dtoa_r+0xacc>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x710117c0),        //addw $r0 = $r0, $r31;;
     _32(0xe80407c0),        //andd $r1 = $r0, 31 (0x1f)
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x08804b01),        //cb.deqz $r1? 26080 <_dtoa_r+0x9c0>;;
     _32(0x75040800),        //sbfw $r1 = $r0, 32 (0x20);;
     _64(0x00000000f409b101),        //compw.le $r2 = $r1, 4 (0x4);;
     _32(0x0c00cb42),        //cb.wnez $r2? 26894 <_dtoa_r+0x11d4>;;
     _32(0x75000700),        //sbfw $r0 = $r0, 28 (0x1c);;
     _32(0xf1651640),        //addw $r25 = $r0, $r25
     _32(0xf1711700),        //addw $r28 = $r0, $r28
     _32(0x717d17c0),        //addw $r31 = $r0, $r31;;
     _32(0x0e802dd9),        //cb.wgtz $r25? 25ed0 <_dtoa_r+0x810>;;
     _32(0x0e00019f),        //cb.wlez $r31? 25c10 <_dtoa_r+0x550>;;
     _32(0x98000e43),        //call 29508 <__lshift>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0xfa08001f),        //copyw $r2 = $r31
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x6a6c0000),        //copyd $r27 = $r0;;
     _64(0x00000000f501b095),        //compw.gt $r0 = $r21, 2 (0x2);;
     _32(0xe8640040),        //andd $r25 = $r0, 1 (0x1)
     _32(0x3800280c),        //ld $r0 = 160 (0xa0)[$r12];;
     _32(0x08005940),        //cb.dnez $r0? 261b4 <_dtoa_r+0xaf4>;;
     _64(0x00000000f401b017),        //compw.le $r0 = $r23, 0 (0x0);;
     _32(0x78011640),        //andw $r0 = $r0, $r25;;
     _32(0x0c801600),        //cb.weqz $r0? 25d90 <_dtoa_r+0x6d0>;;
     _32(0x08807a17),        //cb.deqz $r23? 263d4 <_dtoa_r+0xd14>;;
     _32(0xfc60ffda),        //notw $r24 = $r26
     _32(0x6a4c0014),        //copyd $r19 = $r20;;
     _32(0x7860ffd8),        //zxwd $r24 = $r24;;
     _32(0x98000c61),        //call 28dc8 <_Bfree>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x8880014e),        //cb.deqz $r14? 25c64 <_dtoa_r+0x5a4>
     _32(0x71600058),        //addw $r24 = $r24, 1 (0x1);;
     _32(0x98000c5c),        //call 28dc8 <_Bfree>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x98000c59),        //call 28dc8 <_Bfree>
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x24010014),        //sb 0 (0x0)[$r20] = $r0;;
     _32(0x88ffb012),        //cb.deqz $r18? 25778 <_dtoa_r+0xb8>
     _32(0x26610016),        //sw 0 (0x0)[$r22] = $r24;;
     _32(0x97fffebe),        //goto 25778 <_dtoa_r+0xb8>
     _32(0x27510012),        //sd 0 (0x0)[$r18] = $r20;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _64(0x081fffffe85cffc0),        //andd $r23 = $r0, 2147483647 (0x7fffffff);;
     _32(0xe34ff817),        //insf $r19 = $r23, 63 (0x3f), 32 (0x20)
     _64(0xa6010014fe000017),        //andnw $r0 = $r23, 2146435072 (0x7ff00000)
     _32(0x081ffc00),        //sw 0 (0x0)[$r20] = $r0;;
     _32(0x6a6c0013),        //copyd $r27 = $r19;;
     _32(0x0c7faa40),        //cb.wnez $r0? 2574c <_dtoa_r+0x8c>;;
     _32(0xe000270f),        //make $r0 = 9999 (0x270f)
     _96(0x08007fff8fffffffe818ffdb),        //andd $r6 = $r27, 4503599627370495 (0xfffffffffffff);;
     _32(0x26010016),        //sw 0 (0x0)[$r22] = $r0;;
     _32(0x08000b46),        //cb.dnez $r6? 25d74 <_dtoa_r+0x6b4>;;
     _32(0x88ffab52),        //cb.deqz $r18? 25778 <_dtoa_r+0xb8>
     _96(0x0000000080000134e04c9600),        //make $r19 = 315992 (0x4d258);;
     _32(0x61000213),        //addd $r0 = $r19, 8 (0x8);;
     _32(0x97fffea8),        //goto 25778 <_dtoa_r+0xb8>
     _32(0x27010012),        //sd 0 (0x0)[$r18] = $r0;;
     _32(0xe707381b),        //extfz $r1 = $r27, 51 (0x33), 32 (0x20)
     _32(0xea00001b),        //copyd $r0 = $r27
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x3010340c),        //lwz $r4 = 208 (0xd0)[$r12];;
     _64(0xf1080042fa040001),        //orw $r1 = $r1, 1072693248 (0x3ff00000)
     _64(0x800ffc00a70d2a0c),        //addw $r2 = $r2, -1023 (0xfffffffffffffc01)
     _32(0x0fffffff),        //sd 168 (0xa8)[$r12] = $r3;;
     _32(0x97fffec7),        //goto 25820 <_dtoa_r+0x160>
     _32(0x6303f801),        //insf $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x60640000),        //make $r25 = 0 (0x0);;
     _32(0x8d800141),        //cb.wgez $r1? 25d28 <_dtoa_r+0x668>
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0x8d7fbc1d),        //cb.wltz $r29? 258dc <_dtoa_r+0x21c>
     _32(0xf5640042),        //sbfw $r25 = $r2, 1 (0x1)
     _32(0x607c0000),        //make $r31 = 0 (0x0);;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xf17d17dd),        //addw $r31 = $r29, $r31
     _32(0x6a60001d),        //copyd $r24 = $r29;;
     _64(0xa701260cf901b255),        //compw.gtu $r0 = $r21, 9 (0x9)
     _32(0x00000000),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x0cffbc00),        //cb.weqz $r0? 25900 <_dtoa_r+0x240>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0xe0700000),        //make $r28 = 0 (0x0)
     _32(0xe0540000),        //make $r21 = 0 (0x0)
     _64(0x183fffffe05cffc0),        //make $r23 = 4294967295 (0xffffffff);;
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x275d2c0c),        //sd 176 (0xb0)[$r12] = $r23;;
     _32(0x97ffff0e),        //goto 259a4 <_dtoa_r+0x2e4>
     _32(0x26011a1e),        //sw 104 (0x68)[$r30] = $r0;;
     _32(0x88ffa052),        //cb.deqz $r18? 25778 <_dtoa_r+0xb8>
     _96(0x0000000080000134e04c9a00),        //make $r19 = 316008 (0x4d268);;
     _32(0x610000d3),        //addd $r0 = $r19, 3 (0x3);;
     _32(0x97fffe7c),        //goto 25778 <_dtoa_r+0xb8>
     _32(0x27010012),        //sd 0 (0x0)[$r18] = $r0;;
     _32(0xf1600058),        //addw $r24 = $r24, 1 (0x1)
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x08804680),        //cb.deqz $r0? 26200 <_dtoa_r+0xb40>;;
     _32(0x0e00019c),        //cb.wlez $r28? 25db4 <_dtoa_r+0x6f4>;;
     _32(0x98000dda),        //call 29508 <__lshift>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xfa08001c),        //copyw $r2 = $r28
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x6a380000),        //copyd $r14 = $r0;;
     _32(0xea68000e),        //copyd $r26 = $r14
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x080098c0),        //cb.dnez $r0? 26748 <_dtoa_r+0x1088>;;
     _32(0xf15cffd7),        //addw $r23 = $r23, -1 (0xffffffff)
     _32(0xea700014),        //copyd $r28 = $r20
     _32(0x784c0053),        //andw $r19 = $r19, 1 (0x1);;
     _32(0x615c0057),        //addd $r23 = $r23, 1 (0x1);;
     _32(0x715d05d4),        //addd $r23 = $r20, $r23;;
     _32(0x9ffffdb9),        //call 254b8 <quorem>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0xfa640000),        //copyw $r25 = $r0
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0xf808ffd9),        //zxwd $r2 = $r25
     _32(0x71640c19),        //addw $r25 = $r25, 48 (0x30);;
     _32(0x98000e27),        //call 29690 <__mcmp>
     _32(0x2709240c),        //sd 144 (0x90)[$r12] = $r2;;
     _32(0x98000e41),        //call 29700 <__mdiff>
     _32(0xfa7c0000),        //copyw $r31 = $r0
     _32(0xea08001a),        //copyd $r2 = $r26
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xea740000),        //copyd $r29 = $r0
     _32(0xf804ffdf),        //zxwd $r1 = $r31
     _32(0x30000400),        //lwz $r0 = 16 (0x10)[$r0];;
     _32(0xea04001d),        //copyd $r1 = $r29
     _32(0x2705260c),        //sd 152 (0x98)[$r12] = $r1;;
     _32(0x0c006b40),        //cb.wnez $r0? 264d8 <_dtoa_r+0xe18>;;
     _32(0x98000e1a),        //call 29690 <__mcmp>
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0xfa080000),        //copyw $r2 = $r0
     _32(0xea04001d),        //copyd $r1 = $r29
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x98000be3),        //call 28dc8 <_Bfree>
     _32(0x7a740002),        //copyw $r29 = $r2;;
     _32(0xfa01155d),        //orw $r0 = $r29, $r21
     _32(0x7808ffdd),        //zxwd $r2 = $r29;;
     _32(0x7a011013),        //orw $r0 = $r19, $r0;;
     _32(0x0c809c00),        //cb.weqz $r0? 26810 <_dtoa_r+0x1150>;;
     _32(0x8d008a9f),        //cb.wltz $r31? 266fc <_dtoa_r+0x103c>
     _32(0x6174005c),        //addd $r29 = $r28, 1 (0x1);;
     _32(0xfa7d155f),        //orw $r31 = $r31, $r21
     _32(0xf101a757),        //compd.eq $r0 = $r23, $r29
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0x7a7d17d3),        //orw $r31 = $r19, $r31;;
     _32(0x0c80891f),        //cb.weqz $r31? 266fc <_dtoa_r+0x103c>;;
     _32(0x0e809442),        //cb.wgtz $r2? 267b4 <_dtoa_r+0x10f4>;;
     _32(0x88009600),        //cb.dnez $r0? 267d4 <_dtoa_r+0x1114>
     _32(0x2465ffdd),        //sb -1 (0xffffffff)[$r29] = $r25;;
     _32(0x98000bdb),        //call 28de8 <__multadd>
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0xf005a68e),        //compd.ne $r1 = $r14, $r26
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x6a70001d),        //copyd $r28 = $r29;;
     _32(0x08806441),        //cb.deqz $r1? 264e8 <_dtoa_r+0xe28>;;
     _32(0x98000bd0),        //call 28de8 <__multadd>
     _32(0x6a04000e),        //copyd $r1 = $r14;;
     _32(0xea04001a),        //copyd $r1 = $r26
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x6008000a),        //make $r2 = 10 (0xa);;
     _32(0x98000bca),        //call 28de8 <__multadd>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x97ffffc3),        //goto 25dd4 <_dtoa_r+0x714>
     _32(0x6a680000),        //copyd $r26 = $r0;;
     _32(0x98000d8e),        //call 29508 <__lshift>
     _32(0xfa080019),        //copyw $r2 = $r25
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x97ffff46),        //goto 25bf8 <_dtoa_r+0x538>
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97fffe79),        //goto 258d0 <_dtoa_r+0x210>
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _64(0x08000000f101b0d5),        //compw.eq $r0 = $r21, 3 (0x3);;
     _32(0x2705240c),        //sd 144 (0x90)[$r12] = $r1;;
     _32(0x0c809b00),        //cb.weqz $r0? 268b4 <_dtoa_r+0x11f4>;;
     _32(0xf15d161a),        //addw $r23 = $r26, $r24
     _32(0x7101161a),        //addw $r0 = $r26, $r24;;
     _32(0xf1100057),        //addw $r4 = $r23, 1 (0x1)
     _32(0xf15c0057),        //addw $r23 = $r23, 1 (0x1)
     _32(0x27012c0c),        //sd 176 (0xb0)[$r12] = $r0;;
     _32(0x97fffe8e),        //goto 25954 <_dtoa_r+0x294>
     _32(0x73100044),        //maxw $r4 = $r4, 1 (0x1);;
     _32(0x97fffe15),        //goto 25778 <_dtoa_r+0xb8>
     _96(0x0000000080000134e04c9400),        //make $r19 = 315984 (0x4d250);;
     _32(0x75000800),        //sbfw $r0 = $r0, 32 (0x20);;
     _32(0x7902700e),        //sllw $r0 = $r14, $r0;;
     _32(0x97fffe31),        //goto 25800 <_dtoa_r+0x140>
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088076d7),        //cb.deqz $r23? 266b0 <_dtoa_r+0xff0>;;
     _32(0xf1040053),        //addw $r1 = $r19, 1 (0x1)
     _96(0xb8102c0ce0080000e00c0000),        //make $r3 = 4621819117588971520 (0x4024000000000000)
     _96(0x900000008a01200088000000),        //make $r2 = 4619567317775286272 (0x401c000000000000)
     _32(0x1200e000),        //ld $r4 = 176 (0xb0)[$r12];;
     _32(0xe907f001),        //sxwd $r1 = $r1
     _32(0x7124ffd8),        //addw $r9 = $r24, -1 (0xffffffff);;
     _32(0x0e7fb484),        //cb.wlez $r4? 25ab8 <_dtoa_r+0x3f8>;;
     _32(0xea0c0004),        //copyd $r3 = $r4
     _32(0x580170c0),        //fmuld $r0 = $r0, $r3;;
     _32(0x44070001),        //floatd.rn $r1 = $r1, 0 (0x0);;
     _32(0x50097040),        //ffmad $r2 = $r0, $r1;;
     _32(0xe707f802),        //extfz $r1 = $r2, 63 (0x3f), 32 (0x20)
     _32(0x6a4c0002),        //copyd $r19 = $r2;;
     _64(0x07ff3000f1040001),        //addw $r1 = $r1, -54525952 (0xfffffffffcc00000);;
     _32(0x634ff801),        //insf $r19 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0xf104ffc3),        //addw $r1 = $r3, -1 (0xffffffff)
     _32(0xe12c0054),        //addd $r11 = $r20, 1 (0x1)
     _32(0xc60b3000),        //fixedd.rz $r2 = $r0, 0 (0x0)
     _96(0x1800000098000131e0105e00),        //make $r4 = 312696 (0x4c578);;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x3806f044),        //ld.xs $r1 = $r1[$r4];;
     _32(0xe93bf002),        //sxwd $r14 = $r2
     _32(0x71080c02),        //addw $r2 = $r2, 48 (0x30);;
     _32(0xf8703fc2),        //zxbd $r28 = $r2
     _32(0x443b000e),        //floatd.rn $r14 = $r14, 0 (0x0);;
     _32(0xd43a700e),        //fsbfd $r14 = $r14, $r0
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x080032c0),        //cb.dnez $r0? 262fc <_dtoa_r+0xc3c>;;
     _32(0xf128ff83),        //addw $r10 = $r3, -2 (0xfffffffe)
     _64(0xd84d74c1f001b043),        //compw.ne $r0 = $r3, 1 (0x1)
     _32(0xa4710014),        //fmuld $r19 = $r1, $r19
     _32(0x08000000),        //sb 0 (0x0)[$r20] = $r28;;
     _32(0xe108008a),        //addd $r2 = $r10, 2 (0x2)
     _32(0xea0c000b),        //copyd $r3 = $r11
     _96(0x1201200090000000e0100000),        //make $r4 = 4621819117588971520 (0x4024000000000000);;
     _32(0x8c808440),        //cb.weqz $r0? 26840 <_dtoa_r+0x1180>
     _32(0x71090094),        //addd $r2 = $r20, $r2;;
     _32(0x7509008b),        //sbfd $r2 = $r11, $r2;;
     _32(0x0f000242),        //loopdo $r2, 2602c <_dtoa_r+0x96c>;;
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x5839710e),        //fmuld $r14 = $r14, $r4;;
     _32(0x4603300e),        //fixedd.rz $r0 = $r14, 0 (0x0);;
     _32(0xe907f000),        //sxwd $r1 = $r0
     _32(0x71000c00),        //addw $r0 = $r0, 48 (0x30);;
     _32(0xc4070001),        //floatd.rn $r1 = $r1, 0 (0x0)
     _32(0x2401ffc3),        //sb -1 (0xffffffff)[$r3] = $r0;;
     _32(0x543a7381),        //fsbfd $r14 = $r1, $r14;;
     _32(0x6128004a),        //addd $r10 = $r10, 1 (0x1);;
     _32(0x7171028b),        //addd $r28 = $r11, $r10;;
     _96(0x01ff000080000000e0040000),        //make $r1 = 4602678819172646912 (0x3fe0000000000000);;
     _32(0x50027053),        //faddd $r0 = $r19, $r1;;
     _32(0x7c030380),        //fcompd.olt $r0 = $r0, $r14;;
     _32(0x080053c0),        //cb.dnez $r0? 26584 <_dtoa_r+0xec4>;;
     _32(0x54067053),        //fsbfd $r1 = $r19, $r1;;
     _32(0x7c3b004e),        //fcompd.olt $r14 = $r14, $r1;;
     _32(0x08ffa64e),        //cb.deqz $r14? 25ab8 <_dtoa_r+0x3f8>;;
     _32(0xea04001c),        //copyd $r1 = $r28
     _32(0x6170ffdc),        //addd $r28 = $r28, -1 (0xffffffff);;
     _32(0x2400001c),        //lbs $r0 = 0 (0x0)[$r28];;
     _64(0x00000001f101b400),        //compw.eq $r0 = $r0, 48 (0x30);;
     _32(0x0c7ffec0),        //cb.wnez $r0? 26058 <_dtoa_r+0x998>;;
     _32(0x97fffefd),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0xf1600049),        //addw $r24 = $r9, 1 (0x1)
     _32(0x6a500001),        //copyd $r20 = $r1;;
     _32(0x6000001c),        //make $r0 = 28 (0x1c);;
     _32(0xf1651019),        //addw $r25 = $r25, $r0
     _32(0xf171101c),        //addw $r28 = $r28, $r0
     _32(0x717d101f),        //addw $r31 = $r31, $r0;;
     _32(0x0e7fb699),        //cb.wlez $r25? 25bf8 <_dtoa_r+0x538>;;
     _32(0x17ffff8f),        //goto 25ed0 <_dtoa_r+0x810>;;
     _32(0x88ff9a98),        //cb.deqz $r24? 25a40 <_dtoa_r+0x380>
     _32(0xea00001b),        //copyd $r0 = $r27
     _32(0x604c0002),        //make $r19 = 2 (0x2);;
     _32(0xf5080018),        //negw $r2 = $r24
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _96(0x1800000098000131e0005e00),        //make $r0 = 312696 (0x4c578);;
     _32(0xe80403c2),        //andd $r1 = $r2, 15 (0xf)
     _32(0xfa0a3102),        //sraw $r2 = $r2, 4 (0x4)
     _96(0x1000000090000131e0285400),        //make $r10 = 312656 (0x4c550);;
     _32(0xf804ffc2),        //zxwd $r1 = $r2
     _32(0x3826f040),        //ld.xs $r9 = $r1[$r0];;
     _32(0x5825725b),        //fmuld $r9 = $r27, $r9;;
     _32(0x8cff9642),        //cb.weqz $r2? 25a40 <_dtoa_r+0x380>
     _32(0x6a000009),        //copyd $r0 = $r9;;
     _32(0x8b800181),        //cb.even $r1? 260fc <_dtoa_r+0xa3c>
     _32(0x7a0a3041),        //sraw $r2 = $r1, 1 (0x1);;
     _32(0xf14c0053),        //addw $r19 = $r19, 1 (0x1)
     _32(0xea10001c),        //copyd $r4 = $r28
     _32(0x3806f0ca),        //ld.xs $r1 = $r3[$r10];;
     _32(0x58017040),        //fmuld $r0 = $r0, $r1;;
     _32(0x8c7ffe82),        //cb.wnez $r2? 260e4 <_dtoa_r+0xa24>
     _32(0xf804ffc2),        //zxwd $r1 = $r2
     _32(0x610c0043),        //addd $r3 = $r3, 1 (0x1);;
     _32(0x70260004),        //cmoved.dnez $r4? $r9 = $r0;;
     _32(0x97fffe4d),        //goto 25a40 <_dtoa_r+0x380>
     _32(0x6a000009),        //copyd $r0 = $r9;;
     _32(0xe90bf018),        //sxwd $r2 = $r24
     _32(0xfb0e27da),        //srld $r3 = $r26, 31 (0x1f)
     _64(0xe0105e00f401b017),        //compw.le $r0 = $r23, 0 (0x0)
     _96(0x180000009800013190000000),        //make $r4 = 312696 (0x4c578);;
     _32(0xf80110c0),        //andw $r0 = $r0, $r3
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _32(0x386ef084),        //ld.xs $r27 = $r2[$r4];;
     _32(0x0c804a40),        //cb.weqz $r0? 265e0 <_dtoa_r+0xf20>;;
     _32(0x08003097),        //cb.dnez $r23? 26448 <_dtoa_r+0xd88>;;
     _96(0x0200a00080000000e0000000),        //make $r0 = 4617315517961601024 (0x4014000000000000);;
     _32(0x586d701b),        //fmuld $r27 = $r27, $r0;;
     _32(0xfe4f04db),        //fcompd.oge $r19 = $r27, $r19
     _32(0x606c0000),        //make $r27 = 0 (0x0);;
     _32(0x087fadd3),        //cb.dnez $r19? 25c38 <_dtoa_r+0x578>;;
     _32(0x100000a7),        //goto 263fc <_dtoa_r+0xd3c>;;
     _32(0x98000c97),        //call 293c0 <__pow5mult>
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0xfa08001d),        //copyw $r2 = $r29
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xea6c0000),        //copyd $r27 = $r0
     _64(0x08000000f405b055),        //compw.le $r1 = $r21, 1 (0x1);;
     _32(0x0c002941),        //cb.wnez $r1? 26414 <_dtoa_r+0xd54>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3000051b),        //lwz $r0 = 20 (0x14)[$r27];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x720186c0),        //addx4wd $r0 = $r0, $r27;;
     _32(0x98000ba4),        //call 29028 <__hi0bits>
     _32(0x30000600),        //lwz $r0 = 24 (0x18)[$r0];;
     _32(0x97fffe89),        //goto 25bc4 <_dtoa_r+0x504>
     _32(0x75000800),        //sbfw $r0 = $r0, 32 (0x20);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97ffff57),        //goto 25f08 <_dtoa_r+0x848>
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0x98000d37),        //call 29690 <__mcmp>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x0dffa640),        //cb.wgez $r0? 25c24 <_dtoa_r+0x564>;;
     _32(0x98000b09),        //call 28de8 <__multadd>
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0xf15cffd8),        //addw $r23 = $r24, -1 (0xffffffff)
     _32(0x38042c0c),        //ld $r1 = 176 (0xb0)[$r12];;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _64(0x00000000f405b001),        //compw.le $r1 = $r1, 0 (0x0);;
     _32(0x78650059),        //andd $r25 = $r25, $r1;;
     _32(0x08006540),        //cb.dnez $r0? 26848 <_dtoa_r+0x1188>;;
     _32(0x08006019),        //cb.dnez $r25? 267f8 <_dtoa_r+0x1138>;;
     _32(0x385c2c0c),        //ld $r23 = 176 (0xb0)[$r12];;
     _32(0x90000004),        //goto 26210 <_dtoa_r+0xb50>
     _32(0x604c0000),        //make $r19 = 0 (0x0);;
     _32(0x18000af8),        //call 28de8 <__multadd>;;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x9ffffcaa),        //call 254b8 <quorem>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0xfa640000),        //copyw $r25 = $r0
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0xf1640c19),        //addw $r25 = $r25, 48 (0x30)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xe14c0053),        //addd $r19 = $r19, 1 (0x1)
     _32(0x2467e4d4),        //sb $r19[$r20] = $r25;;
     _32(0x7311b5d3),        //compw.ge $r4 = $r19, $r23;;
     _32(0x0cfffc84),        //cb.weqz $r4? 26208 <_dtoa_r+0xb48>;;
     _32(0xf110ffd7),        //addw $r4 = $r23, -1 (0xffffffff)
     _32(0x604c0000),        //make $r19 = 0 (0x0);;
     _32(0x61100044),        //addd $r4 = $r4, 1 (0x1);;
     _32(0x6c120057),        //cmoved.wlez $r23? $r4 = 1 (0x1);;
     _32(0x71750114),        //addd $r29 = $r20, $r4;;
     _32(0x98000cac),        //call 29508 <__lshift>
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x98000d0a),        //call 29690 <__mcmp>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x8e002300),        //cb.wlez $r0? 264a4 <_dtoa_r+0xde4>
     _32(0xf808ffc0),        //zxwd $r2 = $r0
     _32(0x2004ffdd),        //lbz $r1 = -1 (0xffffffff)[$r29];;
     _32(0x90000004),        //goto 26290 <_dtoa_r+0xbd0>
     _32(0x75090754),        //sbfd $r2 = $r20, $r29;;
     _32(0xea740003),        //copyd $r29 = $r3
     _32(0x2004ffc3),        //lbz $r1 = -1 (0xffffffff)[$r3];;
     _32(0xe8037001),        //sxbd $r0 = $r1
     _32(0xe108ffc2),        //addd $r2 = $r2, -1 (0xffffffff)
     _32(0x610cffdd),        //addd $r3 = $r29, -1 (0xffffffff);;
     _64(0x00000001f101b640),        //compw.eq $r0 = $r0, 57 (0x39);;
     _32(0x0c803e40),        //cb.weqz $r0? 26688 <_dtoa_r+0xfc8>;;
     _32(0x087ffe02),        //cb.dnez $r2? 26288 <_dtoa_r+0xbc8>;;
     _32(0xe0000031),        //make $r0 = 49 (0x31)
     _32(0x71600058),        //addw $r24 = $r24, 1 (0x1);;
     _32(0x24010014),        //sb 0 (0x0)[$r20] = $r0;;
     _32(0x98000ac4),        //call 28dc8 <_Bfree>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x88803d0e),        //cb.deqz $r14? 26694 <_dtoa_r+0xfd4>
     _32(0xf005a393),        //compd.ne $r1 = $r19, $r14
     _32(0x60010013),        //compd.ne $r0 = $r19, 0 (0x0);;
     _32(0xf8011040),        //andw $r0 = $r0, $r1
     _32(0xea040013),        //copyd $r1 = $r19
     _32(0x6a4c0014),        //copyd $r19 = $r20;;
     _32(0x0c8062c0),        //cb.weqz $r0? 26908 <_dtoa_r+0x1248>;;
     _32(0x98000aba),        //call 28dc8 <_Bfree>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x97fffe5c),        //goto 25c58 <_dtoa_r+0x598>
     _32(0x6a50001d),        //copyd $r20 = $r29;;
     _32(0x97fffe9c),        //goto 25d60 <_dtoa_r+0x6a0>
     _32(0xe05c0001),        //make $r23 = 1 (0x1)
     _32(0x60680001),        //make $r26 = 1 (0x1);;
     _96(0x80000000a72d320ce0000000),        //make $r0 = 4602678819172646912 (0x3fe0000000000000)
     _32(0x01ff0000),        //sd 200 (0xc8)[$r12] = $r11;;
     _32(0x270d300c),        //sd 192 (0xc0)[$r12] = $r3;;
     _32(0x98002ef4),        //call 31ee0 <__divdf3>
     _32(0x27252e0c),        //sd 184 (0xb8)[$r12] = $r9;;
     _96(0xd40a7013e0100000e0280000),        //make $r10 = 4607182418800017408 (0x3ff0000000000000)
     _96(0x81ff800080000000b82c320c),        //make $r4 = 4621819117588971520 (0x4024000000000000)
     _32(0x88000000),        //fsbfd $r2 = $r19, $r0
     _32(0x0a012000),        //ld $r11 = 200 (0xc8)[$r12];;
     _32(0x380c300c),        //ld $r3 = 192 (0xc0)[$r12];;
     _32(0x24710014),        //sb 0 (0x0)[$r20] = $r28;;
     _32(0xf53c004b),        //sbfw $r15 = $r11, 1 (0x1)
     _32(0xea70000b),        //copyd $r28 = $r11
     _32(0x38242e0c),        //ld $r9 = 184 (0xb8)[$r12];;
     _32(0xfc03008e),        //fcompd.olt $r0 = $r14, $r2
     _32(0x710503cb),        //addd $r1 = $r11, $r15;;
     _32(0x7505b0c1),        //compw.gt $r1 = $r1, $r3;;
     _32(0x080052c0),        //cb.dnez $r0? 26884 <_dtoa_r+0x11c4>;;
     _32(0x8c001741),        //cb.wnez $r1? 264d0 <_dtoa_r+0xe10>
     _32(0xe903f003),        //sxwd $r0 = $r3
     _64(0x0c000000f10db003),        //compw.eq $r3 = $r3, 2147483648 (0x80000000);;
     _32(0x7501000f),        //sbfd $r0 = $r15, $r0;;
     _32(0x7501000b),        //sbfd $r0 = $r11, $r0;;
     _32(0x8c800343),        //cb.weqz $r3? 263a8 <_dtoa_r+0xce8>
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x10000055),        //goto 264d0 <_dtoa_r+0xe10>;;
     _32(0x5839710e),        //fmuld $r14 = $r14, $r4;;
     _32(0x58097102),        //fmuld $r2 = $r2, $r4;;
     _32(0x4607300e),        //fixedd.rz $r1 = $r14, 0 (0x0);;
     _32(0xe90ff001),        //sxwd $r3 = $r1
     _32(0x71040c01),        //addw $r1 = $r1, 48 (0x30);;
     _32(0xc40f0003),        //floatd.rn $r3 = $r3, 0 (0x0)
     _32(0x2405ffdc),        //sb -1 (0xffffffff)[$r28] = $r1;;
     _32(0x543a7383),        //fsbfd $r14 = $r3, $r14;;
     _32(0x7c07008e),        //fcompd.olt $r1 = $r14, $r2;;
     _32(0x08000201),        //cb.dnez $r1? 263c4 <_dtoa_r+0xd04>;;
     _32(0xf100ffc0),        //addw $r0 = $r0, -1 (0xffffffff)
     _32(0x5406728e),        //fsbfd $r1 = $r14, $r10;;
     _32(0x7c070081),        //fcompd.olt $r1 = $r1, $r2;;
     _32(0x08001d01),        //cb.dnez $r1? 26584 <_dtoa_r+0xec4>;;
     _32(0x8c7ffc80),        //cb.wnez $r0? 26380 <_dtoa_r+0xcc0>
     _32(0x6170005c),        //addd $r28 = $r28, 1 (0x1);;
     _32(0x17fffdbe),        //goto 25ab8 <_dtoa_r+0x3f8>;;
     _32(0x97fffe28),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0xf1600049),        //addw $r24 = $r9, 1 (0x1)
     _32(0x6a50001c),        //copyd $r20 = $r28;;
     _32(0x98000a85),        //call 28de8 <__multadd>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe0080005),        //make $r2 = 5 (0x5)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xea6c0000),        //copyd $r27 = $r0
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x98000ca8),        //call 29690 <__mcmp>
     _32(0x6a04001b),        //copyd $r1 = $r27;;
     _32(0x0e7f8400),        //cb.wlez $r0? 25c38 <_dtoa_r+0x578>;;
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0xe0000031),        //make $r0 = 49 (0x31)
     _32(0xe1500054),        //addd $r20 = $r20, 1 (0x1)
     _32(0x71600058),        //addw $r24 = $r24, 1 (0x1);;
     _32(0x97fffe0e),        //goto 25c44 <_dtoa_r+0x584>
     _32(0x2401ffd4),        //sb -1 (0xffffffff)[$r20] = $r0;;
     _96(0x00007fff87ffffffe800ffd3),        //andd $r0 = $r19, 4503599627370495 (0xfffffffffffff);;
     _32(0x087fd640),        //cb.dnez $r0? 26184 <_dtoa_r+0xac4>;;
     _32(0x6703f813),        //extfz $r0 = $r19, 63 (0x3f), 32 (0x20);;
     _64(0x001ffc00f8000000),        //andw $r0 = $r0, 2146435072 (0x7ff00000);;
     _32(0x0cffd540),        //cb.weqz $r0? 26184 <_dtoa_r+0xac4>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0xf1640059),        //addw $r25 = $r25, 1 (0x1)
     _32(0x717c005f),        //addw $r31 = $r31, 1 (0x1);;
     _32(0x97fffddf),        //goto 25bbc <_dtoa_r+0x4fc>
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x97fffdfc),        //goto 25c38 <_dtoa_r+0x578>
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x60380000),        //make $r14 = 0 (0x0);;
     _32(0x98000bdb),        //call 293c0 <__pow5mult>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xfa08001b),        //copyw $r2 = $r27
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3808220c),        //ld $r2 = 136 (0x88)[$r12];;
     _32(0x98000b4a),        //call 29198 <__multiply>
     _32(0x6a04000e),        //copyd $r1 = $r14;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x98000a51),        //call 28dc8 <_Bfree>
     _32(0x2709220c),        //sd 136 (0x88)[$r12] = $r2;;
     _32(0x17fffdbe),        //goto 25b84 <_dtoa_r+0x4c4>;;
     _32(0x98000bcc),        //call 293c0 <__pow5mult>
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x97fffdbe),        //goto 25b94 <_dtoa_r+0x4d4>
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x08000142),        //cb.dnez $r2? 264b8 <_dtoa_r+0xdf8>;;
     _32(0x0b7fdd99),        //cb.odd $r25? 26280 <_dtoa_r+0xbc0>;;
     _32(0x10000003),        //goto 264b8 <_dtoa_r+0xdf8>;;
     _32(0xea740000),        //copyd $r29 = $r0
     _32(0x2004ff9d),        //lbz $r1 = -2 (0xfffffffe)[$r29];;
     _32(0xe8077001),        //sxbd $r1 = $r1
     _32(0x6100ffdd),        //addd $r0 = $r29, -1 (0xffffffff);;
     _64(0x00000001f005b401),        //compw.ne $r1 = $r1, 48 (0x30);;
     _32(0x0cfffe81),        //cb.weqz $r1? 264b0 <_dtoa_r+0xdf0>;;
     _32(0x17ffff7b),        //goto 262b8 <_dtoa_r+0xbf8>;;
     _32(0x97ffffb6),        //goto 263a8 <_dtoa_r+0xce8>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x98000a3c),        //call 28dc8 <_Bfree>
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x97fffe5d),        //goto 25e54 <_dtoa_r+0x794>
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x98000a40),        //call 28de8 <__multadd>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x97fffe36),        //goto 25dd4 <_dtoa_r+0x714>
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea680000),        //copyd $r26 = $r0
     _32(0x6a70001d),        //copyd $r28 = $r29;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97fffd0d),        //goto 25944 <_dtoa_r+0x284>
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _96(0x00007fff87ffffffe800ffd3),        //andd $r0 = $r19, 4503599627370495 (0xfffffffffffff);;
     _32(0x087f6980),        //cb.dnez $r0? 25bbc <_dtoa_r+0x4fc>;;
     _32(0x6703f813),        //extfz $r0 = $r19, 63 (0x3f), 32 (0x20);;
     _64(0x001ffc00f8000000),        //andw $r0 = $r0, 2146435072 (0x7ff00000);;
     _32(0x0cff6880),        //cb.weqz $r0? 25bbc <_dtoa_r+0x4fc>;;
     _32(0x17ffffbf),        //goto 26434 <_dtoa_r+0xd74>;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x08801a00),        //cb.deqz $r0? 266e0 <_dtoa_r+0x1020>;;
     _32(0xea700019),        //copyd $r28 = $r25
     _64(0xb86c260cf1080cc2),        //addw $r2 = $r2, 1075 (0x433)
     _32(0x08000001),        //ld $r27 = 152 (0x98)[$r12];;
     _32(0x97fffd79),        //goto 25b38 <_dtoa_r+0x478>
     _32(0xf17d17c2),        //addw $r31 = $r2, $r31
     _32(0x71651642),        //addw $r25 = $r2, $r25;;
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x98000b96),        //call 293c0 <__pow5mult>
     _32(0x3008260c),        //lwz $r2 = 152 (0x98)[$r12];;
     _32(0x97fffd89),        //goto 25b94 <_dtoa_r+0x4d4>
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x97ffffa1),        //goto 263fc <_dtoa_r+0xd3c>
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x60380000),        //make $r14 = 0 (0x0);;
     _32(0xf1600049),        //addw $r24 = $r9, 1 (0x1)
     _32(0x6a4c0014),        //copyd $r19 = $r20;;
     _32(0x75050714),        //sbfd $r1 = $r20, $r28;;
     _32(0xea50001c),        //copyd $r20 = $r28
     _32(0xe104ffc1),        //addd $r1 = $r1, -1 (0xffffffff)
     _32(0x6170ffdc),        //addd $r28 = $r28, -1 (0xffffffff);;
     _32(0x2008001c),        //lbz $r2 = 0 (0x0)[$r28];;
     _32(0x68037002),        //sxbd $r0 = $r2;;
     _64(0x00000001f101b640),        //compw.eq $r0 = $r0, 57 (0x39);;
     _32(0x0c800f40),        //cb.weqz $r0? 266a0 <_dtoa_r+0xfe0>;;
     _32(0x087ffe01),        //cb.dnez $r1? 26590 <_dtoa_r+0xed0>;;
     _32(0xe0000031),        //make $r0 = 49 (0x31)
     _32(0x71600058),        //addw $r24 = $r24, 1 (0x1);;
     _32(0x97fffdaa),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0x2401001c),        //sb 0 (0x0)[$r28] = $r0;;
     _32(0xe903f018),        //sxwd $r0 = $r24
     _64(0xe0045e00e05cffc0),        //make $r23 = 4294967295 (0xffffffff)
     _96(0x1000000090000131883fffff),        //make $r1 = 312696 (0x4c578);;
     _32(0x386ef001),        //ld.xs $r27 = $r0[$r1];;
     _32(0x98002e40),        //call 31ee0 <__divdf3>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xf104ff97),        //addw $r1 = $r23, -2 (0xfffffffe)
     _32(0xe1640054),        //addd $r25 = $r20, 1 (0x1)
     _32(0xc6033000),        //fixedd.rz $r0 = $r0, 0 (0x0)
     _64(0x18000000f05db057),        //compw.ne $r23 = $r23, 1 (0x1);;
     _32(0xe1040081),        //addd $r1 = $r1, 2 (0x2)
     _32(0xe0540000),        //make $r21 = 0 (0x0)
     _96(0x1201200090000000e0380000),        //make $r14 = 4621819117588971520 (0x4024000000000000);;
     _32(0x71710054),        //addd $r28 = $r20, $r1;;
     _32(0xe907f000),        //sxwd $r1 = $r0
     _32(0xf1080c00),        //addw $r2 = $r0, 48 (0x30)
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0xc4070001),        //floatd.rn $r1 = $r1, 0 (0x0)
     _32(0x24090014),        //sb 0 (0x0)[$r20] = $r2;;
     _32(0x8c000397),        //cb.wnez $r23? 26664 <_dtoa_r+0xfa4>
     _32(0x544d76c1),        //ffmsd $r19 = $r1, $r27;;
     _32(0x10000055),        //goto 26788 <_dtoa_r+0x10c8>;;
     _32(0x18002e2a),        //call 31ee0 <__divdf3>;;
     _32(0xe1640059),        //addd $r25 = $r25, 1 (0x1)
     _32(0x46033000),        //fixedd.rz $r0 = $r0, 0 (0x0);;
     _32(0x7109a719),        //compd.eq $r2 = $r25, $r28;;
     _32(0xe907f000),        //sxwd $r1 = $r0
     _32(0xf10c0c00),        //addw $r3 = $r0, 48 (0x30)
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0xc4070001),        //floatd.rn $r1 = $r1, 0 (0x0)
     _32(0x240dffd9),        //sb -1 (0xffffffff)[$r25] = $r3;;
     _32(0x88001302),        //cb.dnez $r2? 2678c <_dtoa_r+0x10cc>
     _32(0x544d76c1),        //ffmsd $r19 = $r1, $r27;;
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x584d7393),        //fmuld $r19 = $r19, $r14;;
     _32(0xfb0b0553),        //fcompd.une $r2 = $r19, $r21
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x087ffc42),        //cb.dnez $r2? 26638 <_dtoa_r+0xf78>;;
     _32(0x97fffd7b),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0xf1600058),        //addw $r24 = $r24, 1 (0x1)
     _32(0x6a500019),        //copyd $r20 = $r25;;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x97ffff0b),        //goto 262b8 <_dtoa_r+0xbf8>
     _32(0x24050003),        //sb 0 (0x0)[$r3] = $r1;;
     _32(0x97fffd74),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0x6a50001d),        //copyd $r20 = $r29;;
     _32(0x71000042),        //addw $r0 = $r2, 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x97fffd6f),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0x2401001c),        //sb 0 (0x0)[$r28] = $r0;;
     _32(0xe907f013),        //sxwd $r1 = $r19
     _96(0x0a00e00088000000e0080000),        //make $r2 = 4619567317775286272 (0x401c000000000000);;
     _32(0x44070001),        //floatd.rn $r1 = $r1, 0 (0x0);;
     _32(0x50097001),        //ffmad $r2 = $r1, $r0;;
     _32(0xe707f802),        //extfz $r1 = $r2, 63 (0x3f), 32 (0x20)
     _32(0x6a4c0002),        //copyd $r19 = $r2;;
     _64(0x07ff3000f1040001),        //addw $r1 = $r1, -54525952 (0xfffffffffcc00000);;
     _32(0x97fffcef),        //goto 25a94 <_dtoa_r+0x3d4>
     _32(0x634ff801),        //insf $r19 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0xea700019),        //copyd $r28 = $r25
     _32(0x3000340c),        //lwz $r0 = 208 (0xd0)[$r12];;
     _32(0x386c260c),        //ld $r27 = 152 (0x98)[$r12];;
     _32(0x75000d80),        //sbfw $r0 = $r0, 54 (0x36);;
     _32(0x97fffd12),        //goto 25b38 <_dtoa_r+0x478>
     _32(0xf17d17c0),        //addw $r31 = $r0, $r31
     _32(0x71651640),        //addw $r25 = $r0, $r25;;
     _32(0x0e0003c2),        //cb.wlez $r2? 26738 <_dtoa_r+0x1078>;;
     _32(0x98000b82),        //call 29508 <__lshift>
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3804220c),        //ld $r1 = 136 (0x88)[$r12];;
     _32(0x98000be0),        //call 29690 <__mcmp>
     _32(0xea04001b),        //copyd $r1 = $r27
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x8e001500),        //cb.wlez $r0? 2686c <_dtoa_r+0x11ac>
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _64(0x00000001f165b659),        //compw.eq $r25 = $r25, 57 (0x39);;
     _32(0x0c000b59),        //cb.wnez $r25? 267e0 <_dtoa_r+0x1120>;;
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x71640c40),        //addw $r25 = $r0, 49 (0x31);;
     _32(0x97fffee0),        //goto 262b8 <_dtoa_r+0xbf8>
     _32(0xea4c000e),        //copyd $r19 = $r14
     _32(0xea38001a),        //copyd $r14 = $r26
     _32(0x2465001c),        //sb 0 (0x0)[$r28] = $r25;;
     _32(0x98000976),        //call 28d20 <_Balloc>
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x3004020e),        //lwz $r1 = 8 (0x8)[$r14];;
     _32(0xe104040e),        //addd $r1 = $r14, 16 (0x10)
     _32(0xea640000),        //copyd $r25 = $r0
     _32(0xe1000400),        //addd $r0 = $r0, 16 (0x10)
     _32(0x3408050e),        //lws $r2 = 20 (0x14)[$r14];;
     _32(0x61080082),        //addd $r2 = $r2, 2 (0x2);;
     _32(0x9800087e),        //call 28960 <memcpy>
     _32(0x790a2082),        //slld $r2 = $r2, 2 (0x2);;
     _32(0x98000b66),        //call 29508 <__lshift>
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xea040019),        //copyd $r1 = $r25
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x97fffd90),        //goto 25dc0 <_dtoa_r+0x700>
     _32(0x6a680000),        //copyd $r26 = $r0;;
     _32(0x6a700019),        //copyd $r28 = $r25;;
     _32(0xf1600058),        //addw $r24 = $r24, 1 (0x1)
     _32(0x504e74d3),        //faddd $r19 = $r19, $r19;;
     _32(0x7c0704db),        //fcompd.olt $r1 = $r27, $r19;;
     _32(0x08000701),        //cb.dnez $r1? 26808 <_dtoa_r+0x1148>;;
     _32(0x7b4f06d3),        //fcompd.une $r19 = $r19, $r27;;
     _32(0x08000d93),        //cb.dnez $r19? 26878 <_dtoa_r+0x11b8>;;
     _32(0x8b7fde80),        //cb.odd $r0? 2658c <_dtoa_r+0xecc>
     _32(0x6a4c0014),        //copyd $r19 = $r20;;
     _32(0x97fffd2e),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0x6a50001c),        //copyd $r20 = $r28;;
     _32(0xf1640059),        //addw $r25 = $r25, 1 (0x1)
     _32(0xea4c000e),        //copyd $r19 = $r14
     _64(0x10000001f001b659),        //compw.ne $r0 = $r25, 57 (0x39);;
     _32(0x0c8001c0),        //cb.weqz $r0? 267e0 <_dtoa_r+0x1120>;;
     _32(0x97fffebc),        //goto 262b8 <_dtoa_r+0xbf8>
     _32(0xea38001a),        //copyd $r14 = $r26
     _32(0x2465001c),        //sb 0 (0x0)[$r28] = $r25;;
     _32(0x97fffea1),        //goto 26258 <_dtoa_r+0xb98>
     _32(0xea4c000e),        //copyd $r19 = $r14
     _32(0x6a38001a),        //copyd $r14 = $r26;;
     _32(0xe0000039),        //make $r0 = 57 (0x39)
     _32(0xea4c000e),        //copyd $r19 = $r14
     _32(0xe0040039),        //make $r1 = 57 (0x39)
     _32(0x6a38001a),        //copyd $r14 = $r26;;
     _32(0x97fffea4),        //goto 26280 <_dtoa_r+0xbc0>
     _32(0x2401001c),        //sb 0 (0x0)[$r28] = $r0;;
     _32(0xea600017),        //copyd $r24 = $r23
     _32(0x385c2c0c),        //ld $r23 = 176 (0xb0)[$r12];;
     _32(0x087f4397),        //cb.dnez $r23? 25c38 <_dtoa_r+0x578>;;
     _32(0x17fffef4),        //goto 263d4 <_dtoa_r+0xd14>;;
     _32(0x97ffff61),        //goto 2658c <_dtoa_r+0xecc>
     _32(0x6a4c0014),        //copyd $r19 = $r20;;
     _32(0xe174005c),        //addd $r29 = $r28, 1 (0x1)
     _32(0xea4c000e),        //copyd $r19 = $r14
     _64(0x10000001f101b659),        //compw.eq $r0 = $r25, 57 (0x39);;
     _32(0x0c7ffc00),        //cb.wnez $r0? 267e0 <_dtoa_r+0x1120>;;
     _32(0xea38001a),        //copyd $r14 = $r26
     _32(0x3800240c),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x71000c40),        //addw $r0 = $r0, 49 (0x31);;
     _32(0x7d660001),        //cmoved.wgtz $r1? $r25 = $r0;;
     _32(0x97fffea0),        //goto 262b8 <_dtoa_r+0xbf8>
     _32(0x2465001c),        //sb 0 (0x0)[$r28] = $r25;;
     _32(0x97fffdfd),        //goto 26034 <_dtoa_r+0x974>
     _32(0x6a70000b),        //copyd $r28 = $r11;;
     _32(0x98000968),        //call 28de8 <__multadd>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0x6a00001e),        //copyd $r0 = $r30;;
     _32(0x887ff9d9),        //cb.dnez $r25? 267f8 <_dtoa_r+0x1138>
     _32(0x6a380000),        //copyd $r14 = $r0;;
     _32(0x97fffd4e),        //goto 25d9c <_dtoa_r+0x6dc>
     _32(0x385c2c0c),        //ld $r23 = 176 (0xb0)[$r12];;
     _32(0x087fecc1),        //cb.dnez $r1? 26738 <_dtoa_r+0x1078>;;
     _32(0x0b7feb59),        //cb.odd $r25? 26724 <_dtoa_r+0x1064>;;
     _32(0x17ffffb1),        //goto 26738 <_dtoa_r+0x1078>;;
     _32(0x97fffcfb),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0x6a50001c),        //copyd $r20 = $r28;;
     _32(0x97fffcf8),        //goto 25c64 <_dtoa_r+0x5a4>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0xf1600049),        //addw $r24 = $r9, 1 (0x1)
     _32(0x6a50000b),        //copyd $r20 = $r11;;
     _32(0xf5000f00),        //sbfw $r0 = $r0, 60 (0x3c)
     _64(0x08000000f105b101),        //compw.eq $r1 = $r1, 4 (0x4);;
     _32(0x0cff7e41),        //cb.weqz $r1? 26084 <_dtoa_r+0x9c4>;;
     _32(0x0e7f3559),        //cb.wlez $r25? 25bf8 <_dtoa_r+0x538>;;
     _32(0x17fffd8a),        //goto 25ed0 <_dtoa_r+0x810>;;
     _32(0x97fffc3e),        //goto 259a4 <_dtoa_r+0x2e4>
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _64(0xb800240ce05cffc0),        //make $r23 = 4294967295 (0xffffffff)
     _32(0x103fffff),        //ld $r0 = 144 (0x90)[$r12];;
     _32(0x98000916),        //call 28d20 <_Balloc>
     _32(0xea00001e),        //copyd $r0 = $r30
     _32(0x26011a1e),        //sw 104 (0x68)[$r30] = $r0;;
     _32(0xea500000),        //copyd $r20 = $r0
     _64(0xb008360cf405b398),        //compw.le $r1 = $r24, 14 (0xe)
     _32(0x08000000),        //lwz $r2 = 216 (0xd8)[$r12];;
     _32(0x2701181e),        //sd 96 (0x60)[$r30] = $r0;;
     _32(0x7c00ffc2),        //notw $r0 = $r2;;
     _32(0x7b0e37c0),        //srlw $r3 = $r0, 31 (0x1f);;
     _32(0x780110c1),        //andw $r0 = $r1, $r3;;
     _32(0x0c7fcd00),        //cb.wnez $r0? 265c4 <_dtoa_r+0xf04>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x275d2c0c),        //sd 176 (0xb0)[$r12] = $r23;;
     _32(0x97fffc7b),        //goto 25aec <_dtoa_r+0x42c>
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _32(0x97fffcd4),        //goto 25c58 <_dtoa_r+0x598>
     _32(0xea4c0014),        //copyd $r19 = $r20
     _32(0x6a50001d),        //copyd $r20 = $r29;;
     _32(0x00000000)        //errop ;;
 |];

let __sflush_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0x27510c0c),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x28000401),        //lhz $r0 = 16 (0x10)[$r1];;
     _32(0xe407f000),        //zxhd $r1 = $r0
     _32(0x78080200),        //andw $r2 = $r0, 8 (0x8);;
     _32(0x0c000c42),        //cb.wnez $r2? 26a08 <__sflush_r+0xf0>;;
     _64(0xb004020eea000000),        //ord $r0 = $r0, 2048 (0x800)
     _32(0x00000002),        //lwz $r1 = 8 (0x8)[$r14];;
     _32(0x2501040e),        //sh 16 (0x10)[$r14] = $r0;;
     _32(0x0e001801),        //cb.wlez $r1? 26ad8 <__sflush_r+0x1c0>;;
     _32(0xe403f000),        //zxhd $r0 = $r0
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _64(0xb810120ef8080000),        //andw $r2 = $r0, 4096 (0x1000)
     _32(0x10000004),        //ld $r4 = 72 (0x48)[$r14];;
     _32(0x08801484),        //cb.deqz $r4? 26ab8 <__sflush_r+0x1a0>;;
     _32(0x30480014),        //lwz $r18 = 0 (0x0)[$r20];;
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0x8c001682),        //cb.wnez $r2? 26ae4 <__sflush_r+0x1cc>
     _32(0x260d0014),        //sw 0 (0x0)[$r20] = $r3;;
     _32(0x8fdc0004),        //icall $r4
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe00c0001),        //make $r3 = 1 (0x1)
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08800f80),        //cb.deqz $r0? 26a94 <__sflush_r+0x17c>;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x3810120e),        //ld $r4 = 72 (0x48)[$r14];;
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0x78000100),        //andw $r0 = $r0, 4 (0x4);;
     _32(0x0c8001c0),        //cb.weqz $r0? 269cc <__sflush_r+0xb4>;;
     _32(0x3800160e),        //ld $r0 = 88 (0x58)[$r14];;
     _32(0x340c020e),        //lws $r3 = 8 (0x8)[$r14];;
     _32(0x88800100),        //cb.deqz $r0? 269cc <__sflush_r+0xb4>
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x34001c0e),        //lws $r0 = 112 (0x70)[$r14];;
     _32(0x75090080),        //sbfd $r2 = $r0, $r2;;
     _32(0x8fdc0004),        //icall $r4
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x08001101),        //cb.dnez $r1? 26aec <__sflush_r+0x1d4>;;
     _32(0x30080014),        //lwz $r2 = 0 (0x0)[$r20];;
     _64(0x00000000f805b742),        //compw.leu $r1 = $r2, 29 (0x1d);;
     _32(0x0c001781),        //cb.wnez $r1? 26b64 <__sflush_r+0x24c>;;
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0xfa041001),        //orw $r1 = $r1, 64 (0x40)
     _64(0x083fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x9000002f),        //goto 26abc <__sflush_r+0x1a4>
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0xf80400c1),        //andw $r1 = $r1, 3 (0x3)
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x3848060e),        //ld $r18 = 24 (0x18)[$r14];;
     _32(0x08800a52),        //cb.deqz $r18? 26ab8 <__sflush_r+0x1a0>;;
     _32(0x384c000e),        //ld $r19 = 0 (0x0)[$r14];;
     _32(0x2749000e),        //sd 0 (0x0)[$r14] = $r18;;
     _32(0x8c0000c1),        //cb.wnez $r1? 26a2c <__sflush_r+0x114>
     _32(0x754d14d2),        //sbfw $r19 = $r18, $r19;;
     _32(0x3000080e),        //lwz $r0 = 32 (0x20)[$r14];;
     _32(0x8e800153),        //cb.wgtz $r19? 26a40 <__sflush_r+0x128>
     _32(0x2601030e),        //sw 12 (0xc)[$r14] = $r0;;
     _32(0x10000021),        //goto 26ab8 <__sflush_r+0x1a0>;;
     _32(0x8e000801),        //cb.wlez $r1? 26ab8 <__sflush_r+0x1a0>
     _32(0x784cffc1),        //zxwd $r19 = $r1;;
     _32(0xea080012),        //copyd $r2 = $r18
     _32(0xfa0c0013),        //copyw $r3 = $r19
     _32(0xea000014),        //copyd $r0 = $r20
     _32(0x3810100e),        //ld $r4 = 64 (0x40)[$r14];;
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x8efffe00),        //cb.wgtz $r0? 26a38 <__sflush_r+0x120>
     _32(0xf8494480),        //addwd $r18 = $r0, $r18
     _32(0x750514c0),        //sbfw $r1 = $r0, $r19;;
     _64(0xa804040ee000ffc0),        //make $r0 = 4294967295 (0xffffffff)
     _32(0x003fffff),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x7a041001),        //orw $r1 = $r1, 64 (0x40);;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x30000014),        //lwz $r0 = 0 (0x0)[$r20];;
     _32(0x08fff080),        //cb.deqz $r0? 269a0 <__sflush_r+0x88>;;
     _64(0xf101b580f105b740),        //compw.eq $r1 = $r0, 29 (0x1d)
     _64(0x0800000080000000),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x0cfffb40),        //cb.weqz $r0? 26a64 <__sflush_r+0x14c>;;
     _32(0x26490014),        //sw 0 (0x0)[$r20] = $r18;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x30041c0e),        //lwz $r1 = 112 (0x70)[$r14];;
     _32(0x0effe801),        //cb.wgtz $r1? 2695c <__sflush_r+0x44>;;
     _32(0x17fffff6),        //goto 26ab8 <__sflush_r+0x1a0>;;
     _32(0x97ffffb2),        //goto 269ac <__sflush_r+0x94>
     _32(0x3808240e),        //ld $r2 = 144 (0x90)[$r14];;
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x260d020e),        //sw 8 (0x8)[$r14] = $r3;;
     _64(0xa709000ee804ffc1),        //andd $r1 = $r1, 63487 (0xf7ff)
     _32(0x0000003d),        //sd 0 (0x0)[$r14] = $r2;;
     _64(0xa505040ef8080001),        //andw $r2 = $r1, 4096 (0x1000)
     _32(0x00000004),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x0c800082),        //cb.weqz $r2? 26b1c <__sflush_r+0x204>;;
     _32(0x2701240e),        //sd 144 (0x90)[$r14] = $r0;;
     _32(0xe1001d0e),        //addd $r0 = $r14, 116 (0x74)
     _32(0x3804160e),        //ld $r1 = 88 (0x58)[$r14];;
     _32(0x26490014),        //sw 0 (0x0)[$r20] = $r18;;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08fff8c1),        //cb.deqz $r1? 26ab8 <__sflush_r+0x1a0>;;
     _32(0x080000c0),        //cb.dnez $r0? 26b3c <__sflush_r+0x224>;;
     _32(0x980001fb),        //call 27320 <_free_r>
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2705160e),        //sd 88 (0x58)[$r14] = $r1;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _64(0xa804040ee00c0040),        //make $r3 = 541065217 (0x20400001)
     _32(0x00081000),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x7b0e6083),        //srld $r3 = $r3, $r2;;
     _32(0x6e140043),        //andnd $r5 = $r3, 1 (0x1);;
     _32(0x0bffe7c3),        //cb.even $r3? 269f4 <__sflush_r+0xdc>;;
     _64(0xb810060ee804ffc1),        //andd $r1 = $r1, 63487 (0xf7ff)
     _32(0x0000003d),        //ld $r4 = 24 (0x18)[$r14];;
     _64(0xa615020ef80c0001),        //andw $r3 = $r1, 4096 (0x1000)
     _32(0x00000004),        //sw 8 (0x8)[$r14] = $r5;;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x8cfff843),        //cb.weqz $r3? 26b1c <__sflush_r+0x204>
     _32(0x2711000e),        //sd 0 (0x0)[$r14] = $r4;;
     _32(0x087ff7c2),        //cb.dnez $r2? 26b1c <__sflush_r+0x204>;;
     _32(0x17ffffdd)        //goto 26b18 <__sflush_r+0x200>;;
 |];

let _fflush_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x88800100),        //cb.deqz $r0? 26bd0 <_fflush_r+0x28>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x30041400),        //lwz $r1 = 80 (0x50)[$r0];;
     _32(0x0c800681),        //cb.weqz $r1? 26c34 <_fflush_r+0x8c>;;
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x08800400),        //cb.deqz $r0? 26c18 <_fflush_r+0x70>;;
     _32(0x3004420e),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x0b000101),        //cb.odd $r1? 26bf0 <_fflush_r+0x48>;;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c800500),        //cb.weqz $r0? 26c3c <_fflush_r+0x94>;;
     _32(0x9fffff4a),        //call 26918 <__sflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xf84cffc0),        //zxwd $r19 = $r0
     _32(0x3004420e),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x0b000141),        //cb.odd $r1? 26c18 <_fflush_r+0x70>;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c8004c0),        //cb.weqz $r0? 26c60 <_fflush_r+0xb8>;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x180000a5),        //call 26ec8 <__sinit>;;
     _32(0x17ffffe6),        //goto 26bd0 <_fflush_r+0x28>;;
     _32(0x9800039b),        //call 27aa8 <__libc_lock_acquire>
     _32(0x6100300e),        //addd $r0 = $r14, 192 (0xc0);;
     _32(0x9fffff35),        //call 26918 <__sflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xf84cffc0),        //zxwd $r19 = $r0
     _32(0x3004420e),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x0b7ffc01),        //cb.odd $r1? 26c18 <_fflush_r+0x70>;;
     _32(0x17ffffeb),        //goto 26c08 <_fflush_r+0x60>;;
     _32(0x980003d6),        //call 27bb8 <__libc_lock_release>
     _32(0x6100300e),        //addd $r0 = $r14, 192 (0xc0);;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fflush: list_I = 
 [|
     _32(0x088001c0),        //cb.deqz $r0? 26ca4 <fflush+0x1c>;;
     _32(0xea040000),        //copyd $r1 = $r0
     _96(0x0800000088000128e0002000),        //make $r0 = 303232 (0x4a080);;
     _32(0x97ffffc3),        //goto 26ba8 <_fflush_r>
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _96(0x80000131e004ea00e0004400),        //make $r0 = 312592 (0x4c510)
     _96(0x080000008800009a80000000),        //make $r1 = 158632 (0x26ba8);;
     _32(0x900002b7),        //goto 27798 <_fwalk_reent>
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x00000000)        //errop ;;
 |];

let std: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xe1004000),        //addd $r0 = $r0, 256 (0x100)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x2505c400),        //sh -240 (0xffffff10)[$r0] = $r1;;
     _32(0xe0080008),        //make $r2 = 8 (0x8)
     _32(0x2509c480),        //sh -238 (0xffffff12)[$r0] = $r2;;
     _32(0x270dc000),        //sd -256 (0xffffff00)[$r0] = $r3;;
     _32(0x270dc200),        //sd -248 (0xffffff08)[$r0] = $r3;;
     _32(0x260d0200),        //sw 8 (0x8)[$r0] = $r3;;
     _32(0x270dc600),        //sd -232 (0xffffff18)[$r0] = $r3;;
     _32(0x260dc800),        //sw -224 (0xffffff20)[$r0] = $r3;;
     _32(0x9800078a),        //call 28b30 <memset>
     _32(0x260dca00),        //sw -216 (0xffffff28)[$r0] = $r3;;
     _96(0xa7390c0ee0085600e00c3a00),        //make $r3 = 172264 (0x2a0e8)
     _96(0x880000a880000000800000a8),        //make $r2 = 172376 (0x2a158)
     _32(0x08000000),        //sd 48 (0x30)[$r14] = $r14;;
     _96(0xa70d0e0ee0009600e0047a00),        //make $r1 = 172520 (0x2a1e8)
     _96(0x880000a880000000800000a8),        //make $r0 = 172632 (0x2a258)
     _32(0x08000000),        //sd 56 (0x38)[$r14] = $r3;;
     _32(0xe100300e),        //addd $r0 = $r14, 192 (0xc0)
     _32(0x2701140e),        //sd 80 (0x50)[$r14] = $r0;;
     _32(0x2709100e),        //sd 64 (0x40)[$r14] = $r2;;
     _32(0x2705120e),        //sd 72 (0x48)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10000318),        //goto 279c8 <__libc_lock_init>;;
     _32(0x7f03f000)        //nop ;;
 |];

let _cleanup_r: list_I = 
 [|
     _32(0x9000028a),        //goto 27798 <_fwalk_reent>
     _96(0x00000000800000aee0047c00)        //make $r1 = 178672 (0x2b9f0);;
 |];

let __fp_lock: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x30044200),        //lwz $r1 = 264 (0x108)[$r0];;
     _32(0x0b000141),        //cb.odd $r1? 26da4 <__fp_lock+0x24>;;
     _32(0x28040400),        //lhz $r1 = 16 (0x10)[$r0];;
     _64(0x00000000f8048001),        //andw $r1 = $r1, 512 (0x200);;
     _32(0x0c800181),        //cb.weqz $r1? 26db8 <__fp_lock+0x38>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9800033c),        //call 27aa8 <__libc_lock_acquire>
     _32(0x61003000),        //addd $r0 = $r0, 192 (0xc0);;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __fp_unlock: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x30044200),        //lwz $r1 = 264 (0x108)[$r0];;
     _32(0x0b000141),        //cb.odd $r1? 26dfc <__fp_unlock+0x24>;;
     _32(0x28040400),        //lhz $r1 = 16 (0x10)[$r0];;
     _64(0x00000000f8048001),        //andw $r1 = $r1, 512 (0x200);;
     _32(0x0c800181),        //cb.weqz $r1? 26e10 <__fp_unlock+0x38>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9800036a),        //call 27bb8 <__libc_lock_release>
     _32(0x61003000),        //addd $r0 = $r0, 192 (0xc0);;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sfmoreglue: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf108ffc1),        //addw $r2 = $r1, -1 (0xffffffff)
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xe90bf002),        //sxwd $r2 = $r2
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf2094082),        //addx4d $r2 = $r2, $r2
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xf93a2182),        //slld $r14 = $r2, 6 (0x6)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000400),        //call 27e58 <_malloc_r>
     _32(0x6104600e),        //addd $r1 = $r14, 384 (0x180);;
     _32(0x88800280),        //cb.deqz $r0? 26e88 <__sfmoreglue+0x58>
     _32(0x6a480000),        //copyd $r18 = $r0;;
     _32(0xe1001000),        //addd $r0 = $r0, 64 (0x40)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe108500e),        //addd $r2 = $r14, 320 (0x140)
     _32(0x264d0212),        //sw 8 (0x8)[$r18] = $r19;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x270d0012),        //sd 0 (0x0)[$r18] = $r3;;
     _32(0x9800072c),        //call 28b30 <memset>
     _32(0x27010412),        //sd 16 (0x10)[$r18] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _cleanup: list_I = 
 [|
     _96(0x80000131e0047c00e0004400),        //make $r0 = 312592 (0x4c510)
     _96(0x08000000880000ae80000000),        //make $r1 = 178672 (0x2b9f0);;
     _32(0x90000236),        //goto 27798 <_fwalk_reent>
     _32(0x38000000)        //ld $r0 = 0 (0x0)[$r0];;
 |];

let __sinit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980002f5),        //call 27aa8 <__libc_lock_acquire>
     _32(0xea380000),        //copyd $r14 = $r0
     _96(0x8800013aa739040ce0000000),        //make $r0 = 321536 (0x4e800)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0xe0140000),        //make $r5 = 0 (0x0)
     _64(0xe0185c00e10c500e),        //addd $r3 = $r14, 1344 (0x540)
     _96(0x9000009b88000001b000140e),        //make $r6 = 159088 (0x26d70)
     _32(0x10000000),        //lwz $r0 = 80 (0x50)[$r14];;
     _32(0xe0100003),        //make $r4 = 3 (0x3)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0x60040004),        //make $r1 = 4 (0x4);;
     _32(0x0c000700),        //cb.wnez $r0? 26f84 <__sinit+0xbc>;;
     _32(0x2719160e),        //sd 88 (0x58)[$r14] = $r6;;
     _64(0x18000001a715480e),        //sd 1312 (0x520)[$r14] = $r5;;
     _64(0x18000001a6114a0e),        //sw 1320 (0x528)[$r14] = $r4;;
     _64(0x18000001a70d4c0e),        //sd 1328 (0x530)[$r14] = $r3;;
     _32(0x9fffff65),        //call 26cc8 <std>
     _32(0x3800020e),        //ld $r0 = 8 (0x8)[$r14];;
     _32(0x9fffff63),        //call 26cc8 <std>
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xe0040009),        //make $r1 = 9 (0x9)
     _32(0x3800040e),        //ld $r0 = 16 (0x10)[$r14];;
     _32(0x9fffff5f),        //call 26cc8 <std>
     _32(0xe0080002),        //make $r2 = 2 (0x2)
     _32(0xe0040012),        //make $r1 = 18 (0x12)
     _32(0x3800060e),        //ld $r0 = 24 (0x18)[$r14];;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _96(0x080000008800013ae0000000),        //make $r0 = 321536 (0x4e800);;
     _32(0x2605140e),        //sw 80 (0x50)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000030e),        //goto 27bb8 <__libc_lock_release>;;
     _96(0x8000013ab840060ce0000000),        //make $r0 = 321536 (0x4e800)
     _32(0x00000000),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10000306),        //goto 27bb8 <__libc_lock_release>;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sfp: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _96(0x8800013aa849020ce0001000),        //make $r0 = 321600 (0x4e840)
     _32(0x08000000),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x980002b8),        //call 27aa8 <__libc_lock_acquire>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000131e0044400),        //make $r1 = 312592 (0x4c510);;
     _32(0x38480001),        //ld $r18 = 0 (0x0)[$r1];;
     _32(0x30041412),        //lwz $r1 = 80 (0x50)[$r18];;
     _32(0x0c800d01),        //cb.weqz $r1? 270b4 <__sfp+0x10c>;;
     _64(0x00000001e1484812),        //addd $r18 = $r18, 1312 (0x520);;
     _32(0x30040212),        //lwz $r1 = 8 (0x8)[$r18];;
     _32(0x38380412),        //ld $r14 = 16 (0x10)[$r18];;
     _32(0x0e000ac1),        //cb.wlez $r1? 270a4 <__sfp+0xfc>;;
     _32(0x7104ffc1),        //addw $r1 = $r1, -1 (0xffffffff);;
     _32(0x61040041),        //addd $r1 = $r1, 1 (0x1);;
     _32(0x72054041),        //addx4d $r1 = $r1, $r1;;
     _32(0x79062181),        //slld $r1 = $r1, 6 (0x6);;
     _32(0x90000005),        //goto 27020 <__sfp+0x78>
     _32(0x7105004e),        //addd $r1 = $r14, $r1;;
     _32(0x6138500e),        //addd $r14 = $r14, 320 (0x140);;
     _32(0x7009a381),        //compd.ne $r2 = $r1, $r14;;
     _32(0x08800882),        //cb.deqz $r2? 270a4 <__sfp+0xfc>;;
     _32(0x2c08040e),        //lhs $r2 = 16 (0x10)[$r14];;
     _32(0x0c7fff02),        //cb.wnez $r2? 27014 <__sfp+0x6c>;;
     _32(0xe100300e),        //addd $r0 = $r14, 192 (0xc0)
     _32(0xe0480000),        //make $r18 = 0 (0x0)
     _64(0xa609420ee004007f),        //make $r1 = -65535 (0xffffffffffff0001)
     _32(0x17ffffc0),        //sw 264 (0x108)[$r14] = $r2;;
     _32(0x98000263),        //call 279c8 <__libc_lock_init>
     _32(0x2605040e),        //sw 16 (0x10)[$r14] = $r1;;
     _32(0x980002dd),        //call 27bb8 <__libc_lock_release>
     _96(0x000000008000013ae0001000),        //make $r0 = 321600 (0x4e840);;
     _32(0xe0080008),        //make $r2 = 8 (0x8)
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe100400e),        //addd $r0 = $r14, 256 (0x100)
     _32(0x2749000e),        //sd 0 (0x0)[$r14] = $r18;;
     _32(0x2749020e),        //sd 8 (0x8)[$r14] = $r18;;
     _32(0x2749060e),        //sd 24 (0x18)[$r14] = $r18;;
     _32(0x2649080e),        //sw 32 (0x20)[$r14] = $r18;;
     _32(0x980006b0),        //call 28b30 <memset>
     _32(0x26490a0e),        //sw 40 (0x28)[$r14] = $r18;;
     _32(0x2749160e),        //sd 88 (0x58)[$r14] = $r18;;
     _32(0x2649180e),        //sw 96 (0x60)[$r14] = $r18;;
     _32(0x27491e0e),        //sd 120 (0x78)[$r14] = $r18;;
     _32(0x2649200e),        //sw 128 (0x80)[$r14] = $r18;;
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x38380012),        //ld $r14 = 0 (0x0)[$r18];;
     _32(0x0880018e),        //cb.deqz $r14? 270c0 <__sfp+0x118>;;
     _32(0x97ffffd1),        //goto 26ff0 <__sfp+0x48>
     _32(0x6a48000e),        //copyd $r18 = $r14;;
     _32(0x9fffff85),        //call 26ec8 <__sinit>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x17ffffcb),        //goto 26fe8 <__sfp+0x40>;;
     _32(0x9fffff5c),        //call 26e30 <__sfmoreglue>
     _32(0xe0040004),        //make $r1 = 4 (0x4)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x887ffe00),        //cb.dnez $r0? 270ac <__sfp+0x104>
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x27010012),        //sd 0 (0x0)[$r18] = $r0;;
     _32(0x980002b8),        //call 27bb8 <__libc_lock_release>
     _96(0x000000008000013ae0001000),        //make $r0 = 321600 (0x4e840);;
     _32(0x6000000c),        //make $r0 = 12 (0xc);;
     _32(0x97ffffe7),        //goto 27088 <__sfp+0xe0>
     _32(0x26010013),        //sw 0 (0x0)[$r19] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sfp_lock_acquire: list_I = 
 [|
     _32(0x9000026c),        //goto 27aa8 <__libc_lock_acquire>
     _96(0x000000008000013ae0001000)        //make $r0 = 321600 (0x4e840);;
 |];

let __sfp_lock_release: list_I = 
 [|
     _32(0x900002ac),        //goto 27bb8 <__libc_lock_release>
     _96(0x000000008000013ae0001000)        //make $r0 = 321600 (0x4e840);;
 |];

let __sinit_lock_acquire: list_I = 
 [|
     _32(0x90000264),        //goto 27aa8 <__libc_lock_acquire>
     _96(0x000000008000013ae0000000)        //make $r0 = 321536 (0x4e800);;
 |];

let __sinit_lock_release: list_I = 
 [|
     _32(0x900002a4),        //goto 27bb8 <__libc_lock_release>
     _96(0x000000008000013ae0000000)        //make $r0 = 321536 (0x4e800);;
 |];

let __fp_lock_all: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x080000008800013ae0001000),        //make $r0 = 321600 (0x4e840);;
     _32(0x98000257),        //call 27aa8 <__libc_lock_acquire>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _96(0xb840060ce0046000e0002000),        //make $r0 = 303232 (0x4a080)
     _96(0x9000009b8800000088000128),        //make $r1 = 159104 (0x26d80)
     _32(0x10000000),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000015d)        //goto 276f0 <_fwalk>;;
 |];

let __fp_unlock_all: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e0002000),        //make $r0 = 303232 (0x4a080);;
     _96(0x8000009ba741060ce0047600),        //make $r1 = 159192 (0x26dd8)
     _32(0x00000000),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000153),        //call 276f0 <_fwalk>
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _96(0x8800013ab840060ce0001000),        //make $r0 = 321600 (0x4e840)
     _32(0x08000000),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000027d)        //goto 27bb8 <__libc_lock_release>;;
 |];

let _malloc_trim_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _64(0xa7410e0ce538f7ce),        //sbfd $r14 = $r14, 4063 (0xfdf)
     _32(0x00000003),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x980006c5),        //call 28d00 <__malloc_lock>
     _96(0x8000012aa7510c0ce050de00),        //make $r20 = 306040 (0x4ab78)
     _32(0x00000000),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x38000414),        //ld $r0 = 16 (0x10)[$r20];;
     _32(0x38480200),        //ld $r18 = 8 (0x8)[$r0];;
     _32(0x6848ff12),        //andd $r18 = $r18, -4 (0xfffffffc);;
     _32(0x7139048e),        //addd $r14 = $r14, $r18;;
     _32(0x7b3a230e),        //srld $r14 = $r14, 12 (0xc);;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x793a230e),        //slld $r14 = $r14, 12 (0xc);;
     _64(0x00000003e501ffce),        //compd.gt $r0 = $r14, 4095 (0xfff);;
     _32(0x088001c0),        //cb.deqz $r0? 27244 <_malloc_trim_r+0x7c>;;
     _32(0x98000b6f),        //call 29fe8 <_sbrk_r>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040414),        //ld $r1 = 16 (0x10)[$r20];;
     _32(0x71050481),        //addd $r1 = $r1, $r18;;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x088002c0),        //cb.deqz $r0? 2726c <_malloc_trim_r+0xa4>;;
     _32(0x980006b3),        //call 28d10 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x98000b5f),        //call 29fe8 <_sbrk_r>
     _32(0xe504000e),        //negd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff)
     _32(0xf549048e),        //sbfd $r18 = $r14, $r18
     _96(0x100000009000013ae0082200),        //make $r2 = 321672 (0x4e888);;
     _32(0x6a480052),        //ord $r18 = $r18, 1 (0x1);;
     _32(0x08800400),        //cb.deqz $r0? 272d0 <_malloc_trim_r+0x108>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x30040002),        //lwz $r1 = 0 (0x0)[$r2];;
     _32(0x380c0414),        //ld $r3 = 16 (0x10)[$r20];;
     _32(0xf539104e),        //sbfw $r14 = $r14, $r1
     _32(0x27490203),        //sd 8 (0x8)[$r3] = $r18;;
     _32(0x9800069a),        //call 28d10 <__malloc_unlock>
     _32(0x26390002),        //sw 0 (0x0)[$r2] = $r14;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x98000b46),        //call 29fe8 <_sbrk_r>
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38080414),        //ld $r2 = 16 (0x10)[$r20];;
     _32(0x75050002),        //sbfd $r1 = $r2, $r0;;
     _32(0x640d07c1),        //compd.le $r3 = $r1, 31 (0x1f);;
     _32(0x087ff5c3),        //cb.dnez $r3? 27244 <_malloc_trim_r+0x7c>;;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _96(0x8800012ae00c2200e010da00),        //make $r4 = 306024 (0x4ab68)
     _96(0x100000009000013a88000000),        //make $r3 = 321672 (0x4e888);;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x97ffffcc),        //goto 27244 <_malloc_trim_r+0x7c>
     _32(0x26010003),        //sw 0 (0x0)[$r3] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let _free_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x888014c1),        //cb.deqz $r1? 27484 <_free_r+0x164>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x18000670),        //call 28d00 <__malloc_lock>;;
     _32(0xe11cfc0e),        //addd $r7 = $r14, -16 (0xfffffff0)
     _96(0x8800012ab818fe0ee014de00),        //make $r5 = 306040 (0x4ab78)
     _32(0x08000000),        //ld $r6 = -8 (0xfffffff8)[$r14];;
     _32(0x38100405),        //ld $r4 = 16 (0x10)[$r5];;
     _32(0x6804ff86),        //andd $r1 = $r6, -2 (0xfffffffe);;
     _32(0x710d0047),        //addd $r3 = $r7, $r1;;
     _32(0xf011a0c4),        //compd.ne $r4 = $r4, $r3
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x88802144),        //cb.deqz $r4? 27580 <_free_r+0x260>
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x8b000d86),        //cb.odd $r6? 2744c <_free_r+0x12c>
     _32(0xf1010083),        //addd $r0 = $r3, $r2
     _32(0x27090203),        //sd 8 (0x8)[$r3] = $r2;;
     _32(0xe1140405),        //addd $r5 = $r5, 16 (0x10)
     _32(0x3810fc0e),        //ld $r4 = -16 (0xfffffff0)[$r14];;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0xf51d01c4),        //sbfd $r7 = $r4, $r7
     _32(0x71050101),        //addd $r1 = $r1, $r4;;
     _32(0xe8000040),        //andd $r0 = $r0, 1 (0x1)
     _32(0x38100407),        //ld $r4 = 16 (0x10)[$r7];;
     _32(0x7119a144),        //compd.eq $r6 = $r4, $r5;;
     _32(0x08001a06),        //cb.dnez $r6? 27540 <_free_r+0x220>;;
     _32(0x38180607),        //ld $r6 = 24 (0x18)[$r7];;
     _32(0x27190604),        //sd 24 (0x18)[$r4] = $r6;;
     _32(0x88802700),        //cb.deqz $r0? 2761c <_free_r+0x2fc>
     _32(0x27110406),        //sd 16 (0x10)[$r6] = $r4;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x69017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff);;
     _32(0x08000ec0),        //cb.dnez $r0? 274b0 <_free_r+0x190>;;
     _32(0xe60720c1),        //extfz $r1 = $r1, 34 (0x22), 3 (0x3)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x100000009000012ae00cde00),        //make $r3 = 306040 (0x4ab78);;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0x38100203),        //ld $r4 = 8 (0x8)[$r3];;
     _32(0xf9023040),        //sllw $r0 = $r0, 1 (0x1)
     _32(0x79066042),        //slld $r1 = $r2, $r1;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x7a050101),        //ord $r1 = $r1, $r4;;
     _96(0x8000012ab808de00e110da00),        //addd $r4 = $r0, 306024 (0x4ab68)
     _96(0x180000009800012a80000000),        //ld $r2 = 306040 (0x4ab78)[$r0];;
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x27050203),        //sd 8 (0x8)[$r3] = $r1;;
     _32(0x27090407),        //sd 16 (0x10)[$r7] = $r2;;
     _96(0x180000009800012aa71dde00),        //sd 306040 (0x4ab78)[$r0] = $r7;;
     _32(0x271d0602),        //sd 24 (0x18)[$r2] = $r7;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10000632),        //goto 28d10 <__malloc_unlock>;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x0b0004c0),        //cb.odd $r0? 2749c <_free_r+0x17c>;;
     _32(0xf1050081),        //addd $r1 = $r1, $r2
     _32(0x61140405),        //addd $r5 = $r5, 16 (0x10);;
     _32(0xea100041),        //ord $r4 = $r1, 1 (0x1)
     _32(0x38000403),        //ld $r0 = 16 (0x10)[$r3];;
     _32(0x7009a140),        //compd.ne $r2 = $r0, $r5;;
     _32(0x08801d42),        //cb.deqz $r2? 2763c <_free_r+0x31c>;;
     _32(0x38080603),        //ld $r2 = 24 (0x18)[$r3];;
     _32(0x27090600),        //sd 24 (0x18)[$r0] = $r2;;
     _32(0x27010402),        //sd 16 (0x10)[$r2] = $r0;;
     _32(0x27110207),        //sd 8 (0x8)[$r7] = $r4;;
     _32(0x97ffffd1),        //goto 273c0 <_free_r+0xa0>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0xe9017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff)
     _32(0x2701fe0e),        //sd -8 (0xfffffff8)[$r14] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x08fff1c0),        //cb.deqz $r0? 273c8 <_free_r+0xa8>;;
     _32(0x7b022241),        //srld $r0 = $r1, 9 (0x9);;
     _32(0x69090100),        //compd.gtu $r2 = $r0, 4 (0x4);;
     _32(0x08001382),        //cb.dnez $r2? 275f0 <_free_r+0x2d0>;;
     _32(0x66035181),        //extfz $r0 = $r1, 37 (0x25), 6 (0x6);;
     _32(0xf1100e40),        //addw $r4 = $r0, 57 (0x39)
     _32(0x71000e00),        //addw $r0 = $r0, 56 (0x38);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x8000012ab80cde04e110da04),        //addd $r4 = $r4, 306024 (0x4ab68)
     _96(0x180000009800012a80000000),        //ld $r3 = 306040 (0x4ab78)[$r4];;
     _32(0x7009a0c4),        //compd.ne $r2 = $r4, $r3;;
     _32(0x08801702),        //cb.deqz $r2? 27660 <_free_r+0x340>;;
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x7909a042),        //compd.gtu $r2 = $r2, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 27510 <_free_r+0x1f0>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7101a0c4),        //compd.eq $r0 = $r4, $r3;;
     _32(0x08fffe80),        //cb.deqz $r0? 274f4 <_free_r+0x1d4>;;
     _32(0x38100603),        //ld $r4 = 24 (0x18)[$r3];;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x270d0407),        //sd 16 (0x10)[$r7] = $r3;;
     _32(0x271d0404),        //sd 16 (0x10)[$r4] = $r7;;
     _32(0x271d0603),        //sd 24 (0x18)[$r3] = $r7;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x100005f5),        //goto 28d10 <__malloc_unlock>;;
     _32(0x080019c0),        //cb.dnez $r0? 276dc <_free_r+0x3bc>;;
     _32(0xf1050042),        //addd $r1 = $r2, $r1
     _32(0x38000603),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0xea080041),        //ord $r2 = $r1, 1 (0x1)
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x27010603),        //sd 24 (0x18)[$r3] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x270d0400),        //sd 16 (0x10)[$r0] = $r3;;
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x100005e5),        //goto 28d10 <__malloc_unlock>;;
     _32(0x8b000246),        //cb.odd $r6? 275a4 <_free_r+0x284>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0x3800fc0e),        //ld $r0 = -16 (0xfffffff0)[$r14];;
     _32(0xf51d01c0),        //sbfd $r7 = $r0, $r7
     _32(0x71050001),        //addd $r1 = $r1, $r0;;
     _32(0x38080407),        //ld $r2 = 16 (0x10)[$r7];;
     _32(0x38000607),        //ld $r0 = 24 (0x18)[$r7];;
     _32(0x27010602),        //sd 24 (0x18)[$r2] = $r0;;
     _32(0x27090400),        //sd 16 (0x10)[$r0] = $r2;;
     _32(0xea0c0041),        //ord $r3 = $r1, 1 (0x1)
     _96(0x8800012ae000de00e008dc00),        //make $r2 = 306032 (0x4ab70)
     _96(0x100000009000012a88000000),        //make $r0 = 306040 (0x4ab78);;
     _32(0x38080002),        //ld $r2 = 0 (0x0)[$r2];;
     _32(0x270d0207),        //sd 8 (0x8)[$r7] = $r3;;
     _32(0x271d0400),        //sd 16 (0x10)[$r0] = $r7;;
     _32(0x7905a042),        //compd.gtu $r1 = $r2, $r1;;
     _32(0x087fe601),        //cb.dnez $r1? 27430 <_free_r+0x110>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _96(0x080000008800013ae0043000),        //make $r1 = 321728 (0x4e8c0);;
     _32(0x9ffffef9),        //call 271c8 <_malloc_trim_r>
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x17ffff91),        //goto 27430 <_free_r+0x110>;;
     _32(0x69090500),        //compd.gtu $r2 = $r0, 20 (0x14);;
     _32(0x08800302),        //cb.deqz $r2? 27624 <_free_r+0x304>;;
     _32(0x69091500),        //compd.gtu $r2 = $r0, 84 (0x54);;
     _32(0x080008c2),        //cb.dnez $r2? 27688 <_free_r+0x368>;;
     _32(0x6603b301),        //extfz $r0 = $r1, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc0),        //addw $r4 = $r0, 111 (0x6f)
     _32(0x71001b80),        //addw $r0 = $r0, 110 (0x6e);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffb0),        //goto 274d4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff90),        //goto 2745c <_free_r+0x13c>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0x710016c0),        //addw $r0 = $r0, 91 (0x5b);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffa8),        //goto 274d4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x000000008000012ae000de00),        //make $r0 = 306040 (0x4ab78);;
     _32(0x271d0a00),        //sd 40 (0x28)[$r0] = $r7;;
     _32(0x271d0800),        //sd 32 (0x20)[$r0] = $r7;;
     _32(0x27150607),        //sd 24 (0x18)[$r7] = $r5;;
     _32(0x28110207),        //sq 8 (0x8)[$r7] = $r4r5;;
     _32(0x97ffff76),        //goto 27430 <_free_r+0x110>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xfa023080),        //sraw $r0 = $r0, 2 (0x2)
     _96(0x100000009000012ae008de00),        //make $r2 = 306040 (0x4ab78);;
     _32(0xf9026001),        //slld $r0 = $r1, $r0
     _32(0x38140202),        //ld $r5 = 8 (0x8)[$r2];;
     _32(0x7a010140),        //ord $r0 = $r0, $r5;;
     _32(0x97ffffa5),        //goto 27514 <_free_r+0x1f4>
     _32(0x27010202),        //sd 8 (0x8)[$r2] = $r0;;
     _32(0x69095500),        //compd.gtu $r2 = $r0, 340 (0x154);;
     _32(0x08000202),        //cb.dnez $r2? 276ac <_free_r+0x38c>;;
     _32(0x6603e3c1),        //extfz $r0 = $r1, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e00),        //addw $r4 = $r0, 120 (0x78)
     _32(0x71001dc0),        //addw $r0 = $r0, 119 (0x77);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff8c),        //goto 274d4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe000007e),        //make $r0 = 126 (0x7e)
     _64(0x10000001e9095500),        //compd.gtu $r2 = $r0, 1364 (0x554);;
     _32(0x087fe182),        //cb.dnez $r2? 274d4 <_free_r+0x1b4>;;
     _32(0x67031481),        //extfz $r0 = $r1, 49 (0x31), 18 (0x12);;
     _32(0xf1101f40),        //addw $r4 = $r0, 125 (0x7d)
     _32(0x71001f00),        //addw $r0 = $r0, 124 (0x7c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff80),        //goto 274d4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x97ffff53),        //goto 27430 <_free_r+0x110>
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x00000000)        //errop ;;
 |];

let _fwalk: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea540001),        //copyd $r21 = $r1
     _64(0xa8510a0ce1504800),        //addd $r20 = $r0, 1312 (0x520)
     _32(0x08000001),        //sq 40 (0x28)[$r12] = $r20r21;;
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x30000214),        //lwz $r0 = 8 (0x8)[$r20];;
     _32(0x38380414),        //ld $r14 = 16 (0x10)[$r20];;
     _32(0x0e000500),        //cb.wlez $r0? 27770 <_fwalk+0x80>;;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x72014000),        //addx4d $r0 = $r0, $r0;;
     _32(0x794a2180),        //slld $r18 = $r0, 6 (0x6);;
     _32(0x7149048e),        //addd $r18 = $r14, $r18;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c000200),        //cb.wnez $r0? 27764 <_fwalk+0x74>;;
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x2c08048e),        //lhs $r2 = 18 (0x12)[$r14];;
     _64(0x07fffffff109b7c2),        //compw.eq $r2 = $r2, 4294967295 (0xffffffff);;
     _32(0x0c0000c2),        //cb.wnez $r2? 27764 <_fwalk+0x74>;;
     _32(0x0fdc0015),        //icall $r21;;
     _32(0x7a4d14c0),        //orw $r19 = $r0, $r19;;
     _32(0x6138500e),        //addd $r14 = $r14, 320 (0x140);;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087ffcc0),        //cb.dnez $r0? 27738 <_fwalk+0x48>;;
     _32(0x38500014),        //ld $r20 = 0 (0x0)[$r20];;
     _32(0x087ffa54),        //cb.dnez $r20? 27718 <_fwalk+0x28>;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c)        //lq $r20r21 = 40 (0x28)[$r12];;
 |];

let _fwalk_reent: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea540001),        //copyd $r21 = $r1
     _64(0xa851080ce1504800),        //addd $r20 = $r0, 1312 (0x520)
     _32(0x08000001),        //sq 32 (0x20)[$r12] = $r20r21;;
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0xea580000),        //copyd $r22 = $r0
     _32(0x27590c0c),        //sd 48 (0x30)[$r12] = $r22;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x30080214),        //lwz $r2 = 8 (0x8)[$r20];;
     _32(0x38380414),        //ld $r14 = 16 (0x10)[$r20];;
     _32(0x0e000542),        //cb.wlez $r2? 27824 <_fwalk_reent+0x8c>;;
     _32(0x7108ffc2),        //addw $r2 = $r2, -1 (0xffffffff);;
     _32(0x61080042),        //addd $r2 = $r2, 1 (0x1);;
     _32(0x72094082),        //addx4d $r2 = $r2, $r2;;
     _32(0x794a2182),        //slld $r18 = $r2, 6 (0x6);;
     _32(0x7149048e),        //addd $r18 = $r14, $r18;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000016),        //copyd $r0 = $r22
     _32(0x2808040e),        //lhz $r2 = 16 (0x10)[$r14];;
     _64(0x00000000f809b042),        //compw.leu $r2 = $r2, 1 (0x1);;
     _32(0x0c0001c2),        //cb.wnez $r2? 27818 <_fwalk_reent+0x80>;;
     _32(0x2c08048e),        //lhs $r2 = 18 (0x12)[$r14];;
     _64(0x07fffffff109b7c2),        //compw.eq $r2 = $r2, 4294967295 (0xffffffff);;
     _32(0x0c0000c2),        //cb.wnez $r2? 27818 <_fwalk_reent+0x80>;;
     _32(0x0fdc0015),        //icall $r21;;
     _32(0x7a4d14c0),        //orw $r19 = $r0, $r19;;
     _32(0x6138500e),        //addd $r14 = $r14, 320 (0x140);;
     _32(0x7009a392),        //compd.ne $r2 = $r18, $r14;;
     _32(0x087ffc82),        //cb.dnez $r2? 277e8 <_fwalk_reent+0x50>;;
     _32(0x38500014),        //ld $r20 = 0 (0x0)[$r20];;
     _32(0x087ffa14),        //cb.dnez $r20? 277c8 <_fwalk_reent+0x30>;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50080c),        //lq $r20r21 = 32 (0x20)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38580c0c)        //ld $r22 = 48 (0x30)[$r12];;
 |];

let __localeconv_l: list_I = 
 [|
     _32(0x8fd00000),        //ret 
     _32(0x61004000)        //addd $r0 = $r0, 256 (0x100);;
 |];

let _localeconv_r: list_I = 
 [|
     _96(0x80000128e0047000e0002000),        //make $r0 = 303232 (0x4a080)
     _96(0x080000008800012a80000000),        //make $r1 = 305600 (0x4a9c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38001200),        //ld $r0 = 72 (0x48)[$r0];;
     _32(0x71020040),        //cmoved.deqz $r0? $r0 = $r1;;
     _32(0x8fd00000),        //ret 
     _32(0x61004000),        //addd $r0 = $r0, 256 (0x100);;
     _32(0x7f03f000)        //nop ;;
 |];

let localeconv: list_I = 
 [|
     _96(0x80000128e0047000e0002000),        //make $r0 = 303232 (0x4a080)
     _96(0x080000008800012a80000000),        //make $r1 = 305600 (0x4a9c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38001200),        //ld $r0 = 72 (0x48)[$r0];;
     _32(0x71020040),        //cmoved.deqz $r0? $r0 = $r1;;
     _32(0x8fd00000),        //ret 
     _32(0x61004000),        //addd $r0 = $r0, 256 (0x100);;
     _32(0x00000000)        //errop ;;
 |];

let _setlocale_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000134e0049e00),        //make $r1 = 316024 (0x4d278);;
     _32(0xea380002),        //copyd $r14 = $r2
     _32(0xea000002),        //copyd $r0 = $r2
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x88800102),        //cb.deqz $r2? 278e8 <_setlocale_r+0x30>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x18000a60),        //call 2a260 <strcmp>;;
     _32(0x0c000240),        //cb.wnez $r0? 27908 <_setlocale_r+0x50>;;
     _96(0x0000000080000134e0009c00),        //make $r0 = 316016 (0x4d270);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x98000a56),        //call 2a260 <strcmp>
     _32(0xea00000e),        //copyd $r0 = $r14
     _96(0x0800000088000134e0049c00),        //make $r1 = 316016 (0x4d270);;
     _32(0x0cfffcc0),        //cb.weqz $r0? 278e8 <_setlocale_r+0x30>;;
     _32(0x98000a50),        //call 2a260 <strcmp>
     _32(0xea00000e),        //copyd $r0 = $r14
     _96(0x0800000088000139e004a600),        //make $r1 = 321176 (0x4e698);;
     _32(0x0cfffb40),        //cb.weqz $r0? 278e8 <_setlocale_r+0x30>;;
     _32(0x97ffffef),        //goto 278f4 <_setlocale_r+0x3c>
     _32(0x60000000)        //make $r0 = 0 (0x0);;
 |];

let __locale_mb_cur_max: list_I = 
 [|
     _96(0x80000128e0047000e0002000),        //make $r0 = 303232 (0x4a080)
     _96(0x080000008800012a80000000),        //make $r1 = 305600 (0x4a9c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38001200),        //ld $r0 = 72 (0x48)[$r0];;
     _32(0x71020040),        //cmoved.deqz $r0? $r0 = $r1;;
     _32(0x8fd00000),        //ret 
     _32(0x24005800),        //lbs $r0 = 352 (0x160)[$r0];;
     _32(0x7f03f000)        //nop ;;
 |];

let __locale_ctype_ptr_l: list_I = 
 [|
     _32(0x8fd00000),        //ret 
     _32(0x38003e00)        //ld $r0 = 248 (0xf8)[$r0];;
 |];

let __locale_ctype_ptr: list_I = 
 [|
     _96(0x80000128e0047000e0002000),        //make $r0 = 303232 (0x4a080)
     _96(0x080000008800012a80000000),        //make $r1 = 305600 (0x4a9c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38001200),        //ld $r0 = 72 (0x48)[$r0];;
     _32(0x71020040),        //cmoved.deqz $r0? $r0 = $r1;;
     _32(0x8fd00000),        //ret 
     _32(0x38003e00),        //ld $r0 = 248 (0xf8)[$r0];;
     _32(0x7f03f000)        //nop ;;
 |];

let setlocale: list_I = 
 [|
     _32(0xea080001),        //copyd $r2 = $r1
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x1000000090000128e00c2000),        //make $r3 = 303232 (0x4a080);;
     _32(0x97ffffbf),        //goto 278b8 <_setlocale_r>
     _32(0x38000003),        //ld $r0 = 0 (0x0)[$r3];;
     _32(0x00000000)        //errop ;;
 |];

let __libc_lock_init: list_I = 
 [|
     _32(0x08800080),        //cb.deqz $r0? 279d0 <__libc_lock_init+0x8>;;
     _32(0x10002feb),        //goto 33978 <__cos_recursive_initlock_base>;;
     _32(0x00000000),        //errop ;;
     _32(0x10002fe9)        //goto 33978 <__cos_recursive_initlock_base>;;
 |];

let __libc_lock_close: list_I = 
 [|
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_try_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0xf0055081),        //addx2w $r1 = $r1, $r2
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x98002fe1),        //call 33988 <__cos_recursive_trylock_base>
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _64(0x00000000f005b040),        //compw.ne $r1 = $r0, 1 (0x1);;
     _32(0x0c8001c1),        //cb.weqz $r1? 27a30 <__libc_lock_try_acquire+0x50>;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x0000000080000000e0040000),        //make $r1 = 0 (0x0);;
     _32(0x08000201),        //cb.dnez $r1? 27a5c <__libc_lock_try_acquire+0x7c>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x80000000e0080000e0040040),        //make $r1 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r2 = 0 (0x0);;
     _32(0xe0090002),        //compd.ne $r2 = $r2, 0 (0x0)
     _64(0x08000000f505b041),        //compw.gt $r1 = $r1, 1 (0x1);;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 27a94 <__libc_lock_try_acquire+0xb4>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x97ffffee),        //goto 27a44 <__libc_lock_try_acquire+0x64>
     _32(0x3fcd0000),        //fence ;;
     _32(0x98002de9),        //call 33238 <mppa_cos_l2_wb_inval>
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x97fffffb),        //goto 27a8c <__libc_lock_try_acquire+0xac>
     _32(0x3f8d0000)        //dinval ;;
 |];

let __libc_lock_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0xe407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78383fc2),        //zxbd $r14 = $r2;;
     _32(0xf0395381),        //addx2w $r14 = $r1, $r14
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xf14c004e),        //addw $r19 = $r14, 1 (0x1)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xf138004e),        //addw $r14 = $r14, 1 (0x1)
     _32(0x27510a0c),        //sd 40 (0x28)[$r12] = $r20;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x9fffffbe),        //call 279e0 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c800380),        //cb.weqz $r0? 27b28 <__libc_lock_acquire+0x80>;;
     _32(0x26510e0c),        //sw 56 (0x38)[$r12] = $r20;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7705b4c1),        //compw.geu $r1 = $r1, $r19;;
     _32(0x0c7ffe81),        //cb.wnez $r1? 27ae8 <__libc_lock_acquire+0x40>;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x26050e0c),        //sw 56 (0x38)[$r12] = $r1;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7605b381),        //compw.ltu $r1 = $r1, $r14;;
     _32(0x0c7ffec1),        //cb.wnez $r1? 27b04 <__libc_lock_acquire+0x5c>;;
     _32(0x9fffffb1),        //call 279e0 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c7ffd00),        //cb.wnez $r0? 27af4 <__libc_lock_acquire+0x4c>;;
     _96(0x0000000080000000e0000000),        //make $r0 = 0 (0x0);;
     _32(0x08000240),        //cb.dnez $r0? 27b58 <__libc_lock_acquire+0xb0>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _96(0x80000000e0040000e0000040),        //make $r0 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r1 = 0 (0x0);;
     _32(0xe0050001),        //compd.ne $r1 = $r1, 0 (0x0)
     _64(0x08000000f501b040),        //compw.gt $r0 = $r0, 1 (0x1);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c000280),        //cb.wnez $r0? 27ba8 <__libc_lock_acquire+0x100>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _32(0x18002da4),        //call 33238 <mppa_cos_l2_wb_inval>;;
     _32(0x97fffff7),        //goto 27b88 <__libc_lock_acquire+0xe0>
     _32(0x3f8d0000),        //dinval ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_release: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0xf80c3fc2),        //zxbd $r3 = $r2
     _96(0x1000000090000000e0080000),        //make $r2 = 0 (0x0);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x700550c1),        //addx2w $r1 = $r1, $r3;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x880001c2),        //cb.dnez $r2? 27c08 <__libc_lock_release+0x50>
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10002fb3),        //goto 33ad0 <__cos_recursive_unlock_base>;;
     _96(0x80000000e00c0000e0080040),        //make $r2 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r3 = 0 (0x0);;
     _32(0xe00d0003),        //compd.ne $r3 = $r3, 0 (0x0)
     _64(0x08000000f509b042),        //compw.gt $r2 = $r2, 1 (0x1);;
     _32(0x780910c2),        //andw $r2 = $r2, $r3;;
     _32(0x0c0001c2),        //cb.wnez $r2? 27c4c <__libc_lock_release+0x94>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10002fa2),        //goto 33ad0 <__cos_recursive_unlock_base>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x98002d7a),        //call 33238 <mppa_cos_l2_wb_inval>
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x97fffff6),        //goto 27c38 <__libc_lock_release+0x80>
     _32(0x3f8d0000)        //dinval ;;
 |];

let __swhatbuf_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130d80c),        //addd $r12 = $r12, -160 (0xffffff60);;
     _32(0xea4c0003),        //copyd $r19 = $r3
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0xe1080e0c),        //addd $r2 = $r12, 56 (0x38)
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x2c040481),        //lhs $r1 = 18 (0x12)[$r1];;
     _32(0x0d000481),        //cb.wltz $r1? 27cd8 <__swhatbuf_r+0x70>;;
     _32(0x18001073),        //call 2be60 <_fstat_r>;;
     _32(0x0d000400),        //cb.wltz $r0? 27cd8 <__swhatbuf_r+0x70>;;
     _32(0xe0080400),        //make $r2 = 1024 (0x400)
     _32(0xe0000800),        //make $r0 = 2048 (0x800)
     _32(0x30040f0c),        //lwz $r1 = 60 (0x3c)[$r12];;
     _64(0x0000003cf8040001),        //andw $r1 = $r1, 61440 (0xf000);;
     _64(0x00000100f105b001),        //compw.eq $r1 = $r1, 8192 (0x2000);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x27090012),        //sd 0 (0x0)[$r18] = $r2;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130280c),        //addd $r12 = $r12, 160 (0xa0)
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x78002000),        //andw $r0 = $r0, 128 (0x80);;
     _32(0x0c800280),        //cb.weqz $r0? 27d10 <__swhatbuf_r+0xa8>;;
     _32(0xe0040040),        //make $r1 = 64 (0x40)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27050012),        //sd 0 (0x0)[$r18] = $r1;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130280c),        //addd $r12 = $r12, 160 (0xa0)
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040400),        //make $r1 = 1024 (0x400)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27050012),        //sd 0 (0x0)[$r18] = $r1;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130280c),        //addd $r12 = $r12, 160 (0xa0)
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __smakebuf_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x27410a0c),        //sd 40 (0x28)[$r12] = $r16;;
     _32(0x28080401),        //lhz $r2 = 16 (0x10)[$r1];;
     _32(0x78080082),        //andw $r2 = $r2, 2 (0x2);;
     _32(0x0c800302),        //cb.weqz $r2? 27d8c <__smakebuf_r+0x54>;;
     _32(0xe1001dc1),        //addd $r0 = $r1, 119 (0x77)
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x2701000e),        //sd 0 (0x0)[$r14] = $r0;;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x2605080e),        //sw 32 (0x20)[$r14] = $r1;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffffb7),        //call 27c68 <__swhatbuf_r>
     _32(0xe10c0c0c),        //addd $r3 = $r12, 48 (0x30)
     _32(0x61080e0c),        //addd $r2 = $r12, 56 (0x38);;
     _32(0x98000030),        //call 27e58 <_malloc_r>
     _32(0xfa4c0000),        //copyw $r19 = $r0
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38040e0c),        //ld $r1 = 56 (0x38)[$r12];;
     _32(0x08800580),        //cb.deqz $r0? 27e00 <__smakebuf_r+0xc8>;;
     _96(0x8000009ba808040ee0105c00),        //make $r4 = 159088 (0x26d70)
     _32(0x00000000),        //lhz $r2 = 16 (0x10)[$r14];;
     _32(0x30040c0c),        //lwz $r1 = 48 (0x30)[$r12];;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _32(0xea082002),        //ord $r2 = $r2, 128 (0x80)
     _32(0x27111612),        //sd 88 (0x58)[$r18] = $r4;;
     _32(0x2701000e),        //sd 0 (0x0)[$r14] = $r0;;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x260d080e),        //sw 32 (0x20)[$r14] = $r3;;
     _32(0x8c0005c1),        //cb.wnez $r1? 27e34 <__smakebuf_r+0xfc>
     _32(0x2509040e),        //sh 16 (0x10)[$r14] = $r2;;
     _32(0x7a091093),        //orw $r2 = $r19, $r2;;
     _32(0x2509040e),        //sh 16 (0x10)[$r14] = $r2;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _64(0x00000000f8048000),        //andw $r1 = $r0, 512 (0x200);;
     _32(0x0c7ff681),        //cb.wnez $r1? 27d74 <__smakebuf_r+0x3c>;;
     _32(0xf800ff00),        //andw $r0 = $r0, -4 (0xfffffffc)
     _32(0xe1041dce),        //addd $r1 = $r14, 119 (0x77)
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0xfa000080),        //orw $r0 = $r0, 2 (0x2)
     _32(0x2705000e),        //sd 0 (0x0)[$r14] = $r1;;
     _32(0x2705060e),        //sd 24 (0x18)[$r14] = $r1;;
     _32(0x2609080e),        //sw 32 (0x20)[$r14] = $r2;;
     _32(0x97ffffd2),        //goto 27d74 <__smakebuf_r+0x3c>
     _32(0x2501040e),        //sh 16 (0x10)[$r14] = $r0;;
     _32(0x98001165),        //call 2c3c8 <_isatty_r>
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x2c04048e),        //lhs $r1 = 18 (0x12)[$r14];;
     _32(0x8cfffa00),        //cb.weqz $r0? 27de0 <__smakebuf_r+0xa8>
     _32(0x2808040e),        //lhz $r2 = 16 (0x10)[$r14];;
     _64(0x0000003fe808ff02),        //andd $r2 = $r2, 65532 (0xfffc);;
     _32(0x97ffffe4),        //goto 27de0 <__smakebuf_r+0xa8>
     _32(0x6a080042)        //ord $r2 = $r2, 1 (0x1);;
 |];

let _malloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xe14805c1),        //addd $r18 = $r1, 23 (0x17)
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe9090b92),        //compd.gtu $r2 = $r18, 46 (0x2e)
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x88000982),        //cb.dnez $r2? 27f14 <_malloc_r+0xbc>
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0xe9050801),        //compd.gtu $r1 = $r1, 32 (0x20)
     _32(0x60480020),        //make $r18 = 32 (0x20);;
     _32(0x08002ac1),        //cb.dnez $r1? 28138 <_malloc_r+0x2e0>;;
     _32(0x1800039c),        //call 28d00 <__malloc_lock>;;
     _32(0xe0000050),        //make $r0 = 80 (0x50)
     _32(0x60140004),        //make $r5 = 4 (0x4);;
     _96(0x8000012ab838e000e108de00),        //addd $r2 = $r0, 306040 (0x4ab78)
     _96(0x180000009800012a80000000),        //ld $r14 = 306048 (0x4ab80)[$r0];;
     _32(0x6104fc02),        //addd $r1 = $r2, -16 (0xfffffff0);;
     _32(0x7005a04e),        //compd.ne $r1 = $r14, $r1;;
     _32(0x08802a81),        //cb.deqz $r1? 28164 <_malloc_r+0x30c>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0x27090603),        //sd 24 (0x18)[$r3] = $r2;;
     _32(0x270d0402),        //sd 16 (0x10)[$r2] = $r3;;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x9800038a),        //call 28d10 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x6848fc12),        //andd $r18 = $r18, -16 (0xfffffff0);;
     _32(0xf905a481),        //compd.gtu $r1 = $r1, $r18
     _64(0x081fffffe909ffd2),        //compd.gtu $r2 = $r18, 2147483647 (0x7fffffff);;
     _32(0x7a051042),        //orw $r1 = $r2, $r1;;
     _32(0x0c002101),        //cb.wnez $r1? 28138 <_malloc_r+0x2e0>;;
     _32(0x18000375),        //call 28d00 <__malloc_lock>;;
     _32(0xe9017dd2),        //compd.gtu $r0 = $r18, 503 (0x1f7)
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _32(0xe0140040),        //make $r5 = 64 (0x40)
     _32(0x6018003f),        //make $r6 = 63 (0x3f);;
     _32(0x088065c0),        //cb.deqz $r0? 2859c <_malloc_r+0x744>;;
     _32(0x7b022252),        //srld $r0 = $r18, 9 (0x9);;
     _32(0x08004700),        //cb.dnez $r0? 283b8 <_malloc_r+0x560>;;
     _96(0x8000012ab838e004e110da04),        //addd $r4 = $r4, 306024 (0x4ab68)
     _96(0x180000009800012a80000000),        //ld $r14 = 306048 (0x4ab80)[$r4];;
     _32(0x7101a384),        //compd.eq $r0 = $r4, $r14;;
     _32(0x08800180),        //cb.deqz $r0? 27f80 <_malloc_r+0x128>;;
     _32(0x1000000b),        //goto 27f98 <_malloc_r+0x140>;;
     _32(0x09804e02),        //cb.dgez $r2? 28450 <_malloc_r+0x5f8>;;
     _32(0x3838060e),        //ld $r14 = 24 (0x18)[$r14];;
     _32(0x7005a384),        //compd.ne $r1 = $r4, $r14;;
     _32(0x088001c1),        //cb.deqz $r1? 27f98 <_malloc_r+0x140>;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x75090052),        //sbfd $r2 = $r18, $r1;;
     _32(0x650d07c2),        //compd.gt $r3 = $r2, 31 (0x1f);;
     _32(0x08fffe03),        //cb.deqz $r3? 27f70 <_malloc_r+0x118>;;
     _32(0x6a140006),        //copyd $r5 = $r6;;
     _96(0x000000008000012ae050de00),        //make $r20 = 306040 (0x4ab78);;
     _32(0xe1040414),        //addd $r1 = $r20, 16 (0x10)
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x08801e80),        //cb.deqz $r0? 28198 <_malloc_r+0x340>;;
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x750d0092),        //sbfd $r3 = $r18, $r2;;
     _32(0x640107c3),        //compd.le $r0 = $r3, 31 (0x1f);;
     _32(0x08805f40),        //cb.deqz $r0? 285b8 <_malloc_r+0x760>;;
     _32(0xe9017fc2),        //compd.gtu $r0 = $r2, 511 (0x1ff)
     _32(0x27050a14),        //sd 40 (0x28)[$r20] = $r1;;
     _32(0x89804103),        //cb.dgez $r3? 283e0 <_malloc_r+0x588>
     _32(0x27050814),        //sd 32 (0x20)[$r20] = $r1;;
     _32(0x08004c40),        //cb.dnez $r0? 2849c <_malloc_r+0x644>;;
     _32(0xe60b20c2),        //extfz $r2 = $r2, 34 (0x22), 3 (0x3)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x380c0214),        //ld $r3 = 8 (0x8)[$r20];;
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0xf9063041),        //sllw $r1 = $r1, 1 (0x1)
     _32(0x790a6080),        //slld $r2 = $r0, $r2;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _32(0x7a0900c2),        //ord $r2 = $r2, $r3;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x27090214),        //sd 8 (0x8)[$r20] = $r2;;
     _96(0x8000012ab804de00e10cda00),        //addd $r3 = $r0, 306024 (0x4ab68)
     _96(0x180000009800012a80000000),        //ld $r1 = 306040 (0x4ab78)[$r0];;
     _32(0x270d060e),        //sd 24 (0x18)[$r14] = $r3;;
     _32(0x2705040e),        //sd 16 (0x10)[$r14] = $r1;;
     _96(0x180000009800012aa739de00),        //sd 306040 (0x4ab78)[$r0] = $r14;;
     _32(0x27390601),        //sd 24 (0x18)[$r1] = $r14;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0x601c0001),        //make $r7 = 1 (0x1);;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08001680),        //cb.dnez $r0? 281b0 <_malloc_r+0x358>;;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x080002c0),        //cb.dnez $r0? 2807c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x7814ff05),        //andw $r5 = $r5, -4 (0xfffffffc);;
     _32(0xf8010087),        //andd $r0 = $r7, $r2
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x08000140),        //cb.dnez $r0? 2807c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x08ffff40),        //cb.deqz $r0? 2806c <_malloc_r+0x214>;;
     _96(0x000000008000012ae028de00),        //make $r10 = 306040 (0x4ab78);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x6a240005),        //copyd $r9 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _64(0x07fffffff4018400),        //addx8wd $r0 = $r0, 4294967280 (0xfffffff0);;
     _96(0x000000008000012ae100de00),        //addd $r0 = $r0, 306040 (0x4ab78);;
     _32(0x6a200000),        //copyd $r8 = $r0;;
     _32(0x38040608),        //ld $r1 = 24 (0x18)[$r8];;
     _32(0x7109a048),        //compd.eq $r2 = $r8, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 280c4 <_malloc_r+0x26c>;;
     _32(0x10000128),        //goto 28558 <_malloc_r+0x700>;;
     _32(0x09804b43),        //cb.dgez $r3? 28570 <_malloc_r+0x718>;;
     _32(0x08804986),        //cb.deqz $r6? 28558 <_malloc_r+0x700>;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x38040601),        //ld $r1 = 24 (0x18)[$r1];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0xf50d0092),        //sbfd $r3 = $r18, $r2
     _32(0x7019a048),        //compd.ne $r6 = $r8, $r1;;
     _32(0x641107c3),        //compd.le $r4 = $r3, 31 (0x1f);;
     _32(0x087ffdc4),        //cb.dnez $r4? 280bc <_malloc_r+0x264>;;
     _32(0xea000052),        //ord $r0 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _96(0x9000012ab818040ee010de00),        //make $r4 = 306040 (0x4ab78)
     _32(0x10000000),        //ld $r6 = 16 (0x10)[$r14];;
     _32(0xe1140404),        //addd $r5 = $r4, 16 (0x10)
     _32(0xea1c0043),        //ord $r7 = $r3, 1 (0x1)
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x2701020e),        //sd 8 (0x8)[$r14] = $r0;;
     _32(0x27050606),        //sd 24 (0x18)[$r6] = $r1;;
     _32(0x27190401),        //sd 16 (0x10)[$r1] = $r6;;
     _32(0x27490a04),        //sd 40 (0x28)[$r4] = $r18;;
     _32(0x27490804),        //sd 32 (0x20)[$r4] = $r18;;
     _32(0x27150612),        //sd 24 (0x18)[$r18] = $r5;;
     _32(0x27150412),        //sd 16 (0x10)[$r18] = $r5;;
     _32(0x271d0212),        //sd 8 (0x8)[$r18] = $r7;;
     _32(0x980002fa),        //call 28d10 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x90000005),        //goto 28144 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xe004000c),        //make $r1 = 12 (0xc)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf1140085),        //addw $r5 = $r5, 2 (0x2)
     _96(0x8800012ab838e400e050de00),        //make $r20 = 306040 (0x4ab78)
     _96(0x180000009800012a88000000),        //ld $r14 = 306064 (0x4ab90)[$r0];;
     _32(0x61040414),        //addd $r1 = $r20, 16 (0x10);;
     _32(0x7109a382),        //compd.eq $r2 = $r2, $r14;;
     _32(0x08ffd382),        //cb.deqz $r2? 27ec0 <_malloc_r+0x68>;;
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x087fe200),        //cb.dnez $r0? 27fb4 <_malloc_r+0x15c>;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x38080214),        //ld $r2 = 8 (0x8)[$r20];;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08ffea00),        //cb.deqz $r0? 2804c <_malloc_r+0x1f4>;;
     _96(0x8000012ae06cda00e064de00),        //make $r25 = 306040 (0x4ab78)
     _96(0x080000008800012a80000000),        //make $r27 = 306024 (0x4ab68);;
     _96(0x8000013ab8380419e0682200),        //make $r26 = 321672 (0x4e888)
     _32(0x00000000),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x3858020e),        //ld $r22 = 8 (0x8)[$r14];;
     _32(0x6858ff16),        //andd $r22 = $r22, -4 (0xfffffffc);;
     _32(0xf5010592),        //sbfd $r0 = $r18, $r22
     _32(0xf909a592),        //compd.gtu $r2 = $r18, $r22
     _32(0x7161058e),        //addd $r24 = $r14, $r22;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0c8020c1),        //cb.weqz $r1? 28400 <_malloc_r+0x5a8>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _96(0x8800013ab808001be0043000),        //make $r1 = 321728 (0x4e8c0)
     _32(0x08000000),        //ld $r2 = 0 (0x0)[$r27];;
     _32(0x38540001),        //ld $r21 = 0 (0x0)[$r1];;
     _32(0x6009ffc2),        //compd.ne $r2 = $r2, -1 (0xffffffff);;
     _32(0x71550552),        //addd $r21 = $r18, $r21;;
     _32(0xe1540815),        //addd $r21 = $r21, 32 (0x20)
     _64(0x08000004e10407d5),        //addd $r1 = $r21, 4127 (0x101f);;
     _64(0x07fffffce8040001),        //andd $r1 = $r1, -4096 (0xfffffffffffff000);;
     _32(0x70560042),        //cmoved.dnez $r2? $r21 = $r1;;
     _32(0x9800076e),        //call 29fe8 <_sbrk_r>
     _32(0x6a040015),        //copyd $r1 = $r21;;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x7905a5d8),        //compd.gtu $r1 = $r24, $r23;;
     _32(0x08804640),        //cb.deqz $r0? 286a8 <_malloc_r+0x850>;;
     _96(0x000000008000012ae000de00),        //make $r0 = 306040 (0x4ab78);;
     _32(0x7001a00e),        //compd.ne $r0 = $r14, $r0;;
     _32(0xf8011040),        //andw $r0 = $r0, $r1
     _32(0x7005a5d8),        //compd.ne $r1 = $r24, $r23;;
     _32(0x0c004480),        //cb.wnez $r0? 286a8 <_malloc_r+0x850>;;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0xf1091540),        //addw $r2 = $r0, $r21
     _32(0x71011540),        //addw $r0 = $r0, $r21;;
     _32(0x88804101),        //cb.deqz $r1? 28680 <_malloc_r+0x828>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x3800001b),        //ld $r0 = 0 (0x0)[$r27];;
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08804200),        //cb.deqz $r0? 286a0 <_malloc_r+0x848>;;
     _32(0x750105d8),        //sbfd $r0 = $r24, $r23;;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x2601001a),        //sw 0 (0x0)[$r26] = $r0;;
     _32(0xe80003d7),        //andd $r0 = $r23, 15 (0xf)
     _32(0x60601000),        //make $r24 = 4096 (0x1000);;
     _32(0x08800140),        //cb.deqz $r0? 282ac <_malloc_r+0x454>;;
     _32(0xe5040400),        //sbfd $r1 = $r0, 16 (0x10)
     _64(0x08000004e5600400),        //sbfd $r24 = $r0, 4112 (0x1010);;
     _32(0x715d0057),        //addd $r23 = $r23, $r1;;
     _32(0xf1050557),        //addd $r1 = $r23, $r21
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x60540001),        //make $r21 = 1 (0x1);;
     _64(0x00000003e804ffc1),        //andd $r1 = $r1, 4095 (0xfff);;
     _32(0x75610601),        //sbfd $r24 = $r1, $r24;;
     _32(0x98000749),        //call 29fe8 <_sbrk_r>
     _32(0x6a040018),        //copyd $r1 = $r24;;
     _32(0xe109ffc0),        //compd.eq $r2 = $r0, -1 (0xffffffff)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x08000142),        //cb.dnez $r2? 282e8 <_malloc_r+0x490>;;
     _32(0xf5090017),        //sbfd $r2 = $r23, $r0
     _32(0x7804ffd8),        //zxwd $r1 = $r24;;
     _32(0x71550602),        //addd $r21 = $r2, $r24;;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0xf151a50e),        //compd.eq $r20 = $r14, $r20
     _32(0xe0100009),        //make $r4 = 9 (0x9)
     _96(0x9000012ab000001ae060de00),        //make $r24 = 306040 (0x4ab78)
     _32(0x10000000),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x275d0418),        //sd 16 (0x10)[$r24] = $r23;;
     _32(0x27550217),        //sd 8 (0x8)[$r23] = $r21;;
     _32(0xf1091040),        //addw $r2 = $r0, $r1
     _32(0xf1011040),        //addw $r0 = $r0, $r1
     _32(0x690507d6),        //compd.gtu $r1 = $r22, 31 (0x1f);;
     _32(0x88004154),        //cb.dnez $r20? 28728 <_malloc_r+0x8d0>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x08804141),        //cb.deqz $r1? 28730 <_malloc_r+0x8d8>;;
     _32(0xe104fa16),        //addd $r1 = $r22, -24 (0xffffffe8)
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6804fc01),        //andd $r1 = $r1, -16 (0xfffffff0);;
     _32(0xf10d004e),        //addd $r3 = $r14, $r1
     _32(0x691507c1),        //compd.gtu $r5 = $r1, 31 (0x1f);;
     _32(0x68080042),        //andd $r2 = $r2, 1 (0x1);;
     _32(0x7a050042),        //ord $r1 = $r2, $r1;;
     _32(0x2705020e),        //sd 8 (0x8)[$r14] = $r1;;
     _32(0x27110203),        //sd 8 (0x8)[$r3] = $r4;;
     _32(0x88004545),        //cb.dnez $r5? 28798 <_malloc_r+0x940>
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0xea380017),        //copyd $r14 = $r23
     _32(0x38540217),        //ld $r21 = 8 (0x8)[$r23];;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _96(0x080000008800013ae0082e00),        //make $r2 = 321720 (0x4e8b8);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 28374 <_malloc_r+0x51c>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _96(0x000000008000013ae0082c00),        //make $r2 = 321712 (0x4e8b0);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 28390 <_malloc_r+0x538>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _32(0x6854ff15),        //andd $r21 = $r21, -4 (0xfffffffc);;
     _32(0xf5010552),        //sbfd $r0 = $r18, $r21
     _32(0x7955a552),        //compd.gtu $r21 = $r18, $r21;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a551055),        //orw $r21 = $r21, $r1;;
     _32(0x0c8005d5),        //cb.weqz $r21? 28400 <_malloc_r+0x5a8>;;
     _32(0x9800025a),        //call 28d10 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x97ffff65),        //goto 28144 <_malloc_r+0x2ec>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x69050100),        //compd.gtu $r1 = $r0, 4 (0x4);;
     _32(0x080016c1),        //cb.dnez $r1? 28528 <_malloc_r+0x6d0>;;
     _32(0x66175192),        //extfz $r5 = $r18, 37 (0x25), 6 (0x6);;
     _32(0xf1100e45),        //addw $r4 = $r5, 57 (0x39)
     _32(0xf1180e05),        //addw $r6 = $r5, 56 (0x38)
     _32(0x71140e45),        //addw $r5 = $r5, 57 (0x39);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffedd),        //goto 27f4c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040202),        //ld $r1 = 8 (0x8)[$r2];;
     _32(0x6a040041),        //ord $r1 = $r1, 1 (0x1);;
     _32(0x98000248),        //call 28d10 <__malloc_unlock>
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x97ffff53),        //goto 28144 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xea0c0052),        //ord $r3 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea040040),        //ord $r1 = $r0, 1 (0x1)
     _96(0x180000009800012ae008de00),        //make $r2 = 306040 (0x4ab78);;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x270d020e),        //sd 8 (0x8)[$r14] = $r3;;
     _32(0x27490402),        //sd 16 (0x10)[$r2] = $r18;;
     _32(0x9800023b),        //call 28d10 <__malloc_unlock>
     _32(0x27050212),        //sd 8 (0x8)[$r18] = $r1;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x270d0604),        //sd 24 (0x18)[$r4] = $r3;;
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x98000228),        //call 28d10 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x7b062242),        //srld $r1 = $r2, 9 (0x9);;
     _32(0x69010101),        //compd.gtu $r0 = $r1, 4 (0x4);;
     _32(0x088014c0),        //cb.deqz $r0? 285f0 <_malloc_r+0x798>;;
     _32(0x69010501),        //compd.gtu $r0 = $r1, 20 (0x14);;
     _32(0x08002300),        //cb.dnez $r0? 286dc <_malloc_r+0x884>;;
     _32(0xf1001701),        //addw $r0 = $r1, 92 (0x5c)
     _32(0x710416c1),        //addw $r1 = $r1, 91 (0x5b);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x8000012ab80cde00e100da00),        //addd $r0 = $r0, 306024 (0x4ab68)
     _96(0x180000009800012a80000000),        //ld $r3 = 306040 (0x4ab78)[$r0];;
     _32(0x7011a0c0),        //compd.ne $r4 = $r0, $r3;;
     _32(0x08801d44),        //cb.deqz $r4? 286b4 <_malloc_r+0x85c>;;
     _32(0x38040203),        //ld $r1 = 8 (0x8)[$r3];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x7905a081),        //compd.gtu $r1 = $r1, $r2;;
     _32(0x08800101),        //cb.deqz $r1? 28500 <_malloc_r+0x6a8>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7105a0c0),        //compd.eq $r1 = $r0, $r3;;
     _32(0x08fffe81),        //cb.deqz $r1? 284e4 <_malloc_r+0x68c>;;
     _96(0x8000012ab8000603e004de00),        //make $r1 = 306040 (0x4ab78)
     _32(0x00000000),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x270d040e),        //sd 16 (0x10)[$r14] = $r3;;
     _32(0x27390400),        //sd 16 (0x10)[$r0] = $r14;;
     _32(0x97fffec6),        //goto 28038 <_malloc_r+0x1e0>
     _32(0x27390603),        //sd 24 (0x18)[$r3] = $r14;;
     _32(0x69050500),        //compd.gtu $r1 = $r0, 20 (0x14);;
     _32(0x08800e01),        //cb.deqz $r1? 2860c <_malloc_r+0x7b4>;;
     _32(0x69051500),        //compd.gtu $r1 = $r0, 84 (0x54);;
     _32(0x08001cc1),        //cb.dnez $r1? 28700 <_malloc_r+0x8a8>;;
     _32(0x6617b312),        //extfz $r5 = $r18, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc5),        //addw $r4 = $r5, 111 (0x6f)
     _32(0xf1181b85),        //addw $r6 = $r5, 110 (0x6e)
     _32(0x71141bc5),        //addw $r5 = $r5, 111 (0x6f);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe7f),        //goto 27f4c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf1240049),        //addw $r9 = $r9, 1 (0x1)
     _32(0x61200408),        //addd $r8 = $r8, 16 (0x10);;
     _32(0xf80400c9),        //andw $r1 = $r9, 3 (0x3)
     _32(0x7824ffc9),        //zxwd $r9 = $r9;;
     _32(0x0c7fb441),        //cb.wnez $r1? 280ac <_malloc_r+0x254>;;
     _32(0x10000032),        //goto 28634 <_malloc_r+0x7dc>;;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x380c0202),        //ld $r3 = 8 (0x8)[$r2];;
     _32(0x6a0c0043),        //ord $r3 = $r3, 1 (0x1);;
     _32(0x270d0202),        //sd 8 (0x8)[$r2] = $r3;;
     _32(0x27050604),        //sd 24 (0x18)[$r4] = $r1;;
     _32(0x980001e1),        //call 28d10 <__malloc_unlock>
     _32(0x27110401),        //sd 16 (0x10)[$r1] = $r4;;
     _32(0x97fffeec),        //goto 28144 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x7b1620d2),        //srld $r5 = $r18, 3 (0x3);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97fffe3b),        //goto 27e9c <_malloc_r+0x44>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xea140052),        //ord $r5 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea100043),        //ord $r4 = $r3, 1 (0x1)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x2715020e),        //sd 8 (0x8)[$r14] = $r5;;
     _32(0x27490a14),        //sd 40 (0x28)[$r20] = $r18;;
     _32(0x27490814),        //sd 32 (0x20)[$r20] = $r18;;
     _32(0x27050612),        //sd 24 (0x18)[$r18] = $r1;;
     _32(0x27050412),        //sd 16 (0x10)[$r18] = $r1;;
     _32(0x27110212),        //sd 8 (0x8)[$r18] = $r4;;
     _32(0x980001cc),        //call 28d10 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x97fffed7),        //goto 28144 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x66075182),        //extfz $r1 = $r2, 37 (0x25), 6 (0x6);;
     _32(0xf1000e41),        //addw $r0 = $r1, 57 (0x39)
     _32(0x71040e01),        //addw $r1 = $r1, 56 (0x38);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffffb0),        //goto 284c4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0xf11816c0),        //addw $r6 = $r0, 91 (0x5b)
     _32(0x71141700),        //addw $r5 = $r0, 92 (0x5c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe4b),        //goto 27f4c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0x7105a001),        //compd.eq $r1 = $r1, $r0;;
     _32(0x08801b41),        //cb.deqz $r1? 287e4 <_malloc_r+0x98c>;;
     _32(0xf80400c5),        //andw $r1 = $r5, 3 (0x3)
     _32(0xe100fc00),        //addd $r0 = $r0, -16 (0xfffffff0)
     _32(0x7114ffc5),        //addw $r5 = $r5, -1 (0xffffffff);;
     _32(0x0c7ffe81),        //cb.wnez $r1? 28628 <_malloc_r+0x7d0>;;
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x7e010007),        //andnd $r0 = $r7, $r0;;
     _32(0x2701020a),        //sd 8 (0x8)[$r10] = $r0;;
     _32(0x791e2047),        //slld $r7 = $r7, 1 (0x1);;
     _32(0xe0050007),        //compd.ne $r1 = $r7, 0 (0x0)
     _32(0x7809a007),        //compd.leu $r2 = $r7, $r0;;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 28670 <_malloc_r+0x818>;;
     _32(0x17fffed3),        //goto 281b0 <_malloc_r+0x358>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71240109),        //addw $r9 = $r9, 4 (0x4);;
     _32(0x78050007),        //andd $r1 = $r7, $r0;;
     _32(0x08ffff41),        //cb.deqz $r1? 28668 <_malloc_r+0x810>;;
     _32(0x97fffe84),        //goto 28088 <_malloc_r+0x230>
     _32(0x6a140009),        //copyd $r5 = $r9;;
     _64(0x00000003e804ffd8),        //andd $r1 = $r24, 4095 (0xfff);;
     _32(0x087fbf01),        //cb.dnez $r1? 28278 <_malloc_r+0x420>;;
     _32(0xf1550556),        //addd $r21 = $r22, $r21
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0x97ffff2f),        //goto 28354 <_malloc_r+0x4fc>
     _32(0x2755020e),        //sd 8 (0x8)[$r14] = $r21;;
     _32(0x97fffefc),        //goto 28290 <_malloc_r+0x438>
     _32(0x275d001b),        //sd 0 (0x0)[$r27] = $r23;;
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x97ffff39),        //goto 28390 <_malloc_r+0x538>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x100000009000012ae010de00),        //make $r4 = 306040 (0x4ab78);;
     _32(0xf90a6042),        //slld $r2 = $r2, $r1
     _32(0x38180204),        //ld $r6 = 8 (0x8)[$r4];;
     _32(0x7a090182),        //ord $r2 = $r2, $r6;;
     _32(0x97ffff90),        //goto 28514 <_malloc_r+0x6bc>
     _32(0x27090204),        //sd 8 (0x8)[$r4] = $r2;;
     _32(0x69011501),        //compd.gtu $r0 = $r1, 84 (0x54);;
     _32(0x080005c0),        //cb.dnez $r0? 2873c <_malloc_r+0x8e4>;;
     _32(0x6607b302),        //extfz $r1 = $r2, 43 (0x2b), 12 (0xc);;
     _32(0xf1001bc1),        //addw $r0 = $r1, 111 (0x6f)
     _32(0x71041b81),        //addw $r1 = $r1, 110 (0x6e);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff73),        //goto 284c4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x69055500),        //compd.gtu $r1 = $r0, 340 (0x154);;
     _32(0x080005c1),        //cb.dnez $r1? 28760 <_malloc_r+0x908>;;
     _32(0x6617e3d2),        //extfz $r5 = $r18, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e05),        //addw $r4 = $r5, 120 (0x78)
     _32(0xf1181dc5),        //addw $r6 = $r5, 119 (0x77)
     _32(0x71141e05),        //addw $r5 = $r5, 120 (0x78);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe0b),        //goto 27f4c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff0b),        //goto 28354 <_malloc_r+0x4fc>
     _32(0x6a380017),        //copyd $r14 = $r23;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97ffff1d),        //goto 283a8 <_malloc_r+0x550>
     _32(0x27010217),        //sd 8 (0x8)[$r23] = $r0;;
     _32(0x69015501),        //compd.gtu $r0 = $r1, 340 (0x154);;
     _32(0x08000740),        //cb.dnez $r0? 287b4 <_malloc_r+0x95c>;;
     _32(0x6607e3c2),        //extfz $r1 = $r2, 46 (0x2e), 15 (0xf);;
     _32(0xf1001e01),        //addw $r0 = $r1, 120 (0x78)
     _32(0x71041dc1),        //addw $r1 = $r1, 119 (0x77);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff5b),        //goto 284c4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe014007f),        //make $r5 = 127 (0x7f)
     _32(0xe018007e),        //make $r6 = 126 (0x7e)
     _64(0x18000001e9015500),        //compd.gtu $r0 = $r0, 1364 (0x554);;
     _32(0x087f7d80),        //cb.dnez $r0? 27f4c <_malloc_r+0xf4>;;
     _32(0x67171492),        //extfz $r5 = $r18, 49 (0x31), 18 (0x12);;
     _32(0xf1101f45),        //addw $r4 = $r5, 125 (0x7d)
     _32(0xf1181f05),        //addw $r6 = $r5, 124 (0x7c)
     _32(0x71141f45),        //addw $r5 = $r5, 125 (0x7d);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffdef),        //goto 27f4c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x9ffffae2),        //call 27320 <_free_r>
     _32(0xe104040e),        //addd $r1 = $r14, 16 (0x10)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38380418),        //ld $r14 = 16 (0x10)[$r24];;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x97fffeea),        //goto 28354 <_malloc_r+0x4fc>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xe00007f0),        //make $r0 = 2032 (0x7f0)
     _32(0xe004007e),        //make $r1 = 126 (0x7e)
     _64(0x10000001e90d5501),        //compd.gtu $r3 = $r1, 1364 (0x554);;
     _32(0x087fd003),        //cb.dnez $r3? 284c4 <_malloc_r+0x66c>;;
     _32(0x67071482),        //extfz $r1 = $r2, 49 (0x31), 18 (0x12);;
     _32(0xf1001f41),        //addw $r0 = $r1, 125 (0x7d)
     _32(0x71041f01),        //addw $r1 = $r1, 124 (0x7c);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff3a),        //goto 284c4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x97ffff9b),        //goto 28650 <_malloc_r+0x7f8>
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x00000000)        //errop ;;
 |];

let _mbtowc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e0142000),        //make $r5 = 303232 (0x4a080);;
     _96(0x8000012aa741060ce0187000),        //make $r6 = 305600 (0x4a9c0)
     _32(0x00000000),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38140005),        //ld $r5 = 0 (0x0)[$r5];;
     _32(0x38141205),        //ld $r5 = 72 (0x48)[$r5];;
     _32(0x71160185),        //cmoved.deqz $r5? $r5 = $r6;;
     _32(0x38143a05),        //ld $r5 = 232 (0xe8)[$r5];;
     _32(0x0fdc0005),        //icall $r5;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let __ascii_mbtowc: list_I = 
 [|
     _32(0x88800282),        //cb.deqz $r2? 28860 <__ascii_mbtowc+0x28>
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08800243),        //cb.deqz $r3? 28868 <__ascii_mbtowc+0x30>;;
     _32(0xe110060c),        //addd $r4 = $r12, 24 (0x18)
     _32(0x20000002),        //lbz $r0 = 0 (0x0)[$r2];;
     _32(0x70120041),        //cmoved.dnez $r1? $r4 = $r1;;
     _32(0x26010004),        //sw 0 (0x0)[$r4] = $r0;;
     _32(0x20000002),        //lbz $r0 = 0 (0x0)[$r2];;
     _32(0x60010000),        //compd.ne $r0 = $r0, 0 (0x0);;
     _32(0x8fd00000),        //ret 
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x97fffffe),        //goto 28860 <__ascii_mbtowc+0x28>
     _64(0x003fffffe000ff80),        //make $r0 = 4294967294 (0xfffffffe);;
     _32(0x00000000)        //errop ;;
 |];

let memchr: list_I = 
 [|
     _32(0xe80c01c0),        //andd $r3 = $r0, 7 (0x7)
     _32(0xf814ffc1),        //zxwd $r5 = $r1
     _32(0xf8043fc1),        //zxbd $r1 = $r1
     _32(0x6110ffc2),        //addd $r4 = $r2, -1 (0xffffffff);;
     _32(0x08800343),        //cb.deqz $r3? 288bc <memchr+0x44>;;
     _32(0x08800282),        //cb.deqz $r2? 288b4 <memchr+0x3c>;;
     _32(0xe108ffc2),        //addd $r2 = $r2, -1 (0xffffffff)
     _32(0x200c0000),        //lbz $r3 = 0 (0x0)[$r0];;
     _32(0x710db043),        //compw.eq $r3 = $r3, $r1;;
     _32(0x0c0001c3),        //cb.wnez $r3? 288b8 <memchr+0x40>;;
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x680c01c0),        //andd $r3 = $r0, 7 (0x7);;
     _32(0x08800183),        //cb.deqz $r3? 288c0 <memchr+0x48>;;
     _32(0x887ffe42),        //cb.dnez $r2? 28890 <memchr+0x18>
     _32(0x6110ffc4),        //addd $r4 = $r4, -1 (0xffffffff);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x0fd00000),        //ret ;;
     _32(0x6a100002),        //copyd $r4 = $r2;;
     _32(0x690901c4),        //compd.gtu $r2 = $r4, 7 (0x7);;
     _32(0x088006c2),        //cb.deqz $r2? 28930 <memchr+0xb8>;;
     _32(0xf90a3205),        //sllw $r2 = $r5, 8 (0x8)
     _32(0xf8143fc5),        //zxbd $r5 = $r5
     _32(0x610cfe04),        //addd $r3 = $r4, -8 (0xfffffff8);;
     _32(0xe40bf002),        //zxhd $r2 = $r2
     _32(0x7b0e20c3),        //srld $r3 = $r3, 3 (0x3);;
     _32(0xfa151142),        //orw $r5 = $r2, $r5
     _32(0x610c0043),        //addd $r3 = $r3, 1 (0x1);;
     _32(0x6917f005),        //sxwd $r5 = $r5;;
     _32(0x791a2405),        //slld $r6 = $r5, 16 (0x10);;
     _32(0x7a150146),        //ord $r5 = $r6, $r5;;
     _32(0x791a2805),        //slld $r6 = $r5, 32 (0x20);;
     _32(0x7a190146),        //ord $r6 = $r6, $r5;;
     _32(0xe10cffc3),        //addd $r3 = $r3, -1 (0xffffffff)
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _32(0x7c090086),        //xord $r2 = $r6, $r2;;
     _96(0x07f7f7f787bfbfbfe114bfc2),        //addd $r5 = $r2, 18374403900871474943 (0xfefefefefefefeff);;
     _32(0x7e090142),        //andnd $r2 = $r2, $r5;;
     _96(0x0404040480202020e8082002),        //andd $r2 = $r2, 9259542123273814144 (0x8080808080808080);;
     _32(0x08000142),        //cb.dnez $r2? 28934 <memchr+0xbc>;;
     _32(0x887ffd43),        //cb.dnez $r3? 288f8 <memchr+0x80>
     _32(0xe110fe04),        //addd $r4 = $r4, -8 (0xfffffff8)
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x08fff844),        //cb.deqz $r4? 288b4 <memchr+0x3c>;;
     _32(0xe110ffc4),        //addd $r4 = $r4, -1 (0xffffffff)
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7109b042),        //compw.eq $r2 = $r2, $r1;;
     _32(0x0c7ff782),        //cb.wnez $r2? 288b8 <memchr+0x40>;;
     _32(0x887fff04),        //cb.dnez $r4? 28934 <memchr+0xbc>
     _32(0x61000040),        //addd $r0 = $r0, 1 (0x1);;
     _32(0x97ffffdb),        //goto 288b8 <memchr+0x40>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _12(0x...)        //none
 |];

let memcpy: list_I = 
 [|
     _32(0x88801c42),        //cb.deqz $r2? 28b24 <memcpy+0x1c4>
     _32(0xe70d4002),        //compd.geu $r3 = $r2, 256 (0x100)
     _32(0x6a180000),        //copyd $r6 = $r0;;
     _32(0x088012c3),        //cb.deqz $r3? 28a98 <memcpy+0x138>;;
     _32(0xe108c002),        //addd $r2 = $r2, -256 (0xffffff00)
     _32(0x3e800001),        //lq.u $r32r33 = 0 (0x0)[$r1];;
     _32(0x3e880401),        //lq.u $r34r35 = 16 (0x10)[$r1];;
     _32(0xfb1e2202),        //srld $r7 = $r2, 8 (0x8)
     _32(0x3e900801),        //lq.u $r36r37 = 32 (0x20)[$r1];;
     _32(0x3e980c01),        //lq.u $r38r39 = 48 (0x30)[$r1];;
     _32(0x3ea01001),        //lq.u $r40r41 = 64 (0x40)[$r1];;
     _32(0x3ea81401),        //lq.u $r42r43 = 80 (0x50)[$r1];;
     _32(0x3eb01801),        //lq.u $r44r45 = 96 (0x60)[$r1];;
     _32(0x3eb81c01),        //lq.u $r46r47 = 112 (0x70)[$r1];;
     _32(0x3ec02001),        //lq.u $r48r49 = 128 (0x80)[$r1];;
     _32(0x3ec82401),        //lq.u $r50r51 = 144 (0x90)[$r1];;
     _32(0x3ed02801),        //lq.u $r52r53 = 160 (0xa0)[$r1];;
     _32(0x3ed82c01),        //lq.u $r54r55 = 176 (0xb0)[$r1];;
     _32(0x3ee03001),        //lq.u $r56r57 = 192 (0xc0)[$r1];;
     _32(0xe70d4002),        //compd.geu $r3 = $r2, 256 (0x100)
     _32(0x3ee83401),        //lq.u $r58r59 = 208 (0xd0)[$r1];;
     _32(0x3ef03801),        //lq.u $r60r61 = 224 (0xe0)[$r1];;
     _32(0xe1044001),        //addd $r1 = $r1, 256 (0x100)
     _32(0x3ef83c01),        //lq.u $r62r63 = 240 (0xf0)[$r1];;
     _32(0x08800947),        //cb.deqz $r7? 28a54 <memcpy+0xf4>;;
     _32(0x0f000907),        //loopdo $r7, 28a54 <memcpy+0xf4>;;
     _32(0xe108c002),        //addd $r2 = $r2, -256 (0xffffff00)
     _32(0x28810000),        //sq 0 (0x0)[$r0] = $r32r33;;
     _32(0x3e800001),        //lq.u $r32r33 = 0 (0x0)[$r1];;
     _32(0x28890400),        //sq 16 (0x10)[$r0] = $r34r35;;
     _32(0x3e880401),        //lq.u $r34r35 = 16 (0x10)[$r1];;
     _32(0x28910800),        //sq 32 (0x20)[$r0] = $r36r37;;
     _32(0x3e900801),        //lq.u $r36r37 = 32 (0x20)[$r1];;
     _32(0x28990c00),        //sq 48 (0x30)[$r0] = $r38r39;;
     _32(0x3e980c01),        //lq.u $r38r39 = 48 (0x30)[$r1];;
     _32(0x28a11000),        //sq 64 (0x40)[$r0] = $r40r41;;
     _32(0x3ea01001),        //lq.u $r40r41 = 64 (0x40)[$r1];;
     _32(0x28a91400),        //sq 80 (0x50)[$r0] = $r42r43;;
     _32(0x3ea81401),        //lq.u $r42r43 = 80 (0x50)[$r1];;
     _32(0x28b11800),        //sq 96 (0x60)[$r0] = $r44r45;;
     _32(0x3eb01801),        //lq.u $r44r45 = 96 (0x60)[$r1];;
     _32(0x28b91c00),        //sq 112 (0x70)[$r0] = $r46r47;;
     _32(0x3eb81c01),        //lq.u $r46r47 = 112 (0x70)[$r1];;
     _32(0x28c12000),        //sq 128 (0x80)[$r0] = $r48r49;;
     _32(0x3ec02001),        //lq.u $r48r49 = 128 (0x80)[$r1];;
     _32(0x28c92400),        //sq 144 (0x90)[$r0] = $r50r51;;
     _32(0x3ec82401),        //lq.u $r50r51 = 144 (0x90)[$r1];;
     _32(0x28d12800),        //sq 160 (0xa0)[$r0] = $r52r53;;
     _32(0x3ed02801),        //lq.u $r52r53 = 160 (0xa0)[$r1];;
     _32(0x28d92c00),        //sq 176 (0xb0)[$r0] = $r54r55;;
     _32(0x3ed82c01),        //lq.u $r54r55 = 176 (0xb0)[$r1];;
     _32(0x28e13000),        //sq 192 (0xc0)[$r0] = $r56r57;;
     _32(0x3ee03001),        //lq.u $r56r57 = 192 (0xc0)[$r1];;
     _32(0x28e93400),        //sq 208 (0xd0)[$r0] = $r58r59;;
     _32(0x3ee83401),        //lq.u $r58r59 = 208 (0xd0)[$r1];;
     _32(0x28f13800),        //sq 224 (0xe0)[$r0] = $r60r61;;
     _32(0x3ef03801),        //lq.u $r60r61 = 224 (0xe0)[$r1];;
     _32(0xe1004000),        //addd $r0 = $r0, 256 (0x100)
     _32(0x28f93c00),        //sq 240 (0xf0)[$r0] = $r62r63;;
     _32(0xe1044001),        //addd $r1 = $r1, 256 (0x100)
     _32(0x3ef83c01),        //lq.u $r62r63 = 240 (0xf0)[$r1];;
     _32(0x28810000),        //sq 0 (0x0)[$r0] = $r32r33;;
     _32(0x28890400),        //sq 16 (0x10)[$r0] = $r34r35;;
     _32(0x28910800),        //sq 32 (0x20)[$r0] = $r36r37;;
     _32(0x28990c00),        //sq 48 (0x30)[$r0] = $r38r39;;
     _32(0x28a11000),        //sq 64 (0x40)[$r0] = $r40r41;;
     _32(0x28a91400),        //sq 80 (0x50)[$r0] = $r42r43;;
     _32(0x28b11800),        //sq 96 (0x60)[$r0] = $r44r45;;
     _32(0x28b91c00),        //sq 112 (0x70)[$r0] = $r46r47;;
     _32(0x28c12000),        //sq 128 (0x80)[$r0] = $r48r49;;
     _32(0x28c92400),        //sq 144 (0x90)[$r0] = $r50r51;;
     _32(0x28d12800),        //sq 160 (0xa0)[$r0] = $r52r53;;
     _32(0x28d92c00),        //sq 176 (0xb0)[$r0] = $r54r55;;
     _32(0x28e13000),        //sq 192 (0xc0)[$r0] = $r56r57;;
     _32(0x28e93400),        //sq 208 (0xd0)[$r0] = $r58r59;;
     _32(0x28f13800),        //sq 224 (0xe0)[$r0] = $r60r61;;
     _32(0xe1004000),        //addd $r0 = $r0, 256 (0x100)
     _32(0x28f93c00),        //sq 240 (0xf0)[$r0] = $r62r63;;
     _32(0xe82c0402),        //andd $r11 = $r2, 16 (0x10)
     _32(0x7b1e2142),        //srld $r7 = $r2, 5 (0x5);;
     _32(0x088001c7),        //cb.deqz $r7? 28abc <memcpy+0x15c>;;
     _32(0x0f000187),        //loopdo $r7, 28abc <memcpy+0x15c>;;
     _32(0xe1040801),        //addd $r1 = $r1, 32 (0x20)
     _32(0xe108f802),        //addd $r2 = $r2, -32 (0xffffffe0)
     _32(0x3c840001),        //lo $r32r33r34r35 = 0 (0x0)[$r1];;
     _32(0xe1000800),        //addd $r0 = $r0, 32 (0x20)
     _32(0x28850000),        //so 0 (0x0)[$r0] = $r32r33r34r35;;
     _32(0x888001cb),        //cb.deqz $r11? 28ad8 <memcpy+0x178>
     _32(0xe8280202),        //andd $r10 = $r2, 8 (0x8)
     _32(0xe8240102),        //andd $r9 = $r2, 4 (0x4)
     _32(0x3c8202c1),        //lq.dnez $r11? $r32r33 = [$r1];;
     _32(0xe1040401),        //addd $r1 = $r1, 16 (0x10)
     _32(0xe1000400),        //addd $r0 = $r0, 16 (0x10)
     _32(0x28810000),        //sq 0 (0x0)[$r0] = $r32r33;;
     _32(0x888001ca),        //cb.deqz $r10? 28af4 <memcpy+0x194>
     _32(0xe8200082),        //andd $r8 = $r2, 2 (0x2)
     _32(0xe81c0042),        //andd $r7 = $r2, 1 (0x1)
     _32(0x38820281),        //ld.dnez $r10? $r32 = [$r1];;
     _32(0xe1040201),        //addd $r1 = $r1, 8 (0x8)
     _32(0xe1000200),        //addd $r0 = $r0, 8 (0x8)
     _32(0x27810000),        //sd 0 (0x0)[$r0] = $r32;;
     _32(0x88800149),        //cb.deqz $r9? 28b08 <memcpy+0x1a8>
     _32(0x30820241),        //lwz.dnez $r9? $r32 = [$r1];;
     _32(0xe1040101),        //addd $r1 = $r1, 4 (0x4)
     _32(0xe1000100),        //addd $r0 = $r0, 4 (0x4)
     _32(0x26810000),        //sw 0 (0x0)[$r0] = $r32;;
     _32(0x88800148),        //cb.deqz $r8? 28b1c <memcpy+0x1bc>
     _32(0x28820201),        //lhz.dnez $r8? $r32 = [$r1];;
     _32(0xe1040081),        //addd $r1 = $r1, 2 (0x2)
     _32(0xe1000080),        //addd $r0 = $r0, 2 (0x2)
     _32(0x25810000),        //sh 0 (0x0)[$r0] = $r32;;
     _32(0x208201c1),        //lbz.dnez $r7? $r32 = [$r1];;
     _32(0x248301c0),        //sb.dnez $r7? [$r0] = $r32;;
     _32(0x8fd00000),        //ret 
     _32(0x6a000006),        //copyd $r0 = $r6;;
     _32(0x00000000)        //errop ;;
 |];

let memset: list_I = 
 [|
     _32(0x88000f01),        //cb.dnez $r1? 28c20 <memset+0xf0>
     _32(0xe0800000),        //make $r32 = 0 (0x0)
     _32(0xe0840000),        //make $r33 = 0 (0x0)
     _32(0x661d1002),        //compd.ltu $r7 = $r2, 64 (0x40);;
     _32(0x88000987),        //cb.dnez $r7? 28bd8 <memset+0xa8>
     _32(0xea0c0000),        //copyd $r3 = $r0
     _32(0xe5140000),        //negd $r5 = $r0
     _32(0xdf88f860),        //copyq $r34r35 = $r32, $r33
     _32(0x68200802),        //andd $r8 = $r2, 32 (0x20);;
     _32(0xf8180fc5),        //andw $r6 = $r5, 63 (0x3f)
     _32(0xf8240fc0),        //andw $r9 = $r0, 63 (0x3f)
     _32(0x7f03f000),        //nop ;;
     _32(0x88800509),        //cb.deqz $r9? 28bb0 <memset+0x80>
     _32(0xf5090086),        //sbfd $r2 = $r6, $r2
     _32(0x78100045),        //andw $r4 = $r5, 1 (0x1);;
     _32(0xf8100085),        //andw $r4 = $r5, 2 (0x2)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x24830100),        //sb.dnez $r4? [$r0] = $r32;;
     _32(0xf8100105),        //andw $r4 = $r5, 4 (0x4)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x25830100),        //sh.dnez $r4? [$r0] = $r32;;
     _32(0xf8100205),        //andw $r4 = $r5, 8 (0x8)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x26830100),        //sw.dnez $r4? [$r0] = $r32;;
     _32(0xf8100405),        //andw $r4 = $r5, 16 (0x10)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x27830100),        //sd.dnez $r4? [$r0] = $r32;;
     _32(0xf8100805),        //andw $r4 = $r5, 32 (0x20)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x28830100),        //sq.dnez $r4? [$r0] = $r32r33;;
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x28870100),        //so.dnez $r4? [$r0] = $r32r33r34r35;;
     _32(0x88801442),        //cb.deqz $r2? 28cf4 <memset+0x1c4>
     _32(0xfb2a2182),        //srld $r10 = $r2, 6 (0x6)
     _32(0xe810f002),        //andd $r4 = $r2, -64 (0xffffffc0)
     _32(0x602c0040),        //make $r11 = 64 (0x40);;
     _32(0x8880018a),        //cb.deqz $r10? 28bd8 <memset+0xa8>
     _32(0xf8200802),        //andw $r8 = $r2, 32 (0x20)
     _32(0x75090084),        //sbfd $r2 = $r4, $r2;;
     _32(0x0f0000ca),        //loopdo $r10, 28bd8 <memset+0xa8>;;
     _32(0xf10102c0),        //addd $r0 = $r0, $r11
     _32(0x280d0000),        //dzerol 0 (0x0)[$r0];;
     _32(0x888011c2),        //cb.deqz $r2? 28cf4 <memset+0x1c4>
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200402),        //andw $r8 = $r2, 16 (0x10)
     _32(0x28870200),        //so.dnez $r8? [$r0] = $r32r33r34r35;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200202),        //andw $r8 = $r2, 8 (0x8)
     _32(0x28830200),        //sq.dnez $r8? [$r0] = $r32r33;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200102),        //andw $r8 = $r2, 4 (0x4)
     _32(0x27830200),        //sd.dnez $r8? [$r0] = $r32;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200082),        //andw $r8 = $r2, 2 (0x2)
     _32(0x26830200),        //sw.dnez $r8? [$r0] = $r32;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0x25830200),        //sh.dnez $r8? [$r0] = $r32;;
     _32(0x8fd00000),        //ret 
     _32(0xea000003),        //copyd $r0 = $r3
     _32(0x24836080),        //sb.odd $r2? [$r0] = $r32;;
     _96(0xe71d2002ea0c0000ee824041),        //sbmm8 $r32 = $r1, 72340172838076673 (0x101010101010101)
     _32(0xe5140000),        //copyd $r3 = $r0
     _32(0x80404040),        //compd.geu $r7 = $r2, 128 (0x80)
     _32(0x00080808),        //negd $r5 = $r0;;
     _32(0x88800547),        //cb.deqz $r7? 28c8c <memset+0x15c>
     _32(0xf82407c0),        //andw $r9 = $r0, 31 (0x1f)
     _32(0x781807c5),        //andw $r6 = $r5, 31 (0x1f);;
     _32(0x88800489),        //cb.deqz $r9? 28c8c <memset+0x15c>
     _32(0xf5090086),        //sbfd $r2 = $r6, $r2
     _32(0x78100045),        //andw $r4 = $r5, 1 (0x1);;
     _32(0xf8100085),        //andw $r4 = $r5, 2 (0x2)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x24830100),        //sb.dnez $r4? [$r0] = $r32;;
     _32(0xf8100105),        //andw $r4 = $r5, 4 (0x4)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x25830100),        //sh.dnez $r4? [$r0] = $r32;;
     _32(0xf8100205),        //andw $r4 = $r5, 8 (0x8)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0xea840020),        //copyd $r33 = $r32
     _32(0x26830100),        //sw.dnez $r4? [$r0] = $r32;;
     _32(0xf8100405),        //andw $r4 = $r5, 16 (0x10)
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x27830100),        //sd.dnez $r4? [$r0] = $r32;;
     _32(0xf1010100),        //addd $r0 = $r0, $r4
     _32(0x28830100),        //sq.dnez $r4? [$r0] = $r32r33;;
     _32(0xea840020),        //copyd $r33 = $r32
     _32(0xfb2a2142),        //srld $r10 = $r2, 5 (0x5)
     _32(0xff03f000),        //nop 
     _32(0x7f03f000),        //nop ;;
     _32(0x888001ca),        //cb.deqz $r10? 28cb8 <memset+0x188>
     _32(0xf8200402),        //andw $r8 = $r2, 16 (0x10)
     _32(0xe02c0020),        //make $r11 = 32 (0x20)
     _32(0x5f88f860),        //copyq $r34r35 = $r32, $r33;;
     _32(0x0f0000ca),        //loopdo $r10, 28cb8 <memset+0x188>;;
     _32(0xf10102c0),        //addd $r0 = $r0, $r11
     _32(0x28850000),        //so 0 (0x0)[$r0] = $r32r33r34r35;;
     _32(0x888003c2),        //cb.deqz $r2? 28cf4 <memset+0x1c4>
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200202),        //andw $r8 = $r2, 8 (0x8)
     _32(0x28830200),        //sq.dnez $r8? [$r0] = $r32r33;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200102),        //andw $r8 = $r2, 4 (0x4)
     _32(0x27830200),        //sd.dnez $r8? [$r0] = $r32;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0xf8200082),        //andw $r8 = $r2, 2 (0x2)
     _32(0x26830200),        //sw.dnez $r8? [$r0] = $r32;;
     _32(0xf1010200),        //addd $r0 = $r0, $r8
     _32(0x25830200),        //sh.dnez $r8? [$r0] = $r32;;
     _32(0x8fd00000),        //ret 
     _32(0xea000003),        //copyd $r0 = $r3
     _32(0x24836080),        //sb.odd $r2? [$r0] = $r32;;
     _32(0x8fd00000),        //ret 
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x00000000)        //errop ;;
 |];

let __malloc_lock: list_I = 
 [|
     _32(0x97fffb6a),        //goto 27aa8 <__libc_lock_acquire>
     _96(0x000000008000013ae0004000)        //make $r0 = 321792 (0x4e900);;
 |];

let __malloc_unlock: list_I = 
 [|
     _32(0x97fffbaa),        //goto 27bb8 <__libc_lock_release>
     _96(0x000000008000013ae0004000)        //make $r0 = 321792 (0x4e900);;
 |];

let _Balloc: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38041e00),        //ld $r1 = 120 (0x78)[$r0];;
     _32(0x08800381),        //cb.deqz $r1? 28d78 <_Balloc+0x58>;;
     _32(0x690bf012),        //sxwd $r2 = $r18;;
     _32(0x3802f081),        //ld.xs $r0 = $r2[$r1];;
     _32(0x088004c0),        //cb.deqz $r0? 28d98 <_Balloc+0x78>;;
     _32(0x380c0000),        //ld $r3 = 0 (0x0)[$r0];;
     _32(0x270ff081),        //sd.xs $r2[$r1] = $r3;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x98000acc),        //call 2b8a8 <_calloc_r>
     _32(0xe0040008),        //make $r1 = 8 (0x8)
     _32(0x60080041),        //make $r2 = 65 (0x41);;
     _32(0x887ffc00),        //cb.dnez $r0? 28d44 <_Balloc+0x24>
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x27011e0e),        //sd 120 (0x78)[$r14] = $r0;;
     _32(0x97fffff4),        //goto 28d60 <_Balloc+0x40>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x793a7482),        //sllw $r14 = $r2, $r18;;
     _32(0x7108ffce),        //addw $r2 = $r14, -1 (0xffffffff);;
     _32(0x98000abf),        //call 2b8a8 <_calloc_r>
     _64(0x00000001f2098002),        //addx4wd $r2 = $r2, 32 (0x20);;
     _32(0x08fffd80),        //cb.deqz $r0? 28d90 <_Balloc+0x70>;;
     _32(0x26490200),        //sw 8 (0x8)[$r0] = $r18;;
     _32(0x97ffffe6),        //goto 28d58 <_Balloc+0x38>
     _32(0x26390300)        //sw 12 (0xc)[$r0] = $r14;;
 |];

let _Bfree: list_I = 
 [|
     _32(0x08800181),        //cb.deqz $r1? 28de0 <_Bfree+0x18>;;
     _32(0x38001e00),        //ld $r0 = 120 (0x78)[$r0];;
     _32(0x34080201),        //lws $r2 = 8 (0x8)[$r1];;
     _32(0x380ef080),        //ld.xs $r3 = $r2[$r0];;
     _32(0x270d0001),        //sd 0 (0x0)[$r1] = $r3;;
     _32(0x2707f080),        //sd.xs $r2[$r0] = $r1;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __multadd: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f00c),        //addd $r12 = $r12, -64 (0xffffffc0)
     _32(0x780cffc3),        //zxwd $r3 = $r3;;
     _32(0xf808ffc2),        //zxwd $r2 = $r2
     _32(0xe0180000),        //make $r6 = 0 (0x0)
     _32(0xea480001),        //copyd $r18 = $r1
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xe1200601),        //addd $r8 = $r1, 24 (0x18)
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0x28510a0c),        //sq 40 (0x28)[$r12] = $r20r21;;
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x304c0501),        //lwz $r19 = 20 (0x14)[$r1];;
     _32(0x731c0053),        //maxw $r7 = $r19, 1 (0x1);;
     _32(0x0f0003c7),        //loopdo $r7, 28e5c <__multadd+0x74>;;
     _32(0x3012f188),        //lwz.xs $r4 = $r6[$r8];;
     _32(0xe427f004),        //zxhd $r9 = $r4
     _32(0x7b163404),        //srlw $r5 = $r4, 16 (0x10);;
     _32(0x530c3089),        //maddw $r3 = $r9, $r2;;
     _32(0xe40ff003),        //zxhd $r3 = $r3
     _32(0x7b123403),        //srlw $r4 = $r3, 16 (0x10);;
     _32(0x53103085),        //maddw $r4 = $r5, $r2;;
     _32(0xfb3a3404),        //srlw $r14 = $r4, 16 (0x10)
     _32(0x79123404),        //sllw $r4 = $r4, 16 (0x10);;
     _32(0xf11110c4),        //addw $r4 = $r4, $r3
     _32(0x7838ffce),        //zxwd $r14 = $r14;;
     _32(0xea0c000e),        //copyd $r3 = $r14
     _32(0xe1180046),        //addd $r6 = $r6, 1 (0x1)
     _32(0x2613f188),        //sw.xs $r6[$r8] = $r4;;
     _32(0x0880020e),        //cb.deqz $r14? 28e7c <__multadd+0x94>;;
     _32(0x30000312),        //lwz $r0 = 12 (0xc)[$r18];;
     _32(0x7501b4c0),        //compw.gt $r0 = $r0, $r19;;
     _32(0x0c800340),        //cb.weqz $r0? 28e9c <__multadd+0xb4>;;
     _32(0xf2018493),        //addx4wd $r0 = $r19, $r18
     _32(0x714c0053),        //addw $r19 = $r19, 1 (0x1);;
     _32(0x26390600),        //sw 24 (0x18)[$r0] = $r14;;
     _32(0x264d0512),        //sw 20 (0x14)[$r18] = $r19;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0xea000014),        //copyd $r0 = $r20
     _32(0x30040212),        //lwz $r1 = 8 (0x8)[$r18];;
     _32(0x9fffff9f),        //call 28d20 <_Balloc>
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0xe1040412),        //addd $r1 = $r18, 16 (0x10)
     _32(0xea540000),        //copyd $r21 = $r0
     _32(0xe1000400),        //addd $r0 = $r0, 16 (0x10)
     _32(0x34080512),        //lws $r2 = 20 (0x14)[$r18];;
     _32(0x61080082),        //addd $r2 = $r2, 2 (0x2);;
     _32(0x9ffffea8),        //call 28960 <memcpy>
     _32(0x790a2082),        //slld $r2 = $r2, 2 (0x2);;
     _32(0x34040212),        //lws $r1 = 8 (0x8)[$r18];;
     _32(0x38001e14),        //ld $r0 = 120 (0x78)[$r20];;
     _32(0x380af040),        //ld.xs $r2 = $r1[$r0];;
     _32(0x27090012),        //sd 0 (0x0)[$r18] = $r2;;
     _32(0x97ffffe5),        //goto 28e6c <__multadd+0x84>
     _32(0xea480015),        //copyd $r18 = $r21
     _32(0x274bf040),        //sd.xs $r1[$r0] = $r18;;
     _32(0x7f03f000)        //nop ;;
 |];

let __s2b: list_I = 
 [|
     _32(0xf1180203),        //addw $r6 = $r3, 8 (0x8)
     _32(0xe130f00c),        //addd $r12 = $r12, -64 (0xffffffc0)
     _64(0xf41db243e0148e40),        //make $r5 = 954437177 (0x38e38e39)
     _64(0x18000000900e38e3),        //compw.le $r7 = $r3, 9 (0x9);;
     _32(0xfa1a37c6),        //sraw $r6 = $r6, 31 (0x1f)
     _32(0xf84cffc3),        //zxwd $r19 = $r3
     _32(0xd8143146),        //mulwd $r5 = $r6, $r5
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf848ffc4),        //zxwd $r18 = $r4
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0xfa162845),        //srad $r5 = $r5, 33 (0x21)
     _32(0xf854ffc2),        //zxwd $r21 = $r2
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c0002c7),        //cb.wnez $r7? 28f58 <__s2b+0x70>
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xf50d1146),        //sbfw $r3 = $r6, $r5
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0xf90a3042),        //sllw $r2 = $r2, 1 (0x1)
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0xf501b083),        //compw.gt $r0 = $r3, $r2
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x0c7fff00),        //cb.wnez $r0? 28f44 <__s2b+0x5c>;;
     _32(0x9fffff72),        //call 28d20 <_Balloc>
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0xe00c0001),        //make $r3 = 1 (0x1)
     _32(0xea040000),        //copyd $r1 = $r0
     _64(0xa6490600f409b255),        //compw.le $r2 = $r21, 9 (0x9)
     _32(0x10000000),        //sw 24 (0x18)[$r0] = $r18;;
     _32(0x260d0500),        //sw 20 (0x14)[$r0] = $r3;;
     _32(0x0c000a02),        //cb.wnez $r2? 29018 <__s2b+0x130>;;
     _32(0xf158fd95),        //addw $r22 = $r21, -10 (0xfffffff6)
     _32(0x615c024e),        //addd $r23 = $r14, 9 (0x9);;
     _32(0xe1000296),        //addd $r0 = $r22, 10 (0xa)
     _32(0x6a480017),        //copyd $r18 = $r23;;
     _32(0x7139000e),        //addd $r14 = $r14, $r0;;
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0xe1480052),        //addd $r18 = $r18, 1 (0x1)
     _32(0xea000014),        //copyd $r0 = $r20
     _32(0x240c0012),        //lbs $r3 = 0 (0x0)[$r18];;
     _32(0x9fffff92),        //call 28de8 <__multadd>
     _32(0x710cf403),        //addw $r3 = $r3, -48 (0xffffffd0);;
     _32(0xf009a392),        //compd.ne $r2 = $r18, $r14
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x087ffe02),        //cb.dnez $r2? 28f90 <__s2b+0xa8>;;
     _32(0x61380096),        //addd $r14 = $r22, 2 (0x2);;
     _32(0x71390397),        //addd $r14 = $r23, $r14;;
     _32(0xf148ffd3),        //addw $r18 = $r19, -1 (0xffffffff)
     _32(0x7401b553),        //compw.le $r0 = $r19, $r21;;
     _32(0x75491495),        //sbfw $r18 = $r21, $r18;;
     _32(0x8c000300),        //cb.wnez $r0? 28ff8 <__s2b+0x110>
     _32(0x61480052),        //addd $r18 = $r18, 1 (0x1);;
     _32(0x7149048e),        //addd $r18 = $r14, $r18;;
     _32(0xe008000a),        //make $r2 = 10 (0xa)
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0xea000014),        //copyd $r0 = $r20
     _32(0x240c000e),        //lbs $r3 = 0 (0x0)[$r14];;
     _32(0x9fffff81),        //call 28de8 <__multadd>
     _32(0x710cf403),        //addw $r3 = $r3, -48 (0xffffffd0);;
     _32(0xf009a48e),        //compd.ne $r2 = $r14, $r18
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x087ffe02),        //cb.dnez $r2? 28fd4 <__s2b+0xec>;;
     _32(0xea000001),        //copyd $r0 = $r1
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x97ffffe9),        //goto 28fbc <__s2b+0xd4>
     _32(0xe138028e),        //addd $r14 = $r14, 10 (0xa)
     _32(0x60540009),        //make $r21 = 9 (0x9);;
     _32(0x7f03f000)        //nop ;;
 |];

let __hi0bits: list_I = 
 [|
     _32(0xf804ffc0),        //zxwd $r1 = $r0
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _64(0x17ffffc0f8080000),        //andw $r2 = $r0, -65536 (0xffffffffffff0000);;
     _32(0x0c000102),        //cb.wnez $r2? 29048 <__hi0bits+0x20>;;
     _32(0xf9063401),        //sllw $r1 = $r1, 16 (0x10)
     _32(0x60000010),        //make $r0 = 16 (0x10);;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _64(0x07ffc000f8080001),        //andw $r2 = $r1, -16777216 (0xffffffffff000000);;
     _32(0x0c000102),        //cb.wnez $r2? 29060 <__hi0bits+0x38>;;
     _32(0xf9063201),        //sllw $r1 = $r1, 8 (0x8)
     _32(0x71000200),        //addw $r0 = $r0, 8 (0x8);;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _64(0x07fc0000f8080001),        //andw $r2 = $r1, -268435456 (0xfffffffff0000000);;
     _32(0x0c000102),        //cb.wnez $r2? 29078 <__hi0bits+0x50>;;
     _32(0xf9063101),        //sllw $r1 = $r1, 4 (0x4)
     _32(0x71000100),        //addw $r0 = $r0, 4 (0x4);;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _64(0x07f00000f8080001),        //andw $r2 = $r1, -1073741824 (0xffffffffc0000000);;
     _32(0x0c000102),        //cb.wnez $r2? 29090 <__hi0bits+0x68>;;
     _32(0xf9063081),        //sllw $r1 = $r1, 2 (0x2)
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0x0d0001c1),        //cb.wltz $r1? 290ac <__hi0bits+0x84>;;
     _32(0xf1000040),        //addw $r0 = $r0, 1 (0x1)
     _32(0xe0080020),        //make $r2 = 32 (0x20)
     _64(0x10100000f8040001),        //andw $r1 = $r1, 1073741824 (0x40000000);;
     _32(0x780a0001),        //cmoved.wnez $r1? $r2 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x0fd00000)        //ret ;;
 |];

let __lo0bits: list_I = 
 [|
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x780001c1),        //andw $r0 = $r1, 7 (0x7);;
     _32(0x0c800240),        //cb.weqz $r0? 290e0 <__lo0bits+0x30>;;
     _32(0x8b0001c1),        //cb.odd $r1? 290dc <__lo0bits+0x2c>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x78000081),        //andw $r0 = $r1, 2 (0x2);;
     _32(0x0c800780),        //cb.weqz $r0? 29144 <__lo0bits+0x94>;;
     _32(0xfb063041),        //srlw $r1 = $r1, 1 (0x1)
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x26050002),        //sw 0 (0x0)[$r2] = $r1;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe40ff001),        //zxhd $r3 = $r1
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x0c0000c3),        //cb.wnez $r3? 290f4 <__lo0bits+0x44>;;
     _32(0xfb062401),        //srld $r1 = $r1, 16 (0x10)
     _32(0x60000010),        //make $r0 = 16 (0x10);;
     _32(0x780c3fc1),        //zxbd $r3 = $r1;;
     _32(0x0c0000c3),        //cb.wnez $r3? 29104 <__lo0bits+0x54>;;
     _32(0xf1000200),        //addw $r0 = $r0, 8 (0x8)
     _32(0x7b062201),        //srld $r1 = $r1, 8 (0x8);;
     _32(0x780c03c1),        //andw $r3 = $r1, 15 (0xf);;
     _32(0x0c0000c3),        //cb.wnez $r3? 29114 <__lo0bits+0x64>;;
     _32(0xf1000100),        //addw $r0 = $r0, 4 (0x4)
     _32(0x7b062101),        //srld $r1 = $r1, 4 (0x4);;
     _32(0x780c00c1),        //andw $r3 = $r1, 3 (0x3);;
     _32(0x0c0000c3),        //cb.wnez $r3? 29124 <__lo0bits+0x74>;;
     _32(0xf1000080),        //addw $r0 = $r0, 2 (0x2)
     _32(0x7b062081),        //srld $r1 = $r1, 2 (0x2);;
     _32(0x0b000101),        //cb.odd $r1? 29134 <__lo0bits+0x84>;;
     _32(0xfb062041),        //srld $r1 = $r1, 1 (0x1)
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x088000c1),        //cb.deqz $r1? 2913c <__lo0bits+0x8c>;;
     _32(0x8fd00000),        //ret 
     _32(0x26050002),        //sw 0 (0x0)[$r2] = $r1;;
     _32(0x8fd00000),        //ret 
     _32(0x60000020),        //make $r0 = 32 (0x20);;
     _32(0xfb063081),        //srlw $r1 = $r1, 2 (0x2)
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x8fd00000),        //ret 
     _32(0x26050002),        //sw 0 (0x0)[$r2] = $r1;;
     _32(0x7f03f000)        //nop ;;
 |];

let __i2b: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xf838ffc1),        //zxwd $r14 = $r1
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x9ffffeed),        //call 28d20 <_Balloc>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0x26390600),        //sw 24 (0x18)[$r0] = $r14;;
     _32(0x26090500),        //sw 20 (0x14)[$r0] = $r2;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __multiply: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0002),        //copyd $r19 = $r2
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0xea580001),        //copyd $r22 = $r1
     _32(0x27590c0c),        //sd 48 (0x30)[$r12] = $r22;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x2851080c),        //sq 32 (0x20)[$r12] = $r20r21;;
     _32(0x30540501),        //lwz $r21 = 20 (0x14)[$r1];;
     _32(0x30380502),        //lwz $r14 = 20 (0x14)[$r2];;
     _32(0x7205b395),        //compw.lt $r1 = $r21, $r14;;
     _32(0x0c0001c1),        //cb.wnez $r1? 291e4 <__multiply+0x4c>;;
     _32(0xea08000e),        //copyd $r2 = $r14
     _32(0xea040013),        //copyd $r1 = $r19
     _32(0xea380015),        //copyd $r14 = $r21
     _32(0x6a4c0016),        //copyd $r19 = $r22;;
     _32(0xea540002),        //copyd $r21 = $r2
     _32(0x6a580001),        //copyd $r22 = $r1;;
     _32(0xf151154e),        //addw $r20 = $r14, $r21
     _32(0xf149154e),        //addw $r18 = $r14, $r21
     _32(0x30080313),        //lwz $r2 = 12 (0xc)[$r19];;
     _32(0x30040213),        //lwz $r1 = 8 (0x8)[$r19];;
     _32(0x7209b502),        //compw.lt $r2 = $r2, $r20;;
     _32(0x9ffffeca),        //call 28d20 <_Balloc>
     _32(0x71051042),        //addw $r1 = $r2, $r1;;
     _32(0xe10c0600),        //addd $r3 = $r0, 24 (0x18)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0x724580d4),        //addx4wd $r17 = $r20, $r3;;
     _32(0x7605a443),        //compd.ltu $r1 = $r3, $r17;;
     _32(0x08800141),        //cb.deqz $r1? 29224 <__multiply+0x8c>;;
     _32(0xe10c0103),        //addd $r3 = $r3, 4 (0x4)
     _32(0x26090003),        //sw 0 (0x0)[$r3] = $r2;;
     _32(0x7911a0d1),        //compd.gtu $r4 = $r17, $r3;;
     _32(0x087fff44),        //cb.dnez $r4? 29214 <__multiply+0x7c>;;
     _32(0xe13c0616),        //addd $r15 = $r22, 24 (0x18)
     _32(0xe1200613),        //addd $r8 = $r19, 24 (0x18)
     _32(0x612c0700),        //addd $r11 = $r0, 28 (0x1c);;
     _32(0xf28183d5),        //addx4wd $r32 = $r21, $r15
     _32(0x7229820e),        //addx4wd $r10 = $r14, $r8;;
     _32(0x7605a80f),        //compd.ltu $r1 = $r15, $r32;;
     _32(0x08801401),        //cb.deqz $r1? 2937c <__multiply+0x1e4>;;
     _32(0xe504f9d3),        //sbfd $r1 = $r19, -25 (0xffffffe7)
     _32(0x614c0653),        //addd $r19 = $r19, 25 (0x19);;
     _32(0xf1050281),        //addd $r1 = $r1, $r10
     _32(0x764da4ca),        //compd.ltu $r19 = $r10, $r19;;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x61040101),        //addd $r1 = $r1, 4 (0x4);;
     _32(0x60060113),        //cmoved.dnez $r19? $r1 = 4 (0x4);;
     _32(0x90000008),        //goto 2927c <__multiply+0xe4>
     _32(0x6a4c0001),        //copyd $r19 = $r1;;
     _32(0x7b122404),        //srld $r4 = $r4, 16 (0x10);;
     _32(0x08000944),        //cb.dnez $r4? 292fc <__multiply+0x164>;;
     _32(0xe13c010f),        //addd $r15 = $r15, 4 (0x4)
     _32(0x612c010b),        //addd $r11 = $r11, 4 (0x4);;
     _32(0x7905a3e0),        //compd.gtu $r1 = $r32, $r15;;
     _32(0x08801041),        //cb.deqz $r1? 2937c <__multiply+0x1e4>;;
     _32(0xe11cff0b),        //addd $r7 = $r11, -4 (0xfffffffc)
     _32(0x3010000f),        //lwz $r4 = 0 (0x0)[$r15];;
     _32(0x641bf004),        //zxhd $r6 = $r4;;
     _32(0x08fffdc6),        //cb.deqz $r6? 29264 <__multiply+0xcc>;;
     _32(0xea140008),        //copyd $r5 = $r8
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x60240000),        //make $r9 = 0 (0x0);;
     _32(0xe1140105),        //addd $r5 = $r5, 4 (0x4)
     _32(0x3012f0c8),        //lwz.xs $r4 = $r3[$r8];;
     _32(0xf939a14a),        //compd.gtu $r14 = $r10, $r5
     _32(0x3006f0c7),        //lwz.xs $r1 = $r3[$r7];;
     _32(0xe443f004),        //zxhd $r16 = $r4
     _32(0x7b123404),        //srlw $r4 = $r4, 16 (0x10);;
     _32(0xe40bf001),        //zxhd $r2 = $r1
     _32(0x7b063401),        //srlw $r1 = $r1, 16 (0x10);;
     _32(0x53083190),        //maddw $r2 = $r16, $r6;;
     _32(0x53043184),        //maddw $r1 = $r4, $r6;;
     _32(0x71091242),        //addw $r2 = $r2, $r9;;
     _32(0xe40bf002),        //zxhd $r2 = $r2
     _32(0x7b123402),        //srlw $r4 = $r2, 16 (0x10);;
     _32(0x71051101),        //addw $r1 = $r1, $r4;;
     _32(0xf9123401),        //sllw $r4 = $r1, 16 (0x10)
     _32(0x7b063401),        //srlw $r1 = $r1, 16 (0x10);;
     _32(0xfa091084),        //orw $r2 = $r4, $r2
     _32(0x7824ffc1),        //zxwd $r9 = $r1;;
     _32(0x887ffb8e),        //cb.dnez $r14? 29298 <__multiply+0x100>
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x260bf0c7),        //sw.xs $r3[$r7] = $r2;;
     _32(0x2627e4c7),        //sw $r19[$r7] = $r9;;
     _32(0x3010000f),        //lwz $r4 = 0 (0x0)[$r15];;
     _32(0x7b122404),        //srld $r4 = $r4, 16 (0x10);;
     _32(0x08fff744),        //cb.deqz $r4? 2926c <__multiply+0xd4>;;
     _32(0xea240008),        //copyd $r9 = $r8
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe0140000),        //make $r5 = 0 (0x0)
     _32(0x3008ff0b),        //lwz $r2 = -4 (0xfffffffc)[$r11];;
     _32(0x6a040002),        //copyd $r1 = $r2;;
     _32(0xe40bf002),        //zxhd $r2 = $r2
     _32(0xfb063401),        //srlw $r1 = $r1, 16 (0x10)
     _32(0xe1240109),        //addd $r9 = $r9, 4 (0x4)
     _32(0x301af0c8),        //lwz.xs $r6 = $r3[$r8];;
     _32(0x7939a24a),        //compd.gtu $r14 = $r10, $r9;;
     _32(0x641bf006),        //zxhd $r6 = $r6;;
     _32(0x53043106),        //maddw $r1 = $r6, $r4;;
     _32(0x71051141),        //addw $r1 = $r1, $r5;;
     _32(0xf9163401),        //sllw $r5 = $r1, 16 (0x10)
     _32(0x7b1a3401),        //srlw $r6 = $r1, 16 (0x10);;
     _32(0x7a091085),        //orw $r2 = $r5, $r2;;
     _32(0x260bf0c7),        //sw.xs $r3[$r7] = $r2;;
     _32(0x3006f0cb),        //lwz.xs $r1 = $r3[$r11];;
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x3016f0c8),        //lwz.xs $r5 = $r3[$r8];;
     _32(0x640bf001),        //zxhd $r2 = $r1;;
     _32(0x7b163405),        //srlw $r5 = $r5, 16 (0x10);;
     _32(0x53083105),        //maddw $r2 = $r5, $r4;;
     _32(0xf1150182),        //addd $r5 = $r2, $r6
     _32(0x71091182),        //addw $r2 = $r2, $r6;;
     _32(0x887ffb0e),        //cb.dnez $r14? 29310 <__multiply+0x178>
     _32(0x6517f405),        //extfz $r5 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0xe13c010f),        //addd $r15 = $r15, 4 (0x4)
     _32(0xe12c010b),        //addd $r11 = $r11, 4 (0x4)
     _32(0x260be4c7),        //sw $r19[$r7] = $r2;;
     _32(0x7905a3e0),        //compd.gtu $r1 = $r32, $r15;;
     _32(0x087ff041),        //cb.dnez $r1? 2927c <__multiply+0xe4>;;
     _32(0x8e000214),        //cb.wlez $r20? 2939c <__multiply+0x204>
     _32(0x7a040012),        //copyw $r1 = $r18;;
     _32(0xf104ffc1),        //addw $r1 = $r1, -1 (0xffffffff)
     _32(0xe144ff11),        //addd $r17 = $r17, -4 (0xfffffffc)
     _32(0x3008ff11),        //lwz $r2 = -4 (0xfffffffc)[$r17];;
     _32(0x0c0000c2),        //cb.wnez $r2? 2939c <__multiply+0x204>;;
     _32(0x8c7fff01),        //cb.wnez $r1? 29384 <__multiply+0x1ec>
     _32(0x7148ffd2),        //addw $r18 = $r18, -1 (0xffffffff);;
     _32(0x26490500),        //sw 20 (0x14)[$r0] = $r18;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50080c),        //lq $r20r21 = 32 (0x20)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38580c0c)        //ld $r22 = 48 (0x30)[$r12];;
 |];

let __pow5mult: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe80c00c2),        //andd $r3 = $r2, 3 (0x3)
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0xea540001),        //copyd $r21 = $r1
     _32(0x28510a0c),        //sq 40 (0x28)[$r12] = $r20r21;;
     _32(0xf838ffc2),        //zxwd $r14 = $r2
     _32(0xf80800c2),        //andw $r2 = $r2, 3 (0x3)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x88000c83),        //cb.dnez $r3? 294b0 <__pow5mult+0xf0>
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0xfa02308e),        //sraw $r0 = $r14, 2 (0x2)
     _32(0x6a4c0015),        //copyd $r19 = $r21;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _32(0x0c8006c0),        //cb.weqz $r0? 29468 <__pow5mult+0xa8>;;
     _32(0x38481c14),        //ld $r18 = 112 (0x70)[$r20];;
     _32(0x08800d52),        //cb.deqz $r18? 294d8 <__pow5mult+0x118>;;
     _32(0x8b00028e),        //cb.odd $r14? 29430 <__pow5mult+0x70>
     _32(0xea4c0015),        //copyd $r19 = $r21
     _32(0x60540000),        //make $r21 = 0 (0x0);;
     _32(0x7a06304e),        //sraw $r1 = $r14, 1 (0x1);;
     _32(0x7838ffc1),        //zxwd $r14 = $r1;;
     _32(0x0c8004c1),        //cb.weqz $r1? 29468 <__pow5mult+0xa8>;;
     _32(0x38000012),        //ld $r0 = 0 (0x0)[$r18];;
     _32(0x08800640),        //cb.deqz $r0? 29488 <__pow5mult+0xc8>;;
     _32(0x6a480000),        //copyd $r18 = $r0;;
     _32(0x0bfffe8e),        //cb.even $r14? 29414 <__pow5mult+0x54>;;
     _32(0x9fffff5a),        //call 29198 <__multiply>
     _32(0xea040013),        //copyd $r1 = $r19
     _32(0xea080012),        //copyd $r2 = $r18
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0x08800693),        //cb.deqz $r19? 294a8 <__pow5mult+0xe8>;;
     _32(0x38041e14),        //ld $r1 = 120 (0x78)[$r20];;
     _32(0x34080213),        //lws $r2 = 8 (0x8)[$r19];;
     _32(0x380ef081),        //ld.xs $r3 = $r2[$r1];;
     _32(0x270d0013),        //sd 0 (0x0)[$r19] = $r3;;
     _32(0xfa06304e),        //sraw $r1 = $r14, 1 (0x1)
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x274ff081),        //sd.xs $r2[$r1] = $r19;;
     _32(0x7838ffc1),        //zxwd $r14 = $r1;;
     _32(0x0c7ffbc1),        //cb.wnez $r1? 29420 <__pow5mult+0x60>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0x9fffff44),        //call 29198 <__multiply>
     _32(0xea080012),        //copyd $r2 = $r18
     _32(0xea040012),        //copyd $r1 = $r18
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x27010012),        //sd 0 (0x0)[$r18] = $r0;;
     _32(0x97ffffe3),        //goto 2942c <__pow5mult+0x6c>
     _32(0x27550000),        //sd 0 (0x0)[$r0] = $r21;;
     _32(0x97ffffdb),        //goto 29414 <__pow5mult+0x54>
     _32(0x6a4c0000),        //copyd $r19 = $r0;;
     _32(0xf108ffc2),        //addw $r2 = $r2, -1 (0xffffffff)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _96(0x1000000090000131e0104600),        //make $r4 = 312600 (0x4c518);;
     _32(0x690bf002),        //sxwd $r2 = $r2;;
     _32(0x9ffffe48),        //call 28de8 <__multadd>
     _32(0x300af084),        //lwz.xs $r2 = $r2[$r4];;
     _32(0x97ffffc8),        //goto 293f0 <__pow5mult+0x30>
     _32(0x6a540000),        //copyd $r21 = $r0;;
     _32(0x9ffffe12),        //call 28d20 <_Balloc>
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _64(0x14400000e0040053),        //make $r1 = 2684354560001 (0x27100000001);;
     _32(0x27050512),        //sd 20 (0x14)[$r18] = $r1;;
     _32(0x27491c14),        //sd 112 (0x70)[$r20] = $r18;;
     _32(0x97ffffc3),        //goto 29408 <__pow5mult+0x48>
     _32(0x27010012),        //sd 0 (0x0)[$r18] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __lshift: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea480001),        //copyd $r18 = $r1
     _32(0xf84cffc2),        //zxwd $r19 = $r2
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa523142),        //sraw $r20 = $r2, 5 (0x5)
     _32(0x2851080c),        //sq 32 (0x20)[$r12] = $r20r21;;
     _32(0xea580000),        //copyd $r22 = $r0
     _32(0x27590c0c),        //sd 48 (0x30)[$r12] = $r22;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x30540501),        //lwz $r21 = 20 (0x14)[$r1];;
     _32(0x300c0301),        //lwz $r3 = 12 (0xc)[$r1];;
     _32(0x30040201),        //lwz $r1 = 8 (0x8)[$r1];;
     _32(0xf1391515),        //addw $r14 = $r21, $r20
     _32(0x71551515),        //addw $r21 = $r21, $r20;;
     _32(0xf100004e),        //addw $r0 = $r14, 1 (0x1)
     _32(0x7138004e),        //addw $r14 = $r14, 1 (0x1);;
     _32(0x7401b0c0),        //compw.le $r0 = $r0, $r3;;
     _32(0x0c000180),        //cb.wnez $r0? 2956c <__lshift+0x64>;;
     _32(0xf90e3043),        //sllw $r3 = $r3, 1 (0x1)
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0xf511b0ce),        //compw.gt $r4 = $r14, $r3
     _32(0x780cffc3),        //zxwd $r3 = $r3;;
     _32(0x0c7fff04),        //cb.wnez $r4? 29558 <__lshift+0x50>;;
     _32(0x9ffffded),        //call 28d20 <_Balloc>
     _32(0x6a000016),        //copyd $r0 = $r22;;
     _32(0xe1040600),        //addd $r1 = $r0, 24 (0x18)
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0x730c0054),        //maxw $r3 = $r20, 1 (0x1);;
     _32(0x8e000214),        //cb.wlez $r20? 295a4 <__lshift+0x9c>
     _32(0x6a180001),        //copyd $r6 = $r1;;
     _32(0x0f0000c3),        //loopdo $r3, 29598 <__lshift+0x90>;;
     _32(0xe1100044),        //addd $r4 = $r4, 1 (0x1)
     _32(0x260bf101),        //sw.xs $r4[$r1] = $r2;;
     _32(0x7118ffd4),        //addw $r6 = $r20, -1 (0xffffffff);;
     _32(0x61180046),        //addd $r6 = $r6, 1 (0x1);;
     _32(0x72194046),        //addx4d $r6 = $r6, $r1;;
     _32(0xe82807d3),        //andd $r10 = $r19, 31 (0x1f)
     _32(0xe1200612),        //addd $r8 = $r18, 24 (0x18)
     _32(0xf84c07d3),        //andw $r19 = $r19, 31 (0x1f)
     _32(0x341c0512),        //lws $r7 = 20 (0x14)[$r18];;
     _32(0x6a0c0008),        //copyd $r3 = $r8;;
     _32(0x88800a0a),        //cb.deqz $r10? 29658 <__lshift+0x150>
     _32(0x721d4207),        //addx4d $r7 = $r7, $r8;;
     _32(0xf5040813),        //sbfw $r1 = $r19, 32 (0x20)
     _32(0xe0140000),        //make $r5 = 0 (0x0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xe10c0103),        //addd $r3 = $r3, 4 (0x4)
     _32(0x3012f148),        //lwz.xs $r4 = $r5[$r8];;
     _32(0x7925a0c7),        //compd.gtu $r9 = $r7, $r3;;
     _32(0x79127284),        //sllw $r4 = $r4, $r10;;
     _32(0x7a091084),        //orw $r2 = $r4, $r2;;
     _32(0x260bf146),        //sw.xs $r5[$r6] = $r2;;
     _32(0xe1140045),        //addd $r5 = $r5, 1 (0x1)
     _32(0x300af148),        //lwz.xs $r2 = $r5[$r8];;
     _32(0x7b0a7042),        //srlw $r2 = $r2, $r1;;
     _32(0x887ffdc9),        //cb.dnez $r9? 295cc <__lshift+0xc4>
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0xf13a0542),        //cmoved.deqz $r2? $r14 = $r21
     _32(0xe504f9d2),        //sbfd $r1 = $r18, -25 (0xffffffe7)
     _32(0x610c0652),        //addd $r3 = $r18, 25 (0x19);;
     _32(0xf10501c1),        //addd $r1 = $r1, $r7
     _32(0xf61da0c7),        //compd.ltu $r7 = $r7, $r3
     _32(0x6a54000e),        //copyd $r21 = $r14;;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x61040101),        //addd $r1 = $r1, 4 (0x4);;
     _32(0x60060107),        //cmoved.dnez $r7? $r1 = 4 (0x4);;
     _32(0x260be046),        //sw $r1[$r6] = $r2;;
     _32(0x38041e16),        //ld $r1 = 120 (0x78)[$r22];;
     _32(0x34080212),        //lws $r2 = 8 (0x8)[$r18];;
     _32(0x26550500),        //sw 20 (0x14)[$r0] = $r21;;
     _32(0x380ef081),        //ld.xs $r3 = $r2[$r1];;
     _32(0x270d0012),        //sd 0 (0x0)[$r18] = $r3;;
     _32(0x274bf081),        //sd.xs $r2[$r1] = $r18;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50080c),        //lq $r20r21 = 32 (0x20)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38580c0c),        //ld $r22 = 48 (0x30)[$r12];;
     _32(0xe10c0103),        //addd $r3 = $r3, 4 (0x4)
     _32(0xe1180106),        //addd $r6 = $r6, 4 (0x4)
     _32(0x30080003),        //lwz $r2 = 0 (0x0)[$r3];;
     _32(0xf905a0c7),        //compd.gtu $r1 = $r7, $r3
     _32(0x610c0103),        //addd $r3 = $r3, 4 (0x4);;
     _32(0xe1180106),        //addd $r6 = $r6, 4 (0x4)
     _32(0x2609ff06),        //sw -4 (0xfffffffc)[$r6] = $r2;;
     _32(0x08fffac1),        //cb.deqz $r1? 29620 <__lshift+0x118>;;
     _32(0xf905a0c7),        //compd.gtu $r1 = $r7, $r3
     _32(0x3008ff03),        //lwz $r2 = -4 (0xfffffffc)[$r3];;
     _32(0x887ffd81),        //cb.dnez $r1? 29658 <__lshift+0x150>
     _32(0x2609ff06),        //sw -4 (0xfffffffc)[$r6] = $r2;;
     _32(0x17ffffe6),        //goto 29620 <__lshift+0x118>;;
     _32(0x7f03f000)        //nop ;;
 |];

let __mcmp: list_I = 
 [|
     _32(0xea1c0000),        //copyd $r7 = $r0
     _32(0x30100501),        //lwz $r4 = 20 (0x14)[$r1];;
     _32(0xe11c0607),        //addd $r7 = $r7, 24 (0x18)
     _32(0x30000500),        //lwz $r0 = 20 (0x14)[$r0];;
     _32(0x690bf004),        //sxwd $r2 = $r4;;
     _32(0xf5011004),        //sbfw $r0 = $r4, $r0
     _32(0xf90a2082),        //slld $r2 = $r2, 2 (0x2)
     _32(0xe1100601),        //addd $r4 = $r1, 24 (0x18)
     _32(0x6004fffc),        //make $r1 = -4 (0xfffffffc);;
     _32(0xf1210087),        //addd $r8 = $r7, $r2
     _32(0x71110084),        //addd $r4 = $r4, $r2;;
     _32(0x08000400),        //cb.dnez $r0? 296fc <__mcmp+0x6c>;;
     _32(0x90000003),        //goto 296cc <__mcmp+0x3c>
     _32(0x61240108),        //addd $r9 = $r8, 4 (0x4);;
     _32(0x08800342),        //cb.deqz $r2? 296fc <__mcmp+0x6c>;;
     _32(0x300ee048),        //lwz $r3 = $r1[$r8];;
     _32(0xe104ff01),        //addd $r1 = $r1, -4 (0xfffffffc)
     _32(0x3016e044),        //lwz $r5 = $r1[$r4];;
     _32(0x71090049),        //addd $r2 = $r9, $r1;;
     _32(0x7609a087),        //compd.ltu $r2 = $r7, $r2;;
     _32(0x7119b143),        //compw.eq $r6 = $r3, $r5;;
     _32(0x0c7ffe46),        //cb.wnez $r6? 296c8 <__mcmp+0x38>;;
     _32(0xf60db143),        //compw.ltu $r3 = $r3, $r5
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _64(0x103fffffe004ffc0),        //make $r1 = 4294967295 (0xffffffff);;
     _32(0x78020043),        //cmoved.wnez $r3? $r0 = $r1;;
     _32(0x0fd00000)        //ret ;;
 |];

let __mdiff: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f00c),        //addd $r12 = $r12, -64 (0xffffffc0)
     _32(0x600cfffc),        //make $r3 = -4 (0xfffffffc);;
     _32(0xea4c0001),        //copyd $r19 = $r1
     _32(0xe1480602),        //addd $r18 = $r2, 24 (0x18)
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xea500002),        //copyd $r20 = $r2
     _32(0x28510a0c),        //sq 40 (0x28)[$r12] = $r20r21;;
     _32(0xe1380613),        //addd $r14 = $r19, 24 (0x18)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x30140502),        //lwz $r5 = 20 (0x14)[$r2];;
     _32(0x30040501),        //lwz $r1 = 20 (0x14)[$r1];;
     _32(0xe917f005),        //sxwd $r5 = $r5
     _32(0xf5551045),        //sbfw $r21 = $r5, $r1
     _32(0x75051045),        //sbfw $r1 = $r5, $r1;;
     _32(0x79162085),        //slld $r5 = $r5, 2 (0x2);;
     _32(0x08001815),        //cb.dnez $r21? 298c4 <__mdiff+0x1c4>;;
     _32(0xf125014e),        //addd $r9 = $r14, $r5
     _32(0x71150152),        //addd $r5 = $r18, $r5;;
     _32(0x90000003),        //goto 2975c <__mdiff+0x5c>
     _32(0x61040109),        //addd $r1 = $r9, 4 (0x4);;
     _32(0x08001944),        //cb.dnez $r4? 298ec <__mdiff+0x1ec>;;
     _32(0x301ae0c9),        //lwz $r6 = $r3[$r9];;
     _32(0xe10cff03),        //addd $r3 = $r3, -4 (0xfffffffc)
     _32(0x301ee0c5),        //lwz $r7 = $r3[$r5];;
     _32(0x711100c1),        //addd $r4 = $r1, $r3;;
     _32(0x7711a10e),        //compd.geu $r4 = $r14, $r4;;
     _32(0x7121b1c6),        //compw.eq $r8 = $r6, $r7;;
     _32(0x0c7ffe48),        //cb.wnez $r8? 29758 <__mdiff+0x58>;;
     _32(0x7719b1c6),        //compw.geu $r6 = $r6, $r7;;
     _32(0x0c801506),        //cb.weqz $r6? 298cc <__mdiff+0x1cc>;;
     _32(0x9ffffd68),        //call 28d20 <_Balloc>
     _32(0x30040213),        //lwz $r1 = 8 (0x8)[$r19];;
     _32(0xea200012),        //copyd $r8 = $r18
     _32(0xe0140000),        //make $r5 = 0 (0x0)
     _32(0xe01c0000),        //make $r7 = 0 (0x0)
     _32(0x30280513),        //lwz $r10 = 20 (0x14)[$r19];;
     _32(0xe1240600),        //addd $r9 = $r0, 24 (0x18)
     _32(0x343c0514),        //lws $r15 = 20 (0x14)[$r20];;
     _32(0x26550400),        //sw 16 (0x10)[$r0] = $r21;;
     _32(0x7241838a),        //addx4wd $r16 = $r10, $r14;;
     _32(0x723d448f),        //addx4d $r15 = $r15, $r18;;
     _32(0xe1200108),        //addd $r8 = $r8, 4 (0x4)
     _32(0x300af14e),        //lwz.xs $r2 = $r5[$r14];;
     _32(0xf92da20f),        //compd.gtu $r11 = $r15, $r8
     _32(0x301af152),        //lwz.xs $r6 = $r5[$r18];;
     _32(0xe40ff002),        //zxhd $r3 = $r2
     _32(0x7b0a3402),        //srlw $r2 = $r2, 16 (0x10);;
     _32(0xe413f006),        //zxhd $r4 = $r6
     _32(0xf10d11c3),        //addw $r3 = $r3, $r7
     _32(0x7b063406),        //srlw $r1 = $r6, 16 (0x10);;
     _32(0xf5051081),        //sbfw $r1 = $r1, $r2
     _32(0x750910c4),        //sbfw $r2 = $r4, $r3;;
     _32(0xe40bf002),        //zxhd $r2 = $r2
     _32(0x7a0e3402),        //sraw $r3 = $r2, 16 (0x10);;
     _32(0x710510c1),        //addw $r1 = $r1, $r3;;
     _32(0xf9123401),        //sllw $r4 = $r1, 16 (0x10)
     _32(0x7a063401),        //sraw $r1 = $r1, 16 (0x10);;
     _32(0xfa0d1084),        //orw $r3 = $r4, $r2
     _32(0xf81cffc1),        //zxwd $r7 = $r1
     _32(0x7a111084),        //orw $r4 = $r4, $r2;;
     _32(0x887ffb4b),        //cb.dnez $r11? 297ac <__mdiff+0xac>
     _32(0xe1140045),        //addd $r5 = $r5, 1 (0x1)
     _32(0x260ff149),        //sw.xs $r5[$r9] = $r3;;
     _32(0xec14ffd2),        //notd $r5 = $r18
     _32(0xe1480052),        //addd $r18 = $r18, 1 (0x1)
     _32(0x60180000),        //make $r6 = 0 (0x0);;
     _32(0xf11503c5),        //addd $r5 = $r5, $r15
     _32(0x7649a48f),        //compd.ltu $r18 = $r15, $r18;;
     _32(0x6804ff05),        //andd $r1 = $r5, -4 (0xfffffffc);;
     _32(0xea140001),        //copyd $r5 = $r1
     _32(0x61040101),        //addd $r1 = $r1, 4 (0x4);;
     _32(0xe0060112),        //cmoved.dnez $r18? $r1 = 4 (0x4)
     _32(0x60160012),        //cmoved.dnez $r18? $r5 = 0 (0x0);;
     _32(0xf139004e),        //addd $r14 = $r14, $r1
     _32(0xf1150149),        //addd $r5 = $r9, $r5
     _32(0x71250049),        //addd $r9 = $r9, $r1;;
     _32(0x7805a390),        //compd.leu $r1 = $r16, $r14;;
     _32(0x08000541),        //cb.dnez $r1? 29890 <__mdiff+0x190>;;
     _32(0x6114ffd0),        //addd $r5 = $r16, -1 (0xffffffff);;
     _32(0x7515014e),        //sbfd $r5 = $r14, $r5;;
     _32(0x7b162085),        //srld $r5 = $r5, 2 (0x2);;
     _32(0x61200045),        //addd $r8 = $r5, 1 (0x1);;
     _32(0x0f0003c8),        //loopdo $r8, 2988c <__mdiff+0x18c>;;
     _32(0x3012f18e),        //lwz.xs $r4 = $r6[$r14];;
     _32(0xe40bf004),        //zxhd $r2 = $r4
     _32(0x7b123404),        //srlw $r4 = $r4, 16 (0x10);;
     _32(0x710911c2),        //addw $r2 = $r2, $r7;;
     _32(0xe40bf002),        //zxhd $r2 = $r2
     _32(0x7a063402),        //sraw $r1 = $r2, 16 (0x10);;
     _32(0x71051044),        //addw $r1 = $r4, $r1;;
     _32(0xf9123401),        //sllw $r4 = $r1, 16 (0x10)
     _32(0x7a063401),        //sraw $r1 = $r1, 16 (0x10);;
     _32(0xfa0d1084),        //orw $r3 = $r4, $r2
     _32(0xf81cffc1),        //zxwd $r7 = $r1
     _32(0x7a111084),        //orw $r4 = $r4, $r2;;
     _32(0xe1180046),        //addd $r6 = $r6, 1 (0x1)
     _32(0x260ff189),        //sw.xs $r6[$r9] = $r3;;
     _32(0x72154245),        //addx4d $r5 = $r5, $r9;;
     _32(0x08000144),        //cb.dnez $r4? 298a4 <__mdiff+0x1a4>;;
     _32(0xf128ffca),        //addw $r10 = $r10, -1 (0xffffffff)
     _32(0xe114ff05),        //addd $r5 = $r5, -4 (0xfffffffc)
     _32(0x3004ff05),        //lwz $r1 = -4 (0xfffffffc)[$r5];;
     _32(0x0cffff41),        //cb.weqz $r1? 29894 <__mdiff+0x194>;;
     _32(0x26290500),        //sw 20 (0x14)[$r0] = $r10;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0x8dffebc1),        //cb.wgez $r1? 29780 <__mdiff+0x80>
     _32(0x60540000),        //make $r21 = 0 (0x0);;
     _32(0xea08000e),        //copyd $r2 = $r14
     _32(0xea040013),        //copyd $r1 = $r19
     _32(0xea380012),        //copyd $r14 = $r18
     _32(0x6a4c0014),        //copyd $r19 = $r20;;
     _32(0x97ffffa9),        //goto 29780 <__mdiff+0x80>
     _32(0xe0540001),        //make $r21 = 1 (0x1)
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0x6a500001),        //copyd $r20 = $r1;;
     _32(0x9ffffd0d),        //call 28d20 <_Balloc>
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x27050500),        //sd 20 (0x14)[$r0] = $r1;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c)        //lq $r20r21 = 40 (0x28)[$r12];;
 |];

let __ulp: list_I = 
 [|
     _32(0xfb022800),        //srld $r0 = $r0, 32 (0x20)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _64(0x001ffc00f8000000),        //andw $r0 = $r0, 2146435072 (0x7ff00000);;
     _64(0x07ff3000f1000000),        //addw $r0 = $r0, -54525952 (0xfffffffffcc00000);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x0e000140),        //cb.wlez $r0? 29948 <__ulp+0x30>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x6303f801),        //insf $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x8fd00000),        //ret 
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _32(0x75000000),        //negw $r0 = $r0;;
     _32(0xfa063500),        //sraw $r1 = $r0, 20 (0x14)
     _64(0x0809fffff509b7c0),        //compw.gt $r2 = $r0, 20971519 (0x13fffff);;
     _32(0x0c000242),        //cb.wnez $r2? 2997c <__ulp+0x64>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _64(0x10000200e0080000),        //make $r2 = 524288 (0x80000);;
     _32(0x7a067042),        //sraw $r1 = $r2, $r1;;
     _32(0x6303f801),        //insf $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x8fd00000),        //ret 
     _32(0x6103f003),        //insf $r0 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0xf104fb01),        //addw $r1 = $r1, -20 (0xffffffec)
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _64(0x1fe00000e008003f),        //make $r2 = -2147483648 (0xffffffff80000000);;
     _32(0xe303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20)
     _32(0xfb0a7042),        //srlw $r2 = $r2, $r1
     _32(0xe00c0001),        //make $r3 = 1 (0x1)
     _64(0x18000000f505b781),        //compw.gt $r1 = $r1, 30 (0x1e);;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x790e0081),        //cmoved.weqz $r1? $r3 = $r2;;
     _32(0x8fd00000),        //ret 
     _32(0x6103f003),        //insf $r0 = $r3, 31 (0x1f), 0 (0x0);;
     _32(0x7f03f000)        //nop ;;
 |];

let __b2d: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea500001),        //copyd $r20 = $r1
     _32(0x28510a0c),        //sq 40 (0x28)[$r12] = $r20r21;;
     _32(0xe1380600),        //addd $r14 = $r0, 24 (0x18)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x344c0500),        //lws $r19 = 20 (0x14)[$r0];;
     _32(0x724d4393),        //addx4d $r19 = $r19, $r14;;
     _32(0xe154ff13),        //addd $r21 = $r19, -4 (0xfffffffc)
     _32(0x3048ff13),        //lwz $r18 = -4 (0xfffffffc)[$r19];;
     _32(0x9ffffd90),        //call 29028 <__hi0bits>
     _32(0x7a000012),        //copyw $r0 = $r18;;
     _32(0xfa080000),        //copyw $r2 = $r0
     _64(0x08000000f501b280),        //compw.gt $r0 = $r0, 10 (0xa);;
     _32(0xf5040802),        //sbfw $r1 = $r2, 32 (0x20)
     _32(0x710cfd42),        //addw $r3 = $r2, -11 (0xfffffff5);;
     _32(0x8c800b40),        //cb.weqz $r0? 29ab8 <__b2d+0x100>
     _32(0x26050014),        //sw 0 (0x0)[$r20] = $r1;;
     _32(0xf755a54e),        //compd.geu $r21 = $r14, $r21
     _32(0x7108fd42),        //addw $r2 = $r2, -11 (0xfffffff5);;
     _32(0x080006d5),        //cb.dnez $r21? 29a80 <__b2d+0xc8>;;
     _32(0x88800702),        //cb.deqz $r2? 29a88 <__b2d+0xd0>
     _32(0x3010fe13),        //lwz $r4 = -8 (0xfffffff8)[$r19];;
     _32(0xf5180803),        //sbfw $r6 = $r3, 32 (0x20)
     _32(0xf90670d2),        //sllw $r1 = $r18, $r3
     _32(0xe114fe13),        //addd $r5 = $r19, -8 (0xfffffff8)
     _32(0x794a70c4),        //sllw $r18 = $r4, $r3;;
     _32(0xfb127184),        //srlw $r4 = $r4, $r6
     _32(0xf739a14e),        //compd.geu $r14 = $r14, $r5
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x7808ffd2),        //zxwd $r2 = $r18;;
     _32(0x7a051101),        //orw $r1 = $r1, $r4;;
     _64(0x000ffc00fa040001),        //orw $r1 = $r1, 1072693248 (0x3ff00000);;
     _32(0x8800014e),        //cb.dnez $r14? 29a60 <__b2d+0xa8>
     _32(0x6303f801),        //insf $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x3008fd13),        //lwz $r2 = -12 (0xfffffff4)[$r19];;
     _32(0x7b0a7182),        //srlw $r2 = $r2, $r6;;
     _32(0x7a091482),        //orw $r2 = $r2, $r18;;
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0x88000942),        //cb.dnez $r2? 29b14 <__b2d+0x15c>
     _32(0x60100000),        //make $r4 = 0 (0x0);;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _64(0xb8400e0cfa480012),        //orw $r18 = $r18, 1072693248 (0x3ff00000)
     _32(0x080ffc00),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0xe303f812),        //insf $r0 = $r18, 63 (0x3f), 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0xe103f004),        //insf $r0 = $r4, 31 (0x1f), 0 (0x0)
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0xf51002c2),        //sbfw $r4 = $r2, 11 (0xb)
     _32(0xf739a54e),        //compd.geu $r14 = $r14, $r21
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x7b0e7112),        //srlw $r3 = $r18, $r4;;
     _64(0x000ffc00fa0c0003),        //orw $r3 = $r3, 1072693248 (0x3ff00000);;
     _32(0x8800014e),        //cb.dnez $r14? 29ae8 <__b2d+0x130>
     _32(0x6303f803),        //insf $r0 = $r3, 63 (0x3f), 32 (0x20);;
     _32(0x3004fe13),        //lwz $r1 = -8 (0xfffffff8)[$r19];;
     _32(0x7b067101),        //srlw $r1 = $r1, $r4;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0xf1080542),        //addw $r2 = $r2, 21 (0x15)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0xf90a7092),        //sllw $r2 = $r18, $r2
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0xfa091042),        //orw $r2 = $r2, $r1
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0)
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0xf94a70d2),        //sllw $r18 = $r18, $r3
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _64(0x000ffc00fa480012),        //orw $r18 = $r18, 1072693248 (0x3ff00000);;
     _32(0x6303f812),        //insf $r0 = $r18, 63 (0x3f), 32 (0x20);;
     _32(0x97ffffce),        //goto 29a64 <__b2d+0xac>
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _32(0x7f03f000)        //nop ;;
 |];

let __d2b: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xea4c0003),        //copyd $r19 = $r3
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea500002),        //copyd $r20 = $r2
     _32(0x28510c0c),        //sq 48 (0x30)[$r12] = $r20r21;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0xe75bed0e),        //extfz $r22 = $r14, 62 (0x3e), 52 (0x34)
     _32(0x2759100c),        //sd 64 (0x40)[$r12] = $r22;;
     _32(0x9ffffc6f),        //call 28d20 <_Balloc>
     _32(0x2741120c),        //sd 72 (0x48)[$r12] = $r16;;
     _32(0xe70b380e),        //extfz $r2 = $r14, 51 (0x33), 32 (0x20)
     _32(0xea540016),        //copyd $r21 = $r22
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x780cffce),        //zxwd $r3 = $r14;;
     _64(0x00000400fa040002),        //orw $r1 = $r2, 1048576 (0x100000);;
     _32(0x71060096),        //cmoved.deqz $r22? $r1 = $r2;;
     _32(0x8c80078e),        //cb.weqz $r14? 29c00 <__d2b+0xc8>
     _32(0x2605160c),        //sw 88 (0x58)[$r12] = $r1;;
     _32(0x9ffffd48),        //call 290b0 <__lo0bits>
     _32(0xe100140c),        //addd $r0 = $r12, 80 (0x50)
     _32(0x260d140c),        //sw 80 (0x50)[$r12] = $r3;;
     _32(0x8c000b00),        //cb.wnez $r0? 29c4c <__d2b+0x114>
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000140c),        //lwz $r0 = 80 (0x50)[$r12];;
     _32(0x3008160c),        //lwz $r2 = 88 (0x58)[$r12];;
     _32(0x26010612),        //sw 24 (0x18)[$r18] = $r0;;
     _32(0xe0390002),        //compd.ne $r14 = $r2, 0 (0x0)
     _32(0x26090712),        //sw 28 (0x1c)[$r18] = $r2;;
     _32(0x6138004e),        //addd $r14 = $r14, 1 (0x1);;
     _32(0x88800696),        //cb.deqz $r22? 29c24 <__d2b+0xec>
     _32(0x26390512),        //sw 20 (0x14)[$r18] = $r14;;
     _32(0xf5000d41),        //sbfw $r0 = $r1, 53 (0x35)
     _64(0x0ffffffef154f355),        //addw $r21 = $r21, -1075 (0xfffffffffffffbcd);;
     _32(0x71051055),        //addw $r1 = $r21, $r1;;
     _32(0x26050014),        //sw 0 (0x0)[$r20] = $r1;;
     _32(0x26010013),        //sw 0 (0x0)[$r19] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840120c),        //ld $r16 = 72 (0x48)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c500c0c),        //lq $r20r21 = 48 (0x30)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3858100c),        //ld $r22 = 64 (0x40)[$r12];;
     _32(0x9ffffd2c),        //call 290b0 <__lo0bits>
     _32(0x6100160c),        //addd $r0 = $r12, 88 (0x58);;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xe0380001),        //make $r14 = 1 (0x1)
     _32(0x3008160c),        //lwz $r2 = 88 (0x58)[$r12];;
     _32(0xf1040800),        //addw $r1 = $r0, 32 (0x20)
     _32(0x26050512),        //sw 20 (0x14)[$r18] = $r1;;
     _32(0x887ffa96),        //cb.dnez $r22? 29bc4 <__d2b+0x8c>
     _32(0x26090612),        //sw 24 (0x18)[$r18] = $r2;;
     _32(0xf201448e),        //addx4d $r0 = $r14, $r18
     _32(0xf93a314e),        //sllw $r14 = $r14, 5 (0x5)
     _64(0x17fffffef104f381),        //addw $r1 = $r1, -1074 (0xfffffffffffffbce);;
     _32(0x26050014),        //sw 0 (0x0)[$r20] = $r1;;
     _32(0x9ffffcfc),        //call 29028 <__hi0bits>
     _32(0x30000500),        //lwz $r0 = 20 (0x14)[$r0];;
     _32(0x75391380),        //sbfw $r14 = $r0, $r14;;
     _32(0x97ffffe6),        //goto 29bdc <__d2b+0xa4>
     _32(0x26390013),        //sw 0 (0x0)[$r19] = $r14;;
     _32(0xf50c0800),        //sbfw $r3 = $r0, 32 (0x20)
     _32(0x3008160c),        //lwz $r2 = 88 (0x58)[$r12];;
     _32(0x3010140c),        //lwz $r4 = 80 (0x50)[$r12];;
     _32(0xf90e70c2),        //sllw $r3 = $r2, $r3
     _32(0x7b027002),        //srlw $r0 = $r2, $r0;;
     _32(0xfa0d1103),        //orw $r3 = $r3, $r4
     _32(0xf808ffc0),        //zxwd $r2 = $r0
     _32(0x2601160c),        //sw 88 (0x58)[$r12] = $r0;;
     _32(0x97ffffd1),        //goto 29bb0 <__d2b+0x78>
     _32(0x260d0612),        //sw 24 (0x18)[$r18] = $r3;;
     _32(0x7f03f000)        //nop ;;
 |];

let __ratio: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea480001),        //copyd $r18 = $r1
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0xe1040c0c),        //addd $r1 = $r12, 48 (0x30)
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x27410a0c),        //sd 40 (0x28)[$r12] = $r16;;
     _32(0x9fffff49),        //call 299b8 <__b2d>
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x9fffff47),        //call 299b8 <__b2d>
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xe1040e0c),        //addd $r1 = $r12, 56 (0x38)
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x300c0513),        //lwz $r3 = 20 (0x14)[$r19];;
     _32(0xea180001),        //copyd $r6 = $r1
     _32(0x30080512),        //lwz $r2 = 20 (0x14)[$r18];;
     _32(0x30140e0c),        //lwz $r5 = 56 (0x38)[$r12];;
     _32(0x30100c0c),        //lwz $r4 = 48 (0x30)[$r12];;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x790a3142),        //sllw $r2 = $r2, 5 (0x5);;
     _32(0x75111105),        //sbfw $r4 = $r5, $r4;;
     _32(0x71091102),        //addw $r2 = $r2, $r4;;
     _32(0x0e000382),        //cb.wlez $r2? 29d10 <__ratio+0x98>;;
     _32(0xe73bf80e),        //extfz $r14 = $r14, 63 (0x3f), 32 (0x20)
     _32(0x790a3502),        //sllw $r2 = $r2, 20 (0x14);;
     _32(0x71091382),        //addw $r2 = $r2, $r14;;
     _32(0x6303f802),        //insf $r0 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x6a380000),        //copyd $r14 = $r0;;
     _32(0x9800207c),        //call 31ee0 <__divdf3>
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe707f801),        //extfz $r1 = $r1, 63 (0x3f), 32 (0x20)
     _32(0xf90a3502),        //sllw $r2 = $r2, 20 (0x14)
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0x75091042),        //sbfw $r2 = $r2, $r1;;
     _32(0x631bf802),        //insf $r6 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x9800206f),        //call 31ee0 <__divdf3>
     _32(0x6a040006),        //copyd $r1 = $r6;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _mprec_log10: list_I = 
 [|
     _32(0xf80cffc0),        //zxwd $r3 = $r0
     _64(0xe0080000f511b5c0),        //compw.gt $r4 = $r0, 23 (0x17)
     _96(0x120120009000000088000000),        //make $r2 = 4621819117588971520 (0x4024000000000000);;
     _32(0xfa040003),        //copyw $r1 = $r3
     _96(0x09ff800088000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x0c800104),        //cb.weqz $r4? 29d80 <_mprec_log10+0x38>;;
     _32(0x0f000081),        //loopdo $r1, 29d7c <_mprec_log10+0x34>;;
     _32(0x58017080),        //fmuld $r0 = $r0, $r2;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe90ff003),        //sxwd $r3 = $r3
     _96(0x0800000088000131e0005e00),        //make $r0 = 312696 (0x4c578);;
     _32(0x8fd00000),        //ret 
     _32(0x3802f0c0)        //ld.xs $r0 = $r3[$r0];;
 |];

let __copybits: list_I = 
 [|
     _32(0xf104ffc1),        //addw $r1 = $r1, -1 (0xffffffff)
     _32(0xe1140602),        //addd $r5 = $r2, 24 (0x18)
     _32(0xe518f9c2),        //sbfd $r6 = $r2, -25 (0xffffffe7)
     _32(0x340c0502),        //lws $r3 = 20 (0x14)[$r2];;
     _32(0x7a063141),        //sraw $r1 = $r1, 5 (0x5);;
     _64(0x00000000f2058101),        //addx4wd $r1 = $r1, 4 (0x4);;
     _32(0xf20d4143),        //addx4d $r3 = $r3, $r5
     _32(0x71110040),        //addd $r4 = $r0, $r1;;
     _32(0xf705a0c5),        //compd.geu $r1 = $r5, $r3
     _32(0x71190183),        //addd $r6 = $r3, $r6;;
     _32(0x7b1a2086),        //srld $r6 = $r6, 2 (0x2);;
     _32(0x08000241),        //cb.dnez $r1? 29dec <__copybits+0x54>;;
     _32(0xe1180046),        //addd $r6 = $r6, 1 (0x1)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6a080006),        //copyd $r2 = $r6;;
     _32(0x0f000102),        //loopdo $r2, 29de8 <__copybits+0x50>;;
     _32(0x300ef045),        //lwz.xs $r3 = $r1[$r5];;
     _32(0xe1040041),        //addd $r1 = $r1, 1 (0x1)
     _32(0x260ff040),        //sw.xs $r1[$r0] = $r3;;
     _32(0x72014006),        //addx4d $r0 = $r6, $r0;;
     _32(0xf805a004),        //compd.leu $r1 = $r4, $r0
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0x08000141),        //cb.dnez $r1? 29e08 <__copybits+0x70>;;
     _32(0xe1000100),        //addd $r0 = $r0, 4 (0x4)
     _32(0x26090000),        //sw 0 (0x0)[$r0] = $r2;;
     _32(0x7905a004),        //compd.gtu $r1 = $r4, $r0;;
     _32(0x087fff41),        //cb.dnez $r1? 29df8 <__copybits+0x60>;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __any_on: list_I = 
 [|
     _32(0xfa0a3141),        //sraw $r2 = $r1, 5 (0x5)
     _32(0xe10c0600),        //addd $r3 = $r0, 24 (0x18)
     _32(0xf804ffc1),        //zxwd $r1 = $r1
     _32(0x30100500),        //lwz $r4 = 20 (0x14)[$r0];;
     _32(0x7301b084),        //compw.ge $r0 = $r4, $r2;;
     _32(0x0c000240),        //cb.wnez $r0? 29e48 <__any_on+0x38>;;
     _32(0x90000004),        //goto 29e38 <__any_on+0x28>
     _32(0x720980c4),        //addx4wd $r2 = $r4, $r3;;
     _32(0x30000002),        //lwz $r0 = 0 (0x0)[$r2];;
     _32(0x0c0004c0),        //cb.wnez $r0? 29e80 <__any_on+0x70>;;
     _32(0xf901a0c2),        //compd.gtu $r0 = $r2, $r3
     _32(0x6108ff02),        //addd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x087fff00),        //cb.dnez $r0? 29e30 <__any_on+0x20>;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe903f002),        //sxwd $r0 = $r2
     _32(0xf20980c2),        //addx4wd $r2 = $r2, $r3
     _32(0x7411b084),        //compw.le $r4 = $r4, $r2;;
     _32(0x0c7ffe44),        //cb.wnez $r4? 29e38 <__any_on+0x28>;;
     _32(0xe81007c1),        //andd $r4 = $r1, 31 (0x1f)
     _32(0x780407c1),        //andw $r1 = $r1, 31 (0x1f);;
     _32(0x08fffd84),        //cb.deqz $r4? 29e38 <__any_on+0x28>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x3016f003),        //lwz.xs $r5 = $r0[$r3];;
     _32(0x7b127045),        //srlw $r4 = $r5, $r1;;
     _32(0x79067044),        //sllw $r1 = $r4, $r1;;
     _32(0x7005b141),        //compw.ne $r1 = $r1, $r5;;
     _32(0x0cfffc01),        //cb.weqz $r1? 29e38 <__any_on+0x28>;;
     _32(0x0fd00000),        //ret ;;
     _32(0x8fd00000),        //ret 
     _32(0x60000001)        //make $r0 = 1 (0x1);;
 |];

let cleanup_glue: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x08800081),        //cb.deqz $r1? 29eb0 <cleanup_glue+0x28>;;
     _32(0x1ffffff7),        //call 29e88 <cleanup_glue>;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fff515)        //goto 27320 <_free_r>;;
 |];

let _reclaim_reent: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e0042000),        //make $r1 = 303232 (0x4a080);;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x7005a001),        //compd.ne $r1 = $r1, $r0;;
     _32(0x08800d01),        //cb.deqz $r1? 29fd0 <_reclaim_reent+0x100>;;
     _32(0x38041e00),        //ld $r1 = 120 (0x78)[$r0];;
     _32(0x088003c1),        //cb.deqz $r1? 29f44 <_reclaim_reent+0x74>;;
     _32(0x383ae4c1),        //ld $r14 = $r19[$r1];;
     _32(0x088001ce),        //cb.deqz $r14? 29f2c <_reclaim_reent+0x5c>;;
     _32(0x9ffff503),        //call 27320 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x087fff0e),        //cb.dnez $r14? 29f14 <_reclaim_reent+0x44>;;
     _32(0x38041e12),        //ld $r1 = 120 (0x78)[$r18];;
     _32(0x614c0213),        //addd $r19 = $r19, 8 (0x8);;
     _64(0x00000000e0018013),        //compd.ne $r0 = $r19, 512 (0x200);;
     _32(0x087ffd40),        //cb.dnez $r0? 29f0c <_reclaim_reent+0x3c>;;
     _32(0x9ffff4f9),        //call 27320 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041812),        //ld $r1 = 96 (0x60)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 29f54 <_reclaim_reent+0x84>;;
     _32(0x1ffff4f4),        //call 27320 <_free_r>;;
     _64(0xb8387e12e14c8012),        //addd $r19 = $r18, 512 (0x200)
     _32(0x00000000),        //ld $r14 = 504 (0x1f8)[$r18];;
     _32(0x7101a4ce),        //compd.eq $r0 = $r14, $r19;;
     _32(0x0880020e),        //cb.deqz $r14? 29f84 <_reclaim_reent+0xb4>;;
     _32(0x080001c0),        //cb.dnez $r0? 29f84 <_reclaim_reent+0xb4>;;
     _32(0x9ffff4ed),        //call 27320 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x7001a393),        //compd.ne $r0 = $r19, $r14;;
     _32(0x087ffec0),        //cb.dnez $r0? 29f6c <_reclaim_reent+0x9c>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38042212),        //ld $r1 = 136 (0x88)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 29f94 <_reclaim_reent+0xc4>;;
     _32(0x1ffff4e4),        //call 27320 <_free_r>;;
     _32(0x30001412),        //lwz $r0 = 80 (0x50)[$r18];;
     _32(0x0c800380),        //cb.weqz $r0? 29fd0 <_reclaim_reent+0x100>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041612),        //ld $r1 = 88 (0x58)[$r18];;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0xea000012),        //copyd $r0 = $r18
     _64(0x18000001b8044812),        //ld $r1 = 1312 (0x520)[$r18];;
     _32(0x088001c1),        //cb.deqz $r1? 29fd0 <_reclaim_reent+0x100>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffffaf),        //goto 29e88 <cleanup_glue>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _sbrk_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea000001),        //copyd $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x8000014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000de1),        //call 2d798 <_sbrk>
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 2a03c <_sbrk_r+0x54>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2a024 <_sbrk_r+0x3c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let frexp: list_I = 
 [|
     _32(0xe70fe800),        //extfz $r3 = $r0, 62 (0x3e), 32 (0x20)
     _32(0xe717f800),        //extfz $r5 = $r0, 63 (0x3f), 32 (0x20)
     _32(0xe0180000),        //make $r6 = 0 (0x0)
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0xea080003),        //copyd $r2 = $r3
     _32(0xfa0d1003),        //orw $r3 = $r3, $r0
     _64(0xa6190001f519b7c3),        //compw.gt $r6 = $r3, 2146435071 (0x7fefffff)
     _32(0x13ff7fff),        //sw 0 (0x0)[$r1] = $r6;;
     _64(0x001ffc00f8140005),        //andw $r5 = $r5, 2146435072 (0x7ff00000);;
     _32(0x0c000586),        //cb.wnez $r6? 2a0e4 <frexp+0x84>;;
     _32(0x0c800543),        //cb.weqz $r3? 2a0e4 <frexp+0x84>;;
     _32(0x8c000285),        //cb.wnez $r5? 2a0bc <frexp+0x5c>
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _64(0xe0080000e00cf280),        //make $r3 = 4294967242 (0xffffffca)
     _96(0x0a1a800088000000803fffff),        //make $r2 = 4850376798678024192 (0x4350000000000000);;
     _32(0x58017080),        //fmuld $r0 = $r0, $r2;;
     _32(0xe70be800),        //extfz $r2 = $r0, 62 (0x3e), 32 (0x20)
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0xfa0a3502),        //sraw $r2 = $r2, 20 (0x14)
     _64(0x0fe003fff810ffc4),        //andw $r4 = $r4, -2146435073 (0xffffffff800fffff);;
     _64(0xfa100004f1080082),        //addw $r2 = $r2, -1022 (0xfffffffffffffc02)
     _64(0x080ff80087ffffff),        //orw $r4 = $r4, 1071644672 (0x3fe00000);;
     _32(0xe303f804),        //insf $r0 = $r4, 63 (0x3f), 32 (0x20)
     _32(0x710910c2),        //addw $r2 = $r2, $r3;;
     _32(0x26090001),        //sw 0 (0x0)[$r1] = $r2;;
     _32(0x0fd00000)        //ret ;;
 |];

let __sread: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe90ff003),        //sxwd $r3 = $r3
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x9800093a),        //call 2c5e8 <_read_r>
     _32(0x2c040481),        //lhs $r1 = 18 (0x12)[$r1];;
     _32(0x09000240),        //cb.dltz $r0? 2a12c <__sread+0x44>;;
     _32(0x3804240e),        //ld $r1 = 144 (0x90)[$r14];;
     _32(0x71050001),        //addd $r1 = $r1, $r0;;
     _32(0x2705240e),        //sd 144 (0x90)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _64(0x07fffffbf804ffc1),        //andw $r1 = $r1, -4097 (0xffffffffffffefff);;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let __seofread: list_I = 
 [|
     _32(0x8fd00000),        //ret 
     _32(0x60000000)        //make $r0 = 0 (0x0);;
 |];

let __swrite: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0002),        //copyd $r19 = $r2
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0xf850ffc3),        //zxwd $r20 = $r3
     _32(0x27510c0c),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x280c0401),        //lhz $r3 = 16 (0x10)[$r1];;
     _32(0x2c040481),        //lhs $r1 = 18 (0x12)[$r1];;
     _32(0x78084003),        //andw $r2 = $r3, 256 (0x100);;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0x0c0003c2),        //cb.wnez $r2? 2a1cc <__swrite+0x74>;;
     _32(0xe90ff014),        //sxwd $r3 = $r20
     _32(0xea080013),        //copyd $r2 = $r19
     _32(0xea000012),        //copyd $r0 = $r18
     _64(0x1ffffffbf810ffc3),        //andw $r4 = $r3, -4097 (0xffffffffffffefff);;
     _32(0x9800059e),        //call 2b820 <_write_r>
     _32(0x2511040e),        //sh 16 (0x10)[$r14] = $r4;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9800089f),        //call 2c448 <_lseek_r>
     _32(0xe00c0002),        //make $r3 = 2 (0x2)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0x2c04048e),        //lhs $r1 = 18 (0x12)[$r14];;
     _32(0x280c040e),        //lhz $r3 = 16 (0x10)[$r14];;
     _32(0x97ffffed),        //goto 2a194 <__swrite+0x3c>
     _32(0x7804ffc1)        //zxwd $r1 = $r1;;
 |];

let __sseek: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000893),        //call 2c448 <_lseek_r>
     _32(0x2c040481),        //lhs $r1 = 18 (0x12)[$r1];;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088002c1),        //cb.deqz $r1? 2a234 <__sseek+0x4c>;;
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x2701240e),        //sd 144 (0x90)[$r14] = $r0;;
     _64(0x00000004fa040001),        //orw $r1 = $r1, 4096 (0x1000);;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _64(0x07fffffbf804ffc1),        //andw $r1 = $r1, -4097 (0xffffffffffffefff);;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let __sclose: list_I = 
 [|
     _32(0x900005c6),        //goto 2b970 <_close_r>
     _32(0x2c040481)        //lhs $r1 = 18 (0x12)[$r1];;
 |];

let strcmp: list_I = 
 [|
     _32(0x7a090040),        //ord $r2 = $r0, $r1;;
     _32(0x680801c2),        //andd $r2 = $r2, 7 (0x7);;
     _32(0x080001c2),        //cb.dnez $r2? 2a284 <strcmp+0x24>;;
     _32(0xe00c0008),        //make $r3 = 8 (0x8)
     _32(0xe114fe01),        //addd $r5 = $r1, -8 (0xfffffff8)
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _32(0x38100001),        //ld $r4 = 0 (0x0)[$r1];;
     _32(0x7111a102),        //compd.eq $r4 = $r2, $r4;;
     _32(0x08000504),        //cb.dnez $r4? 2a2d0 <strcmp+0x70>;;
     _32(0x200c0000),        //lbz $r3 = 0 (0x0)[$r0];;
     _32(0x08000143),        //cb.dnez $r3? 2a29c <strcmp+0x3c>;;
     _32(0x10000009),        //goto 2a2b0 <strcmp+0x50>;;
     _32(0xe1040041),        //addd $r1 = $r1, 1 (0x1)
     _32(0x200c0000),        //lbz $r3 = 0 (0x0)[$r0];;
     _32(0x08800683),        //cb.deqz $r3? 2a300 <strcmp+0xa0>;;
     _32(0xe8137003),        //sxbd $r4 = $r3
     _32(0xe1000040),        //addd $r0 = $r0, 1 (0x1)
     _32(0x24080001),        //lbs $r2 = 0 (0x0)[$r1];;
     _32(0x7109b102),        //compw.eq $r2 = $r2, $r4;;
     _32(0x0c7ffe42),        //cb.wnez $r2? 2a290 <strcmp+0x30>;;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x750110c0),        //sbfw $r0 = $r0, $r3;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe10c0203),        //addd $r3 = $r3, 8 (0x8)
     _32(0x380ae0c0),        //ld $r2 = $r3[$r0];;
     _32(0x3812e0c5),        //ld $r4 = $r3[$r5];;
     _32(0x7111a102),        //compd.eq $r4 = $r2, $r4;;
     _32(0x08800444),        //cb.deqz $r4? 2a310 <strcmp+0xb0>;;
     _32(0xf11900c0),        //addd $r6 = $r0, $r3
     _32(0xf11d00c1),        //addd $r7 = $r1, $r3
     _96(0x17f7f7f797bfbfbfe110bfc2),        //addd $r4 = $r2, 18374403900871474943 (0xfefefefefefefeff);;
     _32(0x7e090102),        //andnd $r2 = $r2, $r4;;
     _96(0x0404040480202020e8082002),        //andd $r2 = $r2, 9259542123273814144 (0x8080808080808080);;
     _32(0x08fffc82),        //cb.deqz $r2? 2a2bc <strcmp+0x5c>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x97ffffec),        //goto 2a2b8 <strcmp+0x58>
     _32(0x750110c0),        //sbfw $r0 = $r0, $r3;;
     _32(0x97ffffdd),        //goto 2a284 <strcmp+0x24>
     _32(0xea040007),        //copyd $r1 = $r7
     _32(0x6a000006),        //copyd $r0 = $r6;;
     _32(0x00000000)        //errop ;;
 |];

let strncpy: list_I = 
 [|
     _32(0xfa0d0001),        //ord $r3 = $r1, $r0
     _32(0xe91101c2),        //compd.gtu $r4 = $r2, 7 (0x7)
     _32(0x6a200000),        //copyd $r8 = $r0;;
     _32(0x680c01c3),        //andd $r3 = $r3, 7 (0x7);;
     _32(0x610d0003),        //compd.eq $r3 = $r3, 0 (0x0);;
     _32(0x780d1103),        //andw $r3 = $r3, $r4;;
     _32(0x0c000583),        //cb.wnez $r3? 2a390 <strncpy+0x70>;;
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xf1250088),        //addd $r9 = $r8, $r2
     _32(0x61140042),        //addd $r5 = $r2, 1 (0x1);;
     _32(0xe114ffc5),        //addd $r5 = $r5, -1 (0xffffffff)
     _32(0x6118ffc2),        //addd $r6 = $r2, -1 (0xffffffff);;
     _32(0x08000085),        //cb.dnez $r5? 2a358 <strncpy+0x38>;;
     _32(0x0fd00000),        //ret ;;
     _32(0xea080006),        //copyd $r2 = $r6
     _32(0xf5110246),        //sbfd $r4 = $r6, $r9
     _32(0x201ee0c1),        //lbz $r7 = $r3[$r1];;
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0x241fe0c8),        //sb $r3[$r8] = $r7;;
     _32(0x087ffdc7),        //cb.dnez $r7? 2a348 <strncpy+0x28>;;
     _32(0x88fffe46),        //cb.deqz $r6? 2a354 <strncpy+0x34>
     _32(0xf1050184),        //addd $r1 = $r4, $r6
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0x75050044),        //sbfd $r1 = $r4, $r1;;
     _32(0x0f0000c1),        //loopdo $r1, 2a38c <strncpy+0x6c>;;
     _32(0xe1100044),        //addd $r4 = $r4, 1 (0x1)
     _32(0x24090004),        //sb 0 (0x0)[$r4] = $r2;;
     _32(0x0fd00000),        //ret ;;
     _32(0x6114fe02),        //addd $r5 = $r2, -8 (0xfffffff8);;
     _32(0x7b1620c5),        //srld $r5 = $r5, 3 (0x3);;
     _32(0x61140045),        //addd $r5 = $r5, 1 (0x1);;
     _32(0xe114ffc5),        //addd $r5 = $r5, -1 (0xffffffff)
     _32(0x38100001),        //ld $r4 = 0 (0x0)[$r1];;
     _96(0x07f7f7f787bfbfbfe10cbfc4),        //addd $r3 = $r4, 18374403900871474943 (0xfefefefefefefeff);;
     _32(0x7e0d00c4),        //andnd $r3 = $r4, $r3;;
     _96(0x0404040480202020e80c2003),        //andd $r3 = $r3, 9259542123273814144 (0x8080808080808080);;
     _32(0x087ff7c3),        //cb.dnez $r3? 2a33c <strncpy+0x1c>;;
     _32(0x887ffd85),        //cb.dnez $r5? 2a39c <strncpy+0x7c>
     _32(0xe1200208),        //addd $r8 = $r8, 8 (0x8)
     _32(0xe108fe02),        //addd $r2 = $r2, -8 (0xfffffff8)
     _32(0xe1040201),        //addd $r1 = $r1, 8 (0x8)
     _32(0x27110008),        //sd 0 (0x0)[$r8] = $r4;;
     _32(0x17ffffd9),        //goto 2a33c <strncpy+0x1c>;;
     _32(0x00000000)        //errop ;;
 |];

let __sprint_r_part_0: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea580002),        //copyd $r22 = $r2
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0xea4c0001),        //copyd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x300c4201),        //lwz $r3 = 264 (0x108)[$r1];;
     _64(0x00000008f80c0003),        //andw $r3 = $r3, 8192 (0x2000);;
     _32(0x0c8009c3),        //cb.weqz $r3? 2a4ac <__sprint_r.part.0+0xcc>;;
     _32(0x38000402),        //ld $r0 = 16 (0x10)[$r2];;
     _32(0x385c0002),        //ld $r23 = 0 (0x0)[$r2];;
     _32(0x08800880),        //cb.deqz $r0? 2a4a4 <__sprint_r.part.0+0xc4>;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _32(0x38480217),        //ld $r18 = 8 (0x8)[$r23];;
     _32(0x38540017),        //ld $r21 = 0 (0x0)[$r23];;
     _32(0x664b1092),        //extfz $r18 = $r18, 33 (0x21), 2 (0x2);;
     _32(0x0e000652),        //cb.wlez $r18? 2a494 <__sprint_r.part.0+0xb4>;;
     _32(0x10000002),        //goto 2a43c <__sprint_r.part.0+0x5c>;;
     _32(0x0c800583),        //cb.weqz $r3? 2a490 <__sprint_r.part.0+0xb0>;;
     _32(0x98000635),        //call 2bd10 <_fputwc_r>
     _32(0xea080013),        //copyd $r2 = $r19
     _32(0xea000014),        //copyd $r0 = $r20
     _32(0x3006f395),        //lwz.xs $r1 = $r14[$r21];;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _64(0x0ffffffff101b7c0),        //compw.eq $r0 = $r0, 4294967295 (0xffffffff);;
     _32(0x750db392),        //compw.gt $r3 = $r18, $r14;;
     _32(0x0cfffdc0),        //cb.weqz $r0? 2a438 <__sprint_r.part.0+0x58>;;
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050416),        //sd 16 (0x10)[$r22] = $r1;;
     _32(0x26050216),        //sw 8 (0x8)[$r22] = $r1;;
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x38000416),        //ld $r0 = 16 (0x10)[$r22];;
     _32(0xf3018012),        //sbfx4wd $r0 = $r18, $r0
     _32(0x615c0417),        //addd $r23 = $r23, 16 (0x10);;
     _32(0x27010416),        //sd 16 (0x10)[$r22] = $r0;;
     _32(0x087ff800),        //cb.dnez $r0? 2a420 <__sprint_r.part.0+0x40>;;
     _32(0x97fffff1),        //goto 2a468 <__sprint_r.part.0+0x88>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800068f),        //call 2bee8 <__sfvwrite_r>;;
     _32(0x97ffffee),        //goto 2a468 <__sprint_r.part.0+0x88>
     _32(0x7800ffc0)        //zxwd $r0 = $r0;;
 |];

let __sprint_r: list_I = 
 [|
     _32(0x38100402),        //ld $r4 = 16 (0x10)[$r2];;
     _32(0x08800084),        //cb.deqz $r4? 2a4c4 <__sprint_r+0xc>;;
     _32(0x17ffffc8),        //goto 2a3e0 <__sprint_r.part.0>;;
     _32(0x8fd00000),        //ret 
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x26110202)        //sw 8 (0x8)[$r2] = $r4;;
 |];

let _vfiprintf_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130900c),        //addd $r12 = $r12, -448 (0xfffffe40);;
     _32(0xea7c0001),        //copyd $r31 = $r1
     _32(0xea740000),        //copyd $r29 = $r0
     _32(0xea780002),        //copyd $r30 = $r2
     _32(0x2875160c),        //so 88 (0x58)[$r12] = $r28r29r30r31;;
     _32(0xea5c0003),        //copyd $r23 = $r3
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x88800100),        //cb.deqz $r0? 2a50c <_vfiprintf_r+0x3c>
     _32(0x27411e0c),        //sd 120 (0x78)[$r12] = $r16;;
     _32(0x30041400),        //lwz $r1 = 80 (0x50)[$r0];;
     _32(0x0c806081),        //cb.weqz $r1? 2ab10 <_vfiprintf_r+0x640>;;
     _32(0x3008421f),        //lwz $r2 = 264 (0x108)[$r31];;
     _32(0x2804041f),        //lhz $r1 = 16 (0x10)[$r31];;
     _32(0x8b000142),        //cb.odd $r2? 2a528 <_vfiprintf_r+0x58>
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _64(0x00000000f8088000),        //andw $r2 = $r0, 512 (0x200);;
     _32(0x0c80dc82),        //cb.weqz $r2? 2b2ec <_vfiprintf_r+0xe1c>;;
     _64(0x00000008f8080000),        //andw $r2 = $r0, 8192 (0x2000);;
     _32(0x0c000242),        //cb.wnez $r2? 2a554 <_vfiprintf_r+0x84>;;
     _64(0xb008421fea000001),        //ord $r0 = $r1, 8192 (0x2000)
     _32(0x00000008),        //lwz $r2 = 264 (0x108)[$r31];;
     _32(0xe403f000),        //zxhd $r0 = $r0
     _32(0x2501041f),        //sh 16 (0x10)[$r31] = $r0;;
     _64(0x07fffff7f804ffc2),        //andw $r1 = $r2, -8193 (0xffffffffffffdfff);;
     _32(0x2605421f),        //sw 264 (0x108)[$r31] = $r1;;
     _32(0x78040200),        //andw $r1 = $r0, 8 (0x8);;
     _32(0x0c801dc1),        //cb.weqz $r1? 2a734 <_vfiprintf_r+0x264>;;
     _32(0x3804061f),        //ld $r1 = 24 (0x18)[$r31];;
     _32(0x08801d41),        //cb.deqz $r1? 2a734 <_vfiprintf_r+0x264>;;
     _32(0x68040680),        //andd $r1 = $r0, 26 (0x1a);;
     _64(0x00000000f005b281),        //compw.ne $r1 = $r1, 10 (0xa);;
     _32(0x0c801e81),        //cb.weqz $r1? 2a758 <_vfiprintf_r+0x288>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe14c500c),        //addd $r19 = $r12, 320 (0x140)
     _32(0x60640000),        //make $r25 = 0 (0x0);;
     _32(0xea200013),        //copyd $r8 = $r19
     _96(0xa705200ce0544600e0584a00),        //make $r22 = 313640 (0x4c928)
     _96(0x900001328800000088000132),        //make $r21 = 313624 (0x4c918)
     _32(0x10000000),        //sd 128 (0x80)[$r12] = $r1;;
     _32(0x2705260c),        //sd 152 (0x98)[$r12] = $r1;;
     _32(0x27052a0c),        //sd 168 (0xa8)[$r12] = $r1;;
     _32(0x274d300c),        //sd 192 (0xc0)[$r12] = $r19;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0xea38001e),        //copyd $r14 = $r30
     _32(0x2014001e),        //lbz $r5 = 0 (0x0)[$r30];;
     _32(0x68037005),        //sxbd $r0 = $r5;;
     _64(0xf001b000f005b140),        //compw.ne $r1 = $r0, 37 (0x25)
     _64(0x0800000080000001),        //compw.ne $r0 = $r0, 0 (0x0);;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x0c8008c0),        //cb.weqz $r0? 2a668 <_vfiprintf_r+0x198>;;
     _32(0xea48000e),        //copyd $r18 = $r14
     _32(0x6138004e),        //addd $r14 = $r14, 1 (0x1);;
     _32(0x2014000e),        //lbz $r5 = 0 (0x0)[$r14];;
     _32(0x680f7005),        //sxbd $r3 = $r5;;
     _64(0xf00db143f011b003),        //compw.ne $r4 = $r3, 0 (0x0)
     _64(0x0800000180000000),        //compw.ne $r3 = $r3, 37 (0x25);;
     _32(0x780d10c4),        //andw $r3 = $r4, $r3;;
     _32(0x0c7ffdc3),        //cb.wnez $r3? 2a5e0 <_vfiprintf_r+0x110>;;
     _32(0x7551139e),        //sbfw $r20 = $r30, $r14;;
     _32(0x6903f014),        //sxwd $r0 = $r20;;
     _32(0x08800594),        //cb.deqz $r20? 2a668 <_vfiprintf_r+0x198>;;
     _32(0xe1200408),        //addd $r8 = $r8, 16 (0x10)
     _32(0x3004320c),        //lwz $r1 = 200 (0xc8)[$r12];;
     _32(0x3808340c),        //ld $r2 = 208 (0xd0)[$r12];;
     _32(0x2701fe08),        //sd -8 (0xfffffff8)[$r8] = $r0;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2779fc08),        //sd -16 (0xfffffff0)[$r8] = $r30;;
     _32(0xf1010080),        //addd $r0 = $r0, $r2
     _64(0xa605320cf509b1c1),        //compw.gt $r2 = $r1, 7 (0x7)
     _32(0x08000000),        //sw 200 (0xc8)[$r12] = $r1;;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x0c800202),        //cb.weqz $r2? 2a660 <_vfiprintf_r+0x190>;;
     _32(0x0880c700),        //cb.deqz $r0? 2b2b4 <_vfiprintf_r+0xde4>;;
     _32(0x9fffff66),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c003a00),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0x6a200013),        //copyd $r8 = $r19;;
     _32(0xf1651519),        //addw $r25 = $r25, $r20
     _32(0x20140052),        //lbz $r5 = 1 (0x1)[$r18];;
     _32(0x08803805),        //cb.deqz $r5? 2a9e8 <_vfiprintf_r+0x518>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe178004e),        //addd $r30 = $r14, 1 (0x1)
     _64(0xa40c004ee06cffc0),        //make $r27 = 4294967295 (0xffffffff)
     _32(0x103fffff),        //lbs $r3 = 1 (0x1)[$r14];;
     _32(0xe0480000),        //make $r18 = 0 (0x0)
     _32(0xe0680000),        //make $r26 = 0 (0x0)
     _32(0xe050002b),        //make $r20 = 43 (0x2b)
     _32(0x24012c0c),        //sb 176 (0xb0)[$r12] = $r0;;
     _32(0x60380020),        //make $r14 = 32 (0x20);;
     _32(0xe178005e),        //addd $r30 = $r30, 1 (0x1)
     _32(0x780cffc3),        //zxwd $r3 = $r3;;
     _32(0x7108f803),        //addw $r2 = $r3, -32 (0xffffffe0);;
     _64(0x00000002f901b682),        //compw.gtu $r0 = $r2, 90 (0x5a);;
     _32(0x0c0005c0),        //cb.wnez $r0? 2a704 <_vfiprintf_r+0x234>;;
     _32(0xf808ffc2),        //zxwd $r2 = $r2
     _96(0x0800000088000131e0009000),        //make $r0 = 312896 (0x4c640);;
     _32(0x3802f080),        //ld.xs $r0 = $r2[$r0];;
     _32(0x0fd80000),        //igoto $r0;;
     _32(0xe0480000),        //make $r18 = 0 (0x0)
     _32(0x7100f403),        //addw $r0 = $r3, -48 (0xffffffd0);;
     _32(0xf2495492),        //addx4w $r18 = $r18, $r18
     _32(0xe178005e),        //addd $r30 = $r30, 1 (0x1)
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x70495012),        //addx2w $r18 = $r18, $r0;;
     _32(0x7848ffd2),        //zxwd $r18 = $r18;;
     _32(0xf100f403),        //addw $r0 = $r3, -48 (0xffffffd0)
     _32(0x780cffc3),        //zxwd $r3 = $r3;;
     _64(0x00000000f805b240),        //compw.leu $r1 = $r0, 9 (0x9);;
     _32(0x0c7ffdc1),        //cb.wnez $r1? 2a6cc <_vfiprintf_r+0x1fc>;;
     _32(0x7108f803),        //addw $r2 = $r3, -32 (0xffffffe0);;
     _64(0x00000002f901b682),        //compw.gtu $r0 = $r2, 90 (0x5a);;
     _32(0x0cfffac0),        //cb.weqz $r0? 2a6ac <_vfiprintf_r+0x1dc>;;
     _32(0x08802e43),        //cb.deqz $r3? 2a9e8 <_vfiprintf_r+0x518>;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe0380001),        //make $r14 = 1 (0x1)
     _32(0xe0500001),        //make $r20 = 1 (0x1)
     _32(0x240d360c),        //sb 216 (0xd8)[$r12] = $r3;;
     _32(0x90000058),        //goto 2a878 <_vfiprintf_r+0x3a8>
     _32(0xe170360c),        //addd $r28 = $r12, 216 (0xd8)
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x24012c0c),        //sb 176 (0xb0)[$r12] = $r0;;
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x97ffffda),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x7a68041a),        //orw $r26 = $r26, 16 (0x10);;
     _32(0x9fffeaff),        //call 25330 <__swsetup_r>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c00ecc0),        //cb.wnez $r0? 2b60c <_vfiprintf_r+0x113c>;;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x68040680),        //andd $r1 = $r0, 26 (0x1a);;
     _64(0x00000000f005b281),        //compw.ne $r1 = $r1, 10 (0xa);;
     _32(0x0c7fe201),        //cb.wnez $r1? 2a574 <_vfiprintf_r+0xa4>;;
     _32(0x2c04049f),        //lhs $r1 = 18 (0x12)[$r31];;
     _32(0x0d7fe181),        //cb.wltz $r1? 2a574 <_vfiprintf_r+0xa4>;;
     _32(0x3004421f),        //lwz $r1 = 264 (0x108)[$r31];;
     _32(0x0b000101),        //cb.odd $r1? 2a774 <_vfiprintf_r+0x2a4>;;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c80e5c0),        //cb.weqz $r0? 2b5cc <_vfiprintf_r+0x10fc>;;
     _32(0x980003c5),        //call 2b688 <__sbprintf>
     _32(0xea0c0017),        //copyd $r3 = $r23
     _32(0xea08001e),        //copyd $r2 = $r30
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x900000a1),        //goto 2aa0c <_vfiprintf_r+0x53c>
     _32(0x7864ffc0),        //zxwd $r25 = $r0;;
     _32(0x7a68041a),        //orw $r26 = $r26, 16 (0x10);;
     _32(0xf800081a),        //andw $r0 = $r26, 32 (0x20)
     _32(0x61040217),        //addd $r1 = $r23, 8 (0x8);;
     _32(0x0c802e00),        //cb.weqz $r0? 2aa7c <_vfiprintf_r+0x5ac>;;
     _32(0x38000017),        //ld $r0 = 0 (0x0)[$r23];;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x09002f00),        //cb.dltz $r0? 2aa98 <_vfiprintf_r+0x5c8>;;
     _32(0xea60001a),        //copyd $r24 = $r26
     _32(0xea5c0001),        //copyd $r23 = $r1
     _32(0xe0090004),        //compd.ne $r2 = $r4, 0 (0x0)
     _64(0x1ffffffff001b7db),        //compw.ne $r0 = $r27, 4294967295 (0xffffffff);;
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xe1704f0c),        //addd $r28 = $r12, 316 (0x13c)
     _64(0x103fffffe868dfda),        //andd $r26 = $r26, 4294967167 (0xffffff7f);;
     _32(0x0c80ac40),        //cb.weqz $r0? 2b294 <_vfiprintf_r+0xdc4>;;
     _64(0x00000000f001b01b),        //compw.ne $r0 = $r27, 0 (0x0);;
     _32(0x7a011080),        //orw $r0 = $r0, $r2;;
     _32(0x0c00ab00),        //cb.wnez $r0? 2b290 <_vfiprintf_r+0xdc0>;;
     _32(0x90000020),        //goto 2a864 <_vfiprintf_r+0x394>
     _32(0x606c0000),        //make $r27 = 0 (0x0);;
     _32(0x7a68041a),        //orw $r26 = $r26, 16 (0x10);;
     _32(0xf800081a),        //andw $r0 = $r26, 32 (0x20)
     _32(0x61040217),        //addd $r1 = $r23, 8 (0x8);;
     _32(0x0c802580),        //cb.weqz $r0? 2aa50 <_vfiprintf_r+0x580>;;
     _32(0x38100017),        //ld $r4 = 0 (0x0)[$r23];;
     _32(0xea5c0001),        //copyd $r23 = $r1
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _64(0x103ffffee860ffda),        //andd $r24 = $r26, 4294966271 (0xfffffbff);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0xa4012c0cf101b7db),        //compw.eq $r0 = $r27, 4294967295 (0xffffffff)
     _32(0x07ffffff),        //sb 176 (0xb0)[$r12] = $r0;;
     _32(0x0c0029c0),        //cb.wnez $r0? 2aabc <_vfiprintf_r+0x5ec>;;
     _32(0xe0090004),        //compd.ne $r2 = $r4, 0 (0x0)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _64(0xe868dfd8f001b01b),        //compw.ne $r0 = $r27, 0 (0x0)
     _64(0x183fffff90000000),        //andd $r26 = $r24, 4294967167 (0xffffff7f);;
     _32(0xfa011080),        //orw $r0 = $r0, $r2
     _32(0x61704f0c),        //addd $r28 = $r12, 316 (0x13c);;
     _32(0x0c00aa00),        //cb.wnez $r0? 2b2e4 <_vfiprintf_r+0xe14>;;
     _32(0x880001c1),        //cb.dnez $r1? 2a864 <_vfiprintf_r+0x394>
     _32(0x606c0000),        //make $r27 = 0 (0x0);;
     _32(0x8b800158),        //cb.even $r24? 2a864 <_vfiprintf_r+0x394>
     _32(0x68500058),        //andd $r20 = $r24, 1 (0x1);;
     _32(0xe0000030),        //make $r0 = 48 (0x30)
     _32(0x61704ecc),        //addd $r28 = $r12, 315 (0x13b);;
     _32(0x24014ecc),        //sb 315 (0x13b)[$r12] = $r0;;
     _32(0xf301151b),        //maxw $r0 = $r27, $r20
     _32(0x24042c0c),        //lbs $r1 = 176 (0xb0)[$r12];;
     _32(0xf1380040),        //addw $r14 = $r0, 1 (0x1)
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x793a0001),        //cmoved.weqz $r1? $r14 = $r0;;
     _32(0xe804211a),        //andd $r1 = $r26, 132 (0x84)
     _32(0xf800009a),        //andw $r0 = $r26, 2 (0x2)
     _32(0xf108008e),        //addw $r2 = $r14, 2 (0x2)
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0xf83a0080),        //cmoved.wnez $r0? $r14 = $r2
     _32(0xf844ffc0),        //zxwd $r17 = $r0
     _32(0xf860211a),        //andw $r24 = $r26, 132 (0x84)
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x88000181),        //cb.dnez $r1? 2a8b0 <_vfiprintf_r+0x3e0>
     _32(0xf11c0044),        //addw $r7 = $r4, 1 (0x1)
     _32(0x71080044),        //addw $r2 = $r4, 1 (0x1);;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x7519148e),        //sbfw $r6 = $r14, $r18;;
     _32(0x0e807e00),        //cb.wgtz $r0? 2b08c <_vfiprintf_r+0xbbc>;;
     _32(0xe1180408),        //addd $r6 = $r8, 16 (0x10)
     _32(0x24002c0c),        //lbs $r0 = 176 (0xb0)[$r12];;
     _32(0x0c8003c0),        //cb.weqz $r0? 2a8f4 <_vfiprintf_r+0x424>;;
     _32(0xe10c0043),        //addd $r3 = $r3, 1 (0x1)
     _32(0xe1082c0c),        //addd $r2 = $r12, 176 (0xb0)
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _64(0x18000000f501b1c7),        //compw.gt $r0 = $r7, 7 (0x7);;
     _32(0x261d320c),        //sw 200 (0xc8)[$r12] = $r7;;
     _32(0x27090008),        //sd 0 (0x0)[$r8] = $r2;;
     _32(0x27050208),        //sd 8 (0x8)[$r8] = $r1;;
     _32(0x8c007480),        //cb.wnez $r0? 2b024 <_vfiprintf_r+0xb54>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0xea100007),        //copyd $r4 = $r7
     _32(0xea200006),        //copyd $r8 = $r6
     _32(0xf11c0047),        //addw $r7 = $r7, 1 (0x1)
     _32(0x61180406),        //addd $r6 = $r6, 16 (0x10);;
     _32(0x08800691),        //cb.deqz $r17? 2a95c <_vfiprintf_r+0x48c>;;
     _32(0xe10c0083),        //addd $r3 = $r3, 2 (0x2)
     _32(0xe1082e0c),        //addd $r2 = $r12, 184 (0xb8)
     _32(0xe0040002),        //make $r1 = 2 (0x2)
     _64(0x18000000f501b1c7),        //compw.gt $r0 = $r7, 7 (0x7);;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0x27090008),        //sd 0 (0x0)[$r8] = $r2;;
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x27050208),        //sd 8 (0x8)[$r8] = $r1;;
     _32(0x261d320c),        //sw 200 (0xc8)[$r12] = $r7;;
     _32(0x8c807500),        //cb.weqz $r0? 2b078 <_vfiprintf_r+0xba8>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x888002c3),        //cb.deqz $r3? 2a95c <_vfiprintf_r+0x48c>
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0x601c0001),        //make $r7 = 1 (0x1);;
     _32(0x9ffffea9),        //call 2a3e0 <__sprint_r.part.0>
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c000b40),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x711c0044),        //addw $r7 = $r4, 1 (0x1);;
     _64(0x00000004f061b018),        //compw.ne $r24 = $r24, 128 (0x80);;
     _32(0x0c804958),        //cb.weqz $r24? 2adf8 <_vfiprintf_r+0x928>;;
     _32(0xf50116d4),        //sbfw $r0 = $r20, $r27
     _32(0x756d16d4),        //sbfw $r27 = $r20, $r27;;
     _32(0x0e805ac0),        //cb.wgtz $r0? 2af1c <_vfiprintf_r+0xa4c>;;
     _32(0xe953f014),        //sxwd $r20 = $r20
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _64(0xa7710008f401b1c7),        //compw.le $r0 = $r7, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r8] = $r28;;
     _32(0xf10d00d4),        //addd $r3 = $r20, $r3
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x261d320c),        //sw 200 (0xc8)[$r12] = $r7;;
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x8c000200),        //cb.wnez $r0? 2a9b8 <_vfiprintf_r+0x4e8>
     _32(0x27510208),        //sd 8 (0x8)[$r8] = $r20;;
     _32(0x08807f43),        //cb.deqz $r3? 2b194 <_vfiprintf_r+0xcc4>;;
     _32(0x9ffffe8f),        //call 2a3e0 <__sprint_r.part.0>
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c0004c0),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xea180013),        //copyd $r6 = $r19
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x7828011a),        //andw $r10 = $r26, 4 (0x4);;
     _32(0x0c80010a),        //cb.weqz $r10? 2a9cc <_vfiprintf_r+0x4fc>;;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x7551148e),        //sbfw $r20 = $r14, $r18;;
     _32(0x0e807e80),        //cb.wgtz $r0? 2b1b0 <_vfiprintf_r+0xce0>;;
     _32(0x73391392),        //maxw $r14 = $r18, $r14;;
     _32(0x880063c3),        //cb.dnez $r3? 2b00c <_vfiprintf_r+0xb3c>
     _32(0x7165164e),        //addw $r25 = $r14, $r25;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x6a200013),        //copyd $r8 = $r19;;
     _32(0x97fffef7),        //goto 2a5bc <_vfiprintf_r+0xec>
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x3800340c),        //ld $r0 = 208 (0xd0)[$r12];;
     _32(0x0800bf40),        //cb.dnez $r0? 2b5e0 <_vfiprintf_r+0x1110>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x3004421f),        //lwz $r1 = 264 (0x108)[$r31];;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x0b800341),        //cb.even $r1? 2aa34 <_vfiprintf_r+0x564>;;
     _32(0x78001000),        //andw $r0 = $r0, 64 (0x40);;
     _32(0x0c00c240),        //cb.wnez $r0? 2b62c <_vfiprintf_r+0x115c>;;
     _32(0xfa000019),        //copyw $r0 = $r25
     _32(0x38401e0c),        //ld $r16 = 120 (0x78)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130700c),        //addd $r12 = $r12, 448 (0x1c0)
     _32(0x3c74160c),        //lo $r28r29r30r31 = 88 (0x58)[$r12];;
     _64(0x00000000f8048000),        //andw $r1 = $r0, 512 (0x200);;
     _32(0x0c7ffc81),        //cb.wnez $r1? 2aa04 <_vfiprintf_r+0x534>;;
     _32(0x9ffff45e),        //call 27bb8 <__libc_lock_release>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x97ffffef),        //goto 2aa04 <_vfiprintf_r+0x534>
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _32(0x7800041a),        //andw $r0 = $r26, 16 (0x10);;
     _32(0x0c7fda80),        //cb.wnez $r0? 2a7fc <_vfiprintf_r+0x32c>;;
     _32(0xf808101a),        //andw $r2 = $r26, 64 (0x40)
     _64(0xb0000017f80c801a),        //andw $r3 = $r26, 512 (0x200)
     _32(0x08000000),        //lwz $r0 = 0 (0x0)[$r23];;
     _32(0xe413f000),        //zxhd $r4 = $r0
     _32(0x78183fc0),        //zxbd $r6 = $r0;;
     _32(0x78020183),        //cmoved.wnez $r3? $r0 = $r6;;
     _32(0x97ffff63),        //goto 2a800 <_vfiprintf_r+0x330>
     _32(0x79120002),        //cmoved.weqz $r2? $r4 = $r0;;
     _32(0x7800041a),        //andw $r0 = $r26, 16 (0x10);;
     _32(0x0c7fd200),        //cb.wnez $r0? 2a7a0 <_vfiprintf_r+0x2d0>;;
     _32(0x7800101a),        //andw $r0 = $r26, 64 (0x40);;
     _32(0x0c80af80),        //cb.weqz $r0? 2b580 <_vfiprintf_r+0x10b0>;;
     _32(0x2c100017),        //lhs $r4 = 0 (0x0)[$r23];;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x09ffd180),        //cb.dgez $r0? 2a7ac <_vfiprintf_r+0x2dc>;;
     _32(0xe000002d),        //make $r0 = 45 (0x2d)
     _32(0xea5c0001),        //copyd $r23 = $r1
     _32(0xe5100004),        //negd $r4 = $r4
     _32(0x6a60001a),        //copyd $r24 = $r26;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _64(0xa4012c0cf101b7db),        //compw.eq $r0 = $r27, 4294967295 (0xffffffff)
     _32(0x0fffffff),        //sb 176 (0xb0)[$r12] = $r0;;
     _32(0x0cffd6c0),        //cb.weqz $r0? 2a824 <_vfiprintf_r+0x354>;;
     _32(0xe1704f0c),        //addd $r28 = $r12, 316 (0x13c)
     _64(0xf105b081f101b041),        //compw.eq $r0 = $r1, 1 (0x1)
     _64(0x1000000088000000),        //compw.eq $r1 = $r1, 2 (0x2);;
     _32(0x0c007c40),        //cb.wnez $r0? 2b294 <_vfiprintf_r+0xdc4>;;
     _32(0x0c002e81),        //cb.wnez $r1? 2adbc <_vfiprintf_r+0x8ec>;;
     _32(0xe80001c4),        //andd $r0 = $r4, 7 (0x7)
     _32(0xfb1220c4),        //srld $r4 = $r4, 3 (0x3)
     _32(0xea04001c),        //copyd $r1 = $r28
     _32(0x6170ffdc),        //addd $r28 = $r28, -1 (0xffffffff);;
     _32(0x61000c00),        //addd $r0 = $r0, 48 (0x30);;
     _32(0x887ffec4),        //cb.dnez $r4? 2aad8 <_vfiprintf_r+0x608>
     _32(0x2401001c),        //sb 0 (0x0)[$r28] = $r0;;
     _32(0x60010c00),        //compd.ne $r0 = $r0, 48 (0x30);;
     _32(0x78011600),        //andw $r0 = $r0, $r24;;
     _32(0x0c008180),        //cb.wnez $r0? 2b314 <_vfiprintf_r+0xe44>;;
     _32(0xe1004f0c),        //addd $r0 = $r12, 316 (0x13c)
     _32(0x6a680018),        //copyd $r26 = $r24;;
     _32(0x97ffff57),        //goto 2a864 <_vfiprintf_r+0x394>
     _32(0x7551101c),        //sbfw $r20 = $r28, $r0;;
     _32(0x1ffff0ee),        //call 26ec8 <__sinit>;;
     _32(0x17fffe7e),        //goto 2a50c <_vfiprintf_r+0x3c>;;
     _32(0xe90bf01b),        //sxwd $r2 = $r27
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0xe15c0217),        //addd $r23 = $r23, 8 (0x8)
     _32(0x38700017),        //ld $r28 = 0 (0x0)[$r23];;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xea50001b),        //copyd $r20 = $r27
     _64(0xa4012c0cf101b7db),        //compw.eq $r0 = $r27, 4294967295 (0xffffffff)
     _32(0x17ffffff),        //sb 176 (0xb0)[$r12] = $r0;;
     _32(0x0880a0dc),        //cb.deqz $r28? 2b548 <_vfiprintf_r+0x1078>;;
     _32(0x8c008900),        //cb.wnez $r0? 2b3d0 <_vfiprintf_r+0xf00>
     _32(0x2721220c),        //sd 136 (0x88)[$r12] = $r8;;
     _32(0x9ffff74c),        //call 28878 <memchr>
     _32(0x6a00001c),        //copyd $r0 = $r28;;
     _32(0x88ffd140),        //cb.deqz $r0? 2a864 <_vfiprintf_r+0x394>
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x3820220c),        //ld $r8 = 136 (0x88)[$r12];;
     _32(0x97ffff42),        //goto 2a864 <_vfiprintf_r+0x394>
     _32(0xf551101c),        //sbfw $r20 = $r28, $r0
     _32(0x606c0000),        //make $r27 = 0 (0x0);;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0xe15c0217),        //addd $r23 = $r23, 8 (0x8)
     _32(0xe0380001),        //make $r14 = 1 (0x1)
     _32(0x30000017),        //lwz $r0 = 0 (0x0)[$r23];;
     _32(0xe0500001),        //make $r20 = 1 (0x1)
     _32(0xe170360c),        //addd $r28 = $r12, 216 (0xd8)
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x24052c0c),        //sb 176 (0xb0)[$r12] = $r1;;
     _32(0x97ffff3c),        //goto 2a878 <_vfiprintf_r+0x3a8>
     _32(0x2401360c),        //sb 216 (0xd8)[$r12] = $r0;;
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _64(0x00000003f001b303),        //compw.ne $r0 = $r3, 108 (0x6c);;
     _32(0x0c7fb900),        //cb.wnez $r0? 2a72c <_vfiprintf_r+0x25c>;;
     _32(0xfa68081a),        //orw $r26 = $r26, 32 (0x20)
     _32(0xe178005e),        //addd $r30 = $r30, 1 (0x1)
     _32(0x2000005e),        //lbz $r0 = 1 (0x1)[$r30];;
     _32(0x97fffeba),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x680f7000),        //sxbd $r3 = $r0;;
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _64(0x00000003f001b203),        //compw.ne $r0 = $r3, 104 (0x68);;
     _32(0x0c809700),        //cb.weqz $r0? 2b530 <_vfiprintf_r+0x1060>;;
     _32(0x97fffeb4),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x7a68101a),        //orw $r26 = $r26, 64 (0x40);;
     _32(0x7a60041a),        //orw $r24 = $r26, 16 (0x10);;
     _32(0xf8000818),        //andw $r0 = $r24, 32 (0x20)
     _32(0x61080217),        //addd $r2 = $r23, 8 (0x8);;
     _32(0x0c000280),        //cb.wnez $r0? 2ac00 <_vfiprintf_r+0x730>;;
     _32(0x78000418),        //andw $r0 = $r24, 16 (0x10);;
     _32(0x0c000200),        //cb.wnez $r0? 2ac00 <_vfiprintf_r+0x730>;;
     _32(0xf8001018),        //andw $r0 = $r24, 64 (0x40)
     _32(0x30100017),        //lwz $r4 = 0 (0x0)[$r23];;
     _32(0x0c809780),        //cb.weqz $r0? 2b564 <_vfiprintf_r+0x1094>;;
     _32(0x97ffff08),        //goto 2a810 <_vfiprintf_r+0x340>
     _32(0xe413f004),        //zxhd $r4 = $r4
     _32(0xea5c0002),        //copyd $r23 = $r2
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x97ffff04),        //goto 2a810 <_vfiprintf_r+0x340>
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xea5c0002),        //copyd $r23 = $r2
     _32(0x38100017),        //ld $r4 = 0 (0x0)[$r23];;
     _32(0x97fffea1),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0xfa68201a),        //orw $r26 = $r26, 128 (0x80)
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0xe104005e),        //addd $r1 = $r30, 1 (0x1)
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0xf80cffc3),        //zxwd $r3 = $r3
     _64(0x08000001f101b283),        //compw.eq $r0 = $r3, 42 (0x2a);;
     _32(0x7160f403),        //addw $r24 = $r3, -48 (0xffffffd0);;
     _32(0x0c00a080),        //cb.wnez $r0? 2b640 <_vfiprintf_r+0x1170>;;
     _32(0xf100f403),        //addw $r0 = $r3, -48 (0xffffffd0)
     _32(0x6a780001),        //copyd $r30 = $r1;;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0cffa500),        //cb.weqz $r0? 2a69c <_vfiprintf_r+0x1cc>;;
     _32(0xf21556db),        //addx4w $r5 = $r27, $r27
     _32(0xe178005e),        //addd $r30 = $r30, 1 (0x1)
     _32(0x2404001e),        //lbs $r1 = 0 (0x0)[$r30];;
     _32(0x70155605),        //addx2w $r5 = $r5, $r24;;
     _32(0x786cffc5),        //zxwd $r27 = $r5;;
     _32(0xf100f401),        //addw $r0 = $r1, -48 (0xffffffd0)
     _32(0xf160f401),        //addw $r24 = $r1, -48 (0xffffffd0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffd80),        //cb.wnez $r0? 2ac50 <_vfiprintf_r+0x780>;;
     _32(0x17fffe88),        //goto 2a69c <_vfiprintf_r+0x1cc>;;
     _32(0x2000001e),        //lbz $r0 = 0 (0x0)[$r30];;
     _32(0x97fffe84),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0xe80f7000),        //sxbd $r3 = $r0
     _32(0x7a68011a),        //orw $r26 = $r26, 4 (0x4);;
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x97fffe80),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x24512c0c),        //sb 176 (0xb0)[$r12] = $r20;;
     _32(0xe15c0217),        //addd $r23 = $r23, 8 (0x8)
     _32(0x30480017),        //lwz $r18 = 0 (0x0)[$r23];;
     _32(0x2000001e),        //lbz $r0 = 0 (0x0)[$r30];;
     _32(0x8dff9ed2),        //cb.wgez $r18? 2a694 <_vfiprintf_r+0x1c4>
     _32(0x680f7000),        //sxbd $r3 = $r0;;
     _32(0x75480012),        //negw $r18 = $r18;;
     _32(0x97fffff4),        //goto 2ac84 <_vfiprintf_r+0x7b4>
     _32(0x7848ffd2),        //zxwd $r18 = $r18;;
     _32(0x9ffff2e7),        //call 27858 <_localeconv_r>
     _32(0xea00001d),        //copyd $r0 = $r29
     _32(0x2721220c),        //sd 136 (0x88)[$r12] = $r8;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x9fffdff1),        //call 22c90 <strlen>
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x9ffff2df),        //call 27858 <_localeconv_r>
     _32(0xea600001),        //copyd $r24 = $r1
     _32(0x27052a0c),        //sd 168 (0xa8)[$r12] = $r1;;
     _32(0xe0050018),        //compd.ne $r1 = $r24, 0 (0x0)
     _32(0x38080400),        //ld $r2 = 16 (0x10)[$r0];;
     _32(0x3820220c),        //ld $r8 = 136 (0x88)[$r12];;
     _32(0x2709260c),        //sd 152 (0x98)[$r12] = $r2;;
     _32(0x60010002),        //compd.ne $r0 = $r2, 0 (0x0);;
     _32(0x78051001),        //andw $r1 = $r1, $r0;;
     _32(0x0c806341),        //cb.weqz $r1? 2b334 <_vfiprintf_r+0xe64>;;
     _32(0xea28001a),        //copyd $r10 = $r26
     _64(0xa4040002fa00001a),        //orw $r0 = $r26, 1024 (0x400)
     _32(0x08000001),        //lbs $r1 = 0 (0x0)[$r2];;
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x782a0001),        //cmoved.wnez $r1? $r10 = $r0;;
     _32(0x97fffe5e),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x6a68000a),        //copyd $r26 = $r10;;
     _32(0x97fffe5c),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0xfa68005a),        //orw $r26 = $r26, 1 (0x1)
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x24002c0c),        //lbs $r0 = 176 (0xb0)[$r12];;
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x0c7f95c0),        //cb.wnez $r0? 2a694 <_vfiprintf_r+0x1c4>;;
     _32(0x97fffe56),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x24392c0c),        //sb 176 (0xb0)[$r12] = $r14;;
     _32(0x97fffe54),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0xfa68081a),        //orw $r26 = $r26, 32 (0x20)
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0xe0007830),        //make $r0 = 30768 (0x7830)
     _32(0xfa60009a),        //orw $r24 = $r26, 2 (0x2)
     _96(0x90000134b8100017e0048600),        //make $r1 = 315928 (0x4d218)
     _32(0x10000000),        //ld $r4 = 0 (0x0)[$r23];;
     _32(0xe15c0217),        //addd $r23 = $r23, 8 (0x8)
     _32(0xe0040002),        //make $r1 = 2 (0x2)
     _32(0x2705200c),        //sd 128 (0x80)[$r12] = $r1;;
     _32(0x97fffea7),        //goto 2a810 <_vfiprintf_r+0x340>
     _32(0x25012e0c),        //sh 184 (0xb8)[$r12] = $r0;;
     _32(0xf800081a),        //andw $r0 = $r26, 32 (0x20)
     _32(0xe15c0217),        //addd $r23 = $r23, 8 (0x8)
     _32(0x38040017),        //ld $r1 = 0 (0x0)[$r23];;
     _32(0x0c000280),        //cb.wnez $r0? 2adb0 <_vfiprintf_r+0x8e0>;;
     _32(0x7800041a),        //andw $r0 = $r26, 16 (0x10);;
     _32(0x0c000200),        //cb.wnez $r0? 2adb0 <_vfiprintf_r+0x8e0>;;
     _32(0x7800101a),        //andw $r0 = $r26, 64 (0x40);;
     _32(0x0c008200),        //cb.wnez $r0? 2b5b8 <_vfiprintf_r+0x10e8>;;
     _64(0x00000000f828801a),        //andw $r10 = $r26, 512 (0x200);;
     _32(0x0c80894a),        //cb.weqz $r10? 2b638 <_vfiprintf_r+0x1168>;;
     _32(0x97fffe05),        //goto 2a5bc <_vfiprintf_r+0xec>
     _32(0x24650001),        //sb 0 (0x0)[$r1] = $r25;;
     _32(0x6903f019),        //sxwd $r0 = $r25;;
     _32(0x97fffe02),        //goto 2a5bc <_vfiprintf_r+0xec>
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _32(0xe80003c4),        //andd $r0 = $r4, 15 (0xf)
     _32(0xfb122104),        //srld $r4 = $r4, 4 (0x4)
     _32(0xe170ffdc),        //addd $r28 = $r28, -1 (0xffffffff)
     _32(0x3804200c),        //ld $r1 = 128 (0x80)[$r12];;
     _32(0x2002e001),        //lbz $r0 = $r0[$r1];;
     _32(0x88ffd304),        //cb.deqz $r4? 2ab00 <_vfiprintf_r+0x630>
     _32(0x2401001c),        //sb 0 (0x0)[$r28] = $r0;;
     _32(0xe80003c4),        //andd $r0 = $r4, 15 (0xf)
     _32(0xfb122104),        //srld $r4 = $r4, 4 (0x4)
     _32(0xe170ffdc),        //addd $r28 = $r28, -1 (0xffffffff)
     _32(0x3804200c),        //ld $r1 = 128 (0x80)[$r12];;
     _32(0x2002e001),        //lbz $r0 = $r0[$r1];;
     _32(0x887ffd04),        //cb.dnez $r4? 2adbc <_vfiprintf_r+0x8ec>
     _32(0x2401001c),        //sb 0 (0x0)[$r28] = $r0;;
     _32(0x17ffff43),        //goto 2ab00 <_vfiprintf_r+0x630>;;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x7561148e),        //sbfw $r24 = $r14, $r18;;
     _32(0x0e7fb680),        //cb.wlez $r0? 2a968 <_vfiprintf_r+0x498>;;
     _64(0x00000000f401b400),        //compw.le $r0 = $r0, 16 (0x10);;
     _32(0x0c007f40),        //cb.wnez $r0? 2b600 <_vfiprintf_r+0x1130>;;
     _32(0x9000000a),        //goto 2ae38 <_vfiprintf_r+0x968>
     _32(0x60180010),        //make $r6 = 16 (0x10);;
     _32(0xf1040084),        //addw $r1 = $r4, 2 (0x2)
     _32(0xe1200408),        //addd $r8 = $r8, 16 (0x10)
     _32(0x6a100002),        //copyd $r4 = $r2;;
     _32(0x7108fc18),        //addw $r2 = $r24, -16 (0xfffffff0);;
     _32(0xf860ffc2),        //zxwd $r24 = $r2
     _64(0x08000000f501b402),        //compw.gt $r0 = $r2, 16 (0x10);;
     _32(0x0c800780),        //cb.weqz $r0? 2aeac <_vfiprintf_r+0x9dc>;;
     _32(0xf1000044),        //addw $r0 = $r4, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xf1080044),        //addw $r2 = $r4, 1 (0x1)
     _32(0x27550008),        //sd 0 (0x0)[$r8] = $r21;;
     _64(0xa7190208f505b1c0),        //compw.gt $r1 = $r0, 7 (0x7)
     _32(0x00000000),        //sd 8 (0x8)[$r8] = $r6;;
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x8cfffc01),        //cb.weqz $r1? 2ae18 <_vfiprintf_r+0x948>
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x88fffc43),        //cb.deqz $r3? 2ae24 <_vfiprintf_r+0x954>
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x9ffffd5c),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c7fb780),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xf108fc18),        //addw $r2 = $r24, -16 (0xfffffff0)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0xe0180010),        //make $r6 = 16 (0x10)
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0xf860ffc2),        //zxwd $r24 = $r2
     _64(0xb80c340cf501b402),        //compw.gt $r0 = $r2, 16 (0x10)
     _32(0x08000000),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x8c7ff940),        //cb.wnez $r0? 2ae38 <_vfiprintf_r+0x968>
     _32(0x71040044),        //addw $r1 = $r4, 1 (0x1);;
     _32(0x61440408),        //addd $r17 = $r8, 16 (0x10);;
     _32(0xe90bf018),        //sxwd $r2 = $r24
     _64(0xa7550008f501b1c1),        //compw.gt $r0 = $r1, 7 (0x7)
     _32(0x08000000),        //sd 0 (0x0)[$r8] = $r21;;
     _32(0xf10d0083),        //addd $r3 = $r3, $r2
     _32(0x2605320c),        //sw 200 (0xc8)[$r12] = $r1;;
     _32(0x27090208),        //sd 8 (0x8)[$r8] = $r2;;
     _32(0x8c804340),        //cb.weqz $r0? 2b300 <_vfiprintf_r+0xe30>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x88ffa943),        //cb.deqz $r3? 2a968 <_vfiprintf_r+0x498>
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0x6a200013),        //copyd $r8 = $r19;;
     _32(0x9ffffd3e),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c7fb000),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xf50116d4),        //sbfw $r0 = $r20, $r27
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0xf56d16d4),        //sbfw $r27 = $r20, $r27
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x8e7fa600),        //cb.wlez $r0? 2a974 <_vfiprintf_r+0x4a4>
     _32(0x711c0044),        //addw $r7 = $r4, 1 (0x1);;
     _32(0xe0600010),        //make $r24 = 16 (0x10)
     _64(0x08000000f401b400),        //compw.le $r0 = $r0, 16 (0x10);;
     _32(0x0c006700),        //cb.wnez $r0? 2b598 <_vfiprintf_r+0x10c8>;;
     _32(0xf1140044),        //addw $r5 = $r4, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xf1040044),        //addw $r1 = $r4, 1 (0x1)
     _32(0x27550008),        //sd 0 (0x0)[$r8] = $r21;;
     _32(0xf11c0084),        //addw $r7 = $r4, 2 (0x2)
     _32(0xe1200408),        //addd $r8 = $r8, 16 (0x10)
     _64(0xa7610208f509b1c5),        //compw.gt $r2 = $r5, 7 (0x7)
     _32(0x10000000),        //sd 8 (0x8)[$r8] = $r24;;
     _32(0xea100001),        //copyd $r4 = $r1
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x8c8003c2),        //cb.weqz $r2? 2af94 <_vfiprintf_r+0xac4>
     _32(0x2615320c),        //sw 200 (0xc8)[$r12] = $r5;;
     _32(0x88800343),        //cb.deqz $r3? 2af94 <_vfiprintf_r+0xac4>
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0x6a200013),        //copyd $r8 = $r19;;
     _32(0x9ffffd1c),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c7fa780),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x711c0044),        //addw $r7 = $r4, 1 (0x1);;
     _32(0x7114fc1b),        //addw $r5 = $r27, -16 (0xfffffff0);;
     _32(0xf86cffc5),        //zxwd $r27 = $r5
     _64(0x08000000f509b405),        //compw.gt $r2 = $r5, 16 (0x10);;
     _32(0x0c7ff882),        //cb.wnez $r2? 2af2c <_vfiprintf_r+0xa5c>;;
     _32(0x61040408),        //addd $r1 = $r8, 16 (0x10);;
     _32(0xe917f01b),        //sxwd $r5 = $r27
     _32(0xe1180401),        //addd $r6 = $r1, 16 (0x10)
     _64(0xa7550008f501b1c7),        //compw.gt $r0 = $r7, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r8] = $r21;;
     _32(0xf10d0143),        //addd $r3 = $r3, $r5
     _32(0xf11c0047),        //addw $r7 = $r7, 1 (0x1)
     _32(0x261d320c),        //sw 200 (0xc8)[$r12] = $r7;;
     _32(0xea200001),        //copyd $r8 = $r1
     _32(0x27150208),        //sd 8 (0x8)[$r8] = $r5;;
     _32(0x8cff9a00),        //cb.weqz $r0? 2a974 <_vfiprintf_r+0x4a4>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x08804583),        //cb.deqz $r3? 2b434 <_vfiprintf_r+0xf64>;;
     _32(0x9ffffd00),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c7fa080),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x301c320c),        //lwz $r7 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x97fffe5c),        //goto 2a974 <_vfiprintf_r+0x4a4>
     _32(0x711c0047),        //addw $r7 = $r7, 1 (0x1);;
     _32(0x9ffffcf5),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0cff9bc0),        //cb.weqz $r0? 2a9d8 <_vfiprintf_r+0x508>;;
     _32(0x17fffe76),        //goto 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0x088029c3),        //cb.deqz $r3? 2b2c0 <_vfiprintf_r+0xdf0>;;
     _32(0x9ffffcee),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001d),        //copyd $r0 = $r29
     _32(0x2745220c),        //sd 136 (0x88)[$r12] = $r17;;
     _32(0x0c7f9bc0),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x3844220c),        //ld $r17 = 136 (0x88)[$r12];;
     _32(0x97fffe28),        //goto 2a8f4 <_vfiprintf_r+0x424>
     _32(0x711c0044),        //addw $r7 = $r4, 1 (0x1);;
     _32(0xe1042e0c),        //addd $r1 = $r12, 184 (0xb8)
     _32(0xe0000002),        //make $r0 = 2 (0x2)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x6118540c),        //addd $r6 = $r12, 336 (0x150);;
     _32(0xe00c0002),        //make $r3 = 2 (0x2)
     _32(0x2705500c),        //sd 320 (0x140)[$r12] = $r1;;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0xea100007),        //copyd $r4 = $r7
     _32(0x6a200006),        //copyd $r8 = $r6;;
     _32(0x97fffe37),        //goto 2a95c <_vfiprintf_r+0x48c>
     _32(0xf11c0044),        //addw $r7 = $r4, 1 (0x1)
     _32(0x61180408),        //addd $r6 = $r8, 16 (0x10);;
     _64(0x00000000f401b400),        //compw.le $r0 = $r0, 16 (0x10);;
     _32(0x0c005440),        //cb.wnez $r0? 2b5d8 <_vfiprintf_r+0x1108>;;
     _32(0x90000003),        //goto 2b0a4 <_vfiprintf_r+0xbd4>
     _32(0x601c0010),        //make $r7 = 16 (0x10);;
     _32(0x71080044),        //addw $r2 = $r4, 1 (0x1);;
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xf804ffc2),        //zxwd $r1 = $r2
     _64(0xa7590008f501b1c2),        //compw.gt $r0 = $r2, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r8] = $r22;;
     _32(0xe1200408),        //addd $r8 = $r8, 16 (0x10)
     _32(0x271d0208),        //sd 8 (0x8)[$r8] = $r7;;
     _32(0xf1080084),        //addw $r2 = $r4, 2 (0x2)
     _32(0xea100001),        //copyd $r4 = $r1
     _32(0x2609320c),        //sw 200 (0xc8)[$r12] = $r2;;
     _32(0x8c800500),        //cb.weqz $r0? 2b11c <_vfiprintf_r+0xc4c>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x88800483),        //cb.deqz $r3? 2b11c <_vfiprintf_r+0xc4c>
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001d),        //copyd $r0 = $r29
     _32(0x2719240c),        //sd 144 (0x90)[$r12] = $r6;;
     _32(0x9ffffcbb),        //call 2a3e0 <__sprint_r.part.0>
     _32(0x2745220c),        //sd 136 (0x88)[$r12] = $r17;;
     _32(0x0c7f8fc0),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0xe01c0010),        //make $r7 = 16 (0x10)
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x3818240c),        //ld $r6 = 144 (0x90)[$r12];;
     _32(0xf1080044),        //addw $r2 = $r4, 1 (0x1)
     _32(0x3844220c),        //ld $r17 = 136 (0x88)[$r12];;
     _32(0x7118fc06),        //addw $r6 = $r6, -16 (0xfffffff0);;
     _32(0xf818ffc6),        //zxwd $r6 = $r6
     _64(0x08000000f501b406),        //compw.gt $r0 = $r6, 16 (0x10);;
     _32(0x0c7ff740),        //cb.wnez $r0? 2b0a0 <_vfiprintf_r+0xbd0>;;
     _32(0xe91bf006),        //sxwd $r6 = $r6
     _32(0xf11c0042),        //addw $r7 = $r2, 1 (0x1)
     _64(0xa7590008f501b1c2),        //compw.gt $r0 = $r2, 7 (0x7)
     _32(0x10000000),        //sd 0 (0x0)[$r8] = $r22;;
     _32(0xf10d0183),        //addd $r3 = $r3, $r6
     _32(0xea100002),        //copyd $r4 = $r2
     _32(0xe1200408),        //addd $r8 = $r8, 16 (0x10)
     _32(0x27190208),        //sd 8 (0x8)[$r8] = $r6;;
     _32(0x2609320c),        //sw 200 (0xc8)[$r12] = $r2;;
     _32(0x8cff7580),        //cb.weqz $r0? 2a8b0 <_vfiprintf_r+0x3e0>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x08802883),        //cb.deqz $r3? 2b3e8 <_vfiprintf_r+0xf18>;;
     _32(0x9ffffc9f),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xea00001d),        //copyd $r0 = $r29
     _32(0x2745220c),        //sd 136 (0x88)[$r12] = $r17;;
     _32(0x0c7f8800),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x3010320c),        //lwz $r4 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x3844220c),        //ld $r17 = 136 (0x88)[$r12];;
     _32(0x97fffdc9),        //goto 2a8b0 <_vfiprintf_r+0x3e0>
     _32(0x711c0044),        //addw $r7 = $r4, 1 (0x1);;
     _32(0xf828011a),        //andw $r10 = $r26, 4 (0x4)
     _32(0x260d320c),        //sw 200 (0xc8)[$r12] = $r3;;
     _32(0x0c800e8a),        //cb.weqz $r10? 2b284 <_vfiprintf_r+0xdb4>;;
     _32(0xf501148e),        //sbfw $r0 = $r14, $r18
     _32(0x7551148e),        //sbfw $r20 = $r14, $r18;;
     _32(0x0e000dc0),        //cb.wlez $r0? 2b284 <_vfiprintf_r+0xdb4>;;
     _32(0x6a180013),        //copyd $r6 = $r19;;
     _32(0xe0600010),        //make $r24 = 16 (0x10)
     _64(0xb004320cf401b414),        //compw.le $r0 = $r20, 16 (0x10)
     _32(0x08000000),        //lwz $r1 = 200 (0xc8)[$r12];;
     _32(0x0c004380),        //cb.wnez $r0? 2b5f8 <_vfiprintf_r+0x1128>;;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xe10c0403),        //addd $r3 = $r3, 16 (0x10)
     _32(0xf1100041),        //addw $r4 = $r1, 1 (0x1)
     _32(0x27590006),        //sd 0 (0x0)[$r6] = $r22;;
     _32(0xf1140081),        //addw $r5 = $r1, 2 (0x2)
     _32(0xe1180406),        //addd $r6 = $r6, 16 (0x10)
     _64(0xa7610206f509b1c0),        //compw.gt $r2 = $r0, 7 (0x7)
     _32(0x10000000),        //sd 8 (0x8)[$r6] = $r24;;
     _32(0xea040004),        //copyd $r1 = $r4
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x8c8003c2),        //cb.weqz $r2? 2b22c <_vfiprintf_r+0xd5c>
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x88800343),        //cb.deqz $r3? 2b22c <_vfiprintf_r+0xd5c>
     _32(0xe0140001),        //make $r5 = 1 (0x1)
     _32(0xea180013),        //copyd $r6 = $r19
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x9ffffc76),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c7f7e00),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0xea180013),        //copyd $r6 = $r19
     _32(0x3004320c),        //lwz $r1 = 200 (0xc8)[$r12];;
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x71140041),        //addw $r5 = $r1, 1 (0x1);;
     _32(0x7108fc14),        //addw $r2 = $r20, -16 (0xfffffff0);;
     _32(0xf850ffc2),        //zxwd $r20 = $r2
     _64(0x08000000f501b402),        //compw.gt $r0 = $r2, 16 (0x10);;
     _32(0x0c7ff880),        //cb.wnez $r0? 2b1c4 <_vfiprintf_r+0xcf4>;;
     _32(0xe90bf014),        //sxwd $r2 = $r20
     _64(0xa7590006f401b1c5),        //compw.le $r0 = $r5, 7 (0x7)
     _32(0x08000000),        //sd 0 (0x0)[$r6] = $r22;;
     _32(0xf10d0083),        //addd $r3 = $r3, $r2
     _32(0x2615320c),        //sw 200 (0xc8)[$r12] = $r5;;
     _32(0x27090206),        //sd 8 (0x8)[$r6] = $r2;;
     _32(0x8c7f7700),        //cb.wnez $r0? 2a9cc <_vfiprintf_r+0x4fc>
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x08800203),        //cb.deqz $r3? 2b284 <_vfiprintf_r+0xdb4>;;
     _32(0x9ffffc5e),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0c7f7800),        //cb.wnez $r0? 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0x97fffdd4),        //goto 2a9cc <_vfiprintf_r+0x4fc>
     _32(0x380c340c),        //ld $r3 = 208 (0xd0)[$r12];;
     _32(0x73391392),        //maxw $r14 = $r18, $r14;;
     _32(0x97fffdd4),        //goto 2a9d8 <_vfiprintf_r+0x508>
     _32(0x7165164e),        //addw $r25 = $r14, $r25;;
     _32(0x6a60001a),        //copyd $r24 = $r26;;
     _32(0xe8010244),        //compd.leu $r0 = $r4, 9 (0x9)
     _32(0xea680018),        //copyd $r26 = $r24
     _32(0xe0500001),        //make $r20 = 1 (0x1)
     _32(0x61704ecc),        //addd $r28 = $r12, 315 (0x13b);;
     _32(0x08801b00),        //cb.deqz $r0? 2b454 <_vfiprintf_r+0xf84>;;
     _32(0x71100c04),        //addw $r4 = $r4, 48 (0x30);;
     _32(0x97fffd6e),        //goto 2a864 <_vfiprintf_r+0x394>
     _32(0x24114ecc),        //sb 315 (0x13b)[$r12] = $r4;;
     _32(0x97fffceb),        //goto 2a660 <_vfiprintf_r+0x190>
     _32(0xea200013),        //copyd $r8 = $r19
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0x088007d1),        //cb.deqz $r17? 2b33c <_vfiprintf_r+0xe6c>;;
     _32(0xe1042e0c),        //addd $r1 = $r12, 184 (0xb8)
     _32(0xe0000002),        //make $r0 = 2 (0x2)
     _32(0xe0100001),        //make $r4 = 1 (0x1)
     _32(0x6120540c),        //addd $r8 = $r12, 336 (0x150);;
     _32(0xe00c0002),        //make $r3 = 2 (0x2)
     _32(0x2705500c),        //sd 320 (0x140)[$r12] = $r1;;
     _32(0x97ffff69),        //goto 2b080 <_vfiprintf_r+0xbb0>
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x97fffdf6),        //goto 2aabc <_vfiprintf_r+0x5ec>
     _32(0x6a60001a),        //copyd $r24 = $r26;;
     _32(0x9ffff1ef),        //call 27aa8 <__libc_lock_acquire>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x2804041f),        //lhz $r1 = 16 (0x10)[$r31];;
     _32(0x97fffc8c),        //goto 2a528 <_vfiprintf_r+0x58>
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x97fffd9a),        //goto 2a968 <_vfiprintf_r+0x498>
     _32(0xf11c0041),        //addw $r7 = $r1, 1 (0x1)
     _32(0xe1180411),        //addd $r6 = $r17, 16 (0x10)
     _32(0xea100001),        //copyd $r4 = $r1
     _32(0x6a200011),        //copyd $r8 = $r17;;
     _32(0xe0000030),        //make $r0 = 48 (0x30)
     _32(0xe104ff81),        //addd $r1 = $r1, -2 (0xfffffffe)
     _32(0x6a680018),        //copyd $r26 = $r24;;
     _32(0xe1004f0c),        //addd $r0 = $r12, 316 (0x13c)
     _32(0xea700001),        //copyd $r28 = $r1
     _32(0x2401ffdc),        //sb -1 (0xffffffff)[$r28] = $r0;;
     _32(0x97fffd4e),        //goto 2a864 <_vfiprintf_r+0x394>
     _32(0x75511001),        //sbfw $r20 = $r1, $r0;;
     _32(0x97fffcd8),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x240c001e),        //lbs $r3 = 0 (0x0)[$r30];;
     _32(0x97fffd88),        //goto 2a95c <_vfiprintf_r+0x48c>
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x6a200013),        //copyd $r8 = $r19;;
     _96(0x0000000080000134e0008c00),        //make $r0 = 315952 (0x4d230);;
     _32(0x2701200c),        //sd 128 (0x80)[$r12] = $r0;;
     _32(0xf800081a),        //andw $r0 = $r26, 32 (0x20)
     _32(0x61040217),        //addd $r1 = $r23, 8 (0x8);;
     _32(0x0c000a80),        //cb.wnez $r0? 2b410 <_vfiprintf_r+0xf40>;;
     _32(0x7800041a),        //andw $r0 = $r26, 16 (0x10);;
     _32(0x0c000a00),        //cb.wnez $r0? 2b410 <_vfiprintf_r+0xf40>;;
     _32(0xf808101a),        //andw $r2 = $r26, 64 (0x40)
     _64(0xb0000017f818801a),        //andw $r6 = $r26, 512 (0x200)
     _32(0x08000000),        //lwz $r0 = 0 (0x0)[$r23];;
     _32(0xe413f000),        //zxhd $r4 = $r0
     _32(0x781c3fc0),        //zxbd $r7 = $r0;;
     _32(0x780201c6),        //cmoved.wnez $r6? $r0 = $r7;;
     _32(0x79120002),        //cmoved.weqz $r2? $r4 = $r0;;
     _32(0x60010004),        //compd.ne $r0 = $r4, 0 (0x0);;
     _32(0x7801101a),        //andw $r0 = $r26, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 2b420 <_vfiprintf_r+0xf50>;;
     _32(0x97fffd1c),        //goto 2a810 <_vfiprintf_r+0x340>
     _32(0xea5c0001),        //copyd $r23 = $r1
     _32(0xe0040002),        //make $r1 = 2 (0x2)
     _64(0x103ffffee860ffda),        //andd $r24 = $r26, 4294966271 (0xfffffbff);;
     _32(0x97fffe07),        //goto 2abd0 <_vfiprintf_r+0x700>
     _32(0x6a60001a),        //copyd $r24 = $r26;;
     _96(0x0000000080000134e0008600),        //make $r0 = 315928 (0x4d218);;
     _32(0x97ffffe6),        //goto 2b360 <_vfiprintf_r+0xe90>
     _32(0x2701200c),        //sd 128 (0x80)[$r12] = $r0;;
     _32(0x9fffde30),        //call 22c90 <strlen>
     _32(0x6a00001c),        //copyd $r0 = $r28;;
     _32(0x97fffd23),        //goto 2a864 <_vfiprintf_r+0x394>
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _32(0xf850ffc0),        //zxwd $r20 = $r0
     _32(0x3820220c),        //ld $r8 = 136 (0x88)[$r12];;
     _32(0x24002c0c),        //lbs $r0 = 176 (0xb0)[$r12];;
     _32(0x0c801b40),        //cb.weqz $r0? 2b5a0 <_vfiprintf_r+0x10d0>;;
     _32(0xe1042c0c),        //addd $r1 = $r12, 176 (0xb0)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x6118540c),        //addd $r6 = $r12, 336 (0x150);;
     _32(0xe00c0001),        //make $r3 = 1 (0x1)
     _32(0x2705500c),        //sd 320 (0x140)[$r12] = $r1;;
     _32(0x97fffd37),        //goto 2a8e4 <_vfiprintf_r+0x414>
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x38100017),        //ld $r4 = 0 (0x0)[$r23];;
     _32(0x60010004),        //compd.ne $r0 = $r4, 0 (0x0);;
     _32(0x7801101a),        //andw $r0 = $r26, $r0;;
     _32(0x0cfff840),        //cb.weqz $r0? 2b3a0 <_vfiprintf_r+0xed0>;;
     _32(0xe0000030),        //make $r0 = 48 (0x30)
     _32(0xfa68009a),        //orw $r26 = $r26, 2 (0x2)
     _32(0x240d2e4c),        //sb 185 (0xb9)[$r12] = $r3;;
     _32(0x97ffffdd),        //goto 2b3a0 <_vfiprintf_r+0xed0>
     _32(0x24012e0c),        //sb 184 (0xb8)[$r12] = $r0;;
     _32(0xe90ff014),        //sxwd $r3 = $r20
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0x2771500c),        //sd 320 (0x140)[$r12] = $r28;;
     _32(0x270d520c),        //sd 328 (0x148)[$r12] = $r3;;
     _32(0x270d340c),        //sd 208 (0xd0)[$r12] = $r3;;
     _32(0x97fffd5b),        //goto 2a9b8 <_vfiprintf_r+0x4e8>
     _32(0x2601320c),        //sw 200 (0xc8)[$r12] = $r0;;
     _32(0xe01c0000),        //make $r7 = 0 (0x0)
     _32(0xe1184f0c),        //addd $r6 = $r12, 316 (0x13c)
     _64(0x10000001f8500018),        //andw $r20 = $r24, 1024 (0x400);;
     _32(0x7850ffd4),        //zxwd $r20 = $r20;;
     _32(0xf1040047),        //addw $r1 = $r7, 1 (0x1)
     _32(0xe170ffc6),        //addd $r28 = $r6, -1 (0xffffffff)
     _96(0x1666666693333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0xf81cffc1),        //zxwd $r7 = $r1
     _32(0x590c1004),        //muludt $r2r3 = $r4, $r0;;
     _32(0x7b3a20c3),        //srld $r14 = $r3, 3 (0x3);;
     _32(0x7201438e),        //addx4d $r0 = $r14, $r14;;
     _32(0x71014100),        //sbfx2d $r0 = $r0, $r4;;
     _32(0x71000c00),        //addw $r0 = $r0, 48 (0x30);;
     _32(0x88800254),        //cb.deqz $r20? 2b4b8 <_vfiprintf_r+0xfe8>
     _32(0x2401ffc6),        //sb -1 (0xffffffff)[$r6] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x24080000),        //lbs $r2 = 0 (0x0)[$r0];;
     _32(0xf101b042),        //compw.eq $r0 = $r2, $r1
     _64(0x08000003f009b7c2),        //compw.ne $r2 = $r2, 127 (0x7f);;
     _32(0x78011080),        //andw $r0 = $r0, $r2;;
     _32(0x0c000280),        //cb.wnez $r0? 2b4dc <_vfiprintf_r+0x100c>;;
     _32(0xe9090244),        //compd.gtu $r2 = $r4, 9 (0x9)
     _32(0xea18001c),        //copyd $r6 = $r28
     _96(0x1666666693333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59041004),        //muludt $r0r1 = $r4, $r0;;
     _32(0x08ff6302),        //cb.deqz $r2? 2ab00 <_vfiprintf_r+0x630>;;
     _32(0x97ffffe5),        //goto 2b468 <_vfiprintf_r+0xf98>
     _32(0x7b1220c1),        //srld $r4 = $r1, 3 (0x3);;
     _32(0x69110244),        //compd.gtu $r4 = $r4, 9 (0x9);;
     _32(0x08ff6204),        //cb.deqz $r4? 2ab00 <_vfiprintf_r+0x630>;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x3804280c),        //ld $r1 = 160 (0xa0)[$r12];;
     _32(0x2721220c),        //sd 136 (0x88)[$r12] = $r8;;
     _32(0xf5710700),        //sbfd $r28 = $r0, $r28
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x9ffffb8a),        //call 2a320 <strncpy>
     _32(0x6a00001c),        //copyd $r0 = $r28;;
     _32(0xea10000e),        //copyd $r4 = $r14
     _32(0xe01c0000),        //make $r7 = 0 (0x0)
     _32(0xea18001c),        //copyd $r6 = $r28
     _32(0x3804260c),        //ld $r1 = 152 (0x98)[$r12];;
     _32(0x3820220c),        //ld $r8 = 136 (0x88)[$r12];;
     _32(0x24000041),        //lbs $r0 = 1 (0x1)[$r1];;
     _64(0x00000000f001b000),        //compw.ne $r0 = $r0, 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x97ffffd0),        //goto 2b468 <_vfiprintf_r+0xf98>
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0xe178005e),        //addd $r30 = $r30, 1 (0x1)
     _64(0xa000005efa68801a),        //orw $r26 = $r26, 512 (0x200)
     _32(0x08000000),        //lbz $r0 = 1 (0x1)[$r30];;
     _32(0x97fffc55),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x680f7000),        //sxbd $r3 = $r0;;
     _32(0xf650019b),        //minuw $r20 = $r27, 6 (0x6)
     _32(0xe06c0000),        //make $r27 = 0 (0x0)
     _96(0x1000000090000134e0709200),        //make $r28 = 315976 (0x4d248);;
     _32(0x97fffcc7),        //goto 2a878 <_vfiprintf_r+0x3a8>
     _32(0x6a380014),        //copyd $r14 = $r20;;
     _32(0xf80c3fc4),        //zxbd $r3 = $r4
     _32(0xea5c0002),        //copyd $r23 = $r2
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _64(0x18000000f8008018),        //andw $r0 = $r24, 512 (0x200);;
     _32(0x97fffca6),        //goto 2a810 <_vfiprintf_r+0x340>
     _32(0x781200c0),        //cmoved.wnez $r0? $r4 = $r3;;
     _64(0x00000000f800801a),        //andw $r0 = $r26, 512 (0x200);;
     _32(0x0c800380),        //cb.weqz $r0? 2b5c0 <_vfiprintf_r+0x10f0>;;
     _32(0x24100017),        //lbs $r4 = 0 (0x0)[$r23];;
     _32(0x97fffc86),        //goto 2a7a8 <_vfiprintf_r+0x2d8>
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x97fffe85),        //goto 2afac <_vfiprintf_r+0xadc>
     _32(0x6a040006),        //copyd $r1 = $r6;;
     _32(0x087fabd1),        //cb.dnez $r17? 2b05c <_vfiprintf_r+0xb8c>;;
     _32(0x97fffcee),        //goto 2a95c <_vfiprintf_r+0x48c>
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xe118540c),        //addd $r6 = $r12, 336 (0x150)
     _32(0x6a200013),        //copyd $r8 = $r19;;
     _32(0x97fffc01),        //goto 2a5bc <_vfiprintf_r+0xec>
     _32(0x25650001),        //sh 0 (0x0)[$r1] = $r25;;
     _32(0x34100017),        //lws $r4 = 0 (0x0)[$r23];;
     _32(0x97fffc79),        //goto 2a7a8 <_vfiprintf_r+0x2d8>
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x9ffff17b),        //call 27bb8 <__libc_lock_release>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x17fffc68),        //goto 2a774 <_vfiprintf_r+0x2a4>;;
     _32(0x97fffed6),        //goto 2b130 <_vfiprintf_r+0xc60>
     _32(0x6a080007),        //copyd $r2 = $r7;;
     _32(0x9ffffb80),        //call 2a3e0 <__sprint_r.part.0>
     _32(0xe108300c),        //addd $r2 = $r12, 192 (0xc0)
     _32(0xea04001f),        //copyd $r1 = $r31
     _32(0x6a00001d),        //copyd $r0 = $r29;;
     _32(0x0cff4000),        //cb.weqz $r0? 2a9f0 <_vfiprintf_r+0x520>;;
     _32(0x17fffd01),        //goto 2a9f8 <_vfiprintf_r+0x528>;;
     _32(0x97ffff12),        //goto 2b240 <_vfiprintf_r+0xd70>
     _32(0x71140041),        //addw $r5 = $r1, 1 (0x1);;
     _32(0x97fffe2c),        //goto 2aeb0 <_vfiprintf_r+0x9e0>
     _32(0xea440006),        //copyd $r17 = $r6
     _32(0x6a040007),        //copyd $r1 = $r7;;
     _32(0x3000421f),        //lwz $r0 = 264 (0x108)[$r31];;
     _32(0x0b0001c0),        //cb.odd $r0? 2b62c <_vfiprintf_r+0x115c>;;
     _32(0x2800041f),        //lhz $r0 = 16 (0x10)[$r31];;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c0000c0),        //cb.wnez $r0? 2b62c <_vfiprintf_r+0x115c>;;
     _32(0x9ffff165),        //call 27bb8 <__libc_lock_release>
     _32(0x6100301f),        //addd $r0 = $r31, 192 (0xc0);;
     _32(0x97fffcf8),        //goto 2aa0c <_vfiprintf_r+0x53c>
     _64(0x003fffffe064ffc0),        //make $r25 = 4294967295 (0xffffffff);;
     _32(0x97fffbe1),        //goto 2a5bc <_vfiprintf_r+0xec>
     _32(0x26650001),        //sw 0 (0x0)[$r1] = $r25;;
     _32(0xe15c0217),        //addd $r23 = $r23, 8 (0x8)
     _32(0x30140017),        //lwz $r5 = 0 (0x0)[$r23];;
     _32(0xea780001),        //copyd $r30 = $r1
     _32(0x2000005e),        //lbz $r0 = 1 (0x1)[$r30];;
     _32(0x736cffc5),        //maxw $r27 = $r5, -1 (0xffffffff);;
     _32(0x97fffc10),        //goto 2a694 <_vfiprintf_r+0x1c4>
     _32(0x680f7000),        //sxbd $r3 = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let vfiprintf: list_I = 
 [|
     _32(0xea100000),        //copyd $r4 = $r0
     _32(0xea0c0002),        //copyd $r3 = $r2
     _32(0xea080001),        //copyd $r2 = $r1
     _96(0x1800000098000128e0002000),        //make $r0 = 303232 (0x4a080);;
     _32(0x97fffb96),        //goto 2a4d0 <_vfiprintf_r>
     _32(0xea040004),        //copyd $r1 = $r4
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7f03f000)        //nop ;;
 |];

let __sbprintf: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _64(0x0ffffffee130900c),        //addd $r12 = $r12, -1472 (0xfffffffffffffa40);;
     _32(0xea480001),        //copyd $r18 = $r1
     _32(0xe114100c),        //addd $r5 = $r12, 64 (0x40)
     _32(0xe0180000),        //make $r6 = 0 (0x0)
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0xea500002),        //copyd $r20 = $r2
     _32(0xea540003),        //copyd $r21 = $r3
     _32(0x2851080c),        //sq 32 (0x20)[$r12] = $r20r21;;
     _64(0xa739020ce1381fcc),        //addd $r14 = $r12, 1151 (0x47f)
     _32(0x00000001),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xe838f00e),        //andd $r14 = $r14, -64 (0xffffffc0)
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0xe158300e),        //addd $r22 = $r14, 192 (0xc0)
     _32(0x27590c0c),        //sd 48 (0x30)[$r12] = $r22;;
     _32(0xea000016),        //copyd $r0 = $r22
     _32(0x28040401),        //lhz $r1 = 16 (0x10)[$r1];;
     _32(0x30284212),        //lwz $r10 = 264 (0x108)[$r18];;
     _32(0x28240492),        //lhz $r9 = 18 (0x12)[$r18];;
     _32(0xf804ff41),        //andw $r1 = $r1, -3 (0xfffffffd)
     _32(0x38200c12),        //ld $r8 = 48 (0x30)[$r18];;
     _32(0x381c1012),        //ld $r7 = 64 (0x40)[$r18];;
     _32(0x2715000e),        //sd 0 (0x0)[$r14] = $r5;;
     _32(0x2629420e),        //sw 264 (0x108)[$r14] = $r10;;
     _32(0x2525048e),        //sh 18 (0x12)[$r14] = $r9;;
     _32(0x27210c0e),        //sd 48 (0x30)[$r14] = $r8;;
     _32(0x271d100e),        //sd 64 (0x40)[$r14] = $r7;;
     _32(0x2715060e),        //sd 24 (0x18)[$r14] = $r5;;
     _32(0x2611030e),        //sw 12 (0xc)[$r14] = $r4;;
     _32(0x2611080e),        //sw 32 (0x20)[$r14] = $r4;;
     _32(0x26190a0e),        //sw 40 (0x28)[$r14] = $r6;;
     _32(0x980009c7),        //call 279c8 <__libc_lock_init>
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x9ffff69d),        //call 22d28 <_vfprintf_r>
     _32(0xea080014),        //copyd $r2 = $r20
     _32(0xea0c0015),        //copyd $r3 = $r21
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x8d000200),        //cb.wltz $r0? 252e8 <__sbprintf+0xc8>
     _32(0x7850ffc0),        //zxwd $r20 = $r0;;
     _32(0x98000636),        //call 26ba8 <_fflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _64(0x003fffffe004ffc0),        //make $r1 = 4294967295 (0xffffffff);;
     _32(0x78520040),        //cmoved.wnez $r0? $r20 = $r1;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x78001000),        //andw $r0 = $r0, 64 (0x40);;
     _32(0x0c800100),        //cb.weqz $r0? 25300 <__sbprintf+0xe0>;;
     _32(0x28000412),        //lhz $r0 = 16 (0x10)[$r18];;
     _32(0x7a001000),        //orw $r0 = $r0, 64 (0x40);;
     _32(0x25010412),        //sh 16 (0x10)[$r18] = $r0;;
     _32(0x980009b6),        //call 279d8 <__libc_lock_close>
     _32(0x6a000016),        //copyd $r0 = $r22;;
     _32(0xfa000014),        //copyw $r0 = $r20
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50080c),        //lq $r20r21 = 32 (0x20)[$r12];;
     _32(0x8fd00000),        //ret 
     _64(0xb8580c0ce130700c),        //addd $r12 = $r12, 1472 (0x5c0)
     _32(0x00000001)        //ld $r22 = 48 (0x30)[$r12];;
 |];

let _wctomb_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e0102000),        //make $r4 = 303232 (0x4a080);;
     _96(0x8000012aa741060ce0147000),        //make $r5 = 305600 (0x4a9c0)
     _32(0x00000000),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x38101204),        //ld $r4 = 72 (0x48)[$r4];;
     _32(0x71120144),        //cmoved.deqz $r4? $r4 = $r5;;
     _32(0x38103804),        //ld $r4 = 224 (0xe0)[$r4];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let __ascii_wctomb: list_I = 
 [|
     _32(0x88800201),        //cb.deqz $r1? 2b800 <__ascii_wctomb+0x20>
     _32(0xf810ffc2),        //zxwd $r4 = $r2
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0xe00c0001),        //make $r3 = 1 (0x1)
     _64(0x08000007f809b7c4),        //compw.leu $r2 = $r4, 255 (0xff);;
     _32(0x0c800102),        //cb.weqz $r2? 2b808 <__ascii_wctomb+0x28>;;
     _32(0x24110001),        //sb 0 (0x0)[$r1] = $r4;;
     _32(0x8fd00000),        //ret 
     _32(0x7a000003),        //copyw $r0 = $r3;;
     _32(0xe004008a),        //make $r1 = 138 (0x8a)
     _64(0x083fffffe00cffc0),        //make $r3 = 4294967295 (0xffffffff);;
     _32(0x8fd00000),        //ret 
     _32(0xfa000003),        //copyw $r0 = $r3
     _32(0x26050000)        //sw 0 (0x0)[$r0] = $r1;;
 |];

let _write_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x7814ffc1),        //zxwd $r5 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xea040002),        //copyd $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea080003),        //copyd $r2 = $r3
     _32(0xfa000005),        //copyw $r0 = $r5
     _96(0x9000014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x10000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000824),        //call 2d8e8 <_write>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 2b884 <_write_r+0x64>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2b86c <_write_r+0x4c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _calloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xd4041081),        //muld $r1 = $r1, $r2
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x9ffff168),        //call 27e58 <_malloc_r>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x88800340),        //cb.deqz $r0? 2b8f4 <_calloc_r+0x4c>
     _32(0x6a380000),        //copyd $r14 = $r0;;
     _32(0x3808fe00),        //ld $r2 = -8 (0xfffffff8)[$r0];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x6108fe02),        //addd $r2 = $r2, -8 (0xfffffff8);;
     _32(0x69051202),        //compd.gtu $r1 = $r2, 72 (0x48);;
     _32(0x080006c1),        //cb.dnez $r1? 2b944 <_calloc_r+0x9c>;;
     _32(0x680509c2),        //compd.leu $r1 = $r2, 39 (0x27);;
     _32(0x088002c1),        //cb.deqz $r1? 2b90c <_calloc_r+0x64>;;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe9010dc2),        //compd.gtu $r0 = $r2, 55 (0x37)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x2705000e),        //sd 0 (0x0)[$r14] = $r1;;
     _32(0x888004c0),        //cb.deqz $r0? 2b964 <_calloc_r+0xbc>
     _32(0x2705020e),        //sd 8 (0x8)[$r14] = $r1;;
     _32(0xe1091202),        //compd.eq $r2 = $r2, 72 (0x48)
     _32(0xe100080e),        //addd $r0 = $r14, 32 (0x20)
     _32(0x2705040e),        //sd 16 (0x10)[$r14] = $r1;;
     _32(0x2705060e),        //sd 24 (0x18)[$r14] = $r1;;
     _32(0x08fffb42),        //cb.deqz $r2? 2b8e4 <_calloc_r+0x3c>;;
     _32(0xe1000c0e),        //addd $r0 = $r14, 48 (0x30)
     _32(0x2705080e),        //sd 32 (0x20)[$r14] = $r1;;
     _32(0x97ffffea),        //goto 2b8e4 <_calloc_r+0x3c>
     _32(0x27050a0e),        //sd 40 (0x28)[$r14] = $r1;;
     _32(0x9ffff47b),        //call 28b30 <memset>
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x97ffffe0),        //goto 2b8e4 <_calloc_r+0x3c>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x00000000)        //errop ;;
 |];

let _close_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xfa000001),        //copyw $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x8000014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000701),        //call 2d5a0 <_close>
     _32(0x260d0012),        //sw 0 (0x0)[$r18] = $r3;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 2b9c8 <_close_r+0x58>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2b9b0 <_close_r+0x40>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _fclose_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x888010c1),        //cb.deqz $r1? 2bb18 <_fclose_r+0x128>
     _32(0x27510c0c),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0x088000c0),        //cb.deqz $r0? 2ba20 <_fclose_r+0x30>;;
     _32(0x30041400),        //lwz $r1 = 80 (0x50)[$r0];;
     _32(0x0c801201),        //cb.weqz $r1? 2bb3c <_fclose_r+0x14c>;;
     _32(0x3004420e),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x0b800c41),        //cb.even $r1? 2baec <_fclose_r+0xfc>;;
     _32(0x88800ec0),        //cb.deqz $r0? 2bb18 <_fclose_r+0x128>
     _32(0x6150300e),        //addd $r20 = $r14, 192 (0xc0);;
     _32(0x9fffebb9),        //call 26918 <__sflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xf84cffc0),        //zxwd $r19 = $r0
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3808140e),        //ld $r2 = 80 (0x50)[$r14];;
     _32(0x08800182),        //cb.deqz $r2? 2ba64 <_fclose_r+0x74>;;
     _32(0x8fdc0002),        //icall $r2
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _64(0x003fffffe004ffc0),        //make $r1 = 4294967295 (0xffffffff);;
     _32(0x7a4e0040),        //cmoved.wltz $r0? $r19 = $r1;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x78002000),        //andw $r0 = $r0, 128 (0x80);;
     _32(0x0c0010c0),        //cb.wnez $r0? 2bb78 <_fclose_r+0x188>;;
     _32(0xe1001d0e),        //addd $r0 = $r14, 116 (0x74)
     _32(0x3804160e),        //ld $r1 = 88 (0x58)[$r14];;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08800181),        //cb.deqz $r1? 2ba94 <_fclose_r+0xa4>;;
     _32(0x080000c0),        //cb.dnez $r0? 2ba8c <_fclose_r+0x9c>;;
     _32(0x9fffee27),        //call 27320 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701160e),        //sd 88 (0x58)[$r14] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041e0e),        //ld $r1 = 120 (0x78)[$r14];;
     _32(0x08800101),        //cb.deqz $r1? 2baac <_fclose_r+0xbc>;;
     _32(0x1fffee20),        //call 27320 <_free_r>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011e0e),        //sd 120 (0x78)[$r14] = $r0;;
     _32(0x1fffed93),        //call 270f8 <__sfp_lock_acquire>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x3000420e),        //lwz $r0 = 264 (0x108)[$r14];;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x0b800cc0),        //cb.even $r0? 2bb88 <_fclose_r+0x198>;;
     _32(0x9fffefc6),        //call 279d8 <__libc_lock_close>
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0x1fffed90),        //call 27108 <__sfp_lock_release>;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0xe150300e),        //addd $r20 = $r14, 192 (0xc0)
     _64(0x08000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c7ff3c0),        //cb.wnez $r0? 2ba34 <_fclose_r+0x44>;;
     _32(0x9fffefeb),        //call 27aa8 <__libc_lock_acquire>
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0x2c00040e),        //lhs $r0 = 16 (0x10)[$r14];;
     _32(0x0c7ff2c0),        //cb.wnez $r0? 2ba34 <_fclose_r+0x44>;;
     _32(0x3000420e),        //lwz $r0 = 264 (0x108)[$r14];;
     _32(0x684c0040),        //andd $r19 = $r0, 1 (0x1);;
     _32(0x0b8003c0),        //cb.even $r0? 2bb50 <_fclose_r+0x160>;;
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x1fffece3),        //call 26ec8 <__sinit>;;
     _32(0x3004420e),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x0b7fee41),        //cb.odd $r1? 2ba2c <_fclose_r+0x3c>;;
     _32(0x17ffffe8),        //goto 2baec <_fclose_r+0xfc>;;
     _32(0x9ffff01a),        //call 27bb8 <__libc_lock_release>
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffedea),        //call 27320 <_free_r>
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3804060e),        //ld $r1 = 24 (0x18)[$r14];;
     _32(0x17ffffbb),        //goto 2ba70 <_fclose_r+0x80>;;
     _32(0x9ffff00c),        //call 27bb8 <__libc_lock_release>
     _32(0x6a000014),        //copyd $r0 = $r20;;
     _32(0x17ffffcc),        //goto 2bac0 <_fclose_r+0xd0>;;
     _32(0x7f03f000)        //nop ;;
 |];

let fclose: list_I = 
 [|
     _32(0xea040000),        //copyd $r1 = $r0
     _96(0x0800000088000128e0002000),        //make $r0 = 303232 (0x4a080);;
     _32(0x97ffff92),        //goto 2b9f0 <_fclose_r>
     _32(0x38000000)        //ld $r0 = 0 (0x0)[$r0];;
 |];

let __fputwc: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea380002),        //copyd $r14 = $r2
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea540000),        //copyd $r21 = $r0
     _32(0x2851060c),        //sq 24 (0x18)[$r12] = $r20r21;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x9fffef5b),        //call 27940 <__locale_mb_cur_max>
     _32(0x27590a0c),        //sd 40 (0x28)[$r12] = $r22;;
     _64(0x00000000f001b040),        //compw.ne $r0 = $r0, 1 (0x1);;
     _32(0x0c000140),        //cb.wnez $r0? 2bbf8 <__fputwc+0x48>;;
     _32(0x7100ffd3),        //addw $r0 = $r19, -1 (0xffffffff);;
     _64(0x00000007f901b780),        //compw.gtu $r0 = $r0, 254 (0xfe);;
     _32(0x0c800cc0),        //cb.weqz $r0? 2bcc0 <__fputwc+0x110>;;
     _32(0x9800045a),        //call 2cd60 <_wcrtomb_r>
     _32(0xe1040e0c),        //addd $r1 = $r12, 56 (0x38)
     _32(0xe10c400e),        //addd $r3 = $r14, 256 (0x100)
     _32(0xfa080013),        //copyw $r2 = $r19
     _32(0x6a000015),        //copyd $r0 = $r21;;
     _32(0xea500000),        //copyd $r20 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08800e00),        //cb.deqz $r0? 2bcf4 <__fputwc+0x144>;;
     _32(0x08800b94),        //cb.deqz $r20? 2bcd0 <__fputwc+0x120>;;
     _32(0x20040e0c),        //lbz $r1 = 56 (0x38)[$r12];;
     _32(0x9000000b),        //goto 2bc4c <__fputwc+0x9c>
     _32(0xe0480000),        //make $r18 = 0 (0x0)
     _32(0x61580e0c),        //addd $r22 = $r12, 56 (0x38);;
     _32(0x3804000e),        //ld $r1 = 0 (0x0)[$r14];;
     _32(0x61080041),        //addd $r2 = $r1, 1 (0x1);;
     _32(0x2709000e),        //sd 0 (0x0)[$r14] = $r2;;
     _32(0x24110001),        //sb 0 (0x0)[$r1] = $r4;;
     _32(0x61480052),        //addd $r18 = $r18, 1 (0x1);;
     _32(0x7705a512),        //compd.geu $r1 = $r18, $r20;;
     _32(0x080008c1),        //cb.dnez $r1? 2bcd0 <__fputwc+0x120>;;
     _32(0x2006e592),        //lbz $r1 = $r22[$r18];;
     _32(0xe80b7001),        //sxbd $r2 = $r1
     _32(0xf8103fc1),        //zxbd $r4 = $r1
     _32(0xea000015),        //copyd $r0 = $r21
     _32(0x300c030e),        //lwz $r3 = 12 (0xc)[$r14];;
     _32(0xfa040004),        //copyw $r1 = $r4
     _32(0xea08000e),        //copyd $r2 = $r14
     _64(0x10000000f015b282),        //compw.ne $r5 = $r2, 10 (0xa);;
     _32(0x710cffc3),        //addw $r3 = $r3, -1 (0xffffffff);;
     _32(0x260d030e),        //sw 12 (0xc)[$r14] = $r3;;
     _32(0x0dfffb83),        //cb.wgez $r3? 2bc2c <__fputwc+0x7c>;;
     _32(0x30180a0e),        //lwz $r6 = 40 (0x28)[$r14];;
     _32(0x740db0c6),        //compw.le $r3 = $r6, $r3;;
     _32(0x78151143),        //andw $r5 = $r3, $r5;;
     _32(0x0c7ffa85),        //cb.wnez $r5? 2bc2c <__fputwc+0x7c>;;
     _32(0x180003ce),        //call 2cbc0 <__swbuf_r>;;
     _64(0x07fffffff105b7c0),        //compw.eq $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0cfffa81),        //cb.weqz $r1? 2bc3c <__fputwc+0x8c>;;
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50060c),        //lq $r20r21 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38580a0c),        //ld $r22 = 40 (0x28)[$r12];;
     _32(0xf8043fd3),        //zxbd $r1 = $r19
     _32(0x60500001),        //make $r20 = 1 (0x1);;
     _32(0x97ffffd6),        //goto 2bc20 <__fputwc+0x70>
     _32(0x24050e0c),        //sb 56 (0x38)[$r12] = $r1;;
     _32(0xf800ffd3),        //zxwd $r0 = $r19
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c50060c),        //lq $r20r21 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38580a0c),        //ld $r22 = 40 (0x28)[$r12];;
     _64(0xa804040ee000ffc0),        //make $r0 = 4294967295 (0xffffffff)
     _32(0x003fffff),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x7a041001),        //orw $r1 = $r1, 64 (0x40);;
     _32(0x97ffffe7),        //goto 2bca0 <__fputwc+0xf0>
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x7f03f000)        //nop ;;
 |];

let _fputwc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea380002),        //copyd $r14 = $r2
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x30044202),        //lwz $r1 = 264 (0x108)[$r2];;
     _32(0x28000402),        //lhz $r0 = 16 (0x10)[$r2];;
     _32(0x8b000141),        //cb.odd $r1? 2bd4c <_fputwc_r+0x3c>
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _64(0x00000000f8048002),        //andw $r1 = $r2, 512 (0x200);;
     _32(0x0c800981),        //cb.weqz $r1? 2bde0 <_fputwc_r+0xd0>;;
     _64(0x00000008f8080002),        //andw $r2 = $r2, 8192 (0x2000);;
     _32(0x0c000202),        //cb.wnez $r2? 2bd74 <_fputwc_r+0x64>;;
     _64(0xb004420efa000000),        //orw $r0 = $r0, 8192 (0x2000)
     _32(0x00000008),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x2501040e),        //sh 16 (0x10)[$r14] = $r0;;
     _64(0x00000008fa000001),        //orw $r0 = $r1, 8192 (0x2000);;
     _32(0x2601420e),        //sw 264 (0x108)[$r14] = $r0;;
     _32(0x9fffff8f),        //call 2bbb0 <__fputwc>
     _32(0xfa040013),        //copyw $r1 = $r19
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x6a08000e),        //copyd $r2 = $r14;;
     _32(0xfa480000),        //copyw $r18 = $r0
     _32(0x3004420e),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x0b000141),        //cb.odd $r1? 2bda0 <_fputwc_r+0x90>;;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _64(0x00000000f8008000),        //andw $r0 = $r0, 512 (0x200);;
     _32(0x0c800200),        //cb.weqz $r0? 2bdbc <_fputwc_r+0xac>;;
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffef7f),        //call 27bb8 <__libc_lock_release>
     _32(0x6100300e),        //addd $r0 = $r14, 192 (0xc0);;
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffef32),        //call 27aa8 <__libc_lock_acquire>
     _32(0x6100300e),        //addd $r0 = $r14, 192 (0xc0);;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x97ffffd8),        //goto 2bd4c <_fputwc_r+0x3c>
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let fputwc: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000128e0082000),        //make $r2 = 303232 (0x4a080);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf84cffc0),        //zxwd $r19 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38480002),        //ld $r18 = 0 (0x0)[$r2];;
     _32(0x088000d2),        //cb.deqz $r18? 2be30 <fputwc+0x38>;;
     _32(0x30001412),        //lwz $r0 = 80 (0x50)[$r18];;
     _32(0x0c800280),        //cb.weqz $r0? 2be54 <fputwc+0x5c>;;
     _32(0xea08000e),        //copyd $r2 = $r14
     _32(0xfa040013),        //copyw $r1 = $r19
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffffb0),        //goto 2bd10 <_fputwc_r>;;
     _32(0x9fffec1d),        //call 26ec8 <__sinit>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x17fffff5)        //goto 2be30 <fputwc+0x38>;;
 |];

let _fstat_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _32(0xea040002),        //copyd $r1 = $r2
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000003),        //copyw $r0 = $r3
     _96(0x8800014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980005cd),        //call 2d5c8 <_fstat>
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 2bec0 <_fstat_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2bea8 <_fstat_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __sfvwrite_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0xea580002),        //copyd $r22 = $r2
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0x38000402),        //ld $r0 = 16 (0x10)[$r2];;
     _32(0x08801340),        //cb.deqz $r0? 2c048 <__sfvwrite_r+0x160>;;
     _32(0x280c0401),        //lhz $r3 = 16 (0x10)[$r1];;
     _32(0x78000203),        //andw $r0 = $r3, 8 (0x8);;
     _32(0x0c8014c0),        //cb.weqz $r0? 2c06c <__sfvwrite_r+0x184>;;
     _32(0x38000601),        //ld $r0 = 24 (0x18)[$r1];;
     _32(0x08801440),        //cb.deqz $r0? 2c06c <__sfvwrite_r+0x184>;;
     _32(0xf8000083),        //andw $r0 = $r3, 2 (0x2)
     _32(0x38480016),        //ld $r18 = 0 (0x0)[$r22];;
     _32(0x0c800780),        //cb.weqz $r0? 2bfac <__sfvwrite_r+0xc4>;;
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x3810100e),        //ld $r4 = 64 (0x40)[$r14];;
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0x88800553),        //cb.deqz $r19? 2bf9c <__sfvwrite_r+0xb4>
     _32(0xea080014),        //copyd $r2 = $r20
     _32(0xea000017),        //copyd $r0 = $r23
     _64(0x101fffffe60c0013),        //minud $r3 = $r19, 2147482624 (0x7ffffc00);;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x0e001500),        //cb.wlez $r0? 2c0b0 <__sfvwrite_r+0x1c8>;;
     _32(0xe907f000),        //sxwd $r1 = $r0
     _32(0x38000416),        //ld $r0 = 16 (0x10)[$r22];;
     _32(0xf54d04c1),        //sbfd $r19 = $r1, $r19
     _32(0x71510054),        //addd $r20 = $r20, $r1;;
     _32(0xea080014),        //copyd $r2 = $r20
     _64(0x081fffffe60c0013),        //minud $r3 = $r19, 2147482624 (0x7ffffc00);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x27010416),        //sd 16 (0x10)[$r22] = $r0;;
     _32(0x08800c00),        //cb.deqz $r0? 2c048 <__sfvwrite_r+0x160>;;
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x3810100e),        //ld $r4 = 64 (0x40)[$r14];;
     _32(0x887ffc93),        //cb.dnez $r19? 2bf5c <__sfvwrite_r+0x74>
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0xe1480412),        //addd $r18 = $r18, 16 (0x10)
     _32(0x38500012),        //ld $r20 = 0 (0x0)[$r18];;
     _32(0x97ffffe9),        //goto 2bf48 <__sfvwrite_r+0x60>
     _32(0x384cfe12),        //ld $r19 = -8 (0xfffffff8)[$r18];;
     _32(0x0b8016c3),        //cb.even $r3? 2c118 <__sfvwrite_r+0x230>;;
     _32(0xe0540000),        //make $r21 = 0 (0x0)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe0600000),        //make $r24 = 0 (0x0)
     _32(0x60500000),        //make $r20 = 0 (0x0);;
     _32(0x08801254),        //cb.deqz $r20? 2c0e4 <__sfvwrite_r+0x1fc>;;
     _32(0x08801302),        //cb.deqz $r2? 2c0f4 <__sfvwrite_r+0x20c>;;
     _32(0xe90bf015),        //sxwd $r2 = $r21
     _32(0x300c080e),        //lwz $r3 = 32 (0x20)[$r14];;
     _32(0xf6090502),        //minud $r2 = $r2, $r20
     _32(0x3004030e),        //lwz $r1 = 12 (0xc)[$r14];;
     _32(0xf864ffc2),        //zxwd $r25 = $r2
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x3810060e),        //ld $r4 = 24 (0x18)[$r14];;
     _32(0xf11510c1),        //addw $r5 = $r1, $r3
     _32(0xf14d10c1),        //addw $r19 = $r1, $r3
     _32(0x7505b643),        //compw.gt $r1 = $r3, $r25;;
     _32(0x7209b085),        //compw.lt $r2 = $r5, $r2;;
     _32(0x7911a100),        //compd.gtu $r4 = $r0, $r4;;
     _32(0x78091102),        //andw $r2 = $r2, $r4;;
     _32(0x0c000882),        //cb.wnez $r2? 2c084 <__sfvwrite_r+0x19c>;;
     _32(0x0c003441),        //cb.wnez $r1? 2c344 <__sfvwrite_r+0x45c>;;
     _32(0xea080018),        //copyd $r2 = $r24
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x3810100e),        //ld $r4 = 64 (0x40)[$r14];;
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x8e000980),        //cb.wlez $r0? 2c0b0 <__sfvwrite_r+0x1c8>
     _32(0x784cffc0),        //zxwd $r19 = $r0;;
     _32(0xf5551553),        //sbfw $r21 = $r19, $r21
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x08803055),        //cb.deqz $r21? 2c32c <__sfvwrite_r+0x444>;;
     _32(0xe907f013),        //sxwd $r1 = $r19
     _32(0x38000416),        //ld $r0 = 16 (0x10)[$r22];;
     _32(0xf1610058),        //addd $r24 = $r24, $r1
     _32(0x75510501),        //sbfd $r20 = $r1, $r20;;
     _32(0x75050001),        //sbfd $r1 = $r1, $r0;;
     _32(0x27050416),        //sd 16 (0x10)[$r22] = $r1;;
     _32(0x087ff7c1),        //cb.dnez $r1? 2bfc0 <__sfvwrite_r+0xd8>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x9fffe4b1),        //call 25330 <__swsetup_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x0c003400),        //cb.wnez $r0? 2c3b8 <__sfvwrite_r+0x4d0>;;
     _32(0x97ffffac),        //goto 2bf2c <__sfvwrite_r+0x44>
     _32(0x280c040e),        //lhz $r3 = 16 (0x10)[$r14];;
     _32(0xe967f005),        //sxwd $r25 = $r5
     _32(0x6a040018),        //copyd $r1 = $r24;;
     _32(0x98000111),        //call 2c4d0 <memmove>
     _32(0x6a080019),        //copyd $r2 = $r25;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x3814000e),        //ld $r5 = 0 (0x0)[$r14];;
     _32(0x71150645),        //addd $r5 = $r5, $r25;;
     _32(0x9fffeac1),        //call 26ba8 <_fflush_r>
     _32(0x2715000e),        //sd 0 (0x0)[$r14] = $r5;;
     _32(0x0cfff740),        //cb.weqz $r0? 2c020 <__sfvwrite_r+0x138>;;
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0xfa041001),        //orw $r1 = $r1, 64 (0x40)
     _64(0x083fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x2505040e),        //sh 16 (0x10)[$r14] = $r1;;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xe1480412),        //addd $r18 = $r18, 16 (0x10)
     _32(0x38500212),        //ld $r20 = 8 (0x8)[$r18];;
     _32(0x3860fc12),        //ld $r24 = -16 (0xfffffff0)[$r18];;
     _32(0x08ffff54),        //cb.deqz $r20? 2c0e4 <__sfvwrite_r+0x1fc>;;
     _32(0x9ffff1e1),        //call 28878 <memchr>
     _32(0xea080014),        //copyd $r2 = $r20
     _32(0xe004000a),        //make $r1 = 10 (0xa)
     _32(0x6a000018),        //copyd $r0 = $r24;;
     _32(0xe1540040),        //addd $r21 = $r0, 1 (0x1)
     _32(0x71040054),        //addw $r1 = $r20, 1 (0x1);;
     _32(0x75551558),        //sbfw $r21 = $r24, $r21;;
     _32(0x97ffffae),        //goto 2bfc8 <__sfvwrite_r+0xe0>
     _32(0x71560040),        //cmoved.deqz $r0? $r21 = $r1;;
     _32(0xe0640000),        //make $r25 = 0 (0x0)
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _64(0xb054030ee060ff80),        //make $r24 = 2147483646 (0x7ffffffe)
     _32(0x101fffff),        //lwz $r21 = 12 (0xc)[$r14];;
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x08800793),        //cb.deqz $r19? 2c1a8 <__sfvwrite_r+0x2c0>;;
     _64(0x00000000f8048003),        //andw $r1 = $r3, 512 (0x200);;
     _32(0x0c8007c1),        //cb.weqz $r1? 2c1b8 <__sfvwrite_r+0x2d0>;;
     _32(0x696bf015),        //sxwd $r26 = $r21;;
     _32(0x7905a4da),        //compd.gtu $r1 = $r26, $r19;;
     _32(0x088011c1),        //cb.deqz $r1? 2c264 <__sfvwrite_r+0x37c>;;
     _32(0x7804ffd3),        //zxwd $r1 = $r19;;
     _32(0xe953f001),        //sxwd $r20 = $r1
     _32(0x6a540001),        //copyd $r21 = $r1;;
     _32(0x6a680014),        //copyd $r26 = $r20;;
     _32(0x980000dd),        //call 2c4d0 <memmove>
     _32(0xea08001a),        //copyd $r2 = $r26
     _32(0x6a040019),        //copyd $r1 = $r25;;
     _32(0x3000030e),        //lwz $r0 = 12 (0xc)[$r14];;
     _32(0x3808000e),        //ld $r2 = 0 (0x0)[$r14];;
     _32(0x75551015),        //sbfw $r21 = $r21, $r0;;
     _32(0xf1090682),        //addd $r2 = $r2, $r26
     _32(0x2655030e),        //sw 12 (0xc)[$r14] = $r21;;
     _32(0x2709000e),        //sd 0 (0x0)[$r14] = $r2;;
     _32(0xf1650519),        //addd $r25 = $r25, $r20
     _32(0xf54d04d4),        //sbfd $r19 = $r20, $r19
     _32(0x38000416),        //ld $r0 = 16 (0x10)[$r22];;
     _32(0x75510014),        //sbfd $r20 = $r20, $r0;;
     _32(0x27510416),        //sd 16 (0x10)[$r22] = $r20;;
     _32(0x08ffeb54),        //cb.deqz $r20? 2c048 <__sfvwrite_r+0x160>;;
     _32(0x3054030e),        //lwz $r21 = 12 (0xc)[$r14];;
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x887ff953),        //cb.dnez $r19? 2c134 <__sfvwrite_r+0x24c>
     _32(0x280c040e),        //lhz $r3 = 16 (0x10)[$r14];;
     _32(0xe1480412),        //addd $r18 = $r18, 16 (0x10)
     _32(0x38640012),        //ld $r25 = 0 (0x0)[$r18];;
     _32(0x97ffffe0),        //goto 2c130 <__sfvwrite_r+0x248>
     _32(0x384cfe12),        //ld $r19 = -8 (0xfffffff8)[$r18];;
     _32(0x3804060e),        //ld $r1 = 24 (0x18)[$r14];;
     _32(0x7605a001),        //compd.ltu $r1 = $r1, $r0;;
     _32(0x08000541),        //cb.dnez $r1? 2c214 <__sfvwrite_r+0x32c>;;
     _32(0x3050080e),        //lwz $r20 = 32 (0x20)[$r14];;
     _32(0x6907f014),        //sxwd $r1 = $r20;;
     _32(0x7809a4c1),        //compd.leu $r2 = $r1, $r19;;
     _32(0x08800442),        //cb.deqz $r2? 2c214 <__sfvwrite_r+0x32c>;;
     _32(0xf809a613),        //compd.leu $r2 = $r19, $r24
     _64(0x081fffffe000ffc0),        //make $r0 = 2147483647 (0x7fffffff);;
     _32(0x700204c2),        //cmoved.dnez $r2? $r0 = $r19;;
     _32(0x980016fb),        //call 31dd0 <__divdi3>
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0xea0c0000),        //copyd $r3 = $r0
     _32(0xea080019),        //copyd $r2 = $r25
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x3810100e),        //ld $r4 = 64 (0x40)[$r14];;
     _32(0xdb0c3503),        //mulw $r3 = $r3, $r20
     _32(0x38040c0e),        //ld $r1 = 48 (0x30)[$r14];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x0e7fea80),        //cb.wlez $r0? 2c0b0 <__sfvwrite_r+0x1c8>;;
     _32(0x97ffffdd),        //goto 2c180 <__sfvwrite_r+0x298>
     _32(0x6953f000),        //sxwd $r20 = $r0;;
     _32(0xe957f015),        //sxwd $r21 = $r21
     _32(0x6a040019),        //copyd $r1 = $r25;;
     _32(0x765504d5),        //minud $r21 = $r21, $r19;;
     _32(0xe953f015),        //sxwd $r20 = $r21
     _32(0x7854ffd5),        //zxwd $r21 = $r21;;
     _32(0x980000aa),        //call 2c4d0 <memmove>
     _32(0x6a080014),        //copyd $r2 = $r20;;
     _32(0x3000030e),        //lwz $r0 = 12 (0xc)[$r14];;
     _32(0x3804000e),        //ld $r1 = 0 (0x0)[$r14];;
     _32(0xf5091015),        //sbfw $r2 = $r21, $r0
     _32(0x75551015),        //sbfw $r21 = $r21, $r0;;
     _32(0xf1010501),        //addd $r0 = $r1, $r20
     _32(0x2655030e),        //sw 12 (0xc)[$r14] = $r21;;
     _32(0x887ff382),        //cb.dnez $r2? 2c180 <__sfvwrite_r+0x298>
     _32(0x2701000e),        //sd 0 (0x0)[$r14] = $r0;;
     _32(0x9fffea56),        //call 26ba8 <_fflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x0cfff240),        //cb.weqz $r0? 2c180 <__sfvwrite_r+0x298>;;
     _32(0x17ffff94),        //goto 2c0b0 <__sfvwrite_r+0x1c8>;;
     _32(0xe953f013),        //sxwd $r20 = $r19
     _64(0x08000001f8042003),        //andw $r1 = $r3, 1152 (0x480);;
     _32(0x0cffeec1),        //cb.weqz $r1? 2c15c <__sfvwrite_r+0x274>;;
     _32(0xe1100053),        //addd $r4 = $r19, 1 (0x1)
     _32(0x3804060e),        //ld $r1 = 24 (0x18)[$r14];;
     _32(0x3054080e),        //lwz $r21 = 32 (0x20)[$r14];;
     _32(0xf5691001),        //sbfw $r26 = $r1, $r0
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0xf0555555),        //addx2w $r21 = $r21, $r21
     _32(0x6953f01a),        //sxwd $r20 = $r26;;
     _32(0xf8563055),        //srsw $r21 = $r21, 1 (0x1)
     _32(0x71110504),        //addd $r4 = $r4, $r20;;
     _32(0xe90bf015),        //sxwd $r2 = $r21
     _32(0x7854ffd5),        //zxwd $r21 = $r21;;
     _32(0x7711a102),        //compd.geu $r4 = $r2, $r4;;
     _32(0x08000144),        //cb.dnez $r4? 2c2b8 <__sfvwrite_r+0x3d0>;;
     _32(0x71540053),        //addw $r21 = $r19, 1 (0x1);;
     _32(0xf1091015),        //addw $r2 = $r21, $r0
     _32(0x71551015),        //addw $r21 = $r21, $r0;;
     _32(0x690bf002),        //sxwd $r2 = $r2;;
     _64(0x00000001f80c0003),        //andw $r3 = $r3, 1024 (0x400);;
     _32(0x0c800b43),        //cb.weqz $r3? 2c374 <__sfvwrite_r+0x48c>;;
     _32(0x9fffeee5),        //call 27e58 <_malloc_r>
     _32(0xea040002),        //copyd $r1 = $r2
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x08800d80),        //cb.deqz $r0? 2c3a8 <__sfvwrite_r+0x4c0>;;
     _32(0x9ffff1a3),        //call 28960 <memcpy>
     _32(0xea6c0000),        //copyd $r27 = $r0
     _32(0xea080014),        //copyd $r2 = $r20
     _32(0x3804060e),        //ld $r1 = 24 (0x18)[$r14];;
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _64(0x07fffffef800dfc0),        //andw $r0 = $r0, -1153 (0xfffffffffffffb7f);;
     _32(0x7a002000),        //orw $r0 = $r0, 128 (0x80);;
     _32(0x2501040e),        //sh 16 (0x10)[$r14] = $r0;;
     _32(0xf804ffd3),        //zxwd $r1 = $r19
     _32(0xf101051b),        //addd $r0 = $r27, $r20
     _32(0xf569155a),        //sbfw $r26 = $r26, $r21
     _32(0x2655080e),        //sw 32 (0x20)[$r14] = $r21;;
     _32(0xe953f001),        //sxwd $r20 = $r1
     _32(0xea540001),        //copyd $r21 = $r1
     _32(0x2669030e),        //sw 12 (0xc)[$r14] = $r26;;
     _32(0xf809a4d4),        //compd.leu $r2 = $r20, $r19
     _32(0xea680014),        //copyd $r26 = $r20
     _32(0x276d060e),        //sd 24 (0x18)[$r14] = $r27;;
     _32(0x2701000e),        //sd 0 (0x0)[$r14] = $r0;;
     _32(0x087fe382),        //cb.dnez $r2? 2c15c <__sfvwrite_r+0x274>;;
     _32(0x17ffff8a),        //goto 2c150 <__sfvwrite_r+0x268>;;
     _32(0x9fffea1f),        //call 26ba8 <_fflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x8cffcf40),        //cb.weqz $r0? 2c02c <__sfvwrite_r+0x144>
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x17ffff5c),        //goto 2c0b0 <__sfvwrite_r+0x1c8>;;
     _32(0xe96bf019),        //sxwd $r26 = $r25
     _32(0xea040018),        //copyd $r1 = $r24
     _32(0x6a4c0019),        //copyd $r19 = $r25;;
     _32(0x98000060),        //call 2c4d0 <memmove>
     _32(0x6a08001a),        //copyd $r2 = $r26;;
     _32(0x3004030e),        //lwz $r1 = 12 (0xc)[$r14];;
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x75651059),        //sbfw $r25 = $r25, $r1;;
     _32(0xf1010680),        //addd $r0 = $r0, $r26
     _32(0x2665030e),        //sw 12 (0xc)[$r14] = $r25;;
     _32(0x97ffff2d),        //goto 2c020 <__sfvwrite_r+0x138>
     _32(0x2701000e),        //sd 0 (0x0)[$r14] = $r0;;
     _32(0x980000bf),        //call 2c670 <_realloc_r>
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x887ff7c0),        //cb.dnez $r0? 2c2f8 <__sfvwrite_r+0x410>
     _32(0x6a6c0000),        //copyd $r27 = $r0;;
     _32(0x9fffebe7),        //call 27320 <_free_r>
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x3804060e),        //ld $r1 = 24 (0x18)[$r14];;
     _32(0xe000000c),        //make $r0 = 12 (0xc)
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x26010017),        //sw 0 (0x0)[$r23] = $r0;;
     _32(0x97ffff46),        //goto 2c0b4 <__sfvwrite_r+0x1cc>
     _64(0x0000003fe804dfc1),        //andd $r1 = $r1, 65407 (0xff7f);;
     _32(0xe000000c),        //make $r0 = 12 (0xc)
     _32(0x2804040e),        //lhz $r1 = 16 (0x10)[$r14];;
     _32(0x97ffff41),        //goto 2c0b4 <__sfvwrite_r+0x1cc>
     _32(0x26010017),        //sw 0 (0x0)[$r23] = $r0;;
     _32(0x97ffff25),        //goto 2c04c <__sfvwrite_r+0x164>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x00000000)        //errop ;;
 |];

let _isatty_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xfa000001),        //copyw $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x8000014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980004a7),        //call 2d690 <_isatty>
     _32(0x260d0012),        //sw 0 (0x0)[$r18] = $r3;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 2c420 <_isatty_r+0x58>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2c408 <_isatty_r+0x40>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _lseek_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x7810ffc1),        //zxwd $r4 = $r1;;
     _32(0xea040002),        //copyd $r1 = $r2
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000004),        //copyw $r0 = $r4
     _96(0x8800014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000499),        //call 2d6e0 <_lseek>
     _32(0xfa080003),        //copyw $r2 = $r3
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 2c4a8 <_lseek_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2c490 <_lseek_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let memmove: list_I = 
 [|
     _32(0x780da040),        //compd.leu $r3 = $r0, $r1;;
     _32(0x080002c3),        //cb.dnez $r3? 2c500 <memmove+0x30>;;
     _32(0x710d0081),        //addd $r3 = $r1, $r2;;
     _32(0x770da0c0),        //compd.geu $r3 = $r0, $r3;;
     _32(0x08000203),        //cb.dnez $r3? 2c500 <memmove+0x30>;;
     _32(0x88800182),        //cb.deqz $r2? 2c4fc <memmove+0x2c>
     _32(0x610cffc2),        //addd $r3 = $r2, -1 (0xffffffff);;
     _32(0x0f000102),        //loopdo $r2, 2c4fc <memmove+0x2c>;;
     _32(0x2012e0c1),        //lbz $r4 = $r3[$r1];;
     _32(0xe10cffc3),        //addd $r3 = $r3, -1 (0xffffffff)
     _32(0x2413e0c0),        //sb $r3[$r0] = $r4;;
     _32(0x0fd00000),        //ret ;;
     _32(0x680d07c2),        //compd.leu $r3 = $r2, 31 (0x1f);;
     _32(0x088002c3),        //cb.deqz $r3? 2c530 <memmove+0x60>;;
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0x88ffff02),        //cb.deqz $r2? 2c4fc <memmove+0x2c>
     _32(0x6110ffc2),        //addd $r4 = $r2, -1 (0xffffffff);;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0x61100044),        //addd $r4 = $r4, 1 (0x1);;
     _32(0x0f000104),        //loopdo $r4, 2c52c <memmove+0x5c>;;
     _32(0x2016e081),        //lbz $r5 = $r2[$r1];;
     _32(0xe1080042),        //addd $r2 = $r2, 1 (0x1)
     _32(0x2417e083),        //sb $r2[$r3] = $r5;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7a150001),        //ord $r5 = $r1, $r0;;
     _32(0x681401c5),        //andd $r5 = $r5, 7 (0x7);;
     _32(0x080009c5),        //cb.dnez $r5? 2c5d4 <memmove+0x104>;;
     _32(0xe110f802),        //addd $r4 = $r2, -32 (0xffffffe0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0xe13c0201),        //addd $r15 = $r1, 8 (0x8)
     _32(0x612c0200),        //addd $r11 = $r0, 8 (0x8);;
     _32(0xfb122144),        //srld $r4 = $r4, 5 (0x5)
     _32(0xe1280401),        //addd $r10 = $r1, 16 (0x10)
     _32(0xe1240400),        //addd $r9 = $r0, 16 (0x10)
     _32(0x61200601),        //addd $r8 = $r1, 24 (0x18);;
     _32(0xe11c0600),        //addd $r7 = $r0, 24 (0x18)
     _32(0x61100044),        //addd $r4 = $r4, 1 (0x1);;
     _32(0x0f000284),        //loopdo $r4, 2c58c <memmove+0xbc>;;
     _32(0x381ae0c1),        //ld $r6 = $r3[$r1];;
     _32(0x271be0c0),        //sd $r3[$r0] = $r6;;
     _32(0x381ae0cf),        //ld $r6 = $r3[$r15];;
     _32(0x271be0cb),        //sd $r3[$r11] = $r6;;
     _32(0x381ae0ca),        //ld $r6 = $r3[$r10];;
     _32(0x271be0c9),        //sd $r3[$r9] = $r6;;
     _32(0x381ae0c8),        //ld $r6 = $r3[$r8];;
     _32(0xe10c0803),        //addd $r3 = $r3, 32 (0x20)
     _32(0x271be0c7),        //sd $r3[$r7] = $r6;;
     _32(0xe8100602),        //andd $r4 = $r2, 24 (0x18)
     _32(0xf10500c1),        //addd $r1 = $r1, $r3
     _32(0xe81807c2),        //andd $r6 = $r2, 31 (0x1f)
     _32(0x710d00c0),        //addd $r3 = $r0, $r3;;
     _32(0x08800444),        //cb.deqz $r4? 2c5e0 <memmove+0x110>;;
     _32(0x6118fe06),        //addd $r6 = $r6, -8 (0xfffffff8);;
     _32(0x7b1a20c6),        //srld $r6 = $r6, 3 (0x3);;
     _32(0x61200046),        //addd $r8 = $r6, 1 (0x1);;
     _32(0xf011a185),        //compd.ne $r4 = $r5, $r6
     _32(0x381ef141),        //ld.xs $r7 = $r5[$r1];;
     _32(0x887fff84),        //cb.dnez $r4? 2c5ac <memmove+0xdc>
     _32(0xe1140045),        //addd $r5 = $r5, 1 (0x1)
     _32(0x271ff143),        //sd.xs $r5[$r3] = $r7;;
     _32(0xf91220c8),        //slld $r4 = $r8, 3 (0x3)
     _32(0x680801c2),        //andd $r2 = $r2, 7 (0x7);;
     _32(0x97ffffd1),        //goto 2c50c <memmove+0x3c>
     _32(0xf10d0103),        //addd $r3 = $r3, $r4
     _32(0x71050101),        //addd $r1 = $r1, $r4;;
     _32(0x97ffffd0),        //goto 2c514 <memmove+0x44>
     _32(0xe110ffc2),        //addd $r4 = $r2, -1 (0xffffffff)
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0x97ffffcb),        //goto 2c50c <memmove+0x3c>
     _32(0x6a080006)        //copyd $r2 = $r6;;
 |];

let _read_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x7814ffc1),        //zxwd $r5 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xea040002),        //copyd $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea080003),        //copyd $r2 = $r3
     _32(0xfa000005),        //copyw $r0 = $r5
     _96(0x9000014aa749040ce048c400),        //make $r18 = 338704 (0x52b10)
     _32(0x10000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x9800045c),        //call 2d790 <_read>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 2c64c <_read_r+0x64>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 2c634 <_read_r+0x4c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _realloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xea4c0002),        //copyd $r19 = $r2
     _32(0xe0480020),        //make $r18 = 32 (0x20)
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0x28550a0c),        //so 40 (0x28)[$r12] = $r20r21r22r23;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0xe164fc0e),        //addd $r25 = $r14, -16 (0xfffffff0)
     _32(0x2861120c),        //sq 72 (0x48)[$r12] = $r24r25;;
     _32(0x88802581),        //cb.deqz $r1? 2c8f4 <_realloc_r+0x284>
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0x1ffff197),        //call 28d00 <__malloc_lock>;;
     _32(0xe10405d3),        //addd $r1 = $r19, 23 (0x17)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0x380cfe0e),        //ld $r3 = -8 (0xfffffff8)[$r14];;
     _32(0x68010b81),        //compd.leu $r0 = $r1, 46 (0x2e);;
     _32(0x88801cc0),        //cb.deqz $r0? 2c884 <_realloc_r+0x214>
     _32(0x6850ff03),        //andd $r20 = $r3, -4 (0xfffffffc);;
     _32(0x7605a4d2),        //compd.ltu $r1 = $r18, $r19;;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0c001d41),        //cb.wnez $r1? 2c89c <_realloc_r+0x22c>;;
     _32(0xf305a494),        //compd.ge $r1 = $r20, $r18
     _32(0x71550519),        //addd $r21 = $r25, $r20;;
     _32(0x08001581),        //cb.dnez $r1? 2c82c <_realloc_r+0x1bc>;;
     _96(0x8000012ab8000215e008de00),        //make $r2 = 306040 (0x4ab78)
     _32(0x00000000),        //ld $r0 = 8 (0x8)[$r21];;
     _32(0x38040402),        //ld $r1 = 16 (0x10)[$r2];;
     _32(0x7105a541),        //compd.eq $r1 = $r1, $r21;;
     _32(0x08002281),        //cb.dnez $r1? 2c918 <_realloc_r+0x2a8>;;
     _32(0x6804ff80),        //andd $r1 = $r0, -2 (0xfffffffe);;
     _32(0x71050055),        //addd $r1 = $r21, $r1;;
     _32(0x38040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x0b001dc1),        //cb.odd $r1? 2c8dc <_realloc_r+0x26c>;;
     _32(0x6800ff00),        //andd $r0 = $r0, -4 (0xfffffffc);;
     _32(0x71050014),        //addd $r1 = $r20, $r0;;
     _32(0x7409a052),        //compd.le $r2 = $r18, $r1;;
     _32(0x08002e02),        //cb.dnez $r2? 2c9f0 <_realloc_r+0x380>;;
     _32(0x0b000303),        //cb.odd $r3? 2c744 <_realloc_r+0xd4>;;
     _32(0x3860fc0e),        //ld $r24 = -16 (0xfffffff0)[$r14];;
     _32(0x75610658),        //sbfd $r24 = $r24, $r25;;
     _32(0x38040218),        //ld $r1 = 8 (0x8)[$r24];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x71590500),        //addd $r22 = $r0, $r20;;
     _32(0x7401a592),        //compd.le $r0 = $r18, $r22;;
     _32(0x080031c0),        //cb.dnez $r0? 2ca50 <_realloc_r+0x3e0>;;
     _32(0x71590054),        //addd $r22 = $r20, $r1;;
     _32(0x7501a592),        //compd.gt $r0 = $r18, $r22;;
     _32(0x08800780),        //cb.deqz $r0? 2c7b8 <_realloc_r+0x148>;;
     _32(0x9fffedc5),        //call 27e58 <_malloc_r>
     _32(0xea040013),        //copyd $r1 = $r19
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x888005c0),        //cb.deqz $r0? 2c7ac <_realloc_r+0x13c>
     _32(0x6a4c0000),        //copyd $r19 = $r0;;
     _32(0xe104fc00),        //addd $r1 = $r0, -16 (0xfffffff0)
     _32(0xea0c000e),        //copyd $r3 = $r14
     _32(0x3808fe0e),        //ld $r2 = -8 (0xfffffff8)[$r14];;
     _32(0x6808ff82),        //andd $r2 = $r2, -2 (0xfffffffe);;
     _32(0x71090099),        //addd $r2 = $r25, $r2;;
     _32(0xf005a042),        //compd.ne $r1 = $r2, $r1
     _32(0x6108fe14),        //addd $r2 = $r20, -8 (0xfffffff8);;
     _32(0x08802981),        //cb.deqz $r1? 2ca0c <_realloc_r+0x39c>;;
     _32(0x69051202),        //compd.gtu $r1 = $r2, 72 (0x48);;
     _32(0x08002c81),        //cb.dnez $r1? 2ca44 <_realloc_r+0x3d4>;;
     _32(0xe80509c2),        //compd.leu $r1 = $r2, 39 (0x27)
     _32(0x3810000e),        //ld $r4 = 0 (0x0)[$r14];;
     _32(0x08802981),        //cb.deqz $r1? 2ca20 <_realloc_r+0x3b0>;;
     _32(0x27110000),        //sd 0 (0x0)[$r0] = $r4;;
     _32(0x38040203),        //ld $r1 = 8 (0x8)[$r3];;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _32(0x38040403),        //ld $r1 = 16 (0x10)[$r3];;
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0x9fffeae0),        //call 27320 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x9ffff159),        //call 28d10 <__malloc_unlock>
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0x1000002b),        //goto 2c860 <_realloc_r+0x1f0>;;
     _32(0xe108fe14),        //addd $r2 = $r20, -8 (0xfffffff8)
     _32(0xe14c0418),        //addd $r19 = $r24, 16 (0x10)
     _32(0xf1550598),        //addd $r21 = $r24, $r22
     _32(0x38000618),        //ld $r0 = 24 (0x18)[$r24];;
     _32(0xe90d1202),        //compd.gtu $r3 = $r2, 72 (0x48)
     _32(0x38040418),        //ld $r1 = 16 (0x10)[$r24];;
     _32(0x27010601),        //sd 24 (0x18)[$r1] = $r0;;
     _32(0x88002b03),        //cb.dnez $r3? 2ca84 <_realloc_r+0x414>
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0xe80509c2),        //compd.leu $r1 = $r2, 39 (0x27)
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c000e),        //ld $r3 = 0 (0x0)[$r14];;
     _32(0x08000241),        //cb.dnez $r1? 2c80c <_realloc_r+0x19c>;;
     _32(0xe9010dc2),        //compd.gtu $r0 = $r2, 55 (0x37)
     _32(0x270d0418),        //sd 16 (0x10)[$r24] = $r3;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x88003040),        //cb.dnez $r0? 2cafc <_realloc_r+0x48c>
     _32(0x27050618),        //sd 24 (0x18)[$r24] = $r1;;
     _32(0xe1000818),        //addd $r0 = $r24, 32 (0x20)
     _32(0xe138040e),        //addd $r14 = $r14, 16 (0x10)
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0xea500016),        //copyd $r20 = $r22
     _32(0xea640018),        //copyd $r25 = $r24
     _32(0x270d0000),        //sd 0 (0x0)[$r0] = $r3;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _32(0xea380013),        //copyd $r14 = $r19
     _32(0x3804040e),        //ld $r1 = 16 (0x10)[$r14];;
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0xf5010512),        //sbfd $r0 = $r18, $r20
     _32(0x38080219),        //ld $r2 = 8 (0x8)[$r25];;
     _32(0x680507c0),        //compd.leu $r1 = $r0, 31 (0x1f);;
     _32(0x88800741),        //cb.deqz $r1? 2c8ac <_realloc_r+0x23c>
     _32(0x68080042),        //andd $r2 = $r2, 1 (0x1);;
     _32(0x7a090094),        //ord $r2 = $r20, $r2;;
     _32(0x27090219),        //sd 8 (0x8)[$r25] = $r2;;
     _32(0x38000215),        //ld $r0 = 8 (0x8)[$r21];;
     _32(0x6a000040),        //ord $r0 = $r0, 1 (0x1);;
     _32(0x27010215),        //sd 8 (0x8)[$r21] = $r0;;
     _32(0x9ffff12f),        //call 28d10 <__malloc_unlock>
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x6a4c000e),        //copyd $r19 = $r14;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c540a0c),        //lo $r20r21r22r23 = 40 (0x28)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c60120c),        //lq $r24r25 = 72 (0x48)[$r12];;
     _32(0x6848fc01),        //andd $r18 = $r1, -16 (0xfffffff0);;
     _32(0xf605a4d2),        //compd.ltu $r1 = $r18, $r19
     _64(0x081fffffe909ffd2),        //compd.gtu $r2 = $r18, 2147483647 (0x7fffffff);;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0cffe341),        //cb.weqz $r1? 2c6cc <_realloc_r+0x5c>;;
     _32(0xe000000c),        //make $r0 = 12 (0xc)
     _32(0x604c0000),        //make $r19 = 0 (0x0);;
     _32(0x97ffffef),        //goto 2c860 <_realloc_r+0x1f0>
     _32(0x26010017),        //sw 0 (0x0)[$r23] = $r0;;
     _32(0xfa090092),        //ord $r2 = $r18, $r2
     _32(0xea0c0040),        //ord $r3 = $r0, 1 (0x1)
     _32(0xf1490499),        //addd $r18 = $r25, $r18
     _32(0x6a000017),        //copyd $r0 = $r23;;
     _32(0xe1040412),        //addd $r1 = $r18, 16 (0x10)
     _32(0x27090219),        //sd 8 (0x8)[$r25] = $r2;;
     _32(0x270d0212),        //sd 8 (0x8)[$r18] = $r3;;
     _32(0x38080215),        //ld $r2 = 8 (0x8)[$r21];;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x9fffea94),        //call 27320 <_free_r>
     _32(0x27090215),        //sd 8 (0x8)[$r21] = $r2;;
     _32(0x17ffffdf),        //goto 2c854 <_realloc_r+0x1e4>;;
     _32(0x0b7fe683),        //cb.odd $r3? 2c744 <_realloc_r+0xd4>;;
     _32(0x3860fc0e),        //ld $r24 = -16 (0xfffffff0)[$r14];;
     _32(0x75610658),        //sbfd $r24 = $r24, $r25;;
     _32(0x38040218),        //ld $r1 = 8 (0x8)[$r24];;
     _32(0x97ffff93),        //goto 2c738 <_realloc_r+0xc8>
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0xea040002),        //copyd $r1 = $r2
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x3c540a0c),        //lo $r20r21r22r23 = 40 (0x28)[$r12];;
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c60120c),        //lq $r24r25 = 72 (0x48)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffed51),        //goto 27e58 <_malloc_r>;;
     _32(0xe800ff00),        //andd $r0 = $r0, -4 (0xfffffffc)
     _32(0x61100812),        //addd $r4 = $r18, 32 (0x20);;
     _32(0x71050014),        //addd $r1 = $r20, $r0;;
     _32(0x7315a101),        //compd.ge $r5 = $r1, $r4;;
     _32(0x08001a05),        //cb.dnez $r5? 2cac8 <_realloc_r+0x458>;;
     _32(0x0b7fe183),        //cb.odd $r3? 2c744 <_realloc_r+0xd4>;;
     _32(0x3860fc0e),        //ld $r24 = -16 (0xfffffff0)[$r14];;
     _32(0x75610658),        //sbfd $r24 = $r24, $r25;;
     _32(0x38040218),        //ld $r1 = 8 (0x8)[$r24];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x71550500),        //addd $r21 = $r0, $r20;;
     _32(0x7411a544),        //compd.le $r4 = $r4, $r21;;
     _32(0x08ffdec4),        //cb.deqz $r4? 2c738 <_realloc_r+0xc8>;;
     _32(0xe108fe14),        //addd $r2 = $r20, -8 (0xfffffff8)
     _32(0xe14c0418),        //addd $r19 = $r24, 16 (0x10)
     _32(0x38000618),        //ld $r0 = 24 (0x18)[$r24];;
     _32(0xe90d1202),        //compd.gtu $r3 = $r2, 72 (0x48)
     _32(0x38040418),        //ld $r1 = 16 (0x10)[$r24];;
     _32(0x27010601),        //sd 24 (0x18)[$r1] = $r0;;
     _32(0x88001fc3),        //cb.dnez $r3? 2cb64 <_realloc_r+0x4f4>
     _32(0xe80509c2),        //compd.leu $r1 = $r2, 39 (0x27)
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c000e),        //ld $r3 = 0 (0x0)[$r14];;
     _32(0x08000241),        //cb.dnez $r1? 2c9a0 <_realloc_r+0x330>;;
     _32(0xe9010dc2),        //compd.gtu $r0 = $r2, 55 (0x37)
     _32(0x270d0418),        //sd 16 (0x10)[$r24] = $r3;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x88001e80),        //cb.dnez $r0? 2cb74 <_realloc_r+0x504>
     _32(0x27050618),        //sd 24 (0x18)[$r24] = $r1;;
     _32(0xe1000818),        //addd $r0 = $r24, 32 (0x20)
     _32(0xe138040e),        //addd $r14 = $r14, 16 (0x10)
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0x270d0000),        //sd 0 (0x0)[$r0] = $r3;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _32(0x3804040e),        //ld $r1 = 16 (0x10)[$r14];;
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0xf1090498),        //addd $r2 = $r24, $r18
     _32(0xf5050552),        //sbfd $r1 = $r18, $r21
     _32(0xea000017),        //copyd $r0 = $r23
     _96(0x180000009800012ae00cde00),        //make $r3 = 306040 (0x4ab78);;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _32(0x27090403),        //sd 16 (0x10)[$r3] = $r2;;
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x38040218),        //ld $r1 = 8 (0x8)[$r24];;
     _32(0x68040041),        //andd $r1 = $r1, 1 (0x1);;
     _32(0x7a490481),        //ord $r18 = $r1, $r18;;
     _32(0x9ffff0cb),        //call 28d10 <__malloc_unlock>
     _32(0x27490218),        //sd 8 (0x8)[$r24] = $r18;;
     _32(0x17ffff9d),        //goto 2c860 <_realloc_r+0x1f0>;;
     _32(0xea500001),        //copyd $r20 = $r1
     _32(0x38000615),        //ld $r0 = 24 (0x18)[$r21];;
     _32(0xf1550059),        //addd $r21 = $r25, $r1
     _32(0x38080415),        //ld $r2 = 16 (0x10)[$r21];;
     _32(0x27010602),        //sd 24 (0x18)[$r2] = $r0;;
     _32(0x97ffff8a),        //goto 2c82c <_realloc_r+0x1bc>
     _32(0x27090400),        //sd 16 (0x10)[$r0] = $r2;;
     _32(0x3800fe00),        //ld $r0 = -8 (0xfffffff8)[$r0];;
     _32(0x6800ff00),        //andd $r0 = $r0, -4 (0xfffffffc);;
     _32(0x71510014),        //addd $r20 = $r20, $r0;;
     _32(0x97ffff85),        //goto 2c82c <_realloc_r+0x1bc>
     _32(0x71550519),        //addd $r21 = $r25, $r20;;
     _32(0xe9010dc2),        //compd.gtu $r0 = $r2, 55 (0x37)
     _32(0x27110000),        //sd 0 (0x0)[$r0] = $r4;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x88000740),        //cb.dnez $r0? 2caa0 <_realloc_r+0x430>
     _32(0x27050213),        //sd 8 (0x8)[$r19] = $r1;;
     _32(0x97ffff56),        //goto 2c78c <_realloc_r+0x11c>
     _32(0xe10c040e),        //addd $r3 = $r14, 16 (0x10)
     _32(0xe1000413),        //addd $r0 = $r19, 16 (0x10)
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x9ffffea3),        //call 2c4d0 <memmove>
     _32(0x6a04000e),        //copyd $r1 = $r14;;
     _32(0x17ffff55),        //goto 2c7a0 <_realloc_r+0x130>;;
     _32(0xe108fe14),        //addd $r2 = $r20, -8 (0xfffffff8)
     _32(0xe14c0418),        //addd $r19 = $r24, 16 (0x10)
     _32(0x38000615),        //ld $r0 = 24 (0x18)[$r21];;
     _32(0xe90d1202),        //compd.gtu $r3 = $r2, 72 (0x48)
     _32(0xf1550598),        //addd $r21 = $r24, $r22
     _32(0x38040415),        //ld $r1 = 16 (0x10)[$r21];;
     _32(0x27010601),        //sd 24 (0x18)[$r1] = $r0;;
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0x38040418),        //ld $r1 = 16 (0x10)[$r24];;
     _32(0x38000618),        //ld $r0 = 24 (0x18)[$r24];;
     _32(0x27010601),        //sd 24 (0x18)[$r1] = $r0;;
     _32(0x88ffd603),        //cb.deqz $r3? 2c7dc <_realloc_r+0x16c>
     _32(0x27050400),        //sd 16 (0x10)[$r0] = $r1;;
     _32(0x9ffffe93),        //call 2c4d0 <memmove>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x97ffff67),        //goto 2c82c <_realloc_r+0x1bc>
     _32(0xea380013),        //copyd $r14 = $r19
     _32(0xea500016),        //copyd $r20 = $r22
     _32(0x6a640018),        //copyd $r25 = $r24;;
     _32(0xe1091202),        //compd.eq $r2 = $r2, 72 (0x48)
     _32(0xe10c080e),        //addd $r3 = $r14, 32 (0x20)
     _32(0x3800040e),        //ld $r0 = 16 (0x10)[$r14];;
     _32(0x27010413),        //sd 16 (0x10)[$r19] = $r0;;
     _32(0x3800060e),        //ld $r0 = 24 (0x18)[$r14];;
     _32(0x88000702),        //cb.dnez $r2? 2cb24 <_realloc_r+0x4b4>
     _32(0x27010613),        //sd 24 (0x18)[$r19] = $r0;;
     _32(0x97ffff34),        //goto 2c78c <_realloc_r+0x11c>
     _32(0xe1000813),        //addd $r0 = $r19, 32 (0x20)
     _32(0x3810080e),        //ld $r4 = 32 (0x20)[$r14];;
     _32(0xf1650499),        //addd $r25 = $r25, $r18
     _32(0xf5050052),        //sbfd $r1 = $r18, $r1
     _32(0xea000017),        //copyd $r0 = $r23
     _32(0x6a4c000e),        //copyd $r19 = $r14;;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _32(0x27650402),        //sd 16 (0x10)[$r2] = $r25;;
     _32(0x27050219),        //sd 8 (0x8)[$r25] = $r1;;
     _32(0x3804fe0e),        //ld $r1 = -8 (0xfffffff8)[$r14];;
     _32(0x68040041),        //andd $r1 = $r1, 1 (0x1);;
     _32(0x7a490481),        //ord $r18 = $r1, $r18;;
     _32(0x9ffff088),        //call 28d10 <__malloc_unlock>
     _32(0x2749fe0e),        //sd -8 (0xfffffff8)[$r14] = $r18;;
     _32(0x17ffff5a),        //goto 2c860 <_realloc_r+0x1f0>;;
     _32(0xe1091202),        //compd.eq $r2 = $r2, 72 (0x48)
     _32(0x3800040e),        //ld $r0 = 16 (0x10)[$r14];;
     _32(0x27010818),        //sd 32 (0x20)[$r24] = $r0;;
     _32(0x3800060e),        //ld $r0 = 24 (0x18)[$r14];;
     _32(0x88000382),        //cb.dnez $r2? 2cb44 <_realloc_r+0x4d4>
     _32(0x27010a18),        //sd 40 (0x28)[$r24] = $r0;;
     _32(0x97ffff3e),        //goto 2c80c <_realloc_r+0x19c>
     _32(0xe1000c18),        //addd $r0 = $r24, 48 (0x30)
     _32(0xe138080e),        //addd $r14 = $r14, 32 (0x20)
     _32(0x380c080e),        //ld $r3 = 32 (0x20)[$r14];;
     _32(0xe10c0c0e),        //addd $r3 = $r14, 48 (0x30)
     _32(0xe1000c13),        //addd $r0 = $r19, 48 (0x30)
     _32(0x3804080e),        //ld $r1 = 32 (0x20)[$r14];;
     _32(0x27050813),        //sd 32 (0x20)[$r19] = $r1;;
     _32(0x38040a0e),        //ld $r1 = 40 (0x28)[$r14];;
     _32(0x27050a13),        //sd 40 (0x28)[$r19] = $r1;;
     _32(0x97ffff14),        //goto 2c78c <_realloc_r+0x11c>
     _32(0x38100c0e),        //ld $r4 = 48 (0x30)[$r14];;
     _32(0xe1001018),        //addd $r0 = $r24, 64 (0x40)
     _32(0xe1380c0e),        //addd $r14 = $r14, 48 (0x30)
     _32(0x3804080e),        //ld $r1 = 32 (0x20)[$r14];;
     _32(0x27050c18),        //sd 48 (0x30)[$r24] = $r1;;
     _32(0x3804fe0e),        //ld $r1 = -8 (0xfffffff8)[$r14];;
     _32(0x27050e18),        //sd 56 (0x38)[$r24] = $r1;;
     _32(0x97ffff2c),        //goto 2c80c <_realloc_r+0x19c>
     _32(0x380c000e),        //ld $r3 = 0 (0x0)[$r14];;
     _32(0x9ffffe5b),        //call 2c4d0 <memmove>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x17ffff91),        //goto 2c9b4 <_realloc_r+0x344>;;
     _32(0xe1091202),        //compd.eq $r2 = $r2, 72 (0x48)
     _32(0x3800040e),        //ld $r0 = 16 (0x10)[$r14];;
     _32(0x27010818),        //sd 32 (0x20)[$r24] = $r0;;
     _32(0x3800060e),        //ld $r0 = 24 (0x18)[$r14];;
     _32(0x88000182),        //cb.dnez $r2? 2cb9c <_realloc_r+0x52c>
     _32(0x27010a18),        //sd 40 (0x28)[$r24] = $r0;;
     _32(0x97ffff85),        //goto 2c9a0 <_realloc_r+0x330>
     _32(0xe1000c18),        //addd $r0 = $r24, 48 (0x30)
     _32(0xe138080e),        //addd $r14 = $r14, 32 (0x20)
     _32(0x380c080e),        //ld $r3 = 32 (0x20)[$r14];;
     _32(0xe1001018),        //addd $r0 = $r24, 64 (0x40)
     _32(0xe1380c0e),        //addd $r14 = $r14, 48 (0x30)
     _32(0x3804080e),        //ld $r1 = 32 (0x20)[$r14];;
     _32(0x27050c18),        //sd 48 (0x30)[$r24] = $r1;;
     _32(0x3804fe0e),        //ld $r1 = -8 (0xfffffff8)[$r14];;
     _32(0x27050e18),        //sd 56 (0x38)[$r24] = $r1;;
     _32(0x97ffff7b),        //goto 2c9a0 <_realloc_r+0x330>
     _32(0x380c000e),        //ld $r3 = 0 (0x0)[$r14];;
     _32(0x00000000)        //errop ;;
 |];

let __swbuf_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xea380002),        //copyd $r14 = $r2
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x88800100),        //cb.deqz $r0? 2cbf0 <__swbuf_r+0x30>
     _32(0x28510a0c),        //sq 40 (0x28)[$r12] = $r20r21;;
     _32(0x30041400),        //lwz $r1 = 80 (0x50)[$r0];;
     _32(0x0c801301),        //cb.weqz $r1? 2cd1c <__swbuf_r+0x15c>;;
     _32(0xf8543fd2),        //zxbd $r21 = $r18
     _32(0xf8503fd2),        //zxbd $r20 = $r18
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0x30040a0e),        //lwz $r1 = 40 (0x28)[$r14];;
     _32(0xe407f000),        //zxhd $r1 = $r0
     _32(0xf8080200),        //andw $r2 = $r0, 8 (0x8)
     _32(0x2605030e),        //sw 12 (0xc)[$r14] = $r1;;
     _64(0x00000008f8040001),        //andw $r1 = $r1, 8192 (0x2000);;
     _32(0x0c800842),        //cb.weqz $r2? 2cc98 <__swbuf_r+0xd8>;;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x088007c2),        //cb.deqz $r2? 2cc98 <__swbuf_r+0xd8>;;
     _32(0x8c800ac1),        //cb.weqz $r1? 2cccc <__swbuf_r+0x10c>
     _32(0x6a480015),        //copyd $r18 = $r21;;
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x3004080e),        //lwz $r1 = 32 (0x20)[$r14];;
     _32(0x75091002),        //sbfw $r2 = $r2, $r0;;
     _32(0xf405b081),        //compw.le $r1 = $r1, $r2
     _32(0x71080042),        //addw $r2 = $r2, 1 (0x1);;
     _32(0x0c000c41),        //cb.wnez $r1? 2cd00 <__swbuf_r+0x140>;;
     _32(0xe10c0040),        //addd $r3 = $r0, 1 (0x1)
     _64(0xb004030ef151b294),        //compw.eq $r20 = $r20, 10 (0xa)
     _32(0x08000000),        //lwz $r1 = 12 (0xc)[$r14];;
     _32(0x270d000e),        //sd 0 (0x0)[$r14] = $r3;;
     _32(0x7104ffc1),        //addw $r1 = $r1, -1 (0xffffffff);;
     _32(0x2605030e),        //sw 12 (0xc)[$r14] = $r1;;
     _32(0x24550000),        //sb 0 (0x0)[$r0] = $r21;;
     _32(0x3000080e),        //lwz $r0 = 32 (0x20)[$r14];;
     _32(0x7109b080),        //compw.eq $r2 = $r0, $r2;;
     _32(0x0c000bc2),        //cb.wnez $r2? 2cd24 <__swbuf_r+0x164>;;
     _32(0x2000040e),        //lbz $r0 = 16 (0x10)[$r14];;
     _32(0x78511014),        //andw $r20 = $r20, $r0;;
     _32(0x0c000b14),        //cb.wnez $r20? 2cd24 <__swbuf_r+0x164>;;
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3c500a0c),        //lq $r20r21 = 40 (0x28)[$r12];;
     _32(0x9fffe1a6),        //call 25330 <__swsetup_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x0c000900),        //cb.wnez $r0? 2cd34 <__swbuf_r+0x174>;;
     _32(0xf8543fd2),        //zxbd $r21 = $r18
     _32(0xf8503fd2),        //zxbd $r20 = $r18
     _32(0x2800040e),        //lhz $r0 = 16 (0x10)[$r14];;
     _32(0xea480015),        //copyd $r18 = $r21
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _64(0x00000008f8040001),        //andw $r1 = $r1, 8192 (0x2000);;
     _32(0x0c7ff601),        //cb.wnez $r1? 2cc28 <__swbuf_r+0x68>;;
     _64(0xb004420efa000000),        //orw $r0 = $r0, 8192 (0x2000)
     _32(0x00000008),        //lwz $r1 = 264 (0x108)[$r14];;
     _32(0x2501040e),        //sh 16 (0x10)[$r14] = $r0;;
     _64(0xb004080ef800ffc1),        //andw $r0 = $r1, -8193 (0xffffffffffffdfff)
     _32(0x07fffff7),        //lwz $r1 = 32 (0x20)[$r14];;
     _32(0x2601420e),        //sw 264 (0x108)[$r14] = $r0;;
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x75091002),        //sbfw $r2 = $r2, $r0;;
     _32(0xf405b081),        //compw.le $r1 = $r1, $r2
     _32(0x71080042),        //addw $r2 = $r2, 1 (0x1);;
     _32(0x0cfff441),        //cb.weqz $r1? 2cc40 <__swbuf_r+0x80>;;
     _32(0x9fffe7aa),        //call 26ba8 <_fflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x0c000280),        //cb.wnez $r0? 2cd34 <__swbuf_r+0x174>;;
     _32(0x97ffffcc),        //goto 2cc40 <__swbuf_r+0x80>
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _32(0x3800000e),        //ld $r0 = 0 (0x0)[$r14];;
     _32(0x1fffe86b),        //call 26ec8 <__sinit>;;
     _32(0x17ffffb4),        //goto 2cbf0 <__swbuf_r+0x30>;;
     _32(0x9fffe7a1),        //call 26ba8 <_fflush_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x0cfff480),        //cb.weqz $r0? 2cc78 <__swbuf_r+0xb8>;;
     _32(0x97ffffd1),        //goto 2cc78 <__swbuf_r+0xb8>
     _64(0x003fffffe048ffc0)        //make $r18 = 4294967295 (0xffffffff);;
 |];

let __swbuf: list_I = 
 [|
     _32(0xea080001),        //copyd $r2 = $r1
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x1000000090000128e00c2000),        //make $r3 = 303232 (0x4a080);;
     _32(0x97ffff9b),        //goto 2cbc0 <__swbuf_r>
     _32(0x38000003),        //ld $r0 = 0 (0x0)[$r3];;
     _32(0x00000000)        //errop ;;
 |];

let _wcrtomb_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f00c),        //addd $r12 = $r12, -64 (0xffffffc0)
     _96(0x0800000088000128e0102000),        //make $r4 = 303232 (0x4a080);;
     _32(0xea380003),        //copyd $r14 = $r3
     _32(0xf808ffc2),        //zxwd $r2 = $r2
     _96(0x9000012aa739060ce0147000),        //make $r5 = 305600 (0x4a9c0)
     _32(0x10000000),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749080c),        //sd 32 (0x20)[$r12] = $r18;;
     _32(0x27410a0c),        //sd 40 (0x28)[$r12] = $r16;;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x88800401),        //cb.deqz $r1? 2cddc <_wcrtomb_r+0x7c>
     _32(0x38101204),        //ld $r4 = 72 (0x48)[$r4];;
     _32(0x71120144),        //cmoved.deqz $r4? $r4 = $r5;;
     _32(0x38103804),        //ld $r4 = 224 (0xe0)[$r4];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _64(0x0ffffffff009b7c1),        //compw.ne $r2 = $r1, 4294967295 (0xffffffff);;
     _32(0x0c800442),        //cb.weqz $r2? 2ce04 <_wcrtomb_r+0xa4>;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3848080c),        //ld $r18 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xf1120144),        //cmoved.deqz $r4? $r4 = $r5
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0x61040c0c),        //addd $r1 = $r12, 48 (0x30);;
     _32(0x38103804),        //ld $r4 = 224 (0xe0)[$r4];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _64(0x0ffffffff009b7c1),        //compw.ne $r2 = $r1, 4294967295 (0xffffffff);;
     _32(0x0c7ffc42),        //cb.wnez $r2? 2cdc4 <_wcrtomb_r+0x64>;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe004008a),        //make $r1 = 138 (0x8a)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2609000e),        //sw 0 (0x0)[$r14] = $r2;;
     _32(0x26050012),        //sw 0 (0x0)[$r18] = $r1;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3848080c),        //ld $r18 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let wcrtomb: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f00c),        //addd $r12 = $r12, -64 (0xffffffc0)
     _96(0x0800000088000128e00c2000),        //make $r3 = 303232 (0x4a080);;
     _32(0xea380002),        //copyd $r14 = $r2
     _32(0xf814ffc1),        //zxwd $r5 = $r1
     _96(0x9000012aa739060ce0187000),        //make $r6 = 305600 (0x4a9c0)
     _32(0x10000000),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x27410a0c),        //sd 40 (0x28)[$r12] = $r16;;
     _32(0x2749080c),        //sd 32 (0x20)[$r12] = $r18;;
     _32(0xea0c0002),        //copyd $r3 = $r2
     _32(0x38480003),        //ld $r18 = 0 (0x0)[$r3];;
     _32(0x88800480),        //cb.deqz $r0? 2ceb8 <wcrtomb+0x88>
     _32(0x38101212),        //ld $r4 = 72 (0x48)[$r18];;
     _32(0xfa080005),        //copyw $r2 = $r5
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x71120184),        //cmoved.deqz $r4? $r4 = $r6;;
     _32(0x38103804),        //ld $r4 = 224 (0xe0)[$r4];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _64(0x0ffffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c800581),        //cb.weqz $r1? 2cef4 <wcrtomb+0xc4>;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3848080c),        //ld $r18 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xea0c0002),        //copyd $r3 = $r2
     _32(0xe1040c0c),        //addd $r1 = $r12, 48 (0x30)
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _96(0x180000009800012ae0147000),        //make $r5 = 305600 (0x4a9c0);;
     _32(0xf1120144),        //cmoved.deqz $r4? $r4 = $r5
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x38103804),        //ld $r4 = 224 (0xe0)[$r4];;
     _32(0x0fdc0004),        //icall $r4;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _64(0x0ffffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c7ffb01),        //cb.wnez $r1? 2cea0 <wcrtomb+0x70>;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe004008a),        //make $r1 = 138 (0x8a)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2609000e),        //sw 0 (0x0)[$r14] = $r2;;
     _32(0x26050012),        //sw 0 (0x0)[$r18] = $r1;;
     _32(0x38400a0c),        //ld $r16 = 40 (0x28)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x3848080c),        //ld $r18 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let adr_start:bits(addr_bits) = 0b00100010011000100000; //0x22620
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_const_global_arrays, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_const_local_arrays, 0b00010111001111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_nonconst_global_arrays, 0b00010111111111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_nonconst_local_arrays, 0b00011001010000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_const_global_member_arrays, 0b00011001111111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_const_local_member_arrays, 0b00011011111111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_nonconst_global_member_arrays, 0b00011101111111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_nonconst_local_member_arrays, 0b00011111111110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_const_union_member_arrays, 0b00100001111110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_nonconst_union_member_arrays, 0b00100010001011101000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00100010011000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00100010011010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_fini_array, 0b00100010011010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_init_array, 0b00100010011100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_printf_r, 0b00100010011110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(printf, 0b00100010011111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r_part_0, 0b00100010100001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r, 0b00100010100010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_signal_r, 0b00100010100011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_raise_r, 0b00100010100101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp_r, 0b00100010101001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(raise, 0b00100010101011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(signal, 0b00100010101100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal, 0b00100010101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp, 0b00100010101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_kill_r, 0b00100010110000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_getpid_r, 0b00100010110010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(strlen, 0b00100010110010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_vfprintf_r, 0b00100010110100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(vfprintf, 0b00100101000111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sbprintf, 0b00100101001000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__swsetup_r, 0b00100101001100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(quorem, 0b00100101010010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_dtoa_r, 0b00100101011011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sflush_r, 0b00100110100100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_fflush_r, 0b00100110101110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fflush, 0b00100110110010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(std, 0b00100110110011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_cleanup_r, 0b00100110110101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__fp_lock, 0b00100110110110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__fp_unlock, 0b00100110110111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sfmoreglue, 0b00100110111000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_cleanup, 0b00100110111010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sinit, 0b00100110111011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sfp, 0b00100110111110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sfp_lock_acquire, 0b00100111000011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sfp_lock_release, 0b00100111000100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sinit_lock_acquire, 0b00100111000100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sinit_lock_release, 0b00100111000100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__fp_lock_all, 0b00100111000100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__fp_unlock_all, 0b00100111000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_trim_r, 0b00100111000111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_free_r, 0b00100111001100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_fwalk, 0b00100111011011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_fwalk_reent, 0b00100111011110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__localeconv_l, 0b00100111100001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_localeconv_r, 0b00100111100001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(localeconv, 0b00100111100010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_setlocale_r, 0b00100111100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__locale_mb_cur_max, 0b00100111100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__locale_ctype_ptr_l, 0b00100111100101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__locale_ctype_ptr, 0b00100111100101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(setlocale, 0b00100111100110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_init, 0b00100111100111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_close, 0b00100111100111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_try_acquire, 0b00100111100111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_acquire, 0b00100111101010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_release, 0b00100111101110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__swhatbuf_r, 0b00100111110001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__smakebuf_r, 0b00100111110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_r, 0b00100111111001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_mbtowc_r, 0b00101000011111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__ascii_mbtowc, 0b00101000100000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(memchr, 0b00101000100001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(memcpy, 0b00101000100101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(memset, 0b00101000101100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_lock, 0b00101000110100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_unlock, 0b00101000110100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_Balloc, 0b00101000110100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_Bfree, 0b00101000110111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__multadd, 0b00101000110111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__s2b, 0b00101000111011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__hi0bits, 0b00101001000000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__lo0bits, 0b00101001000010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__i2b, 0b00101001000101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__multiply, 0b00101001000110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__pow5mult, 0b00101001001111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__lshift, 0b00101001010100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__mcmp, 0b00101001011010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__mdiff, 0b00101001011100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__ulp, 0b00101001100100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__b2d, 0b00101001100110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__d2b, 0b00101001101100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__ratio, 0b00101001110001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_mprec_log10, 0b00101001110101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__copybits, 0b00101001110110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__any_on, 0b00101001111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(cleanup_glue, 0b00101001111010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_reclaim_reent, 0b00101001111011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_sbrk_r, 0b00101001111111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(frexp, 0b00101010000001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sread, 0b00101010000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__seofread, 0b00101010000101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__swrite, 0b00101010000101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sseek, 0b00101010000111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sclose, 0b00101010001001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(strcmp, 0b00101010001001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(strncpy, 0b00101010001100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sprint_r_part_0, 0b00101010001111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sprint_r, 0b00101010010010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_vfiprintf_r, 0b00101010010011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(vfiprintf, 0b00101011011001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sbprintf, 0b00101011011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_wctomb_r, 0b00101011011110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__ascii_wctomb, 0b00101011011111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_write_r, 0b00101011100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_calloc_r, 0b00101011100010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_close_r, 0b00101011100101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_fclose_r, 0b00101011100111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fclose, 0b00101011101110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__fputwc, 0b00101011101110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_fputwc_r, 0b00101011110100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fputwc, 0b00101011110111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_fstat_r, 0b00101011111001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sfvwrite_r, 0b00101011111011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_isatty_r, 0b00101100001111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_lseek_r, 0b00101100010001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(memmove, 0b00101100010011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_read_r, 0b00101100010111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_realloc_r, 0b00101100011001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__swbuf_r, 0b00101100101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__swbuf, 0b00101100110101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_wcrtomb_r, 0b00101100110101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(wcrtomb, 0b00101100111000110000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000022620;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
