// executing pipeline pr58277_1.c.out.dumped test 
val k1_pipeline_pr58277_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_pr58277_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let bar: list_I = 
 [|
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0004800),        //make $r0 = 290080 (0x46d20);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x0fd00000)        //ret ;;
 |];

let baz: list_I = 
 [|
     _32(0x7f03f000),        //nop ;;
     _32(0x0fd00000)        //ret ;;
 |];

let foo: list_I = 
 [|
     _64(0x07ffffffe130200c),        //addd $r12 = $r12, -896 (0xfffffffffffffc80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1ffffff0),        //call 16820 <bar>;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be0003a00),        //make $r0 = 290024 (0x46ce8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08006200),        //cb.dnez $r0? 16ea8 <foo+0x658>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0004600),        //make $r0 = 290072 (0x46d18);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0003c00),        //make $r0 = 290032 (0x46cf0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003400),        //make $r0 = 290000 (0x46cd0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800200),        //cb.deqz $r0? 16900 <foo+0xb0>;;
     _96(0x000000008000011be0003800),        //make $r0 = 290016 (0x46ce0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x10000172),        //goto 16ec4 <foo+0x674>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701dc0c),        //sd 880 (0x370)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701080c),        //sd 32 (0x20)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701100c),        //sd 64 (0x40)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701140c),        //sd 80 (0x50)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701180c),        //sd 96 (0x60)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011c0c),        //sd 112 (0x70)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701200c),        //sd 128 (0x80)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701240c),        //sd 144 (0x90)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701280c),        //sd 160 (0xa0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27012c0c),        //sd 176 (0xb0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701300c),        //sd 192 (0xc0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701320c),        //sd 200 (0xc8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701340c),        //sd 208 (0xd0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701360c),        //sd 216 (0xd8)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701380c),        //sd 224 (0xe0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27013a0c),        //sd 232 (0xe8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27013c0c),        //sd 240 (0xf0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27013e0c),        //sd 248 (0xf8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701400c),        //sd 256 (0x100)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701420c),        //sd 264 (0x108)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701440c),        //sd 272 (0x110)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701460c),        //sd 280 (0x118)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701480c),        //sd 288 (0x120)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27014a0c),        //sd 296 (0x128)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27014c0c),        //sd 304 (0x130)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x27014e0c),        //sd 312 (0x138)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701500c),        //sd 320 (0x140)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701520c),        //sd 328 (0x148)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701540c),        //sd 336 (0x150)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701560c),        //sd 344 (0x158)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701580c),        //sd 352 (0x160)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27015a0c),        //sd 360 (0x168)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27015c0c),        //sd 368 (0x170)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x27015e0c),        //sd 376 (0x178)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701600c),        //sd 384 (0x180)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701620c),        //sd 392 (0x188)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701640c),        //sd 400 (0x190)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701660c),        //sd 408 (0x198)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701680c),        //sd 416 (0x1a0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27016a0c),        //sd 424 (0x1a8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27016c0c),        //sd 432 (0x1b0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27016e0c),        //sd 440 (0x1b8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701700c),        //sd 448 (0x1c0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701720c),        //sd 456 (0x1c8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701740c),        //sd 464 (0x1d0)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x2701760c),        //sd 472 (0x1d8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701780c),        //sd 480 (0x1e0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27017a0c),        //sd 488 (0x1e8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27017c0c),        //sd 496 (0x1f0)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _32(0x27017e0c),        //sd 504 (0x1f8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701800c),        //sd 512 (0x200)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701820c),        //sd 520 (0x208)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701840c),        //sd 528 (0x210)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701860c),        //sd 536 (0x218)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701880c),        //sd 544 (0x220)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a7018a0c),        //sd 552 (0x228)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a7018c0c),        //sd 560 (0x230)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a7018e0c),        //sd 568 (0x238)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701900c),        //sd 576 (0x240)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701920c),        //sd 584 (0x248)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701940c),        //sd 592 (0x250)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701960c),        //sd 600 (0x258)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701980c),        //sd 608 (0x260)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a7019a0c),        //sd 616 (0x268)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a7019c0c),        //sd 624 (0x270)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a7019e0c),        //sd 632 (0x278)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701a00c),        //sd 640 (0x280)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701a20c),        //sd 648 (0x288)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701a40c),        //sd 656 (0x290)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701a60c),        //sd 664 (0x298)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701a80c),        //sd 672 (0x2a0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701aa0c),        //sd 680 (0x2a8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701ac0c),        //sd 688 (0x2b0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701ae0c),        //sd 696 (0x2b8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701b00c),        //sd 704 (0x2c0)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701b20c),        //sd 712 (0x2c8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701b40c),        //sd 720 (0x2d0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701b60c),        //sd 728 (0x2d8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701b80c),        //sd 736 (0x2e0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701ba0c),        //sd 744 (0x2e8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701bc0c),        //sd 752 (0x2f0)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701be0c),        //sd 760 (0x2f8)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701c00c),        //sd 768 (0x300)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701c20c),        //sd 776 (0x308)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701c40c),        //sd 784 (0x310)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701c60c),        //sd 792 (0x318)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701c80c),        //sd 800 (0x320)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701ca0c),        //sd 808 (0x328)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701cc0c),        //sd 816 (0x330)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701ce0c),        //sd 824 (0x338)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701d00c),        //sd 832 (0x340)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701d20c),        //sd 840 (0x348)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a701d40c),        //sd 848 (0x350)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701d60c),        //sd 856 (0x358)[$r12] = $r0;;
     _64(0x00000000e100dc0c),        //addd $r0 = $r12, 880 (0x370);;
     _64(0x18000000a701d80c),        //sd 864 (0x360)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _64(0x18000000a701da0c),        //sd 872 (0x368)[$r12] = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x088003c0),        //cb.deqz $r0? 16dec <foo+0x59c>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000a601df0c),        //sw 892 (0x37c)[$r12] = $r0;;
     _32(0x10000020),        //goto 16e68 <foo+0x618>;;
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003e00),        //make $r0 = 290040 (0x46cf8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be0003e00),        //make $r0 = 290040 (0x46cf8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x17fffeb6),        //goto 16900 <foo+0xb0>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _64(0x18000000b000df0c),        //lwz $r0 = 892 (0x37c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x18000000a601df0c),        //sw 892 (0x37c)[$r12] = $r0;;
     _64(0x18000000b000df0c),        //lwz $r0 = 892 (0x37c)[$r12];;
     _64(0x00000000f401b100),        //compw.le $r0 = $r0, 4 (0x4);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 16e2c <foo+0x5dc>;;
     _96(0x000000008000011be0004400),        //make $r0 = 290064 (0x46d10);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be0004400),        //make $r0 = 290064 (0x46d10);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x17fffe7a),        //goto 1688c <foo+0x3c>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _64(0x00000000e130e00c),        //addd $r12 = $r12, 896 (0x380);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000010ae0007000),        //make $r0 = 272832 (0x429c0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701080c),        //sd 32 (0x20)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701100c),        //sd 64 (0x40)[$r12] = $r0;;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x2701080c),        //sd 32 (0x20)[$r12] = $r0;;
     _96(0x000000008000011be0003600),        //make $r0 = 290008 (0x46cd8);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x10000052),        //goto 170a4 <main+0x1cc>;;
     _32(0x1ffffe3c),        //call 16850 <foo>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08801140),        //cb.deqz $r0? 1707c <main+0x1a4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _96(0x000000008000011be0004200),        //make $r0 = 290056 (0x46d08);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x10000018),        //goto 16fe8 <main+0x110>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x0e7ff900),        //cb.wlez $r0? 16f8c <main+0xb4>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701140c),        //sd 80 (0x50)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601180c),        //sw 96 (0x60)[$r12] = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x6104140c),        //addd $r1 = $r12, 80 (0x50);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _32(0x6100060c),        //addd $r0 = $r12, 24 (0x18);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x6100120c),        //addd $r0 = $r12, 72 (0x48);;
     _32(0x27011c0c),        //sd 112 (0x70)[$r12] = $r0;;
     _32(0x38001c0c),        //ld $r0 = 112 (0x70)[$r12];;
     _32(0x61041a0c),        //addd $r1 = $r12, 104 (0x68);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003600),        //make $r0 = 290008 (0x46cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be0003600),        //make $r0 = 290008 (0x46cd8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003600),        //make $r0 = 290008 (0x46cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087feac0),        //cb.dnez $r0? 16f60 <main+0x88>;;
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x10000045),        //goto 171e0 <main+0x308>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26011f0c),        //sw 124 (0x7c)[$r12] = $r0;;
     _32(0x10000034),        //goto 171a8 <main+0x2d0>;;
     _96(0x000000008000011be0004000),        //make $r0 = 290048 (0x46d00);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0004000),        //make $r0 = 290048 (0x46d00);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30001f0c),        //lwz $r0 = 124 (0x7c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26011f0c),        //sw 124 (0x7c)[$r12] = $r0;;
     _32(0x30001f0c),        //lwz $r0 = 124 (0x7c)[$r12];;
     _64(0x00000000f401b240),        //compw.le $r0 = $r0, 9 (0x9);;
     _32(0x0c7ff280),        //cb.wnez $r0? 170dc <main+0x204>;;
     _96(0x000000008000011be0003200),        //make $r0 = 289992 (0x46cc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be0003200),        //make $r0 = 289992 (0x46cc8);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003200),        //make $r0 = 289992 (0x46cc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x087fee00),        //cb.dnez $r0? 170d0 <main+0x1f8>;;
     _32(0x1ffffd95),        //call 16848 <baz>;;
     _96(0x000000008000011be0004a00),        //make $r0 = 290088 (0x46d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x000000008000010ae0047000),        //make $r1 = 272832 (0x429c0);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x08000080),        //cb.dnez $r0? 17344 <main+0x46c>;;
     _32(0x18000006),        //call 17358 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130200c),        //addd $r12 = $r12, 128 (0x80);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 17730 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 19260 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110111011011000; //0x16ed8
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(bar, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(baz, 0b00010110100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(foo, 0b00010110100001010000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110111011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111001101011000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000016ed8;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, rcount, wcount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, rcount, wcount, adr_end_main);
print_list_data(mD);
}
