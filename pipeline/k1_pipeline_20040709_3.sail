// executing pipeline 20040709_3.c.out.dumped test 
val k1_pipeline_20040709_3: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_20040709_3() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let myrnd: list_I = 
 [|
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x120e3273db003340),        //mulw $r0 = $r0, 1103515245 (0x41c64e6d);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x0000000cf1000e40),        //addw $r0 = $r0, 12345 (0x3039);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023400),        //srlw $r0 = $r0, 16 (0x10);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeA: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 168a0 <retmeA>;;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitA: list_I = 
 [|
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 16a08 <retitA>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testA: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 16af0 <testA+0x50>;;
     _32(0x1fffff56),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 16ac8 <testA+0x28>;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x600807ff),        //make $r2 = 2047 (0x7ff);;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffff3a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffff38),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 168b8 <fn1A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16c6c <testA+0x1cc>;;
     _32(0x18002a24),        //call 214f8 <abort>;;
     _32(0x1ffffeed),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffeeb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 16940 <fn2A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16dd8 <testA+0x338>;;
     _32(0x180029c9),        //call 214f8 <abort>;;
     _32(0x1ffffe92),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffe90),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff00),        //call 16a28 <fn3A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16f08 <testA+0x468>;;
     _32(0x1800297d),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeB: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2800050c),        //lhz $r0 = 20 (0x14)[$r12];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2804070c),        //lhz $r1 = 28 (0x1c)[$r12];;
     _32(0x6203f801),        //insf $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffd8),        //call 16f20 <retmeB>;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x2405060c),        //sb 24 (0x18)[$r12] = $r1;;
     _32(0x6407f200),        //extfz $r1 = $r0, 15 (0xf), 8 (0x8);;
     _32(0x2405064c),        //sb 25 (0x19)[$r12] = $r1;;
     _32(0x65077400),        //extfz $r1 = $r0, 23 (0x17), 16 (0x10);;
     _32(0x2405068c),        //sb 26 (0x1a)[$r12] = $r1;;
     _32(0x6507f600),        //extfz $r1 = $r0, 31 (0x1f), 24 (0x18);;
     _32(0x240506cc),        //sb 27 (0x1b)[$r12] = $r1;;
     _32(0x66077800),        //extfz $r1 = $r0, 39 (0x27), 32 (0x20);;
     _32(0x2405070c),        //sb 28 (0x1c)[$r12] = $r1;;
     _32(0x6603fa00),        //extfz $r0 = $r0, 47 (0x2f), 40 (0x28);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitB: list_I = 
 [|
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 170e8 <retitB>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testB: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 171d0 <testB+0x50>;;
     _32(0x1ffffd9e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b140),        //compw.leu $r0 = $r0, 5 (0x5);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 171a8 <testB+0x28>;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x600807ff),        //make $r2 = 2047 (0x7ff);;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffd82),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd80),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3a),        //call 16f58 <fn1B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x3004068c),        //lwz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30000080),        //lwz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17344 <testB+0x1c4>;;
     _32(0x1800286e),        //call 214f8 <abort>;;
     _32(0x1ffffd37),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd35),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1f),        //call 17018 <fn2B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x3004068c),        //lwz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30000080),        //lwz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 174a8 <testB+0x328>;;
     _32(0x18002815),        //call 214f8 <abort>;;
     _32(0x1ffffcde),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffcdc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff02),        //call 17108 <fn3B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _32(0x3004068c),        //lwz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30000080),        //lwz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 175d0 <testB+0x450>;;
     _32(0x180027cb),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeC: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2800050c),        //lhz $r0 = 20 (0x14)[$r12];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2804070c),        //lhz $r1 = 28 (0x1c)[$r12];;
     _32(0x6203f801),        //insf $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800070c),        //lhz $r0 = 28 (0x1c)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffd8),        //call 175e8 <retmeC>;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x2405060c),        //sb 24 (0x18)[$r12] = $r1;;
     _32(0x6407f200),        //extfz $r1 = $r0, 15 (0xf), 8 (0x8);;
     _32(0x2405064c),        //sb 25 (0x19)[$r12] = $r1;;
     _32(0x65077400),        //extfz $r1 = $r0, 23 (0x17), 16 (0x10);;
     _32(0x2405068c),        //sb 26 (0x1a)[$r12] = $r1;;
     _32(0x6507f600),        //extfz $r1 = $r0, 31 (0x1f), 24 (0x18);;
     _32(0x240506cc),        //sb 27 (0x1b)[$r12] = $r1;;
     _32(0x66077800),        //extfz $r1 = $r0, 39 (0x27), 32 (0x20);;
     _32(0x2405070c),        //sb 28 (0x1c)[$r12] = $r1;;
     _32(0x6603fa00),        //extfz $r0 = $r0, 47 (0x2f), 40 (0x28);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800070c),        //lhz $r0 = 28 (0x1c)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800070c),        //lhz $r0 = 28 (0x1c)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitC: list_I = 
 [|
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 177b0 <retitC>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testC: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17898 <testC+0x50>;;
     _32(0x1ffffbec),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b140),        //compw.leu $r0 = $r0, 5 (0x5);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17870 <testC+0x28>;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x600807ff),        //make $r2 = 2047 (0x7ff);;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffbd0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffbce),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3a),        //call 17620 <fn1C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17a0c <testC+0x1c4>;;
     _32(0x180026bc),        //call 214f8 <abort>;;
     _32(0x1ffffb85),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffb83),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1f),        //call 176e0 <fn2C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17b70 <testC+0x328>;;
     _32(0x18002663),        //call 214f8 <abort>;;
     _32(0x1ffffb2c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffb2a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff02),        //call 177d0 <fn3C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17c98 <testC+0x450>;;
     _32(0x18002619),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeD: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 17cb0 <retmeD>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitD: list_I = 
 [|
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 17e08 <retitD>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testD: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17ef0 <testD+0x50>;;
     _32(0x1ffffa56),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17ec8 <testD+0x28>;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffa39),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffa37),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 17cc8 <fn1D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000dc0),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1809c <testD+0x1fc>;;
     _32(0x18002518),        //call 214f8 <abort>;;
     _32(0x1ffff9e1),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff9df),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff17),        //call 17d48 <fn2D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001140),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18234 <testD+0x394>;;
     _32(0x180024b2),        //call 214f8 <abort>;;
     _32(0x1ffff97b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff979),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffee9),        //call 17e28 <fn3D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000580),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18390 <testD+0x4f0>;;
     _32(0x1800245b),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeE: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 183a8 <retmeE>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitE: list_I = 
 [|
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 18500 <retitE>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testE: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 185e8 <testE+0x50>;;
     _32(0x1ffff898),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 185c0 <testE+0x28>;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff87b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff879),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 183c0 <fn1E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 18780 <testE+0x1e8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 18780 <testE+0x1e8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 18780 <testE+0x1e8>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18780 <testE+0x1e8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18784 <testE+0x1ec>;;
     _32(0x1800235e),        //call 214f8 <abort>;;
     _32(0x1ffff827),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff825),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1b),        //call 18440 <fn2E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 18908 <testE+0x370>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18908 <testE+0x370>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18908 <testE+0x370>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18908 <testE+0x370>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1890c <testE+0x374>;;
     _32(0x180022fc),        //call 214f8 <abort>;;
     _32(0x1ffff7c5),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff7c3),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 18520 <fn3E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 18a54 <testE+0x4bc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 18a54 <testE+0x4bc>;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 18a54 <testE+0x4bc>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18a54 <testE+0x4bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18a58 <testE+0x4c0>;;
     _32(0x180022a9),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeF: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18a70 <retmeF>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitF: list_I = 
 [|
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 18bc8 <retitF>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testF: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 18cb0 <testF+0x50>;;
     _32(0x1ffff6e6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 18c88 <testF+0x28>;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff6c9),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff6c7),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18a88 <fn1F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18e4c <testF+0x1ec>;;
     _32(0x180021ac),        //call 214f8 <abort>;;
     _32(0x1ffff675),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff673),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1b),        //call 18b08 <fn2F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 18fd0 <testF+0x370>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18fd0 <testF+0x370>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18fd0 <testF+0x370>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18fd0 <testF+0x370>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18fd4 <testF+0x374>;;
     _32(0x1800214a),        //call 214f8 <abort>;;
     _32(0x1ffff613),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff611),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 18be8 <fn3F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1911c <testF+0x4bc>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1911c <testF+0x4bc>;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 1911c <testF+0x4bc>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1911c <testF+0x4bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19120 <testF+0x4c0>;;
     _32(0x180020f7),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeG: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x20000a0c),        //lbz $r0 = 40 (0x28)[$r12];;
     _32(0x24010e0c),        //sb 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x20040e0c),        //lbz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x60037081),        //insf $r0 = $r1, 7 (0x7), 2 (0x2);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 19138 <retmeG>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2000060c),        //lbz $r0 = 24 (0x18)[$r12];;
     _32(0x60037001),        //insf $r0 = $r1, 7 (0x7), 0 (0x0);;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x60037081),        //insf $r0 = $r1, 7 (0x7), 2 (0x2);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x60037081),        //insf $r0 = $r1, 7 (0x7), 2 (0x2);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitG: list_I = 
 [|
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 192d0 <retitG>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testG: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 193b8 <testG+0x50>;;
     _32(0x1ffff524),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b200),        //compw.leu $r0 = $r0, 8 (0x8);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19390 <testG+0x28>;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff508),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff506),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 19168 <fn1G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 19524 <testG+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 19524 <testG+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19524 <testG+0x1bc>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19524 <testG+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19528 <testG+0x1c0>;;
     _32(0x18001ff5),        //call 214f8 <abort>;;
     _32(0x1ffff4be),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff4bc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 19208 <fn2G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 19684 <testG+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 19684 <testG+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 19684 <testG+0x31c>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 19684 <testG+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19688 <testG+0x320>;;
     _32(0x18001f9d),        //call 214f8 <abort>;;
     _32(0x1ffff466),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff464),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 192f0 <fn3G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 197a8 <testG+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 197a8 <testG+0x440>;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 197a8 <testG+0x440>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 197a8 <testG+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 197ac <testG+0x444>;;
     _32(0x18001f54),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeH: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x2401044c),        //sb 17 (0x11)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffe1),        //call 197c0 <retmeH>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2000044c),        //lbz $r0 = 17 (0x11)[$r12];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x2401044c),        //sb 17 (0x11)[$r12] = $r0;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x2401044c),        //sb 17 (0x11)[$r12] = $r0;;
     _32(0x2000044c),        //lbz $r0 = 17 (0x11)[$r12];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitH: list_I = 
 [|
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20040040),        //lbz $r1 = 1 (0x1)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _32(0x1fffffea),        //call 198e8 <retitH>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testH: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 199a8 <testH+0x50>;;
     _32(0x1ffff3a8),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19980 <testH+0x28>;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff390),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff38e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff72),        //call 197f0 <fn1H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 19ae8 <testH+0x190>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19ae8 <testH+0x190>;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19ae8 <testH+0x190>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19ae8 <testH+0x190>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19aec <testH+0x194>;;
     _32(0x18001e84),        //call 214f8 <abort>;;
     _32(0x1ffff34d),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff34b),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4d),        //call 19868 <fn2H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19c30 <testH+0x2d8>;;
     _32(0x18001e33),        //call 214f8 <abort>;;
     _32(0x1ffff2fc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff2fa),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff22),        //call 19900 <fn3H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000940),        //cb.wnez $r0? 19d3c <testH+0x3e4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000680),        //cb.wnez $r0? 19d3c <testH+0x3e4>;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19d3c <testH+0x3e4>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19d3c <testH+0x3e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19d40 <testH+0x3e8>;;
     _32(0x18001def),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeI: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x20000a0c),        //lbz $r0 = 40 (0x28)[$r12];;
     _32(0x24010e0c),        //sb 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x20040e0c),        //lbz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x600371c1),        //insf $r0 = $r1, 7 (0x7), 7 (0x7);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 19d58 <retmeI>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2000060c),        //lbz $r0 = 24 (0x18)[$r12];;
     _32(0x60037001),        //insf $r0 = $r1, 7 (0x7), 0 (0x0);;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x600371c1),        //insf $r0 = $r1, 7 (0x7), 7 (0x7);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x600371c1),        //insf $r0 = $r1, 7 (0x7), 7 (0x7);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitI: list_I = 
 [|
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19ef0 <retitI>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testI: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 19fd8 <testI+0x50>;;
     _32(0x1ffff21c),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b200),        //compw.leu $r0 = $r0, 8 (0x8);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19fb0 <testI+0x28>;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff200),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff1fe),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 19d88 <fn1I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a148 <testI+0x1c0>;;
     _32(0x18001ced),        //call 214f8 <abort>;;
     _32(0x1ffff1b6),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff1b4),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 19e28 <fn2I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a2a8 <testI+0x320>;;
     _32(0x18001c95),        //call 214f8 <abort>;;
     _32(0x1ffff15e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff15c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 19f10 <fn3I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1a3c8 <testI+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1a3c8 <testI+0x440>;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a3c8 <testI+0x440>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1a3c8 <testI+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a3cc <testI+0x444>;;
     _32(0x18001c4c),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeJ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1a3e0 <retmeJ>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitJ: list_I = 
 [|
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1a540 <retitJ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testJ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1a628 <testJ+0x50>;;
     _32(0x1ffff088),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1a600 <testJ+0x28>;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6008007f),        //make $r2 = 127 (0x7f);;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff06c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff06a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1a3f8 <fn1J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a790 <testJ+0x1b8>;;
     _32(0x18001b5b),        //call 214f8 <abort>;;
     _32(0x1ffff024),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff022),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1a480 <fn2J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a8e8 <testJ+0x310>;;
     _32(0x18001b05),        //call 214f8 <abort>;;
     _32(0x1fffefce),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffefcc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1a560 <fn3J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1aa04 <testJ+0x42c>;;
     _32(0x18001abe),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeK: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1aa18 <retmeK>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitK: list_I = 
 [|
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1ab78 <retitK>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testK: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ac60 <testK+0x50>;;
     _32(0x1fffeefa),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1ac38 <testK+0x28>;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffeede),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeedc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1aa30 <fn1K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d00),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a31c2),        //srlw $r2 = $r2, 7 (0x7);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2043),        //slld $r3 = $r3, 1 (0x1);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022240),        //slld $r0 = $r0, 9 (0x9);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1adf8 <testK+0x1e8>;;
     _32(0x180019c1),        //call 214f8 <abort>;;
     _32(0x1fffee8a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffee88),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1d),        //call 1aab8 <fn2K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001080),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a31c2),        //srlw $r2 = $r2, 7 (0x7);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2043),        //slld $r3 = $r3, 1 (0x1);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022240),        //slld $r0 = $r0, 9 (0x9);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1af80 <testK+0x370>;;
     _32(0x1800195f),        //call 214f8 <abort>;;
     _32(0x1fffee28),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffee26),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef3),        //call 1ab98 <fn3K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a31c2),        //srlw $r2 = $r2, 7 (0x7);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2043),        //slld $r3 = $r3, 1 (0x1);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022240),        //slld $r0 = $r0, 9 (0x9);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b0cc <testK+0x4bc>;;
     _32(0x1800190c),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeL: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1b0e0 <retmeL>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitL: list_I = 
 [|
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1b240 <retitL>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testL: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b328 <testL+0x50>;;
     _32(0x1fffed48),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b300 <testL+0x28>;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffed2c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffed2a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1b0f8 <fn1L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c00),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b4b0 <testL+0x1d8>;;
     _32(0x18001813),        //call 214f8 <abort>;;
     _32(0x1fffecdc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffecda),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 1b180 <fn2L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000f80),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b628 <testL+0x350>;;
     _32(0x180017b5),        //call 214f8 <abort>;;
     _32(0x1fffec7e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffec7c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 1b260 <fn3L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b764 <testL+0x48c>;;
     _32(0x18001766),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeM: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1b778 <retmeM>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitM: list_I = 
 [|
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1b8d8 <retitM>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testM: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b9c0 <testM+0x50>;;
     _32(0x1fffeba2),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b998 <testM+0x28>;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffeb86),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeb84),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1b790 <fn1M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c00),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20080100),        //lbz $r2 = 4 (0x4)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0140),        //lbz $r3 = 5 (0x5)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000180),        //lbz $r0 = 6 (0x6)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bb48 <testM+0x1d8>;;
     _32(0x1800166d),        //call 214f8 <abort>;;
     _32(0x1fffeb36),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeb34),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 1b818 <fn2M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000f80),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20080100),        //lbz $r2 = 4 (0x4)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0140),        //lbz $r3 = 5 (0x5)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000180),        //lbz $r0 = 6 (0x6)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bcc0 <testM+0x350>;;
     _32(0x1800160f),        //call 214f8 <abort>;;
     _32(0x1fffead8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffead6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 1b8f8 <fn3M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20080100),        //lbz $r2 = 4 (0x4)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0140),        //lbz $r3 = 5 (0x5)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000180),        //lbz $r0 = 6 (0x6)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bdfc <testM+0x48c>;;
     _32(0x180015c0),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeN: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1be10 <retmeN>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitN: list_I = 
 [|
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1bf70 <retitN>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testN: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c058 <testN+0x50>;;
     _32(0x1fffe9fc),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c030 <testN+0x28>;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe9e0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe9de),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1be28 <fn1N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000dc0),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c1fc <testN+0x1f4>;;
     _32(0x180014c0),        //call 214f8 <abort>;;
     _32(0x1fffe989),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe987),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1a),        //call 1beb0 <fn2N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001140),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c390 <testN+0x388>;;
     _32(0x1800145b),        //call 214f8 <abort>;;
     _32(0x1fffe924),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe922),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffeed),        //call 1bf90 <fn3N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c4e8 <testN+0x4e0>;;
     _32(0x18001405),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeO: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1c500 <retmeO>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitO: list_I = 
 [|
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1c668 <retitO>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testO: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c750 <testO+0x50>;;
     _32(0x1fffe83e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c728 <testO+0x28>;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe822),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe820),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1c518 <fn1O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c8e8 <testO+0x1e8>;;
     _32(0x18001305),        //call 214f8 <abort>;;
     _32(0x1fffe7ce),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe7cc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1a),        //call 1c5a0 <fn2O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ca70 <testO+0x370>;;
     _32(0x180012a3),        //call 214f8 <abort>;;
     _32(0x1fffe76c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe76a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef2),        //call 1c688 <fn3O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1cbb8 <testO+0x4b8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1cbb8 <testO+0x4b8>;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cbb8 <testO+0x4b8>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cbb8 <testO+0x4b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cbbc <testO+0x4bc>;;
     _32(0x18001250),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeP: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1cbd0 <retmeP>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitP: list_I = 
 [|
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1cd38 <retitP>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testP: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ce20 <testP+0x50>;;
     _32(0x1fffe68a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1cdf8 <testP+0x28>;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe66e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe66c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1cbe8 <fn1P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cfb8 <testP+0x1e8>;;
     _32(0x18001151),        //call 214f8 <abort>;;
     _32(0x1fffe61a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe618),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1a),        //call 1cc70 <fn2P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 1d13c <testP+0x36c>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d13c <testP+0x36c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d13c <testP+0x36c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d13c <testP+0x36c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d140 <testP+0x370>;;
     _32(0x180010ef),        //call 214f8 <abort>;;
     _32(0x1fffe5b8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe5b6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef2),        //call 1cd58 <fn3P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1d288 <testP+0x4b8>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d288 <testP+0x4b8>;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d288 <testP+0x4b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d288 <testP+0x4b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d28c <testP+0x4bc>;;
     _32(0x1800109c),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeQ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 1d2a0 <retmeQ>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitQ: list_I = 
 [|
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1d440 <retitQ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testQ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1d528 <testQ+0x50>;;
     _32(0x1fffe4c8),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1d500 <testQ+0x28>;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe4ac),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe4aa),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff42),        //call 1d2d0 <fn1Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d69c <testQ+0x1c4>;;
     _32(0x18000f98),        //call 214f8 <abort>;;
     _32(0x1fffe461),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe45f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1f),        //call 1d370 <fn2Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d800 <testQ+0x328>;;
     _32(0x18000f3f),        //call 214f8 <abort>;;
     _32(0x1fffe408),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe406),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff02),        //call 1d460 <fn3Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1d924 <testQ+0x44c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d924 <testQ+0x44c>;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d924 <testQ+0x44c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d924 <testQ+0x44c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d928 <testQ+0x450>;;
     _32(0x18000ef5),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeR: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60031001),        //insf $r0 = $r1, 1 (0x1), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 1d940 <retmeR>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60031001),        //insf $r0 = $r1, 1 (0x1), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60031001),        //insf $r0 = $r1, 1 (0x1), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitR: list_I = 
 [|
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1dad8 <retitR>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testR: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1dbc0 <testR+0x50>;;
     _32(0x1fffe322),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1db98 <testR+0x28>;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080003),        //make $r2 = 3 (0x3);;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe306),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe304),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1d970 <fn1R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1dd30 <testR+0x1c0>;;
     _32(0x18000df3),        //call 214f8 <abort>;;
     _32(0x1fffe2bc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe2ba),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 1da10 <fn2R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1de8c <testR+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1de8c <testR+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1de8c <testR+0x31c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1de8c <testR+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1de90 <testR+0x320>;;
     _32(0x18000d9b),        //call 214f8 <abort>;;
     _32(0x1fffe264),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe262),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 1daf8 <fn3R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1dfb0 <testR+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1dfb0 <testR+0x440>;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1dfb0 <testR+0x440>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1dfb0 <testR+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1dfb4 <testR+0x444>;;
     _32(0x18000d52),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeS: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 1dfc8 <retmeS>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitS: list_I = 
 [|
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e160 <retitS>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testS: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e248 <testS+0x50>;;
     _32(0x1fffe180),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e220 <testS+0x28>;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe164),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe162),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1dff8 <fn1S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e3b8 <testS+0x1c0>;;
     _32(0x18000c51),        //call 214f8 <abort>;;
     _32(0x1fffe11a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe118),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 1e098 <fn2S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1e514 <testS+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1e514 <testS+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1e514 <testS+0x31c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1e514 <testS+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e518 <testS+0x320>;;
     _32(0x18000bf9),        //call 214f8 <abort>;;
     _32(0x1fffe0c2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe0c0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 1e180 <fn3S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1e638 <testS+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1e638 <testS+0x440>;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e638 <testS+0x440>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1e638 <testS+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e63c <testS+0x444>;;
     _32(0x18000bb0),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeT: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1e650 <retmeT>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitT: list_I = 
 [|
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e7b0 <retitT>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testT: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e898 <testT+0x50>;;
     _32(0x1fffdfec),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e870 <testT+0x28>;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdfd0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdfce),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1e668 <fn1T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ea00 <testT+0x1b8>;;
     _32(0x18000abf),        //call 214f8 <abort>;;
     _32(0x1fffdf88),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf86),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1e6f0 <fn2T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1eb58 <testT+0x310>;;
     _32(0x18000a69),        //call 214f8 <abort>;;
     _32(0x1fffdf32),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf30),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1e7d0 <fn3T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ec74 <testT+0x42c>;;
     _32(0x18000a22),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeU: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 1ec88 <retmeU>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitU: list_I = 
 [|
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1ee20 <retitU>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testU: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ef08 <testU+0x50>;;
     _32(0x1fffde50),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1eee0 <testU+0x28>;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffde34),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffde32),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1ecb8 <fn1U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f078 <testU+0x1c0>;;
     _32(0x18000921),        //call 214f8 <abort>;;
     _32(0x1fffddea),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdde8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 1ed58 <fn2U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f1d8 <testU+0x320>;;
     _32(0x180008c9),        //call 214f8 <abort>;;
     _32(0x1fffdd92),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdd90),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 1ee40 <fn3U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1f2f8 <testU+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f2f8 <testU+0x440>;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f2f8 <testU+0x440>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f2f8 <testU+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f2fc <testU+0x444>;;
     _32(0x18000880),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeV: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1f310 <retmeV>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitV: list_I = 
 [|
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1f470 <retitV>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testV: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1f558 <testV+0x50>;;
     _32(0x1fffdcbc),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1f530 <testV+0x28>;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdca0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc9e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1f328 <fn1V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f6b0 <testV+0x1a8>;;
     _32(0x18000793),        //call 214f8 <abort>;;
     _32(0x1fffdc5c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc5a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff2d),        //call 1f3b0 <fn2V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f7f8 <testV+0x2f0>;;
     _32(0x18000741),        //call 214f8 <abort>;;
     _32(0x1fffdc0a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc08),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 1f490 <fn3V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0008c0),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f904 <testV+0x3fc>;;
     _32(0x180006fe),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeW: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 1f918 <retmeW>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitW: list_I = 
 [|
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1fab8 <retitW>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testW: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1fba0 <testW+0x50>;;
     _32(0x1fffdb2a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1fb78 <testW+0x28>;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdb07),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdb05),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 1f948 <fn1W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fd30 <testW+0x1e0>;;
     _32(0x180005f3),        //call 214f8 <abort>;;
     _32(0x1fffdabc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdaba),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff18),        //call 1f9e8 <fn2W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1fe90 <testW+0x340>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1fe90 <testW+0x340>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1fe90 <testW+0x340>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1fe90 <testW+0x340>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fe94 <testW+0x344>;;
     _32(0x1800059a),        //call 214f8 <abort>;;
     _32(0x1fffda63),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffda61),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 1fad8 <fn3W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ffb8 <testW+0x468>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ffb8 <testW+0x468>;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ffb8 <testW+0x468>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ffb8 <testW+0x468>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ffbc <testW+0x46c>;;
     _32(0x18000550),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeX: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 1ffd0 <retmeX>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitX: list_I = 
 [|
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20170 <retitX>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testX: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 20258 <testX+0x50>;;
     _32(0x1fffd97c),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 20230 <testX+0x28>;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050100),        //sd 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd959),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd957),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 20000 <fn1X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 203e8 <testX+0x1e0>;;
     _32(0x18000445),        //call 214f8 <abort>;;
     _32(0x1fffd90e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd90c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff18),        //call 200a0 <fn2X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 20548 <testX+0x340>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 20548 <testX+0x340>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 20548 <testX+0x340>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 20548 <testX+0x340>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 2054c <testX+0x344>;;
     _32(0x180003ec),        //call 214f8 <abort>;;
     _32(0x1fffd8b5),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd8b3),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 20190 <fn3X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 20670 <testX+0x468>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 20670 <testX+0x468>;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20670 <testX+0x468>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20670 <testX+0x468>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20674 <testX+0x46c>;;
     _32(0x180003a2),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeY: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 20688 <retmeY>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitY: list_I = 
 [|
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20828 <retitY>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testY: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 20910 <testY+0x50>;;
     _32(0x1fffd7ce),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 208e8 <testY+0x28>;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050100),        //sd 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd7ab),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd7a9),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 206b8 <fn1Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b40),        //cb.wnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68001fc0),        //andd $r0 = $r0, 127 (0x7f);;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20ab4 <testY+0x1f4>;;
     _32(0x18000292),        //call 214f8 <abort>;;
     _32(0x1fffd75b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd759),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 20758 <fn2Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ec0),        //cb.wnez $r0? 20c28 <testY+0x368>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68001fc0),        //andd $r0 = $r0, 127 (0x7f);;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 20c28 <testY+0x368>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 20c28 <testY+0x368>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 20c28 <testY+0x368>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20c2c <testY+0x36c>;;
     _32(0x18000234),        //call 214f8 <abort>;;
     _32(0x1fffd6fd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd6fb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 20848 <fn3Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 20d64 <testY+0x4a4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68001fc0),        //andd $r0 = $r0, 127 (0x7f);;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 20d64 <testY+0x4a4>;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20d64 <testY+0x4a4>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20d64 <testY+0x4a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20d68 <testY+0x4a8>;;
     _32(0x180001e5),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeZ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 20d80 <retmeZ>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitZ: list_I = 
 [|
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20f20 <retitZ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testZ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 21008 <testZ+0x50>;;
     _32(0x1fffd610),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 20fe0 <testZ+0x28>;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd5ed),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd5eb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 20db0 <fn1Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000280),        //lbz $r0 = 10 (0xa)[$r0];;
     _32(0x680003c0),        //andd $r0 = $r0, 15 (0xf);;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 211ac <testZ+0x1f4>;;
     _32(0x180000d4),        //call 214f8 <abort>;;
     _32(0x1fffd59d),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd59b),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 20e50 <fn2Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000280),        //lbz $r0 = 10 (0xa)[$r0];;
     _32(0x680003c0),        //andd $r0 = $r0, 15 (0xf);;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 21320 <testZ+0x368>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 21320 <testZ+0x368>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 21320 <testZ+0x368>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 21320 <testZ+0x368>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 21324 <testZ+0x36c>;;
     _32(0x18000076),        //call 214f8 <abort>;;
     _32(0x1fffd53f),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd53d),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 20f40 <fn3Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000280),        //lbz $r0 = 10 (0xa)[$r0];;
     _32(0x680003c0),        //andd $r0 = $r0, 15 (0xf);;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 2145c <testZ+0x4a4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 2145c <testZ+0x4a4>;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 2145c <testZ+0x4a4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 2145c <testZ+0x4a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 21460 <testZ+0x4a8>;;
     _32(0x18000027),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffd587),        //call 16aa0 <testA>;;
     _32(0x1fffd73e),        //call 17180 <testB>;;
     _32(0x1fffd8ef),        //call 17848 <testC>;;
     _32(0x1fffda84),        //call 17ea0 <testD>;;
     _32(0x1fffdc41),        //call 18598 <testE>;;
     _32(0x1fffddf2),        //call 18c60 <testF>;;
     _32(0x1fffdfb3),        //call 19368 <testG>;;
     _32(0x1fffe12e),        //call 19958 <testH>;;
     _32(0x1fffe2b9),        //call 19f88 <testI>;;
     _32(0x1fffe44c),        //call 1a5d8 <testJ>;;
     _32(0x1fffe5d9),        //call 1ac10 <testK>;;
     _32(0x1fffe78a),        //call 1b2d8 <testL>;;
     _32(0x1fffe92f),        //call 1b970 <testM>;;
     _32(0x1fffead4),        //call 1c008 <testN>;;
     _32(0x1fffec91),        //call 1c700 <testO>;;
     _32(0x1fffee44),        //call 1cdd0 <testP>;;
     _32(0x1ffff005),        //call 1d4d8 <testQ>;;
     _32(0x1ffff1aa),        //call 1db70 <testR>;;
     _32(0x1ffff34b),        //call 1e1f8 <testS>;;
     _32(0x1ffff4de),        //call 1e848 <testT>;;
     _32(0x1ffff679),        //call 1eeb8 <testU>;;
     _32(0x1ffff80c),        //call 1f508 <testV>;;
     _32(0x1ffff99d),        //call 1fb50 <testW>;;
     _32(0x1ffffb4a),        //call 20208 <testX>;;
     _32(0x1ffffcf7),        //call 208c0 <testY>;;
     _32(0x1ffffeb4),        //call 20fb8 <testZ>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 21518 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 21918 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 235f0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 21ab0 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000128e000f000),        //make $r0 = 304064 (0x4a3c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 21554 <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 235f0 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_fini_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x80000104a749040ce0480000),        //make $r18 = 266240 (0x41000)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _96(0x80000104a739020ce5380012),        //sbfd $r14 = $r18, 266240 (0x41000)
     _32(0x00000000),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa3a20ce),        //srad $r14 = $r14, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x0880014e),        //cb.deqz $r14? 215a4 <__libc_fini_array+0x44>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x3802f392),        //ld.xs $r0 = $r14[$r18];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x087fff4e),        //cb.dnez $r14? 21594 <__libc_fini_array+0x34>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_init_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x80000104a849020ce04c0000),        //make $r19 = 266240 (0x41000)
     _32(0x00000000),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x88000104a739000ce5480013),        //sbfd $r18 = $r19, 266240 (0x41000)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xfa4a20d2),        //srad $r18 = $r18, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x08800192),        //cb.deqz $r18? 2160c <__libc_init_array+0x4c>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 215f8 <__libc_init_array+0x38>;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x0800000088000104e04c0000),        //make $r19 = 266240 (0x41000);;
     _96(0x0000000080000104e5480013),        //sbfd $r18 = $r19, 266240 (0x41000);;
     _32(0x7a4a20d2),        //srad $r18 = $r18, 3 (0x3);;
     _32(0x08800192),        //cb.deqz $r18? 21644 <__libc_init_array+0x84>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 21630 <__libc_init_array+0x70>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _init_signal_r_part_0: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040100),        //make $r1 = 256 (0x100);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000221),        //call 21ef8 <_malloc_r>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x888003c0),        //cb.deqz $r0? 216b8 <_init_signal_r.part.0+0x58>
     _64(0x18000001a701460e),        //sd 1304 (0x518)[$r14] = $r0;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x0f0000c1),        //loopdo $r1, 216a0 <_init_signal_r.part.0+0x40>;;
     _32(0xe1080042),        //addd $r2 = $r2, 1 (0x1)
     _32(0x270ff080),        //sd.xs $r2[$r0] = $r3;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x97fffffb),        //goto 216a4 <_init_signal_r.part.0+0x44>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal_r: list_I = 
 [|
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 216dc <_init_signal_r+0x14>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffffe1)        //goto 21660 <_init_signal_r.part.0>;;
 |];

let _signal_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f80db7c1),        //compw.leu $r3 = $r1, 31 (0x1f);;
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800383),        //cb.weqz $r3? 2173c <_signal_r+0x5c>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088004c2),        //cb.deqz $r2? 21760 <_signal_r+0x80>;;
     _32(0x6907f013),        //sxwd $r1 = $r19;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x274bf042),        //sd.xs $r1[$r2] = $r18;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffffc0),        //call 21660 <_init_signal_r.part.0>;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb81),        //cb.wnez $r1? 21724 <_signal_r+0x44>;;
     _32(0x97ffffea),        //goto 21718 <_signal_r+0x38>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x7f03f000)        //nop ;;
 |];

let _raise_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe907f012),        //sxwd $r1 = $r18
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800a82),        //cb.weqz $r2? 21850 <_raise_r+0xd0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8004600),        //ld $r0 = 1304 (0x518)[$r0];;
     _32(0x08800440),        //cb.deqz $r0? 217fc <_raise_r+0x7c>;;
     _32(0x380ef040),        //ld.xs $r3 = $r1[$r0];;
     _32(0xe1110043),        //compd.eq $r4 = $r3, 1 (0x1)
     _32(0x6009ffc3),        //compd.ne $r2 = $r3, -1 (0xffffffff);;
     _32(0x08800343),        //cb.deqz $r3? 217fc <_raise_r+0x7c>;;
     _32(0x08000144),        //cb.dnez $r4? 217e0 <_raise_r+0x60>;;
     _32(0x08800582),        //cb.deqz $r2? 21828 <_raise_r+0xa8>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x274ff040),        //sd.xs $r1[$r0] = $r19;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x980000ab),        //call 21aa8 <_getpid_r>
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0xfa080012),        //copyw $r2 = $r18
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000007f),        //goto 21a20 <_kill_r>;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _32(0x604c0001),        //make $r19 = 1 (0x1);;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _64(0x083fffffe04cffc0),        //make $r19 = 4294967295 (0xffffffff);;
     _32(0x97ffffe1),        //goto 217e0 <_raise_r+0x60>
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sigtramp_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x8c800802),        //cb.weqz $r2? 21908 <__sigtramp_r+0xa0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088005c2),        //cb.deqz $r2? 218f4 <__sigtramp_r+0x8c>;;
     _32(0xe90ff012),        //sxwd $r3 = $r18
     _32(0xf4118092),        //addx8wd $r4 = $r18, $r2
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x380af0c2),        //ld.xs $r2 = $r3[$r2];;
     _32(0x6105ffc2),        //compd.eq $r1 = $r2, -1 (0xffffffff);;
     _32(0x088002c2),        //cb.deqz $r2? 218dc <__sigtramp_r+0x74>;;
     _32(0x88000281),        //cb.dnez $r1? 218dc <__sigtramp_r+0x74>
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0xe1050042),        //compd.eq $r1 = $r2, 1 (0x1)
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x08000181),        //cb.dnez $r1? 218dc <__sigtramp_r+0x74>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x7a000012),        //copyw $r0 = $r18;;
     _32(0x8fdc0002),        //icall $r2
     _32(0x27050004),        //sd 0 (0x0)[$r4] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffff5b),        //call 21660 <_init_signal_r.part.0>;;
     _32(0x0c000100),        //cb.wnez $r0? 21908 <__sigtramp_r+0xa0>;;
     _32(0x97ffffe8),        //goto 2189c <__sigtramp_r+0x34>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x97fffff5),        //goto 218dc <__sigtramp_r+0x74>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let raise: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000124e0081000),        //make $r2 = 299072 (0x49040);;
     _32(0x97ffff96),        //goto 21780 <_raise_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let signal: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000124e00c1000),        //make $r3 = 299072 (0x49040);;
     _32(0xea380001),        //copyd $r14 = $r1
     _64(0xa739000cf809b7c0),        //compw.leu $r2 = $r0, 31 (0x1f)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf848ffc0),        //zxwd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x8c800382),        //cb.weqz $r2? 21998 <signal+0x68>
     _32(0x384c0003),        //ld $r19 = 0 (0x0)[$r3];;
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x088004c2),        //cb.deqz $r2? 219bc <signal+0x8c>;;
     _32(0x6907f012),        //sxwd $r1 = $r18;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x273bf042),        //sd.xs $r1[$r2] = $r14;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffff29),        //call 21660 <_init_signal_r.part.0>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb41),        //cb.wnez $r1? 21980 <signal+0x50>;;
     _32(0x97ffffe9),        //goto 21974 <signal+0x44>
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal: list_I = 
 [|
     _96(0x0000000080000124e0001000),        //make $r0 = 299072 (0x49040);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 21a04 <_init_signal+0x24>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffff17)        //goto 21660 <_init_signal_r.part.0>;;
 |];

let __sigtramp: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000124e0081000),        //make $r2 = 299072 (0x49040);;
     _32(0x97ffff94),        //goto 21868 <__sigtramp_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let _kill_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xfa040002),        //copyw $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000003),        //copyw $r0 = $r3
     _96(0x88000143a749040ce0487400),        //make $r18 = 331216 (0x50dd0)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x9800075f),        //call 237d0 <_kill>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 21a80 <_kill_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 21a68 <_kill_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _getpid_r: list_I = 
 [|
     _32(0x10000756),        //goto 23800 <_getpid>;;
     _32(0x00000000)        //errop ;;
 |];

let __call_exitprocs: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0xf858ffc0),        //zxwd $r22 = $r0
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _96(0x90000132a855080ce0007000),        //make $r0 = 313792 (0x4c9c0)
     _32(0x10000000),        //so 32 (0x20)[$r12] = $r20r21r22r23;;
     _32(0xea680001),        //copyd $r26 = $r1
     _96(0x88000091a865100ce05c8800),        //make $r23 = 149024 (0x24620)
     _32(0x08000000),        //so 64 (0x40)[$r12] = $r24r25r26r27;;
     _32(0xe04c0001),        //make $r19 = 1 (0x1)
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x27411e0c),        //sd 120 (0x78)[$r12] = $r16;;
     _32(0x2871180c),        //sq 96 (0x60)[$r12] = $r28r29;;
     _32(0x98000090),        //call 21d38 <__libc_lock_acquire>
     _32(0x27791c0c),        //sd 112 (0x70)[$r12] = $r30;;
     _96(0x0000000080000128e000f000),        //make $r0 = 304064 (0x4a3c0);;
     _32(0x38600000),        //ld $r24 = 0 (0x0)[$r0];;
     _32(0x61647e18),        //addd $r25 = $r24, 504 (0x1f8);;
     _32(0xea780019),        //copyd $r30 = $r25
     _32(0x38487e18),        //ld $r18 = 504 (0x1f8)[$r24];;
     _32(0x08800c52),        //cb.deqz $r18? 21be0 <__call_exitprocs+0x130>;;
     _32(0xe16c0412),        //addd $r27 = $r18, 16 (0x10)
     _32(0xe1544412),        //addd $r21 = $r18, 272 (0x110)
     _64(0xb0000212e1748412),        //addd $r29 = $r18, 528 (0x210)
     _32(0x10000000),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x693bf000),        //sxwd $r14 = $r0;;
     _32(0x0d800100),        //cb.wgez $r0? 21b4c <__call_exitprocs+0x9c>;;
     _32(0x1000001e),        //goto 21bb8 <__call_exitprocs+0x108>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x0d00070e),        //cb.wltz $r14? 21bb8 <__call_exitprocs+0x108>;;
     _32(0x8880015a),        //cb.deqz $r26? 21b60 <__call_exitprocs+0xb0>
     _32(0x7808ffce),        //zxwd $r2 = $r14;;
     _32(0x3802f39d),        //ld.xs $r0 = $r14[$r29];;
     _32(0x7101a680),        //compd.eq $r0 = $r0, $r26;;
     _32(0x08fffe80),        //cb.deqz $r0? 21b44 <__call_exitprocs+0x94>;;
     _32(0x30000212),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x380ef39b),        //ld.xs $r3 = $r14[$r27];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7001b380),        //compw.ne $r0 = $r0, $r14;;
     _32(0x0c800c80),        //cb.weqz $r0? 21c38 <__call_exitprocs+0x188>;;
     _32(0x2753f39b),        //sd.xs $r14[$r27] = $r20;;
     _32(0x08fffcc3),        //cb.deqz $r3? 21b44 <__call_exitprocs+0x94>;;
     _32(0xf90a7093),        //sllw $r2 = $r19, $r2
     _64(0x18000000b000c412),        //lwz $r0 = 784 (0x310)[$r18];;
     _32(0x30700212),        //lwz $r28 = 8 (0x8)[$r18];;
     _32(0x78011080),        //andw $r0 = $r0, $r2;;
     _32(0x0c000840),        //cb.wnez $r0? 21c14 <__call_exitprocs+0x164>;;
     _32(0x0fdc0003),        //icall $r3;;
     _32(0xe138ffce),        //addd $r14 = $r14, -1 (0xffffffff)
     _32(0x30000212),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x7001b700),        //compw.ne $r0 = $r0, $r28;;
     _32(0x0c7ff700),        //cb.wnez $r0? 21b14 <__call_exitprocs+0x64>;;
     _32(0x3800001e),        //ld $r0 = 0 (0x0)[$r30];;
     _32(0x7001a480),        //compd.ne $r0 = $r0, $r18;;
     _32(0x087ff640),        //cb.dnez $r0? 21b14 <__call_exitprocs+0x64>;;
     _32(0x0dfff98e),        //cb.wgez $r14? 21b4c <__call_exitprocs+0x9c>;;
     _32(0x08800297),        //cb.deqz $r23? 21be0 <__call_exitprocs+0x130>;;
     _32(0x30000212),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x38040012),        //ld $r1 = 0 (0x0)[$r18];;
     _32(0x0c000840),        //cb.wnez $r0? 21c48 <__call_exitprocs+0x198>;;
     _32(0x08800801),        //cb.deqz $r1? 21c48 <__call_exitprocs+0x198>;;
     _32(0x8fdc0017),        //icall $r23
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x2705001e),        //sd 0 (0x0)[$r30] = $r1;;
     _32(0x3848001e),        //ld $r18 = 0 (0x0)[$r30];;
     _32(0x087ff452),        //cb.dnez $r18? 21b20 <__call_exitprocs+0x70>;;
     _96(0x80000132b8401e0ce0007000),        //make $r0 = 313792 (0x4c9c0)
     _32(0x00000000),        //ld $r16 = 120 (0x78)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x3c54080c),        //lo $r20r21r22r23 = 32 (0x20)[$r12];;
     _32(0x3c64100c),        //lo $r24r25r26r27 = 64 (0x40)[$r12];;
     _32(0x3c70180c),        //lq $r28r29 = 96 (0x60)[$r12];;
     _32(0xe130200c),        //addd $r12 = $r12, 128 (0x80)
     _32(0x38781c0c),        //ld $r30 = 112 (0x70)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000008e),        //goto 21e48 <__libc_lock_release>;;
     _64(0x18000000b010c512),        //lwz $r4 = 788 (0x314)[$r18];;
     _32(0x3802f395),        //ld.xs $r0 = $r14[$r21];;
     _32(0x78091084),        //andw $r2 = $r4, $r2;;
     _32(0x0c0001c2),        //cb.wnez $r2? 21c40 <__call_exitprocs+0x190>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x7a000016),        //copyw $r0 = $r22;;
     _32(0x17ffffd9),        //goto 21b98 <__call_exitprocs+0xe8>;;
     _32(0x97ffffd0),        //goto 21b78 <__call_exitprocs+0xc8>
     _32(0x26090212),        //sw 8 (0x8)[$r18] = $r2;;
     _32(0x0fdc0003),        //icall $r3;;
     _32(0x17ffffd5),        //goto 21b98 <__call_exitprocs+0xe8>;;
     _32(0xea780012),        //copyd $r30 = $r18
     _32(0x6a480001),        //copyd $r18 = $r1;;
     _32(0x087fed12),        //cb.dnez $r18? 21b20 <__call_exitprocs+0x70>;;
     _32(0x17ffffe3)        //goto 21be0 <__call_exitprocs+0x130>;;
 |];

let __libc_lock_init: list_I = 
 [|
     _32(0x08800080),        //cb.deqz $r0? 21c60 <__libc_lock_init+0x8>;;
     _32(0x100042bd),        //goto 32750 <__cos_recursive_initlock_base>;;
     _32(0x00000000),        //errop ;;
     _32(0x100042bb)        //goto 32750 <__cos_recursive_initlock_base>;;
 |];

let __libc_lock_close: list_I = 
 [|
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_try_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0xf0055081),        //addx2w $r1 = $r1, $r2
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x980042b3),        //call 32760 <__cos_recursive_trylock_base>
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _64(0x00000000f005b040),        //compw.ne $r1 = $r0, 1 (0x1);;
     _32(0x0c8001c1),        //cb.weqz $r1? 21cc0 <__libc_lock_try_acquire+0x50>;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x0000000080000000e0040000),        //make $r1 = 0 (0x0);;
     _32(0x08000201),        //cb.dnez $r1? 21cec <__libc_lock_try_acquire+0x7c>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x80000000e0080000e0040040),        //make $r1 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r2 = 0 (0x0);;
     _32(0xe0090002),        //compd.ne $r2 = $r2, 0 (0x0)
     _64(0x08000000f505b041),        //compw.gt $r1 = $r1, 1 (0x1);;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 21d24 <__libc_lock_try_acquire+0xb4>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x97ffffee),        //goto 21cd4 <__libc_lock_try_acquire+0x64>
     _32(0x3fcd0000),        //fence ;;
     _32(0x980040bb),        //call 32010 <mppa_cos_l2_wb_inval>
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x97fffffb),        //goto 21d1c <__libc_lock_try_acquire+0xac>
     _32(0x3f8d0000)        //dinval ;;
 |];

let __libc_lock_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0xe407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78383fc2),        //zxbd $r14 = $r2;;
     _32(0xf0395381),        //addx2w $r14 = $r1, $r14
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xf14c004e),        //addw $r19 = $r14, 1 (0x1)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xf138004e),        //addw $r14 = $r14, 1 (0x1)
     _32(0x27510a0c),        //sd 40 (0x28)[$r12] = $r20;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x9fffffbe),        //call 21c70 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c800380),        //cb.weqz $r0? 21db8 <__libc_lock_acquire+0x80>;;
     _32(0x26510e0c),        //sw 56 (0x38)[$r12] = $r20;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7705b4c1),        //compw.geu $r1 = $r1, $r19;;
     _32(0x0c7ffe81),        //cb.wnez $r1? 21d78 <__libc_lock_acquire+0x40>;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x26050e0c),        //sw 56 (0x38)[$r12] = $r1;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7605b381),        //compw.ltu $r1 = $r1, $r14;;
     _32(0x0c7ffec1),        //cb.wnez $r1? 21d94 <__libc_lock_acquire+0x5c>;;
     _32(0x9fffffb1),        //call 21c70 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c7ffd00),        //cb.wnez $r0? 21d84 <__libc_lock_acquire+0x4c>;;
     _96(0x0000000080000000e0000000),        //make $r0 = 0 (0x0);;
     _32(0x08000240),        //cb.dnez $r0? 21de8 <__libc_lock_acquire+0xb0>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _96(0x80000000e0040000e0000040),        //make $r0 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r1 = 0 (0x0);;
     _32(0xe0050001),        //compd.ne $r1 = $r1, 0 (0x0)
     _64(0x08000000f501b040),        //compw.gt $r0 = $r0, 1 (0x1);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c000280),        //cb.wnez $r0? 21e38 <__libc_lock_acquire+0x100>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _32(0x18004076),        //call 32010 <mppa_cos_l2_wb_inval>;;
     _32(0x97fffff7),        //goto 21e18 <__libc_lock_acquire+0xe0>
     _32(0x3f8d0000),        //dinval ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_release: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0xf80c3fc2),        //zxbd $r3 = $r2
     _96(0x1000000090000000e0080000),        //make $r2 = 0 (0x0);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x700550c1),        //addx2w $r1 = $r1, $r3;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x880001c2),        //cb.dnez $r2? 21e98 <__libc_lock_release+0x50>
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10004285),        //goto 328a8 <__cos_recursive_unlock_base>;;
     _96(0x80000000e00c0000e0080040),        //make $r2 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r3 = 0 (0x0);;
     _32(0xe00d0003),        //compd.ne $r3 = $r3, 0 (0x0)
     _64(0x08000000f509b042),        //compw.gt $r2 = $r2, 1 (0x1);;
     _32(0x780910c2),        //andw $r2 = $r2, $r3;;
     _32(0x0c0001c2),        //cb.wnez $r2? 21edc <__libc_lock_release+0x94>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10004274),        //goto 328a8 <__cos_recursive_unlock_base>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x9800404c),        //call 32010 <mppa_cos_l2_wb_inval>
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x97fffff6),        //goto 21ec8 <__libc_lock_release+0x80>
     _32(0x3f8d0000)        //dinval ;;
 |];

let _malloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xe14805c1),        //addd $r18 = $r1, 23 (0x17)
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe9090b92),        //compd.gtu $r2 = $r18, 46 (0x2e)
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x88000982),        //cb.dnez $r2? 21fb4 <_malloc_r+0xbc>
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0xe9050801),        //compd.gtu $r1 = $r1, 32 (0x20)
     _32(0x60480020),        //make $r18 = 32 (0x20);;
     _32(0x08002ac1),        //cb.dnez $r1? 221d8 <_malloc_r+0x2e0>;;
     _32(0x18000258),        //call 22890 <__malloc_lock>;;
     _32(0xe0000050),        //make $r0 = 80 (0x50)
     _32(0x60140004),        //make $r5 = 4 (0x4);;
     _96(0x80000126b8386600e1086400),        //addd $r2 = $r0, 301456 (0x49990)
     _96(0x180000009800012680000000),        //ld $r14 = 301464 (0x49998)[$r0];;
     _32(0x6104fc02),        //addd $r1 = $r2, -16 (0xfffffff0);;
     _32(0x7005a04e),        //compd.ne $r1 = $r14, $r1;;
     _32(0x08802a81),        //cb.deqz $r1? 22204 <_malloc_r+0x30c>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0x27090603),        //sd 24 (0x18)[$r3] = $r2;;
     _32(0x270d0402),        //sd 16 (0x10)[$r2] = $r3;;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x98000246),        //call 228a0 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x6848fc12),        //andd $r18 = $r18, -16 (0xfffffff0);;
     _32(0xf905a481),        //compd.gtu $r1 = $r1, $r18
     _64(0x081fffffe909ffd2),        //compd.gtu $r2 = $r18, 2147483647 (0x7fffffff);;
     _32(0x7a051042),        //orw $r1 = $r2, $r1;;
     _32(0x0c002101),        //cb.wnez $r1? 221d8 <_malloc_r+0x2e0>;;
     _32(0x18000231),        //call 22890 <__malloc_lock>;;
     _32(0xe9017dd2),        //compd.gtu $r0 = $r18, 503 (0x1f7)
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _32(0xe0140040),        //make $r5 = 64 (0x40)
     _32(0x6018003f),        //make $r6 = 63 (0x3f);;
     _32(0x088065c0),        //cb.deqz $r0? 2263c <_malloc_r+0x744>;;
     _32(0x7b022252),        //srld $r0 = $r18, 9 (0x9);;
     _32(0x08004700),        //cb.dnez $r0? 22458 <_malloc_r+0x560>;;
     _96(0x80000126b8386604e1106004),        //addd $r4 = $r4, 301440 (0x49980)
     _96(0x180000009800012680000000),        //ld $r14 = 301464 (0x49998)[$r4];;
     _32(0x7101a384),        //compd.eq $r0 = $r4, $r14;;
     _32(0x08800180),        //cb.deqz $r0? 22020 <_malloc_r+0x128>;;
     _32(0x1000000b),        //goto 22038 <_malloc_r+0x140>;;
     _32(0x09804e02),        //cb.dgez $r2? 224f0 <_malloc_r+0x5f8>;;
     _32(0x3838060e),        //ld $r14 = 24 (0x18)[$r14];;
     _32(0x7005a384),        //compd.ne $r1 = $r4, $r14;;
     _32(0x088001c1),        //cb.deqz $r1? 22038 <_malloc_r+0x140>;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x75090052),        //sbfd $r2 = $r18, $r1;;
     _32(0x650d07c2),        //compd.gt $r3 = $r2, 31 (0x1f);;
     _32(0x08fffe03),        //cb.deqz $r3? 22010 <_malloc_r+0x118>;;
     _32(0x6a140006),        //copyd $r5 = $r6;;
     _96(0x0000000080000126e0506400),        //make $r20 = 301456 (0x49990);;
     _32(0xe1040414),        //addd $r1 = $r20, 16 (0x10)
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x08801e80),        //cb.deqz $r0? 22238 <_malloc_r+0x340>;;
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x750d0092),        //sbfd $r3 = $r18, $r2;;
     _32(0x640107c3),        //compd.le $r0 = $r3, 31 (0x1f);;
     _32(0x08805f40),        //cb.deqz $r0? 22658 <_malloc_r+0x760>;;
     _32(0xe9017fc2),        //compd.gtu $r0 = $r2, 511 (0x1ff)
     _32(0x27050a14),        //sd 40 (0x28)[$r20] = $r1;;
     _32(0x89804103),        //cb.dgez $r3? 22480 <_malloc_r+0x588>
     _32(0x27050814),        //sd 32 (0x20)[$r20] = $r1;;
     _32(0x08004c40),        //cb.dnez $r0? 2253c <_malloc_r+0x644>;;
     _32(0xe60b20c2),        //extfz $r2 = $r2, 34 (0x22), 3 (0x3)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x380c0214),        //ld $r3 = 8 (0x8)[$r20];;
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0xf9063041),        //sllw $r1 = $r1, 1 (0x1)
     _32(0x790a6080),        //slld $r2 = $r0, $r2;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _32(0x7a0900c2),        //ord $r2 = $r2, $r3;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x27090214),        //sd 8 (0x8)[$r20] = $r2;;
     _96(0x80000126b8046400e10c6000),        //addd $r3 = $r0, 301440 (0x49980)
     _96(0x180000009800012680000000),        //ld $r1 = 301456 (0x49990)[$r0];;
     _32(0x270d060e),        //sd 24 (0x18)[$r14] = $r3;;
     _32(0x2705040e),        //sd 16 (0x10)[$r14] = $r1;;
     _96(0x1800000098000126a7396400),        //sd 301456 (0x49990)[$r0] = $r14;;
     _32(0x27390601),        //sd 24 (0x18)[$r1] = $r14;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0x601c0001),        //make $r7 = 1 (0x1);;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08001680),        //cb.dnez $r0? 22250 <_malloc_r+0x358>;;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x080002c0),        //cb.dnez $r0? 2211c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x7814ff05),        //andw $r5 = $r5, -4 (0xfffffffc);;
     _32(0xf8010087),        //andd $r0 = $r7, $r2
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x08000140),        //cb.dnez $r0? 2211c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x08ffff40),        //cb.deqz $r0? 2210c <_malloc_r+0x214>;;
     _96(0x0000000080000126e0286400),        //make $r10 = 301456 (0x49990);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x6a240005),        //copyd $r9 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _64(0x07fffffff4018400),        //addx8wd $r0 = $r0, 4294967280 (0xfffffff0);;
     _96(0x0000000080000126e1006400),        //addd $r0 = $r0, 301456 (0x49990);;
     _32(0x6a200000),        //copyd $r8 = $r0;;
     _32(0x38040608),        //ld $r1 = 24 (0x18)[$r8];;
     _32(0x7109a048),        //compd.eq $r2 = $r8, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 22164 <_malloc_r+0x26c>;;
     _32(0x10000128),        //goto 225f8 <_malloc_r+0x700>;;
     _32(0x09804b43),        //cb.dgez $r3? 22610 <_malloc_r+0x718>;;
     _32(0x08804986),        //cb.deqz $r6? 225f8 <_malloc_r+0x700>;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x38040601),        //ld $r1 = 24 (0x18)[$r1];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0xf50d0092),        //sbfd $r3 = $r18, $r2
     _32(0x7019a048),        //compd.ne $r6 = $r8, $r1;;
     _32(0x641107c3),        //compd.le $r4 = $r3, 31 (0x1f);;
     _32(0x087ffdc4),        //cb.dnez $r4? 2215c <_malloc_r+0x264>;;
     _32(0xea000052),        //ord $r0 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _96(0x90000126b818040ee0106400),        //make $r4 = 301456 (0x49990)
     _32(0x10000000),        //ld $r6 = 16 (0x10)[$r14];;
     _32(0xe1140404),        //addd $r5 = $r4, 16 (0x10)
     _32(0xea1c0043),        //ord $r7 = $r3, 1 (0x1)
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x2701020e),        //sd 8 (0x8)[$r14] = $r0;;
     _32(0x27050606),        //sd 24 (0x18)[$r6] = $r1;;
     _32(0x27190401),        //sd 16 (0x10)[$r1] = $r6;;
     _32(0x27490a04),        //sd 40 (0x28)[$r4] = $r18;;
     _32(0x27490804),        //sd 32 (0x20)[$r4] = $r18;;
     _32(0x27150612),        //sd 24 (0x18)[$r18] = $r5;;
     _32(0x27150412),        //sd 16 (0x10)[$r18] = $r5;;
     _32(0x271d0212),        //sd 8 (0x8)[$r18] = $r7;;
     _32(0x980001b6),        //call 228a0 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x90000005),        //goto 221e4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xe004000c),        //make $r1 = 12 (0xc)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf1140085),        //addw $r5 = $r5, 2 (0x2)
     _96(0x88000126b8386a00e0506400),        //make $r20 = 301456 (0x49990)
     _96(0x180000009800012688000000),        //ld $r14 = 301480 (0x499a8)[$r0];;
     _32(0x61040414),        //addd $r1 = $r20, 16 (0x10);;
     _32(0x7109a382),        //compd.eq $r2 = $r2, $r14;;
     _32(0x08ffd382),        //cb.deqz $r2? 21f60 <_malloc_r+0x68>;;
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x087fe200),        //cb.dnez $r0? 22054 <_malloc_r+0x15c>;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x38080214),        //ld $r2 = 8 (0x8)[$r20];;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08ffea00),        //cb.deqz $r0? 220ec <_malloc_r+0x1f4>;;
     _96(0x80000126e06c6000e0646400),        //make $r25 = 301456 (0x49990)
     _96(0x080000008800012680000000),        //make $r27 = 301440 (0x49980);;
     _96(0x80000132b8380419e0688000),        //make $r26 = 313856 (0x4ca00)
     _32(0x00000000),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x3858020e),        //ld $r22 = 8 (0x8)[$r14];;
     _32(0x6858ff16),        //andd $r22 = $r22, -4 (0xfffffffc);;
     _32(0xf5010592),        //sbfd $r0 = $r18, $r22
     _32(0xf909a592),        //compd.gtu $r2 = $r18, $r22
     _32(0x7161058e),        //addd $r24 = $r14, $r22;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0c8020c1),        //cb.weqz $r1? 224a0 <_malloc_r+0x5a8>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _96(0x88000132b808001be0048e00),        //make $r1 = 313912 (0x4ca38)
     _32(0x08000000),        //ld $r2 = 0 (0x0)[$r27];;
     _32(0x38540001),        //ld $r21 = 0 (0x0)[$r1];;
     _32(0x6009ffc2),        //compd.ne $r2 = $r2, -1 (0xffffffff);;
     _32(0x71550552),        //addd $r21 = $r18, $r21;;
     _32(0xe1540815),        //addd $r21 = $r21, 32 (0x20)
     _64(0x08000004e10407d5),        //addd $r1 = $r21, 4127 (0x101f);;
     _64(0x07fffffce8040001),        //andd $r1 = $r1, -4096 (0xfffffffffffff000);;
     _32(0x70560042),        //cmoved.dnez $r2? $r21 = $r1;;
     _32(0x980001d0),        //call 22a10 <_sbrk_r>
     _32(0x6a040015),        //copyd $r1 = $r21;;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x7905a5d8),        //compd.gtu $r1 = $r24, $r23;;
     _32(0x08804640),        //cb.deqz $r0? 22748 <_malloc_r+0x850>;;
     _96(0x0000000080000126e0006400),        //make $r0 = 301456 (0x49990);;
     _32(0x7001a00e),        //compd.ne $r0 = $r14, $r0;;
     _32(0xf8011040),        //andw $r0 = $r0, $r1
     _32(0x7005a5d8),        //compd.ne $r1 = $r24, $r23;;
     _32(0x0c004480),        //cb.wnez $r0? 22748 <_malloc_r+0x850>;;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0xf1091540),        //addw $r2 = $r0, $r21
     _32(0x71011540),        //addw $r0 = $r0, $r21;;
     _32(0x88804101),        //cb.deqz $r1? 22720 <_malloc_r+0x828>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x3800001b),        //ld $r0 = 0 (0x0)[$r27];;
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08804200),        //cb.deqz $r0? 22740 <_malloc_r+0x848>;;
     _32(0x750105d8),        //sbfd $r0 = $r24, $r23;;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x2601001a),        //sw 0 (0x0)[$r26] = $r0;;
     _32(0xe80003d7),        //andd $r0 = $r23, 15 (0xf)
     _32(0x60601000),        //make $r24 = 4096 (0x1000);;
     _32(0x08800140),        //cb.deqz $r0? 2234c <_malloc_r+0x454>;;
     _32(0xe5040400),        //sbfd $r1 = $r0, 16 (0x10)
     _64(0x08000004e5600400),        //sbfd $r24 = $r0, 4112 (0x1010);;
     _32(0x715d0057),        //addd $r23 = $r23, $r1;;
     _32(0xf1050557),        //addd $r1 = $r23, $r21
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x60540001),        //make $r21 = 1 (0x1);;
     _64(0x00000003e804ffc1),        //andd $r1 = $r1, 4095 (0xfff);;
     _32(0x75610601),        //sbfd $r24 = $r1, $r24;;
     _32(0x980001ab),        //call 22a10 <_sbrk_r>
     _32(0x6a040018),        //copyd $r1 = $r24;;
     _32(0xe109ffc0),        //compd.eq $r2 = $r0, -1 (0xffffffff)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x08000142),        //cb.dnez $r2? 22388 <_malloc_r+0x490>;;
     _32(0xf5090017),        //sbfd $r2 = $r23, $r0
     _32(0x7804ffd8),        //zxwd $r1 = $r24;;
     _32(0x71550602),        //addd $r21 = $r2, $r24;;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0xf151a50e),        //compd.eq $r20 = $r14, $r20
     _32(0xe0100009),        //make $r4 = 9 (0x9)
     _96(0x90000126b000001ae0606400),        //make $r24 = 301456 (0x49990)
     _32(0x10000000),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x275d0418),        //sd 16 (0x10)[$r24] = $r23;;
     _32(0x27550217),        //sd 8 (0x8)[$r23] = $r21;;
     _32(0xf1091040),        //addw $r2 = $r0, $r1
     _32(0xf1011040),        //addw $r0 = $r0, $r1
     _32(0x690507d6),        //compd.gtu $r1 = $r22, 31 (0x1f);;
     _32(0x88004154),        //cb.dnez $r20? 227c8 <_malloc_r+0x8d0>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x08804141),        //cb.deqz $r1? 227d0 <_malloc_r+0x8d8>;;
     _32(0xe104fa16),        //addd $r1 = $r22, -24 (0xffffffe8)
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6804fc01),        //andd $r1 = $r1, -16 (0xfffffff0);;
     _32(0xf10d004e),        //addd $r3 = $r14, $r1
     _32(0x691507c1),        //compd.gtu $r5 = $r1, 31 (0x1f);;
     _32(0x68080042),        //andd $r2 = $r2, 1 (0x1);;
     _32(0x7a050042),        //ord $r1 = $r2, $r1;;
     _32(0x2705020e),        //sd 8 (0x8)[$r14] = $r1;;
     _32(0x27110203),        //sd 8 (0x8)[$r3] = $r4;;
     _32(0x88004545),        //cb.dnez $r5? 22838 <_malloc_r+0x940>
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0xea380017),        //copyd $r14 = $r23
     _32(0x38540217),        //ld $r21 = 8 (0x8)[$r23];;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _96(0x0800000088000132e0088c00),        //make $r2 = 313904 (0x4ca30);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 22414 <_malloc_r+0x51c>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _96(0x0000000080000132e0088a00),        //make $r2 = 313896 (0x4ca28);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 22430 <_malloc_r+0x538>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _32(0x6854ff15),        //andd $r21 = $r21, -4 (0xfffffffc);;
     _32(0xf5010552),        //sbfd $r0 = $r18, $r21
     _32(0x7955a552),        //compd.gtu $r21 = $r18, $r21;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a551055),        //orw $r21 = $r21, $r1;;
     _32(0x0c8005d5),        //cb.weqz $r21? 224a0 <_malloc_r+0x5a8>;;
     _32(0x98000116),        //call 228a0 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x97ffff65),        //goto 221e4 <_malloc_r+0x2ec>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x69050100),        //compd.gtu $r1 = $r0, 4 (0x4);;
     _32(0x080016c1),        //cb.dnez $r1? 225c8 <_malloc_r+0x6d0>;;
     _32(0x66175192),        //extfz $r5 = $r18, 37 (0x25), 6 (0x6);;
     _32(0xf1100e45),        //addw $r4 = $r5, 57 (0x39)
     _32(0xf1180e05),        //addw $r6 = $r5, 56 (0x38)
     _32(0x71140e45),        //addw $r5 = $r5, 57 (0x39);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffedd),        //goto 21fec <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040202),        //ld $r1 = 8 (0x8)[$r2];;
     _32(0x6a040041),        //ord $r1 = $r1, 1 (0x1);;
     _32(0x98000104),        //call 228a0 <__malloc_unlock>
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x97ffff53),        //goto 221e4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xea0c0052),        //ord $r3 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea040040),        //ord $r1 = $r0, 1 (0x1)
     _96(0x1800000098000126e0086400),        //make $r2 = 301456 (0x49990);;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x270d020e),        //sd 8 (0x8)[$r14] = $r3;;
     _32(0x27490402),        //sd 16 (0x10)[$r2] = $r18;;
     _32(0x980000f7),        //call 228a0 <__malloc_unlock>
     _32(0x27050212),        //sd 8 (0x8)[$r18] = $r1;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x270d0604),        //sd 24 (0x18)[$r4] = $r3;;
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x980000e4),        //call 228a0 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x7b062242),        //srld $r1 = $r2, 9 (0x9);;
     _32(0x69010101),        //compd.gtu $r0 = $r1, 4 (0x4);;
     _32(0x088014c0),        //cb.deqz $r0? 22690 <_malloc_r+0x798>;;
     _32(0x69010501),        //compd.gtu $r0 = $r1, 20 (0x14);;
     _32(0x08002300),        //cb.dnez $r0? 2277c <_malloc_r+0x884>;;
     _32(0xf1001701),        //addw $r0 = $r1, 92 (0x5c)
     _32(0x710416c1),        //addw $r1 = $r1, 91 (0x5b);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x80000126b80c6400e1006000),        //addd $r0 = $r0, 301440 (0x49980)
     _96(0x180000009800012680000000),        //ld $r3 = 301456 (0x49990)[$r0];;
     _32(0x7011a0c0),        //compd.ne $r4 = $r0, $r3;;
     _32(0x08801d44),        //cb.deqz $r4? 22754 <_malloc_r+0x85c>;;
     _32(0x38040203),        //ld $r1 = 8 (0x8)[$r3];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x7905a081),        //compd.gtu $r1 = $r1, $r2;;
     _32(0x08800101),        //cb.deqz $r1? 225a0 <_malloc_r+0x6a8>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7105a0c0),        //compd.eq $r1 = $r0, $r3;;
     _32(0x08fffe81),        //cb.deqz $r1? 22584 <_malloc_r+0x68c>;;
     _96(0x80000126b8000603e0046400),        //make $r1 = 301456 (0x49990)
     _32(0x00000000),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x270d040e),        //sd 16 (0x10)[$r14] = $r3;;
     _32(0x27390400),        //sd 16 (0x10)[$r0] = $r14;;
     _32(0x97fffec6),        //goto 220d8 <_malloc_r+0x1e0>
     _32(0x27390603),        //sd 24 (0x18)[$r3] = $r14;;
     _32(0x69050500),        //compd.gtu $r1 = $r0, 20 (0x14);;
     _32(0x08800e01),        //cb.deqz $r1? 226ac <_malloc_r+0x7b4>;;
     _32(0x69051500),        //compd.gtu $r1 = $r0, 84 (0x54);;
     _32(0x08001cc1),        //cb.dnez $r1? 227a0 <_malloc_r+0x8a8>;;
     _32(0x6617b312),        //extfz $r5 = $r18, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc5),        //addw $r4 = $r5, 111 (0x6f)
     _32(0xf1181b85),        //addw $r6 = $r5, 110 (0x6e)
     _32(0x71141bc5),        //addw $r5 = $r5, 111 (0x6f);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe7f),        //goto 21fec <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf1240049),        //addw $r9 = $r9, 1 (0x1)
     _32(0x61200408),        //addd $r8 = $r8, 16 (0x10);;
     _32(0xf80400c9),        //andw $r1 = $r9, 3 (0x3)
     _32(0x7824ffc9),        //zxwd $r9 = $r9;;
     _32(0x0c7fb441),        //cb.wnez $r1? 2214c <_malloc_r+0x254>;;
     _32(0x10000032),        //goto 226d4 <_malloc_r+0x7dc>;;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x380c0202),        //ld $r3 = 8 (0x8)[$r2];;
     _32(0x6a0c0043),        //ord $r3 = $r3, 1 (0x1);;
     _32(0x270d0202),        //sd 8 (0x8)[$r2] = $r3;;
     _32(0x27050604),        //sd 24 (0x18)[$r4] = $r1;;
     _32(0x9800009d),        //call 228a0 <__malloc_unlock>
     _32(0x27110401),        //sd 16 (0x10)[$r1] = $r4;;
     _32(0x97fffeec),        //goto 221e4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x7b1620d2),        //srld $r5 = $r18, 3 (0x3);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97fffe3b),        //goto 21f3c <_malloc_r+0x44>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xea140052),        //ord $r5 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea100043),        //ord $r4 = $r3, 1 (0x1)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x2715020e),        //sd 8 (0x8)[$r14] = $r5;;
     _32(0x27490a14),        //sd 40 (0x28)[$r20] = $r18;;
     _32(0x27490814),        //sd 32 (0x20)[$r20] = $r18;;
     _32(0x27050612),        //sd 24 (0x18)[$r18] = $r1;;
     _32(0x27050412),        //sd 16 (0x10)[$r18] = $r1;;
     _32(0x27110212),        //sd 8 (0x8)[$r18] = $r4;;
     _32(0x98000088),        //call 228a0 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x97fffed7),        //goto 221e4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x66075182),        //extfz $r1 = $r2, 37 (0x25), 6 (0x6);;
     _32(0xf1000e41),        //addw $r0 = $r1, 57 (0x39)
     _32(0x71040e01),        //addw $r1 = $r1, 56 (0x38);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffffb0),        //goto 22564 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0xf11816c0),        //addw $r6 = $r0, 91 (0x5b)
     _32(0x71141700),        //addw $r5 = $r0, 92 (0x5c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe4b),        //goto 21fec <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0x7105a001),        //compd.eq $r1 = $r1, $r0;;
     _32(0x08801b41),        //cb.deqz $r1? 22884 <_malloc_r+0x98c>;;
     _32(0xf80400c5),        //andw $r1 = $r5, 3 (0x3)
     _32(0xe100fc00),        //addd $r0 = $r0, -16 (0xfffffff0)
     _32(0x7114ffc5),        //addw $r5 = $r5, -1 (0xffffffff);;
     _32(0x0c7ffe81),        //cb.wnez $r1? 226c8 <_malloc_r+0x7d0>;;
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x7e010007),        //andnd $r0 = $r7, $r0;;
     _32(0x2701020a),        //sd 8 (0x8)[$r10] = $r0;;
     _32(0x791e2047),        //slld $r7 = $r7, 1 (0x1);;
     _32(0xe0050007),        //compd.ne $r1 = $r7, 0 (0x0)
     _32(0x7809a007),        //compd.leu $r2 = $r7, $r0;;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 22710 <_malloc_r+0x818>;;
     _32(0x17fffed3),        //goto 22250 <_malloc_r+0x358>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71240109),        //addw $r9 = $r9, 4 (0x4);;
     _32(0x78050007),        //andd $r1 = $r7, $r0;;
     _32(0x08ffff41),        //cb.deqz $r1? 22708 <_malloc_r+0x810>;;
     _32(0x97fffe84),        //goto 22128 <_malloc_r+0x230>
     _32(0x6a140009),        //copyd $r5 = $r9;;
     _64(0x00000003e804ffd8),        //andd $r1 = $r24, 4095 (0xfff);;
     _32(0x087fbf01),        //cb.dnez $r1? 22318 <_malloc_r+0x420>;;
     _32(0xf1550556),        //addd $r21 = $r22, $r21
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0x97ffff2f),        //goto 223f4 <_malloc_r+0x4fc>
     _32(0x2755020e),        //sd 8 (0x8)[$r14] = $r21;;
     _32(0x97fffefc),        //goto 22330 <_malloc_r+0x438>
     _32(0x275d001b),        //sd 0 (0x0)[$r27] = $r23;;
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x97ffff39),        //goto 22430 <_malloc_r+0x538>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000126e0106400),        //make $r4 = 301456 (0x49990);;
     _32(0xf90a6042),        //slld $r2 = $r2, $r1
     _32(0x38180204),        //ld $r6 = 8 (0x8)[$r4];;
     _32(0x7a090182),        //ord $r2 = $r2, $r6;;
     _32(0x97ffff90),        //goto 225b4 <_malloc_r+0x6bc>
     _32(0x27090204),        //sd 8 (0x8)[$r4] = $r2;;
     _32(0x69011501),        //compd.gtu $r0 = $r1, 84 (0x54);;
     _32(0x080005c0),        //cb.dnez $r0? 227dc <_malloc_r+0x8e4>;;
     _32(0x6607b302),        //extfz $r1 = $r2, 43 (0x2b), 12 (0xc);;
     _32(0xf1001bc1),        //addw $r0 = $r1, 111 (0x6f)
     _32(0x71041b81),        //addw $r1 = $r1, 110 (0x6e);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff73),        //goto 22564 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x69055500),        //compd.gtu $r1 = $r0, 340 (0x154);;
     _32(0x080005c1),        //cb.dnez $r1? 22800 <_malloc_r+0x908>;;
     _32(0x6617e3d2),        //extfz $r5 = $r18, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e05),        //addw $r4 = $r5, 120 (0x78)
     _32(0xf1181dc5),        //addw $r6 = $r5, 119 (0x77)
     _32(0x71141e05),        //addw $r5 = $r5, 120 (0x78);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe0b),        //goto 21fec <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff0b),        //goto 223f4 <_malloc_r+0x4fc>
     _32(0x6a380017),        //copyd $r14 = $r23;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97ffff1d),        //goto 22448 <_malloc_r+0x550>
     _32(0x27010217),        //sd 8 (0x8)[$r23] = $r0;;
     _32(0x69015501),        //compd.gtu $r0 = $r1, 340 (0x154);;
     _32(0x08000740),        //cb.dnez $r0? 22854 <_malloc_r+0x95c>;;
     _32(0x6607e3c2),        //extfz $r1 = $r2, 46 (0x2e), 15 (0xf);;
     _32(0xf1001e01),        //addw $r0 = $r1, 120 (0x78)
     _32(0x71041dc1),        //addw $r1 = $r1, 119 (0x77);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff5b),        //goto 22564 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe014007f),        //make $r5 = 127 (0x7f)
     _32(0xe018007e),        //make $r6 = 126 (0x7e)
     _64(0x18000001e9015500),        //compd.gtu $r0 = $r0, 1364 (0x554);;
     _32(0x087f7d80),        //cb.dnez $r0? 21fec <_malloc_r+0xf4>;;
     _32(0x67171492),        //extfz $r5 = $r18, 49 (0x31), 18 (0x12);;
     _32(0xf1101f45),        //addw $r4 = $r5, 125 (0x7d)
     _32(0xf1181f05),        //addw $r6 = $r5, 124 (0x7c)
     _32(0x71141f45),        //addw $r5 = $r5, 125 (0x7d);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffdef),        //goto 21fec <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x980000ea),        //call 22be0 <_free_r>
     _32(0xe104040e),        //addd $r1 = $r14, 16 (0x10)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38380418),        //ld $r14 = 16 (0x10)[$r24];;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x97fffeea),        //goto 223f4 <_malloc_r+0x4fc>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xe00007f0),        //make $r0 = 2032 (0x7f0)
     _32(0xe004007e),        //make $r1 = 126 (0x7e)
     _64(0x10000001e90d5501),        //compd.gtu $r3 = $r1, 1364 (0x554);;
     _32(0x087fd003),        //cb.dnez $r3? 22564 <_malloc_r+0x66c>;;
     _32(0x67071482),        //extfz $r1 = $r2, 49 (0x31), 18 (0x12);;
     _32(0xf1001f41),        //addw $r0 = $r1, 125 (0x7d)
     _32(0x71041f01),        //addw $r1 = $r1, 124 (0x7c);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff3a),        //goto 22564 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x97ffff9b),        //goto 226f0 <_malloc_r+0x7f8>
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x00000000)        //errop ;;
 |];

let __malloc_lock: list_I = 
 [|
     _32(0x97fffd2a),        //goto 21d38 <__libc_lock_acquire>
     _96(0x0000000080000132e0009000)        //make $r0 = 313920 (0x4ca40);;
 |];

let __malloc_unlock: list_I = 
 [|
     _32(0x97fffd6a),        //goto 21e48 <__libc_lock_release>
     _96(0x0000000080000132e0009000)        //make $r0 = 313920 (0x4ca40);;
 |];

let cleanup_glue: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x08800081),        //cb.deqz $r1? 228d8 <cleanup_glue+0x28>;;
     _32(0x1ffffff7),        //call 228b0 <cleanup_glue>;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x100000bb)        //goto 22be0 <_free_r>;;
 |];

let _reclaim_reent: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000124e0041000),        //make $r1 = 299072 (0x49040);;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x7005a001),        //compd.ne $r1 = $r1, $r0;;
     _32(0x08800d01),        //cb.deqz $r1? 229f8 <_reclaim_reent+0x100>;;
     _32(0x38041e00),        //ld $r1 = 120 (0x78)[$r0];;
     _32(0x088003c1),        //cb.deqz $r1? 2296c <_reclaim_reent+0x74>;;
     _32(0x383ae4c1),        //ld $r14 = $r19[$r1];;
     _32(0x088001ce),        //cb.deqz $r14? 22954 <_reclaim_reent+0x5c>;;
     _32(0x980000a9),        //call 22be0 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x087fff0e),        //cb.dnez $r14? 2293c <_reclaim_reent+0x44>;;
     _32(0x38041e12),        //ld $r1 = 120 (0x78)[$r18];;
     _32(0x614c0213),        //addd $r19 = $r19, 8 (0x8);;
     _64(0x00000000e0018013),        //compd.ne $r0 = $r19, 512 (0x200);;
     _32(0x087ffd40),        //cb.dnez $r0? 22934 <_reclaim_reent+0x3c>;;
     _32(0x9800009f),        //call 22be0 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041812),        //ld $r1 = 96 (0x60)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 2297c <_reclaim_reent+0x84>;;
     _32(0x1800009a),        //call 22be0 <_free_r>;;
     _64(0xb8387e12e14c8012),        //addd $r19 = $r18, 512 (0x200)
     _32(0x00000000),        //ld $r14 = 504 (0x1f8)[$r18];;
     _32(0x7101a4ce),        //compd.eq $r0 = $r14, $r19;;
     _32(0x0880020e),        //cb.deqz $r14? 229ac <_reclaim_reent+0xb4>;;
     _32(0x080001c0),        //cb.dnez $r0? 229ac <_reclaim_reent+0xb4>;;
     _32(0x98000093),        //call 22be0 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x7001a393),        //compd.ne $r0 = $r19, $r14;;
     _32(0x087ffec0),        //cb.dnez $r0? 22994 <_reclaim_reent+0x9c>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38042212),        //ld $r1 = 136 (0x88)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 229bc <_reclaim_reent+0xc4>;;
     _32(0x1800008a),        //call 22be0 <_free_r>;;
     _32(0x30001412),        //lwz $r0 = 80 (0x50)[$r18];;
     _32(0x0c800380),        //cb.weqz $r0? 229f8 <_reclaim_reent+0x100>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041612),        //ld $r1 = 88 (0x58)[$r18];;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0xea000012),        //copyd $r0 = $r18
     _64(0x18000001b8044812),        //ld $r1 = 1312 (0x520)[$r18];;
     _32(0x088001c1),        //cb.deqz $r1? 229f8 <_reclaim_reent+0x100>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffffaf),        //goto 228b0 <cleanup_glue>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _sbrk_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea000001),        //copyd $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x80000143a749040ce0487400),        //make $r18 = 331216 (0x50dd0)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980002f1),        //call 23600 <_sbrk>
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 22a64 <_sbrk_r+0x54>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 22a4c <_sbrk_r+0x3c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _malloc_trim_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _64(0xa7410e0ce538f7ce),        //sbfd $r14 = $r14, 4063 (0xfdf)
     _32(0x00000003),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x9fffff79),        //call 22890 <__malloc_lock>
     _96(0x80000126a7510c0ce0506400),        //make $r20 = 301456 (0x49990)
     _32(0x00000000),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x38000414),        //ld $r0 = 16 (0x10)[$r20];;
     _32(0x38480200),        //ld $r18 = 8 (0x8)[$r0];;
     _32(0x6848ff12),        //andd $r18 = $r18, -4 (0xfffffffc);;
     _32(0x7139048e),        //addd $r14 = $r14, $r18;;
     _32(0x7b3a230e),        //srld $r14 = $r14, 12 (0xc);;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x793a230e),        //slld $r14 = $r14, 12 (0xc);;
     _64(0x00000003e501ffce),        //compd.gt $r0 = $r14, 4095 (0xfff);;
     _32(0x088001c0),        //cb.deqz $r0? 22b04 <_malloc_trim_r+0x7c>;;
     _32(0x9fffffc9),        //call 22a10 <_sbrk_r>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040414),        //ld $r1 = 16 (0x10)[$r20];;
     _32(0x71050481),        //addd $r1 = $r1, $r18;;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x088002c0),        //cb.deqz $r0? 22b2c <_malloc_trim_r+0xa4>;;
     _32(0x9fffff67),        //call 228a0 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffb9),        //call 22a10 <_sbrk_r>
     _32(0xe504000e),        //negd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff)
     _32(0xf549048e),        //sbfd $r18 = $r14, $r18
     _96(0x1000000090000132e0088000),        //make $r2 = 313856 (0x4ca00);;
     _32(0x6a480052),        //ord $r18 = $r18, 1 (0x1);;
     _32(0x08800400),        //cb.deqz $r0? 22b90 <_malloc_trim_r+0x108>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x30040002),        //lwz $r1 = 0 (0x0)[$r2];;
     _32(0x380c0414),        //ld $r3 = 16 (0x10)[$r20];;
     _32(0xf539104e),        //sbfw $r14 = $r14, $r1
     _32(0x27490203),        //sd 8 (0x8)[$r3] = $r18;;
     _32(0x9fffff4e),        //call 228a0 <__malloc_unlock>
     _32(0x26390002),        //sw 0 (0x0)[$r2] = $r14;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffa0),        //call 22a10 <_sbrk_r>
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38080414),        //ld $r2 = 16 (0x10)[$r20];;
     _32(0x75050002),        //sbfd $r1 = $r2, $r0;;
     _32(0x640d07c1),        //compd.le $r3 = $r1, 31 (0x1f);;
     _32(0x087ff5c3),        //cb.dnez $r3? 22b04 <_malloc_trim_r+0x7c>;;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _96(0x88000126e00c8000e0106000),        //make $r4 = 301440 (0x49980)
     _96(0x100000009000013288000000),        //make $r3 = 313856 (0x4ca00);;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x97ffffcc),        //goto 22b04 <_malloc_trim_r+0x7c>
     _32(0x26010003),        //sw 0 (0x0)[$r3] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let _free_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x888014c1),        //cb.deqz $r1? 22d44 <_free_r+0x164>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffff24),        //call 22890 <__malloc_lock>;;
     _32(0xe11cfc0e),        //addd $r7 = $r14, -16 (0xfffffff0)
     _96(0x88000126b818fe0ee0146400),        //make $r5 = 301456 (0x49990)
     _32(0x08000000),        //ld $r6 = -8 (0xfffffff8)[$r14];;
     _32(0x38100405),        //ld $r4 = 16 (0x10)[$r5];;
     _32(0x6804ff86),        //andd $r1 = $r6, -2 (0xfffffffe);;
     _32(0x710d0047),        //addd $r3 = $r7, $r1;;
     _32(0xf011a0c4),        //compd.ne $r4 = $r4, $r3
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x88802144),        //cb.deqz $r4? 22e40 <_free_r+0x260>
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x8b000d86),        //cb.odd $r6? 22d0c <_free_r+0x12c>
     _32(0xf1010083),        //addd $r0 = $r3, $r2
     _32(0x27090203),        //sd 8 (0x8)[$r3] = $r2;;
     _32(0xe1140405),        //addd $r5 = $r5, 16 (0x10)
     _32(0x3810fc0e),        //ld $r4 = -16 (0xfffffff0)[$r14];;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0xf51d01c4),        //sbfd $r7 = $r4, $r7
     _32(0x71050101),        //addd $r1 = $r1, $r4;;
     _32(0xe8000040),        //andd $r0 = $r0, 1 (0x1)
     _32(0x38100407),        //ld $r4 = 16 (0x10)[$r7];;
     _32(0x7119a144),        //compd.eq $r6 = $r4, $r5;;
     _32(0x08001a06),        //cb.dnez $r6? 22e00 <_free_r+0x220>;;
     _32(0x38180607),        //ld $r6 = 24 (0x18)[$r7];;
     _32(0x27190604),        //sd 24 (0x18)[$r4] = $r6;;
     _32(0x88802700),        //cb.deqz $r0? 22edc <_free_r+0x2fc>
     _32(0x27110406),        //sd 16 (0x10)[$r6] = $r4;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x69017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff);;
     _32(0x08000ec0),        //cb.dnez $r0? 22d70 <_free_r+0x190>;;
     _32(0xe60720c1),        //extfz $r1 = $r1, 34 (0x22), 3 (0x3)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000126e00c6400),        //make $r3 = 301456 (0x49990);;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0x38100203),        //ld $r4 = 8 (0x8)[$r3];;
     _32(0xf9023040),        //sllw $r0 = $r0, 1 (0x1)
     _32(0x79066042),        //slld $r1 = $r2, $r1;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x7a050101),        //ord $r1 = $r1, $r4;;
     _96(0x80000126b8086400e1106000),        //addd $r4 = $r0, 301440 (0x49980)
     _96(0x180000009800012680000000),        //ld $r2 = 301456 (0x49990)[$r0];;
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x27050203),        //sd 8 (0x8)[$r3] = $r1;;
     _32(0x27090407),        //sd 16 (0x10)[$r7] = $r2;;
     _96(0x1800000098000126a71d6400),        //sd 301456 (0x49990)[$r0] = $r7;;
     _32(0x271d0602),        //sd 24 (0x18)[$r2] = $r7;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffee6),        //goto 228a0 <__malloc_unlock>;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x0b0004c0),        //cb.odd $r0? 22d5c <_free_r+0x17c>;;
     _32(0xf1050081),        //addd $r1 = $r1, $r2
     _32(0x61140405),        //addd $r5 = $r5, 16 (0x10);;
     _32(0xea100041),        //ord $r4 = $r1, 1 (0x1)
     _32(0x38000403),        //ld $r0 = 16 (0x10)[$r3];;
     _32(0x7009a140),        //compd.ne $r2 = $r0, $r5;;
     _32(0x08801d42),        //cb.deqz $r2? 22efc <_free_r+0x31c>;;
     _32(0x38080603),        //ld $r2 = 24 (0x18)[$r3];;
     _32(0x27090600),        //sd 24 (0x18)[$r0] = $r2;;
     _32(0x27010402),        //sd 16 (0x10)[$r2] = $r0;;
     _32(0x27110207),        //sd 8 (0x8)[$r7] = $r4;;
     _32(0x97ffffd1),        //goto 22c80 <_free_r+0xa0>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0xe9017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff)
     _32(0x2701fe0e),        //sd -8 (0xfffffff8)[$r14] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x08fff1c0),        //cb.deqz $r0? 22c88 <_free_r+0xa8>;;
     _32(0x7b022241),        //srld $r0 = $r1, 9 (0x9);;
     _32(0x69090100),        //compd.gtu $r2 = $r0, 4 (0x4);;
     _32(0x08001382),        //cb.dnez $r2? 22eb0 <_free_r+0x2d0>;;
     _32(0x66035181),        //extfz $r0 = $r1, 37 (0x25), 6 (0x6);;
     _32(0xf1100e40),        //addw $r4 = $r0, 57 (0x39)
     _32(0x71000e00),        //addw $r0 = $r0, 56 (0x38);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x80000126b80c6404e1106004),        //addd $r4 = $r4, 301440 (0x49980)
     _96(0x180000009800012680000000),        //ld $r3 = 301456 (0x49990)[$r4];;
     _32(0x7009a0c4),        //compd.ne $r2 = $r4, $r3;;
     _32(0x08801702),        //cb.deqz $r2? 22f20 <_free_r+0x340>;;
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x7909a042),        //compd.gtu $r2 = $r2, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 22dd0 <_free_r+0x1f0>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7101a0c4),        //compd.eq $r0 = $r4, $r3;;
     _32(0x08fffe80),        //cb.deqz $r0? 22db4 <_free_r+0x1d4>;;
     _32(0x38100603),        //ld $r4 = 24 (0x18)[$r3];;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x270d0407),        //sd 16 (0x10)[$r7] = $r3;;
     _32(0x271d0404),        //sd 16 (0x10)[$r4] = $r7;;
     _32(0x271d0603),        //sd 24 (0x18)[$r3] = $r7;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffea9),        //goto 228a0 <__malloc_unlock>;;
     _32(0x080019c0),        //cb.dnez $r0? 22f9c <_free_r+0x3bc>;;
     _32(0xf1050042),        //addd $r1 = $r2, $r1
     _32(0x38000603),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0xea080041),        //ord $r2 = $r1, 1 (0x1)
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x27010603),        //sd 24 (0x18)[$r3] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x270d0400),        //sd 16 (0x10)[$r0] = $r3;;
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffe99),        //goto 228a0 <__malloc_unlock>;;
     _32(0x8b000246),        //cb.odd $r6? 22e64 <_free_r+0x284>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0x3800fc0e),        //ld $r0 = -16 (0xfffffff0)[$r14];;
     _32(0xf51d01c0),        //sbfd $r7 = $r0, $r7
     _32(0x71050001),        //addd $r1 = $r1, $r0;;
     _32(0x38080407),        //ld $r2 = 16 (0x10)[$r7];;
     _32(0x38000607),        //ld $r0 = 24 (0x18)[$r7];;
     _32(0x27010602),        //sd 24 (0x18)[$r2] = $r0;;
     _32(0x27090400),        //sd 16 (0x10)[$r0] = $r2;;
     _32(0xea0c0041),        //ord $r3 = $r1, 1 (0x1)
     _96(0x88000126e0006400e0086200),        //make $r2 = 301448 (0x49988)
     _96(0x100000009000012688000000),        //make $r0 = 301456 (0x49990);;
     _32(0x38080002),        //ld $r2 = 0 (0x0)[$r2];;
     _32(0x270d0207),        //sd 8 (0x8)[$r7] = $r3;;
     _32(0x271d0400),        //sd 16 (0x10)[$r0] = $r7;;
     _32(0x7905a042),        //compd.gtu $r1 = $r2, $r1;;
     _32(0x087fe601),        //cb.dnez $r1? 22cf0 <_free_r+0x110>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _96(0x0800000088000132e0048e00),        //make $r1 = 313912 (0x4ca38);;
     _32(0x9ffffef9),        //call 22a88 <_malloc_trim_r>
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x17ffff91),        //goto 22cf0 <_free_r+0x110>;;
     _32(0x69090500),        //compd.gtu $r2 = $r0, 20 (0x14);;
     _32(0x08800302),        //cb.deqz $r2? 22ee4 <_free_r+0x304>;;
     _32(0x69091500),        //compd.gtu $r2 = $r0, 84 (0x54);;
     _32(0x080008c2),        //cb.dnez $r2? 22f48 <_free_r+0x368>;;
     _32(0x6603b301),        //extfz $r0 = $r1, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc0),        //addw $r4 = $r0, 111 (0x6f)
     _32(0x71001b80),        //addw $r0 = $r0, 110 (0x6e);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffb0),        //goto 22d94 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff90),        //goto 22d1c <_free_r+0x13c>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0x710016c0),        //addw $r0 = $r0, 91 (0x5b);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffa8),        //goto 22d94 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x0000000080000126e0006400),        //make $r0 = 301456 (0x49990);;
     _32(0x271d0a00),        //sd 40 (0x28)[$r0] = $r7;;
     _32(0x271d0800),        //sd 32 (0x20)[$r0] = $r7;;
     _32(0x27150607),        //sd 24 (0x18)[$r7] = $r5;;
     _32(0x28110207),        //sq 8 (0x8)[$r7] = $r4r5;;
     _32(0x97ffff76),        //goto 22cf0 <_free_r+0x110>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xfa023080),        //sraw $r0 = $r0, 2 (0x2)
     _96(0x1000000090000126e0086400),        //make $r2 = 301456 (0x49990);;
     _32(0xf9026001),        //slld $r0 = $r1, $r0
     _32(0x38140202),        //ld $r5 = 8 (0x8)[$r2];;
     _32(0x7a010140),        //ord $r0 = $r0, $r5;;
     _32(0x97ffffa5),        //goto 22dd4 <_free_r+0x1f4>
     _32(0x27010202),        //sd 8 (0x8)[$r2] = $r0;;
     _32(0x69095500),        //compd.gtu $r2 = $r0, 340 (0x154);;
     _32(0x08000202),        //cb.dnez $r2? 22f6c <_free_r+0x38c>;;
     _32(0x6603e3c1),        //extfz $r0 = $r1, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e00),        //addw $r4 = $r0, 120 (0x78)
     _32(0x71001dc0),        //addw $r0 = $r0, 119 (0x77);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff8c),        //goto 22d94 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe000007e),        //make $r0 = 126 (0x7e)
     _64(0x10000001e9095500),        //compd.gtu $r2 = $r0, 1364 (0x554);;
     _32(0x087fe182),        //cb.dnez $r2? 22d94 <_free_r+0x1b4>;;
     _32(0x67031481),        //extfz $r0 = $r1, 49 (0x31), 18 (0x12);;
     _32(0xf1101f40),        //addw $r4 = $r0, 125 (0x7d)
     _32(0x71001f00),        //addw $r0 = $r0, 124 (0x7c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff80),        //goto 22d94 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x97ffff53),        //goto 22cf0 <_free_r+0x110>
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00100001010001111000; //0x21478
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(myrnd, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeA, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1A, 0b00010110100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2A, 0b00010110100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitA, 0b00010110101000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3A, 0b00010110101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testA, 0b00010110101010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeB, 0b00010110111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1B, 0b00010110111101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2B, 0b00010111000000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitB, 0b00010111000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3B, 0b00010111000100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testB, 0b00010111000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeC, 0b00010111010111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1C, 0b00010111011000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2C, 0b00010111011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitC, 0b00010111011110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3C, 0b00010111011111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testC, 0b00010111100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeD, 0b00010111110010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1D, 0b00010111110011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2D, 0b00010111110101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitD, 0b00010111111000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3D, 0b00010111111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testD, 0b00010111111010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeE, 0b00011000001110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1E, 0b00011000001111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2E, 0b00011000010001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitE, 0b00011000010100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3E, 0b00011000010100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testE, 0b00011000010110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeF, 0b00011000101001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1F, 0b00011000101010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2F, 0b00011000101100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitF, 0b00011000101111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3F, 0b00011000101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testF, 0b00011000110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeG, 0b00011001000100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1G, 0b00011001000101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2G, 0b00011001001000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitG, 0b00011001001011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3G, 0b00011001001011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testG, 0b00011001001101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeH, 0b00011001011111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1H, 0b00011001011111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2H, 0b00011001100001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitH, 0b00011001100011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3H, 0b00011001100100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testH, 0b00011001100101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeI, 0b00011001110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1I, 0b00011001110110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2I, 0b00011001111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitI, 0b00011001111011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3I, 0b00011001111100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testI, 0b00011001111110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeJ, 0b00011010001111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1J, 0b00011010001111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2J, 0b00011010010010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitJ, 0b00011010010101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3J, 0b00011010010101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testJ, 0b00011010010111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeK, 0b00011010101000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1K, 0b00011010101000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2K, 0b00011010101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitK, 0b00011010101101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3K, 0b00011010101110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testK, 0b00011010110000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeL, 0b00011011000011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1L, 0b00011011000011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2L, 0b00011011000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitL, 0b00011011001001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3L, 0b00011011001001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testL, 0b00011011001011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeM, 0b00011011011101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1M, 0b00011011011110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2M, 0b00011011100000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitM, 0b00011011100011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3M, 0b00011011100011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testM, 0b00011011100101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeN, 0b00011011111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1N, 0b00011011111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2N, 0b00011011111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitN, 0b00011011111101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3N, 0b00011011111110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testN, 0b00011100000000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeO, 0b00011100010100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1O, 0b00011100010100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2O, 0b00011100010110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitO, 0b00011100011001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3O, 0b00011100011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testO, 0b00011100011100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeP, 0b00011100101111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1P, 0b00011100101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2P, 0b00011100110001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitP, 0b00011100110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3P, 0b00011100110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testP, 0b00011100110111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeQ, 0b00011101001010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Q, 0b00011101001011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Q, 0b00011101001101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitQ, 0b00011101010001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Q, 0b00011101010001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testQ, 0b00011101010011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeR, 0b00011101100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1R, 0b00011101100101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2R, 0b00011101101000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitR, 0b00011101101011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3R, 0b00011101101011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testR, 0b00011101101101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeS, 0b00011101111111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1S, 0b00011101111111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2S, 0b00011110000010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitS, 0b00011110000101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3S, 0b00011110000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testS, 0b00011110000111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeT, 0b00011110011001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1T, 0b00011110011001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2T, 0b00011110011011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitT, 0b00011110011110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3T, 0b00011110011111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testT, 0b00011110100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeU, 0b00011110110010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1U, 0b00011110110010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2U, 0b00011110110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitU, 0b00011110111000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3U, 0b00011110111001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testU, 0b00011110111010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeV, 0b00011111001100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1V, 0b00011111001100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2V, 0b00011111001110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitV, 0b00011111010001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3V, 0b00011111010010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testV, 0b00011111010100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeW, 0b00011111100100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1W, 0b00011111100101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2W, 0b00011111100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitW, 0b00011111101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3W, 0b00011111101011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testW, 0b00011111101101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeX, 0b00011111111111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1X, 0b00100000000000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2X, 0b00100000000010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitX, 0b00100000000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3X, 0b00100000000110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testX, 0b00100000001000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeY, 0b00100000011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Y, 0b00100000011010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Y, 0b00100000011101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitY, 0b00100000100000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Y, 0b00100000100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testY, 0b00100000100011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeZ, 0b00100000110110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Z, 0b00100000110110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Z, 0b00100000111001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitZ, 0b00100000111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Z, 0b00100000111101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testZ, 0b00100000111110111000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00100001010001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00100001010011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit, 0b00100001010100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_fini_array, 0b00100001010101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_init_array, 0b00100001010111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r_part_0, 0b00100001011001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r, 0b00100001011011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_signal_r, 0b00100001011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_raise_r, 0b00100001011110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp_r, 0b00100001100001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(raise, 0b00100001100100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(signal, 0b00100001100100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal, 0b00100001100111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp, 0b00100001101000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_kill_r, 0b00100001101000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_getpid_r, 0b00100001101010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__call_exitprocs, 0b00100001101010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_init, 0b00100001110001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_close, 0b00100001110001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_try_acquire, 0b00100001110001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_acquire, 0b00100001110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_release, 0b00100001111001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_r, 0b00100001111011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_lock, 0b00100010100010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_unlock, 0b00100010100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(cleanup_glue, 0b00100010100010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_reclaim_reent, 0b00100010100011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_sbrk_r, 0b00100010101000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_trim_r, 0b00100010101010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_free_r, 0b00100010101111100000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000021478;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
