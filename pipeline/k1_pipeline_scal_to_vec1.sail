// executing pipeline scal_to_vec1.c.out.dumped test 
val k1_pipeline_scal_to_vec1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_scal_to_vec1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let main: list_I = 
 [|
     _32(0x6130a00c),        //addd $r12 = $r12, -384 (0xfffffe80);;
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x28550a0c),        //so 40 (0x28)[$r12] = $r20r21r22r23;;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0x2861120c),        //sq 72 (0x48)[$r12] = $r24r25;;
     _32(0x26011a0c),        //sw 104 (0x68)[$r12] = $r0;;
     _32(0x2705180c),        //sd 96 (0x60)[$r12] = $r1;;
     _96(0x0000000080000100e0000200),        //make $r0 = 262152 (0x40008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f002),        //insf $r0 = $r2, 15 (0xf), 0 (0x0);;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x6103f402),        //insf $r0 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x60080002),        //make $r2 = 2 (0x2);;
     _32(0x6203f802),        //insf $r0 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x60080003),        //make $r2 = 3 (0x3);;
     _32(0x6303fc02),        //insf $r0 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x60080004),        //make $r2 = 4 (0x4);;
     _32(0x6007f002),        //insf $r1 = $r2, 15 (0xf), 0 (0x0);;
     _32(0x60080005),        //make $r2 = 5 (0x5);;
     _32(0x6107f402),        //insf $r1 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x60080006),        //make $r2 = 6 (0x6);;
     _32(0x6207f802),        //insf $r1 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x60080007),        //make $r2 = 7 (0x7);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x2801300c),        //sq 192 (0xc0)[$r12] = $r0r1;;
     _96(0x02000000800fe000e0000000),        //make $r0 = 4611686019492741120 (0x400000003f800000);;
     _96(0x0204000080101000e0040000),        //make $r1 = 4647714816524288000 (0x4080000040400000);;
     _32(0x2801380c),        //sq 224 (0xe0)[$r12] = $r0r1;;
     _96(0x01ff800080000000e0000000),        //make $r0 = 4607182418800017408 (0x3ff0000000000000);;
     _96(0x0200000080000000e0040000),        //make $r1 = 4611686018427387904 (0x4000000000000000);;
     _32(0x2801340c),        //sq 208 (0xd0)[$r12] = $r0r1;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xf1013080),        //addhq $r0 = $r0, $r2
     _32(0x710530c1),        //addhq $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26015f0c),        //sw 380 (0x17c)[$r12] = $r0;;
     _32(0x10000017),        //goto 16968 <main+0x148>;;
     _32(0x34005f0c),        //lws $r0 = 380 (0x17c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x34005f0c),        //lws $r0 = 380 (0x17c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1695c <main+0x13c>;;
     _32(0x18000790),        //call 18798 <abort>;;
     _32(0x30005f0c),        //lwz $r0 = 380 (0x17c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26015f0c),        //sw 380 (0x17c)[$r12] = $r0;;
     _32(0x30005f0c),        //lwz $r0 = 380 (0x17c)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 16910 <main+0xf0>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xf5013080),        //sbfhq $r0 = $r0, $r2
     _32(0x750530c1),        //sbfhq $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26015e0c),        //sw 376 (0x178)[$r12] = $r0;;
     _32(0x10000017),        //goto 16a04 <main+0x1e4>;;
     _32(0x34005e0c),        //lws $r0 = 376 (0x178)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x34005e0c),        //lws $r0 = 376 (0x178)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000080),        //sbfw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 169f8 <main+0x1d8>;;
     _32(0x18000769),        //call 18798 <abort>;;
     _32(0x30005e0c),        //lwz $r0 = 376 (0x178)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26015e0c),        //sw 376 (0x178)[$r12] = $r0;;
     _32(0x30005e0c),        //lwz $r0 = 376 (0x178)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 169ac <main+0x18c>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _32(0xf9025040),        //sllhqs $r0 = $r0, 1 (0x1)
     _32(0x79065041),        //sllhqs $r1 = $r1, 1 (0x1);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x10000017),        //goto 16a88 <main+0x268>;;
     _32(0x34005d0c),        //lws $r0 = 372 (0x174)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x34005d0c),        //lws $r0 = 372 (0x174)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16a7c <main+0x25c>;;
     _32(0x18000748),        //call 18798 <abort>;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26015d0c),        //sw 372 (0x174)[$r12] = $r0;;
     _32(0x30005d0c),        //lwz $r0 = 372 (0x174)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 16a30 <main+0x210>;;
     _32(0x3c48300c),        //lq $r18r19 = 192 (0xc0)[$r12];;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006f4),        //call 18688 <__divdi3>;;
     _32(0x6467f000),        //zxhd $r25 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006ea),        //call 18688 <__divdi3>;;
     _32(0x6463f000),        //zxhd $r24 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006e0),        //call 18688 <__divdi3>;;
     _32(0x645ff000),        //zxhd $r23 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006d6),        //call 18688 <__divdi3>;;
     _32(0x645bf000),        //zxhd $r22 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006cd),        //call 18688 <__divdi3>;;
     _32(0x6457f000),        //zxhd $r21 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006c3),        //call 18688 <__divdi3>;;
     _32(0x6453f000),        //zxhd $r20 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006b9),        //call 18688 <__divdi3>;;
     _32(0x643bf000),        //zxhd $r14 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x180006af),        //call 18688 <__divdi3>;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f019),        //insf $r0 = $r25, 15 (0xf), 0 (0x0);;
     _32(0x6103f418),        //insf $r0 = $r24, 31 (0x1f), 16 (0x10);;
     _32(0x6203f817),        //insf $r0 = $r23, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc16),        //insf $r0 = $r22, 63 (0x3f), 48 (0x30);;
     _32(0x6007f015),        //insf $r1 = $r21, 15 (0xf), 0 (0x0);;
     _32(0x6107f414),        //insf $r1 = $r20, 31 (0x1f), 16 (0x10);;
     _32(0x6207f80e),        //insf $r1 = $r14, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26015c0c),        //sw 368 (0x170)[$r12] = $r0;;
     _32(0x1000001a),        //goto 16c70 <main+0x450>;;
     _32(0x34005c0c),        //lws $r0 = 368 (0x170)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _32(0x34005c0c),        //lws $r0 = 368 (0x170)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1800068e),        //call 18688 <__divdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16c64 <main+0x444>;;
     _32(0x180006ce),        //call 18798 <abort>;;
     _32(0x30005c0c),        //lwz $r0 = 368 (0x170)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26015c0c),        //sw 368 (0x170)[$r12] = $r0;;
     _32(0x30005c0c),        //lwz $r0 = 368 (0x170)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff900),        //cb.wnez $r0? 16c0c <main+0x3ec>;;
     _32(0x3c48300c),        //lq $r18r19 = 192 (0xc0)[$r12];;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x1800069f),        //call 18720 <__moddi3>;;
     _32(0x6467f000),        //zxhd $r25 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000694),        //call 18720 <__moddi3>;;
     _32(0x6463f000),        //zxhd $r24 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000689),        //call 18720 <__moddi3>;;
     _32(0x645ff000),        //zxhd $r23 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x1800067e),        //call 18720 <__moddi3>;;
     _32(0x645bf000),        //zxhd $r22 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000674),        //call 18720 <__moddi3>;;
     _32(0x6457f000),        //zxhd $r21 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000669),        //call 18720 <__moddi3>;;
     _32(0x6453f000),        //zxhd $r20 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x1800065e),        //call 18720 <__moddi3>;;
     _32(0x643bf000),        //zxhd $r14 = $r0;;
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x6a040013),        //copyd $r1 = $r19;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000653),        //call 18720 <__moddi3>;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f019),        //insf $r0 = $r25, 15 (0xf), 0 (0x0);;
     _32(0x6103f418),        //insf $r0 = $r24, 31 (0x1f), 16 (0x10);;
     _32(0x6203f817),        //insf $r0 = $r23, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc16),        //insf $r0 = $r22, 63 (0x3f), 48 (0x30);;
     _32(0x6007f015),        //insf $r1 = $r21, 15 (0xf), 0 (0x0);;
     _32(0x6107f414),        //insf $r1 = $r20, 31 (0x1f), 16 (0x10);;
     _32(0x6207f80e),        //insf $r1 = $r14, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26015b0c),        //sw 364 (0x16c)[$r12] = $r0;;
     _32(0x1000001a),        //goto 16e78 <main+0x658>;;
     _32(0x34005b0c),        //lws $r0 = 364 (0x16c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _32(0x34005b0c),        //lws $r0 = 364 (0x16c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000632),        //call 18720 <__moddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16e6c <main+0x64c>;;
     _32(0x1800064c),        //call 18798 <abort>;;
     _32(0x30005b0c),        //lwz $r0 = 364 (0x16c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26015b0c),        //sw 364 (0x16c)[$r12] = $r0;;
     _32(0x30005b0c),        //lwz $r0 = 364 (0x16c)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff900),        //cb.wnez $r0? 16e14 <main+0x5f4>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xfc010080),        //xord $r0 = $r0, $r2
     _32(0x7c0500c1),        //xord $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26015a0c),        //sw 360 (0x168)[$r12] = $r0;;
     _32(0x10000015),        //goto 16f0c <main+0x6ec>;;
     _32(0x34005a0c),        //lws $r0 = 360 (0x168)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x34005a0c),        //lws $r0 = 360 (0x168)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7c000080),        //xorw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16f00 <main+0x6e0>;;
     _32(0x18000627),        //call 18798 <abort>;;
     _32(0x30005a0c),        //lwz $r0 = 360 (0x168)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26015a0c),        //sw 360 (0x168)[$r12] = $r0;;
     _32(0x30005a0c),        //lwz $r0 = 360 (0x168)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 16ebc <main+0x69c>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xf8010080),        //andd $r0 = $r0, $r2
     _32(0x780500c1),        //andd $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x10000015),        //goto 16fa0 <main+0x780>;;
     _32(0x3400590c),        //lws $r0 = 356 (0x164)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x3400590c),        //lws $r0 = 356 (0x164)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x78000080),        //andw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16f94 <main+0x774>;;
     _32(0x18000602),        //call 18798 <abort>;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601590c),        //sw 356 (0x164)[$r12] = $r0;;
     _32(0x3000590c),        //lwz $r0 = 356 (0x164)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 16f50 <main+0x730>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xfa010080),        //ord $r0 = $r0, $r2
     _32(0x7a0500c1),        //ord $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601580c),        //sw 352 (0x160)[$r12] = $r0;;
     _32(0x10000015),        //goto 17034 <main+0x814>;;
     _32(0x3400580c),        //lws $r0 = 352 (0x160)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x3400580c),        //lws $r0 = 352 (0x160)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7a000080),        //orw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17028 <main+0x808>;;
     _32(0x180005dd),        //call 18798 <abort>;;
     _32(0x3000580c),        //lwz $r0 = 352 (0x160)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601580c),        //sw 352 (0x160)[$r12] = $r0;;
     _32(0x3000580c),        //lwz $r0 = 352 (0x160)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 16fe4 <main+0x7c4>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x790a7083),        //sllw $r2 = $r3, $r2;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x60040002),        //make $r1 = 2 (0x2);;
     _32(0x79027001),        //sllw $r0 = $r1, $r0;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601570c),        //sw 348 (0x15c)[$r12] = $r0;;
     _32(0x10000018),        //goto 171ec <main+0x9cc>;;
     _32(0x3400570c),        //lws $r0 = 348 (0x15c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3400570c),        //lws $r0 = 348 (0x15c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x60080002),        //make $r2 = 2 (0x2);;
     _32(0x79027002),        //sllw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 171e0 <main+0x9c0>;;
     _32(0x1800056f),        //call 18798 <abort>;;
     _32(0x3000570c),        //lwz $r0 = 348 (0x15c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601570c),        //sw 348 (0x15c)[$r12] = $r0;;
     _32(0x3000570c),        //lwz $r0 = 348 (0x15c)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff980),        //cb.wnez $r0? 17190 <main+0x970>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7808ffc2),        //zxwd $r2 = $r2;;
     _32(0x600c0002),        //make $r3 = 2 (0x2);;
     _32(0x7a0a7083),        //sraw $r2 = $r3, $r2;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x60040002),        //make $r1 = 2 (0x2);;
     _32(0x7a027001),        //sraw $r0 = $r1, $r0;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601560c),        //sw 344 (0x158)[$r12] = $r0;;
     _32(0x10000018),        //goto 173a4 <main+0xb84>;;
     _32(0x3400560c),        //lws $r0 = 344 (0x158)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3400560c),        //lws $r0 = 344 (0x158)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x60080002),        //make $r2 = 2 (0x2);;
     _32(0x7a027002),        //sraw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17398 <main+0xb78>;;
     _32(0x18000501),        //call 18798 <abort>;;
     _32(0x3000560c),        //lwz $r0 = 344 (0x158)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601560c),        //sw 344 (0x158)[$r12] = $r0;;
     _32(0x3000560c),        //lwz $r0 = 344 (0x158)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff980),        //cb.wnez $r0? 17348 <main+0xb28>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xf1013080),        //addhq $r0 = $r0, $r2
     _32(0x710530c1),        //addhq $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x10000017),        //goto 17440 <main+0xc20>;;
     _32(0x3400550c),        //lws $r0 = 340 (0x154)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3400550c),        //lws $r0 = 340 (0x154)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71000080),        //addw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17434 <main+0xc14>;;
     _32(0x180004da),        //call 18798 <abort>;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601550c),        //sw 340 (0x154)[$r12] = $r0;;
     _32(0x3000550c),        //lwz $r0 = 340 (0x154)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 173e8 <main+0xbc8>;;
     _32(0x3c08300c),        //lq $r2r3 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0000080),        //make $r0 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e0040080),        //make $r1 = 562958543486978 (0x2000200020002);;
     _32(0xf5013080),        //sbfhq $r0 = $r0, $r2
     _32(0x750530c1),        //sbfhq $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601540c),        //sw 336 (0x150)[$r12] = $r0;;
     _32(0x10000017),        //goto 174dc <main+0xcbc>;;
     _32(0x3400540c),        //lws $r0 = 336 (0x150)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3400540c),        //lws $r0 = 336 (0x150)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7100ff80),        //addw $r0 = $r0, -2 (0xfffffffe);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 174d0 <main+0xcb0>;;
     _32(0x180004b3),        //call 18798 <abort>;;
     _32(0x3000540c),        //lwz $r0 = 336 (0x150)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601540c),        //sw 336 (0x150)[$r12] = $r0;;
     _32(0x3000540c),        //lwz $r0 = 336 (0x150)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 17484 <main+0xc64>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _32(0xf9025040),        //sllhqs $r0 = $r0, 1 (0x1)
     _32(0x79065041),        //sllhqs $r1 = $r1, 1 (0x1);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601530c),        //sw 332 (0x14c)[$r12] = $r0;;
     _32(0x10000017),        //goto 17560 <main+0xd40>;;
     _32(0x3400530c),        //lws $r0 = 332 (0x14c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3400530c),        //lws $r0 = 332 (0x14c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17554 <main+0xd34>;;
     _32(0x18000492),        //call 18798 <abort>;;
     _32(0x3000530c),        //lwz $r0 = 332 (0x14c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601530c),        //sw 332 (0x14c)[$r12] = $r0;;
     _32(0x3000530c),        //lwz $r0 = 332 (0x14c)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 17508 <main+0xce8>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023040),        //srsw $r0 = $r0, 1 (0x1);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x10000016),        //goto 176d0 <main+0xeb0>;;
     _32(0x3400520c),        //lws $r0 = 328 (0x148)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x3400520c),        //lws $r0 = 328 (0x148)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023040),        //srsw $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 176c4 <main+0xea4>;;
     _32(0x18000436),        //call 18798 <abort>;;
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601520c),        //sw 328 (0x148)[$r12] = $r0;;
     _32(0x3000520c),        //lwz $r0 = 328 (0x148)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffa00),        //cb.wnez $r0? 1767c <main+0xe5c>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78040041),        //andw $r1 = $r1, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x1000001b),        //goto 178f4 <main+0x10d4>;;
     _32(0x3400510c),        //lws $r0 = 324 (0x144)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x3400510c),        //lws $r0 = 324 (0x144)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78040041),        //andw $r1 = $r1, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 178e8 <main+0x10c8>;;
     _32(0x180003ad),        //call 18798 <abort>;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601510c),        //sw 324 (0x144)[$r12] = $r0;;
     _32(0x3000510c),        //lwz $r0 = 324 (0x144)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff8c0),        //cb.wnez $r0? 1788c <main+0x106c>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xfc010080),        //xord $r0 = $r0, $r2
     _32(0x7c0500c1),        //xord $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601500c),        //sw 320 (0x140)[$r12] = $r0;;
     _32(0x10000015),        //goto 17988 <main+0x1168>;;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x3400500c),        //lws $r0 = 320 (0x140)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7c000080),        //xorw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1797c <main+0x115c>;;
     _32(0x18000388),        //call 18798 <abort>;;
     _32(0x3000500c),        //lwz $r0 = 320 (0x140)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601500c),        //sw 320 (0x140)[$r12] = $r0;;
     _32(0x3000500c),        //lwz $r0 = 320 (0x140)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 17938 <main+0x1118>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xf8010080),        //andd $r0 = $r0, $r2
     _32(0x780500c1),        //andd $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26014f0c),        //sw 316 (0x13c)[$r12] = $r0;;
     _32(0x10000017),        //goto 17a24 <main+0x1204>;;
     _32(0x34004f0c),        //lws $r0 = 316 (0x13c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x34004f0c),        //lws $r0 = 316 (0x13c)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6108300c),        //addd $r2 = $r12, 192 (0xc0);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000080),        //andw $r0 = $r0, 2 (0x2);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17a18 <main+0x11f8>;;
     _32(0x18000361),        //call 18798 <abort>;;
     _32(0x30004f0c),        //lwz $r0 = 316 (0x13c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26014f0c),        //sw 316 (0x13c)[$r12] = $r0;;
     _32(0x30004f0c),        //lwz $r0 = 316 (0x13c)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ff9c0),        //cb.wnez $r0? 179cc <main+0x11ac>;;
     _32(0x3c00300c),        //lq $r0r1 = 192 (0xc0)[$r12];;
     _96(0x0000100080800080e0080080),        //make $r2 = 562958543486978 (0x2000200020002);;
     _96(0x0000100080800080e00c0080),        //make $r3 = 562958543486978 (0x2000200020002);;
     _32(0xfa010080),        //ord $r0 = $r0, $r2
     _32(0x7a0500c1),        //ord $r1 = $r1, $r3;;
     _32(0x28012c0c),        //sq 176 (0xb0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26014e0c),        //sw 312 (0x138)[$r12] = $r0;;
     _32(0x10000015),        //goto 17ab8 <main+0x1298>;;
     _32(0x34004e0c),        //lws $r0 = 312 (0x138)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x61042c0c),        //addd $r1 = $r12, 176 (0xb0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _32(0x34004e0c),        //lws $r0 = 312 (0x138)[$r12];;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x6104300c),        //addd $r1 = $r12, 192 (0xc0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7a000080),        //orw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17aac <main+0x128c>;;
     _32(0x1800033c),        //call 18798 <abort>;;
     _32(0x30004e0c),        //lwz $r0 = 312 (0x138)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26014e0c),        //sw 312 (0x138)[$r12] = $r0;;
     _32(0x30004e0c),        //lwz $r0 = 312 (0x138)[$r12];;
     _64(0x00000000f401b1c0),        //compw.le $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 17a68 <main+0x1248>;;
     _32(0x3c08380c),        //lq $r2r3 = 224 (0xe0)[$r12];;
     _96(0x0200000080100000e0000000),        //make $r0 = 4611686019501129728 (0x4000000040000000);;
     _96(0x0200000080100000e0040000),        //make $r1 = 4611686019501129728 (0x4000000040000000);;
     _32(0x58077002),        //faddwq $r0r1 = $r2r3, $r0r1;;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x3c08380c),        //lq $r2r3 = 224 (0xe0)[$r12];;
     _96(0x0200000080100000e0000000),        //make $r0 = 4611686019501129728 (0x4000000040000000);;
     _96(0x0200000080100000e0040000),        //make $r1 = 4611686019501129728 (0x4000000040000000);;
     _32(0x58077002),        //faddwq $r0r1 = $r2r3, $r0r1;;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x10000011),        //goto 17b5c <main+0x133c>;;
     _32(0x34004d0c),        //lws $r0 = 308 (0x134)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x34004d0c),        //lws $r0 = 308 (0x134)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17b50 <main+0x1330>;;
     _32(0x18000313),        //call 18798 <abort>;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26014d0c),        //sw 308 (0x134)[$r12] = $r0;;
     _32(0x30004d0c),        //lwz $r0 = 308 (0x134)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17b1c <main+0x12fc>;;
     _96(0x0200000080100000e0080000),        //make $r2 = 4611686019501129728 (0x4000000040000000);;
     _96(0x0200000080100000e00c0000),        //make $r3 = 4611686019501129728 (0x4000000040000000);;
     _32(0x3c00380c),        //lq $r0r1 = 224 (0xe0)[$r12];;
     _32(0x5a077080),        //fsbfwq $r0r1 = $r0r1, $r2r3;;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _96(0x0200000080100000e0080000),        //make $r2 = 4611686019501129728 (0x4000000040000000);;
     _96(0x0200000080100000e00c0000),        //make $r3 = 4611686019501129728 (0x4000000040000000);;
     _32(0x3c00380c),        //lq $r0r1 = 224 (0xe0)[$r12];;
     _32(0x5a077080),        //fsbfwq $r0r1 = $r0r1, $r2r3;;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26014c0c),        //sw 304 (0x130)[$r12] = $r0;;
     _32(0x10000011),        //goto 17c00 <main+0x13e0>;;
     _32(0x34004c0c),        //lws $r0 = 304 (0x130)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x34004c0c),        //lws $r0 = 304 (0x130)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17bf4 <main+0x13d4>;;
     _32(0x180002ea),        //call 18798 <abort>;;
     _32(0x30004c0c),        //lwz $r0 = 304 (0x130)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26014c0c),        //sw 304 (0x130)[$r12] = $r0;;
     _32(0x30004c0c),        //lwz $r0 = 304 (0x130)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17bc0 <main+0x13a0>;;
     _32(0x3c00380c),        //lq $r0r1 = 224 (0xe0)[$r12];;
     _32(0x58077000),        //faddwq $r0r1 = $r0r1, $r0r1;;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x3c00380c),        //lq $r0r1 = 224 (0xe0)[$r12];;
     _32(0x58077000),        //faddwq $r0r1 = $r0r1, $r0r1;;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26014b0c),        //sw 300 (0x12c)[$r12] = $r0;;
     _32(0x10000011),        //goto 17c74 <main+0x1454>;;
     _32(0x34004b0c),        //lws $r0 = 300 (0x12c)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x34004b0c),        //lws $r0 = 300 (0x12c)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17c68 <main+0x1448>;;
     _32(0x180002cd),        //call 18798 <abort>;;
     _32(0x30004b0c),        //lwz $r0 = 300 (0x12c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26014b0c),        //sw 300 (0x12c)[$r12] = $r0;;
     _32(0x30004b0c),        //lwz $r0 = 300 (0x12c)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17c34 <main+0x1414>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x00100000e0080000),        //make $r2 = 1073741824 (0x40000000);;
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x000fe000e0080000),        //make $r2 = 1065353216 (0x3f800000);;
     _32(0x6303f802),        //insf $r0 = $r2, 63 (0x3f), 32 (0x20);;
     _64(0x000fcaaae008aac0),        //make $r2 = 1059760811 (0x3f2aaaab);;
     _32(0x6107f002),        //insf $r1 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x000fc000e0080000),        //make $r2 = 1056964608 (0x3f000000);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x00100000e0080000),        //make $r2 = 1073741824 (0x40000000);;
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x000fe000e0080000),        //make $r2 = 1065353216 (0x3f800000);;
     _32(0x6303f802),        //insf $r0 = $r2, 63 (0x3f), 32 (0x20);;
     _64(0x000fcaaae008aac0),        //make $r2 = 1059760811 (0x3f2aaaab);;
     _32(0x6107f002),        //insf $r1 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x000fc000e0080000),        //make $r2 = 1056964608 (0x3f000000);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26014a0c),        //sw 296 (0x128)[$r12] = $r0;;
     _32(0x10000011),        //goto 17d48 <main+0x1528>;;
     _32(0x34004a0c),        //lws $r0 = 296 (0x128)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x34004a0c),        //lws $r0 = 296 (0x128)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17d3c <main+0x151c>;;
     _32(0x18000298),        //call 18798 <abort>;;
     _32(0x30004a0c),        //lwz $r0 = 296 (0x128)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26014a0c),        //sw 296 (0x128)[$r12] = $r0;;
     _32(0x30004a0c),        //lwz $r0 = 296 (0x128)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17d08 <main+0x14e8>;;
     _32(0x3c08380c),        //lq $r2r3 = 224 (0xe0)[$r12];;
     _96(0x0200000080100000e0000000),        //make $r0 = 4611686019501129728 (0x4000000040000000);;
     _96(0x0200000080100000e0040000),        //make $r1 = 4611686019501129728 (0x4000000040000000);;
     _32(0x58077002),        //faddwq $r0r1 = $r2r3, $r0r1;;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x3c08380c),        //lq $r2r3 = 224 (0xe0)[$r12];;
     _96(0x0200000080100000e0000000),        //make $r0 = 4611686019501129728 (0x4000000040000000);;
     _96(0x0200000080100000e0040000),        //make $r1 = 4611686019501129728 (0x4000000040000000);;
     _32(0x58077002),        //faddwq $r0r1 = $r2r3, $r0r1;;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x10000011),        //goto 17dec <main+0x15cc>;;
     _32(0x3400490c),        //lws $r0 = 292 (0x124)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x3400490c),        //lws $r0 = 292 (0x124)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17de0 <main+0x15c0>;;
     _32(0x1800026f),        //call 18798 <abort>;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601490c),        //sw 292 (0x124)[$r12] = $r0;;
     _32(0x3000490c),        //lwz $r0 = 292 (0x124)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17dac <main+0x158c>;;
     _32(0x3c08380c),        //lq $r2r3 = 224 (0xe0)[$r12];;
     _96(0x0600000080300000e0000000),        //make $r0 = 13835058058503389184 (0xc0000000c0000000);;
     _96(0x0600000080300000e0040000),        //make $r1 = 13835058058503389184 (0xc0000000c0000000);;
     _32(0x58077002),        //faddwq $r0r1 = $r2r3, $r0r1;;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x3c08380c),        //lq $r2r3 = 224 (0xe0)[$r12];;
     _96(0x0600000080300000e0000000),        //make $r0 = 13835058058503389184 (0xc0000000c0000000);;
     _96(0x0600000080300000e0040000),        //make $r1 = 13835058058503389184 (0xc0000000c0000000);;
     _32(0x58077002),        //faddwq $r0r1 = $r2r3, $r0r1;;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601480c),        //sw 288 (0x120)[$r12] = $r0;;
     _32(0x10000011),        //goto 17e90 <main+0x1670>;;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x3400480c),        //lws $r0 = 288 (0x120)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17e84 <main+0x1664>;;
     _32(0x18000246),        //call 18798 <abort>;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601480c),        //sw 288 (0x120)[$r12] = $r0;;
     _32(0x3000480c),        //lwz $r0 = 288 (0x120)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17e50 <main+0x1630>;;
     _32(0x3c00380c),        //lq $r0r1 = 224 (0xe0)[$r12];;
     _32(0x58077000),        //faddwq $r0r1 = $r0r1, $r0r1;;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x3c00380c),        //lq $r0r1 = 224 (0xe0)[$r12];;
     _32(0x58077000),        //faddwq $r0r1 = $r0r1, $r0r1;;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601470c),        //sw 284 (0x11c)[$r12] = $r0;;
     _32(0x10000011),        //goto 17f04 <main+0x16e4>;;
     _32(0x3400470c),        //lws $r0 = 284 (0x11c)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x3400470c),        //lws $r0 = 284 (0x11c)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17ef8 <main+0x16d8>;;
     _32(0x18000229),        //call 18798 <abort>;;
     _32(0x3000470c),        //lwz $r0 = 284 (0x11c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601470c),        //sw 284 (0x11c)[$r12] = $r0;;
     _32(0x3000470c),        //lwz $r0 = 284 (0x11c)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17ec4 <main+0x16a4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x000fc000e0080000),        //make $r2 = 1056964608 (0x3f000000);;
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x000fe000e0080000),        //make $r2 = 1065353216 (0x3f800000);;
     _32(0x6303f802),        //insf $r0 = $r2, 63 (0x3f), 32 (0x20);;
     _64(0x000ff000e0080000),        //make $r2 = 1069547520 (0x3fc00000);;
     _32(0x6107f002),        //insf $r1 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x00100000e0080000),        //make $r2 = 1073741824 (0x40000000);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x2801280c),        //sq 160 (0xa0)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _64(0x000fc000e0080000),        //make $r2 = 1056964608 (0x3f000000);;
     _32(0x6103f002),        //insf $r0 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x000fe000e0080000),        //make $r2 = 1065353216 (0x3f800000);;
     _32(0x6303f802),        //insf $r0 = $r2, 63 (0x3f), 32 (0x20);;
     _64(0x000ff000e0080000),        //make $r2 = 1069547520 (0x3fc00000);;
     _32(0x6107f002),        //insf $r1 = $r2, 31 (0x1f), 0 (0x0);;
     _64(0x00100000e0080000),        //make $r2 = 1073741824 (0x40000000);;
     _32(0x6307f802),        //insf $r1 = $r2, 63 (0x3f), 32 (0x20);;
     _32(0x2801240c),        //sq 144 (0x90)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601460c),        //sw 280 (0x118)[$r12] = $r0;;
     _32(0x10000011),        //goto 17fd8 <main+0x17b8>;;
     _32(0x3400460c),        //lws $r0 = 280 (0x118)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6104280c),        //addd $r1 = $r12, 160 (0xa0);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x3400460c),        //lws $r0 = 280 (0x118)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x6108240c),        //addd $r2 = $r12, 144 (0x90);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x72030001),        //fcompw.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17fcc <main+0x17ac>;;
     _32(0x180001f4),        //call 18798 <abort>;;
     _32(0x3000460c),        //lwz $r0 = 280 (0x118)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601460c),        //sw 280 (0x118)[$r12] = $r0;;
     _32(0x3000460c),        //lwz $r0 = 280 (0x118)[$r12];;
     _64(0x00000000f401b0c0),        //compw.le $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 17f98 <main+0x1778>;;
     _32(0x3c08340c),        //lq $r2r3 = 208 (0xd0)[$r12];;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _96(0x0200000080000000e0040000),        //make $r1 = 4611686018427387904 (0x4000000000000000);;
     _32(0x5c037002),        //fadddp $r0r1 = $r2r3, $r0r1;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x3c08340c),        //lq $r2r3 = 208 (0xd0)[$r12];;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _96(0x0200000080000000e0040000),        //make $r1 = 4611686018427387904 (0x4000000000000000);;
     _32(0x5c037002),        //fadddp $r0r1 = $r2r3, $r0r1;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x10000011),        //goto 1807c <main+0x185c>;;
     _32(0x3400450c),        //lws $r0 = 276 (0x114)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x3400450c),        //lws $r0 = 276 (0x114)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 18070 <main+0x1850>;;
     _32(0x180001cb),        //call 18798 <abort>;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601450c),        //sw 276 (0x114)[$r12] = $r0;;
     _32(0x3000450c),        //lwz $r0 = 276 (0x114)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 1803c <main+0x181c>;;
     _96(0x0200000080000000e0080000),        //make $r2 = 4611686018427387904 (0x4000000000000000);;
     _96(0x0200000080000000e00c0000),        //make $r3 = 4611686018427387904 (0x4000000000000000);;
     _32(0x3c00340c),        //lq $r0r1 = 208 (0xd0)[$r12];;
     _32(0x5e037080),        //fsbfdp $r0r1 = $r0r1, $r2r3;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _96(0x0200000080000000e0080000),        //make $r2 = 4611686018427387904 (0x4000000000000000);;
     _96(0x0200000080000000e00c0000),        //make $r3 = 4611686018427387904 (0x4000000000000000);;
     _32(0x3c00340c),        //lq $r0r1 = 208 (0xd0)[$r12];;
     _32(0x5e037080),        //fsbfdp $r0r1 = $r0r1, $r2r3;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601440c),        //sw 272 (0x110)[$r12] = $r0;;
     _32(0x10000011),        //goto 18120 <main+0x1900>;;
     _32(0x3400440c),        //lws $r0 = 272 (0x110)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x3400440c),        //lws $r0 = 272 (0x110)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 18114 <main+0x18f4>;;
     _32(0x180001a2),        //call 18798 <abort>;;
     _32(0x3000440c),        //lwz $r0 = 272 (0x110)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601440c),        //sw 272 (0x110)[$r12] = $r0;;
     _32(0x3000440c),        //lwz $r0 = 272 (0x110)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 180e0 <main+0x18c0>;;
     _32(0x3c00340c),        //lq $r0r1 = 208 (0xd0)[$r12];;
     _32(0x5c037000),        //fadddp $r0r1 = $r0r1, $r0r1;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x3c00340c),        //lq $r0r1 = 208 (0xd0)[$r12];;
     _32(0x5c037000),        //fadddp $r0r1 = $r0r1, $r0r1;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601430c),        //sw 268 (0x10c)[$r12] = $r0;;
     _32(0x10000011),        //goto 18194 <main+0x1974>;;
     _32(0x3400430c),        //lws $r0 = 268 (0x10c)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x3400430c),        //lws $r0 = 268 (0x10c)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 18188 <main+0x1968>;;
     _32(0x18000185),        //call 18798 <abort>;;
     _32(0x3000430c),        //lwz $r0 = 268 (0x10c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601430c),        //sw 268 (0x10c)[$r12] = $r0;;
     _32(0x3000430c),        //lwz $r0 = 268 (0x10c)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 18154 <main+0x1934>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x0200000080000000e0080000),        //make $r2 = 4611686018427387904 (0x4000000000000000);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _96(0x01ff800080000000e0080000),        //make $r2 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x6a040002),        //copyd $r1 = $r2;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x0200000080000000e0080000),        //make $r2 = 4611686018427387904 (0x4000000000000000);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _96(0x01ff800080000000e0080000),        //make $r2 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x6a040002),        //copyd $r1 = $r2;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601420c),        //sw 264 (0x108)[$r12] = $r0;;
     _32(0x10000011),        //goto 18248 <main+0x1a28>;;
     _32(0x3400420c),        //lws $r0 = 264 (0x108)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x3400420c),        //lws $r0 = 264 (0x108)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1823c <main+0x1a1c>;;
     _32(0x18000158),        //call 18798 <abort>;;
     _32(0x3000420c),        //lwz $r0 = 264 (0x108)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601420c),        //sw 264 (0x108)[$r12] = $r0;;
     _32(0x3000420c),        //lwz $r0 = 264 (0x108)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 18208 <main+0x19e8>;;
     _32(0x3c08340c),        //lq $r2r3 = 208 (0xd0)[$r12];;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _96(0x0200000080000000e0040000),        //make $r1 = 4611686018427387904 (0x4000000000000000);;
     _32(0x5c037002),        //fadddp $r0r1 = $r2r3, $r0r1;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x3c08340c),        //lq $r2r3 = 208 (0xd0)[$r12];;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _96(0x0200000080000000e0040000),        //make $r1 = 4611686018427387904 (0x4000000000000000);;
     _32(0x5c037002),        //fadddp $r0r1 = $r2r3, $r0r1;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x10000011),        //goto 182ec <main+0x1acc>;;
     _32(0x3400410c),        //lws $r0 = 260 (0x104)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x3400410c),        //lws $r0 = 260 (0x104)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 182e0 <main+0x1ac0>;;
     _32(0x1800012f),        //call 18798 <abort>;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601410c),        //sw 260 (0x104)[$r12] = $r0;;
     _32(0x3000410c),        //lwz $r0 = 260 (0x104)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 182ac <main+0x1a8c>;;
     _32(0x3c08340c),        //lq $r2r3 = 208 (0xd0)[$r12];;
     _96(0x0600000080000000e0000000),        //make $r0 = 13835058055282163712 (0xc000000000000000);;
     _96(0x0600000080000000e0040000),        //make $r1 = 13835058055282163712 (0xc000000000000000);;
     _32(0x5c037002),        //fadddp $r0r1 = $r2r3, $r0r1;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x3c08340c),        //lq $r2r3 = 208 (0xd0)[$r12];;
     _96(0x0600000080000000e0000000),        //make $r0 = 13835058055282163712 (0xc000000000000000);;
     _96(0x0600000080000000e0040000),        //make $r1 = 13835058055282163712 (0xc000000000000000);;
     _32(0x5c037002),        //fadddp $r0r1 = $r2r3, $r0r1;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x10000011),        //goto 18390 <main+0x1b70>;;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x3400400c),        //lws $r0 = 256 (0x100)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 18384 <main+0x1b64>;;
     _32(0x18000106),        //call 18798 <abort>;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601400c),        //sw 256 (0x100)[$r12] = $r0;;
     _32(0x3000400c),        //lwz $r0 = 256 (0x100)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 18350 <main+0x1b30>;;
     _32(0x3c00340c),        //lq $r0r1 = 208 (0xd0)[$r12];;
     _32(0x5c037000),        //fadddp $r0r1 = $r0r1, $r0r1;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x3c00340c),        //lq $r0r1 = 208 (0xd0)[$r12];;
     _32(0x5c037000),        //fadddp $r0r1 = $r0r1, $r0r1;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26013f0c),        //sw 252 (0xfc)[$r12] = $r0;;
     _32(0x10000011),        //goto 18404 <main+0x1be4>;;
     _32(0x34003f0c),        //lws $r0 = 252 (0xfc)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x34003f0c),        //lws $r0 = 252 (0xfc)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 183f8 <main+0x1bd8>;;
     _32(0x180000e9),        //call 18798 <abort>;;
     _32(0x30003f0c),        //lwz $r0 = 252 (0xfc)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26013f0c),        //sw 252 (0xfc)[$r12] = $r0;;
     _32(0x30003f0c),        //lwz $r0 = 252 (0xfc)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 183c4 <main+0x1ba4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x01ff000080000000e0080000),        //make $r2 = 4602678819172646912 (0x3fe0000000000000);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _96(0x01ff800080000000e0080000),        //make $r2 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x6a040002),        //copyd $r1 = $r2;;
     _32(0x2801200c),        //sq 128 (0x80)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _96(0x01ff000080000000e0080000),        //make $r2 = 4602678819172646912 (0x3fe0000000000000);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _96(0x01ff800080000000e0080000),        //make $r2 = 4607182418800017408 (0x3ff0000000000000);;
     _32(0x6a040002),        //copyd $r1 = $r2;;
     _32(0x28011c0c),        //sq 112 (0x70)[$r12] = $r0r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26013e0c),        //sw 248 (0xf8)[$r12] = $r0;;
     _32(0x10000011),        //goto 184b8 <main+0x1c98>;;
     _32(0x34003e0c),        //lws $r0 = 248 (0xf8)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x6104200c),        //addd $r1 = $r12, 128 (0x80);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x34003e0c),        //lws $r0 = 248 (0xf8)[$r12];;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x61081c0c),        //addd $r2 = $r12, 112 (0x70);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a030001),        //fcompd.oeq $r0 = $r1, $r0;;
     _32(0x08000080),        //cb.dnez $r0? 184ac <main+0x1c8c>;;
     _32(0x180000bc),        //call 18798 <abort>;;
     _32(0x30003e0c),        //lwz $r0 = 248 (0xf8)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26013e0c),        //sw 248 (0xf8)[$r12] = $r0;;
     _32(0x30003e0c),        //lwz $r0 = 248 (0xf8)[$r12];;
     _64(0x00000000f401b040),        //compw.le $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffb40),        //cb.wnez $r0? 18478 <main+0x1c58>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x3c540a0c),        //lo $r20r21r22r23 = 40 (0x28)[$r12];;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c60120c),        //lq $r24r25 = 72 (0x48)[$r12];;
     _32(0x6130600c),        //addd $r12 = $r12, 384 (0x180);;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __udivdi3: list_I = 
 [|
     _32(0x88800641),        //cb.deqz $r1? 18554 <__udivdi3+0x64>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000503),        //cb.dnez $r3? 18550 <__udivdi3+0x60>;;
     _32(0xf00e2001),        //clzd $r3 = $r1
     _32(0x70122002),        //clzd $r4 = $r2;;
     _32(0x751110c4),        //sbfw $r4 = $r4, $r3;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0x760da042),        //compd.ltu $r3 = $r2, $r1;;
     _32(0x08000103),        //cb.dnez $r3? 18528 <__udivdi3+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x75090081),        //sbfd $r2 = $r1, $r2;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x0e000284),        //cb.wlez $r4? 18550 <__udivdi3+0x60>;;
     _32(0xe0140001),        //make $r5 = 1 (0x1)
     _32(0xfa0c0004),        //copyw $r3 = $r4
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x79126105),        //slld $r4 = $r5, $r4;;
     _32(0x6110ffc4),        //addd $r4 = $r4, -1 (0xffffffff);;
     _32(0x0f000083),        //loopdo $r3, 18548 <__udivdi3+0x58>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x78090084),        //andd $r2 = $r4, $r2;;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a3e0000000f0048f00),        //pcrel $r1 = 167484 (0x28e3c)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 18550 <__udivdi3+0x60>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __umoddi3: list_I = 
 [|
     _32(0x888004c1),        //cb.deqz $r1? 185c4 <__umoddi3+0x4c>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x080003c3),        //cb.dnez $r3? 185c0 <__umoddi3+0x48>;;
     _32(0xf0022000),        //clzd $r0 = $r0
     _32(0x700e2001),        //clzd $r3 = $r1;;
     _32(0x750d10c0),        //sbfw $r3 = $r0, $r3;;
     _32(0x790660c1),        //slld $r1 = $r1, $r3;;
     _32(0xf611a042),        //compd.ltu $r4 = $r2, $r1
     _32(0xf5010081),        //sbfd $r0 = $r1, $r2
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x710a0004),        //cmoved.deqz $r4? $r2 = $r0;;
     _32(0x8e000183),        //cb.wlez $r3? 185c0 <__umoddi3+0x48>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x7a000003),        //copyw $r0 = $r3;;
     _32(0x0f000080),        //loopdo $r0, 185bc <__umoddi3+0x44>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x7b0260c2),        //srld $r0 = $r2, $r3;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a3e0000000f0047300),        //pcrel $r1 = 167372 (0x28dcc)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 185c0 <__umoddi3+0x48>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __udivmoddi4: list_I = 
 [|
     _32(0x88800801),        //cb.deqz $r1? 18668 <__udivmoddi4+0x80>
     _32(0xf0162001),        //clzd $r5 = $r1
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0xf0122003),        //clzd $r4 = $r3
     _32(0x7601a040),        //compd.ltu $r0 = $r0, $r1;;
     _32(0x75111144),        //sbfw $r4 = $r4, $r5;;
     _32(0x88000580),        //cb.dnez $r0? 18658 <__udivmoddi4+0x70>
     _32(0x79166101),        //slld $r5 = $r1, $r4;;
     _32(0xf605a143),        //compd.ltu $r1 = $r3, $r5
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000101),        //cb.dnez $r1? 18620 <__udivmoddi4+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c5),        //sbfd $r3 = $r5, $r3;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x8e000304),        //cb.wlez $r4? 18650 <__udivmoddi4+0x68>
     _32(0xe0180001),        //make $r6 = 1 (0x1)
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0xf91a6106),        //slld $r6 = $r6, $r4
     _32(0xfb162045),        //srld $r5 = $r5, 1 (0x1)
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000081),        //loopdo $r1, 18644 <__udivmoddi4+0x5c>;;
     _32(0x700d00c5),        //stsud $r3 = $r5, $r3;;
     _32(0xf81500c6),        //andd $r5 = $r6, $r3
     _32(0x7b066103),        //srld $r1 = $r3, $r4;;
     _32(0x71010140),        //addd $r0 = $r0, $r5;;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _32(0xea040003),        //copyd $r1 = $r3
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _96(0x800000a3e0000000f00c4a00),        //pcrel $r3 = 167208 (0x28d28)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd03),        //cb.dnez $r3? 18650 <__udivmoddi4+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __divdi3: list_I = 
 [|
     _32(0x88800781),        //cb.deqz $r1? 18700 <__divdi3+0x78>
     _32(0xe40c0000),        //absd $r3 = $r0
     _32(0xe4100001),        //absd $r4 = $r1
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xf01a2003),        //clzd $r6 = $r3
     _32(0xf615a103),        //compd.ltu $r5 = $r3, $r4
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x080004c5),        //cb.dnez $r5? 186f0 <__divdi3+0x68>;;
     _32(0x70162004),        //clzd $r5 = $r4;;
     _32(0x75191146),        //sbfw $r6 = $r6, $r5;;
     _32(0x79126184),        //slld $r4 = $r4, $r6;;
     _32(0x7615a103),        //compd.ltu $r5 = $r3, $r4;;
     _32(0x08000105),        //cb.dnez $r5? 186c8 <__divdi3+0x40>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c4),        //sbfd $r3 = $r4, $r3;;
     _32(0x79026180),        //slld $r0 = $r0, $r6;;
     _32(0x0e000286),        //cb.wlez $r6? 186f0 <__divdi3+0x68>;;
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xfa140006),        //copyw $r5 = $r6
     _32(0x7b122044),        //srld $r4 = $r4, 1 (0x1);;
     _32(0x791a6187),        //slld $r6 = $r7, $r6;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000085),        //loopdo $r5, 186e8 <__divdi3+0x60>;;
     _32(0x700d00c4),        //stsud $r3 = $r4, $r3;;
     _32(0x780d00c6),        //andd $r3 = $r6, $r3;;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0xfc090042),        //xord $r2 = $r2, $r1
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a3e0000000f00c2400),        //pcrel $r3 = 167056 (0x28c90)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd83),        //cb.dnez $r3? 186f0 <__divdi3+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __moddi3: list_I = 
 [|
     _32(0x88800581),        //cb.deqz $r1? 18778 <__moddi3+0x58>
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xe4000000),        //absd $r0 = $r0
     _32(0x64040001),        //absd $r1 = $r1;;
     _32(0xf0122001),        //clzd $r4 = $r1
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x08000343),        //cb.dnez $r3? 1876c <__moddi3+0x4c>;;
     _32(0x700e2000),        //clzd $r3 = $r0;;
     _32(0x75111103),        //sbfw $r4 = $r3, $r4;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0xf615a040),        //compd.ltu $r5 = $r0, $r1
     _32(0xf50d0001),        //sbfd $r3 = $r1, $r0
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x8e000184),        //cb.wlez $r4? 1876c <__moddi3+0x4c>
     _32(0x710200c5),        //cmoved.deqz $r5? $r0 = $r3;;
     _32(0x7a0c0004),        //copyw $r3 = $r4;;
     _32(0x0f000083),        //loopdo $r3, 18768 <__moddi3+0x48>;;
     _32(0x70010001),        //stsud $r0 = $r1, $r0;;
     _32(0x7b026100),        //srld $r0 = $r0, $r4;;
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a3e0000000f0040600),        //pcrel $r1 = 166936 (0x28c18)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffdc1),        //cb.dnez $r1? 1876c <__moddi3+0x4c>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 18b70 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 1a6a0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let __libc_fini_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x800000e0a749040ce0480000),        //make $r18 = 229376 (0x38000)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _96(0x800000e0a739020ce5380012),        //sbfd $r14 = $r18, 229376 (0x38000)
     _32(0x00000000),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa3a20ce),        //srad $r14 = $r14, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x0880014e),        //cb.deqz $r14? 187fc <__libc_fini_array+0x44>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x3802f392),        //ld.xs $r0 = $r14[$r18];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x087fff4e),        //cb.dnez $r14? 187ec <__libc_fini_array+0x34>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_init_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x800000e0a849020ce04c0000),        //make $r19 = 229376 (0x38000)
     _32(0x00000000),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x880000e0a739000ce5480013),        //sbfd $r18 = $r19, 229376 (0x38000)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xfa4a20d2),        //srad $r18 = $r18, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x08800192),        //cb.deqz $r18? 18864 <__libc_init_array+0x4c>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 18850 <__libc_init_array+0x38>;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x08000000880000e0e04c0000),        //make $r19 = 229376 (0x38000);;
     _96(0x00000000800000e0e5480013),        //sbfd $r18 = $r19, 229376 (0x38000);;
     _32(0x7a4a20d2),        //srad $r18 = $r18, 3 (0x3);;
     _32(0x08800192),        //cb.deqz $r18? 1889c <__libc_init_array+0x84>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 18888 <__libc_init_array+0x70>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _init_signal_r_part_0: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040100),        //make $r1 = 256 (0x100);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x9800010f),        //call 18d08 <_malloc_r>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x888003c0),        //cb.deqz $r0? 18910 <_init_signal_r.part.0+0x58>
     _64(0x18000001a701460e),        //sd 1304 (0x518)[$r14] = $r0;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x0f0000c1),        //loopdo $r1, 188f8 <_init_signal_r.part.0+0x40>;;
     _32(0xe1080042),        //addd $r2 = $r2, 1 (0x1)
     _32(0x270ff080),        //sd.xs $r2[$r0] = $r3;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x97fffffb),        //goto 188fc <_init_signal_r.part.0+0x44>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal_r: list_I = 
 [|
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 18934 <_init_signal_r+0x14>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffffe1)        //goto 188b8 <_init_signal_r.part.0>;;
 |];

let _signal_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f80db7c1),        //compw.leu $r3 = $r1, 31 (0x1f);;
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800383),        //cb.weqz $r3? 18994 <_signal_r+0x5c>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088004c2),        //cb.deqz $r2? 189b8 <_signal_r+0x80>;;
     _32(0x6907f013),        //sxwd $r1 = $r19;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x274bf042),        //sd.xs $r1[$r2] = $r18;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffffc0),        //call 188b8 <_init_signal_r.part.0>;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb81),        //cb.wnez $r1? 1897c <_signal_r+0x44>;;
     _32(0x97ffffea),        //goto 18970 <_signal_r+0x38>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x7f03f000)        //nop ;;
 |];

let _raise_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe907f012),        //sxwd $r1 = $r18
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800a82),        //cb.weqz $r2? 18aa8 <_raise_r+0xd0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8004600),        //ld $r0 = 1304 (0x518)[$r0];;
     _32(0x08800440),        //cb.deqz $r0? 18a54 <_raise_r+0x7c>;;
     _32(0x380ef040),        //ld.xs $r3 = $r1[$r0];;
     _32(0xe1110043),        //compd.eq $r4 = $r3, 1 (0x1)
     _32(0x6009ffc3),        //compd.ne $r2 = $r3, -1 (0xffffffff);;
     _32(0x08800343),        //cb.deqz $r3? 18a54 <_raise_r+0x7c>;;
     _32(0x08000144),        //cb.dnez $r4? 18a38 <_raise_r+0x60>;;
     _32(0x08800582),        //cb.deqz $r2? 18a80 <_raise_r+0xa8>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x274ff040),        //sd.xs $r1[$r0] = $r19;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x980000ab),        //call 18d00 <_getpid_r>
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0xfa080012),        //copyw $r2 = $r18
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000007f),        //goto 18c78 <_kill_r>;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _32(0x604c0001),        //make $r19 = 1 (0x1);;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _64(0x083fffffe04cffc0),        //make $r19 = 4294967295 (0xffffffff);;
     _32(0x97ffffe1),        //goto 18a38 <_raise_r+0x60>
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sigtramp_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x8c800802),        //cb.weqz $r2? 18b60 <__sigtramp_r+0xa0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088005c2),        //cb.deqz $r2? 18b4c <__sigtramp_r+0x8c>;;
     _32(0xe90ff012),        //sxwd $r3 = $r18
     _32(0xf4118092),        //addx8wd $r4 = $r18, $r2
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x380af0c2),        //ld.xs $r2 = $r3[$r2];;
     _32(0x6105ffc2),        //compd.eq $r1 = $r2, -1 (0xffffffff);;
     _32(0x088002c2),        //cb.deqz $r2? 18b34 <__sigtramp_r+0x74>;;
     _32(0x88000281),        //cb.dnez $r1? 18b34 <__sigtramp_r+0x74>
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0xe1050042),        //compd.eq $r1 = $r2, 1 (0x1)
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x08000181),        //cb.dnez $r1? 18b34 <__sigtramp_r+0x74>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x7a000012),        //copyw $r0 = $r18;;
     _32(0x8fdc0002),        //icall $r2
     _32(0x27050004),        //sd 0 (0x0)[$r4] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffff5b),        //call 188b8 <_init_signal_r.part.0>;;
     _32(0x0c000100),        //cb.wnez $r0? 18b60 <__sigtramp_r+0xa0>;;
     _32(0x97ffffe8),        //goto 18af4 <__sigtramp_r+0x34>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x97fffff5),        //goto 18b34 <__sigtramp_r+0x74>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let raise: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000100e0081000),        //make $r2 = 262208 (0x40040);;
     _32(0x97ffff96),        //goto 189d8 <_raise_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let signal: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000100e00c1000),        //make $r3 = 262208 (0x40040);;
     _32(0xea380001),        //copyd $r14 = $r1
     _64(0xa739000cf809b7c0),        //compw.leu $r2 = $r0, 31 (0x1f)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf848ffc0),        //zxwd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x8c800382),        //cb.weqz $r2? 18bf0 <signal+0x68>
     _32(0x384c0003),        //ld $r19 = 0 (0x0)[$r3];;
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x088004c2),        //cb.deqz $r2? 18c14 <signal+0x8c>;;
     _32(0x6907f012),        //sxwd $r1 = $r18;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x273bf042),        //sd.xs $r1[$r2] = $r14;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffff29),        //call 188b8 <_init_signal_r.part.0>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb41),        //cb.wnez $r1? 18bd8 <signal+0x50>;;
     _32(0x97ffffe9),        //goto 18bcc <signal+0x44>
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal: list_I = 
 [|
     _96(0x0000000080000100e0001000),        //make $r0 = 262208 (0x40040);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 18c5c <_init_signal+0x24>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffff17)        //goto 188b8 <_init_signal_r.part.0>;;
 |];

let __sigtramp: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000100e0081000),        //make $r2 = 262208 (0x40040);;
     _32(0x97ffff94),        //goto 18ac0 <__sigtramp_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let _kill_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xfa040002),        //copyw $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000003),        //copyw $r0 = $r3
     _96(0x8800011fa749040ce0482200),        //make $r18 = 294024 (0x47c88)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980006f5),        //call 1a880 <_kill>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 18cd8 <_kill_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 18cc0 <_kill_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _getpid_r: list_I = 
 [|
     _32(0x100006ec),        //goto 1a8b0 <_getpid>;;
     _32(0x00000000)        //errop ;;
 |];

let _malloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xe14805c1),        //addd $r18 = $r1, 23 (0x17)
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe9090b92),        //compd.gtu $r2 = $r18, 46 (0x2e)
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x88000982),        //cb.dnez $r2? 18dc4 <_malloc_r+0xbc>
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0xe9050801),        //compd.gtu $r1 = $r1, 32 (0x20)
     _32(0x60480020),        //make $r18 = 32 (0x20);;
     _32(0x08002ac1),        //cb.dnez $r1? 18fe8 <_malloc_r+0x2e0>;;
     _32(0x18000258),        //call 196a0 <__malloc_lock>;;
     _32(0xe0000050),        //make $r0 = 80 (0x50)
     _32(0x60140004),        //make $r5 = 4 (0x4);;
     _96(0x80000102b8386600e1086400),        //addd $r2 = $r0, 264592 (0x40990)
     _96(0x180000009800010280000000),        //ld $r14 = 264600 (0x40998)[$r0];;
     _32(0x6104fc02),        //addd $r1 = $r2, -16 (0xfffffff0);;
     _32(0x7005a04e),        //compd.ne $r1 = $r14, $r1;;
     _32(0x08802a81),        //cb.deqz $r1? 19014 <_malloc_r+0x30c>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0x27090603),        //sd 24 (0x18)[$r3] = $r2;;
     _32(0x270d0402),        //sd 16 (0x10)[$r2] = $r3;;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x98000246),        //call 196b0 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x6848fc12),        //andd $r18 = $r18, -16 (0xfffffff0);;
     _32(0xf905a481),        //compd.gtu $r1 = $r1, $r18
     _64(0x081fffffe909ffd2),        //compd.gtu $r2 = $r18, 2147483647 (0x7fffffff);;
     _32(0x7a051042),        //orw $r1 = $r2, $r1;;
     _32(0x0c002101),        //cb.wnez $r1? 18fe8 <_malloc_r+0x2e0>;;
     _32(0x18000231),        //call 196a0 <__malloc_lock>;;
     _32(0xe9017dd2),        //compd.gtu $r0 = $r18, 503 (0x1f7)
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _32(0xe0140040),        //make $r5 = 64 (0x40)
     _32(0x6018003f),        //make $r6 = 63 (0x3f);;
     _32(0x088065c0),        //cb.deqz $r0? 1944c <_malloc_r+0x744>;;
     _32(0x7b022252),        //srld $r0 = $r18, 9 (0x9);;
     _32(0x08004700),        //cb.dnez $r0? 19268 <_malloc_r+0x560>;;
     _96(0x80000102b8386604e1106004),        //addd $r4 = $r4, 264576 (0x40980)
     _96(0x180000009800010280000000),        //ld $r14 = 264600 (0x40998)[$r4];;
     _32(0x7101a384),        //compd.eq $r0 = $r4, $r14;;
     _32(0x08800180),        //cb.deqz $r0? 18e30 <_malloc_r+0x128>;;
     _32(0x1000000b),        //goto 18e48 <_malloc_r+0x140>;;
     _32(0x09804e02),        //cb.dgez $r2? 19300 <_malloc_r+0x5f8>;;
     _32(0x3838060e),        //ld $r14 = 24 (0x18)[$r14];;
     _32(0x7005a384),        //compd.ne $r1 = $r4, $r14;;
     _32(0x088001c1),        //cb.deqz $r1? 18e48 <_malloc_r+0x140>;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x75090052),        //sbfd $r2 = $r18, $r1;;
     _32(0x650d07c2),        //compd.gt $r3 = $r2, 31 (0x1f);;
     _32(0x08fffe03),        //cb.deqz $r3? 18e20 <_malloc_r+0x118>;;
     _32(0x6a140006),        //copyd $r5 = $r6;;
     _96(0x0000000080000102e0506400),        //make $r20 = 264592 (0x40990);;
     _32(0xe1040414),        //addd $r1 = $r20, 16 (0x10)
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x08801e80),        //cb.deqz $r0? 19048 <_malloc_r+0x340>;;
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x750d0092),        //sbfd $r3 = $r18, $r2;;
     _32(0x640107c3),        //compd.le $r0 = $r3, 31 (0x1f);;
     _32(0x08805f40),        //cb.deqz $r0? 19468 <_malloc_r+0x760>;;
     _32(0xe9017fc2),        //compd.gtu $r0 = $r2, 511 (0x1ff)
     _32(0x27050a14),        //sd 40 (0x28)[$r20] = $r1;;
     _32(0x89804103),        //cb.dgez $r3? 19290 <_malloc_r+0x588>
     _32(0x27050814),        //sd 32 (0x20)[$r20] = $r1;;
     _32(0x08004c40),        //cb.dnez $r0? 1934c <_malloc_r+0x644>;;
     _32(0xe60b20c2),        //extfz $r2 = $r2, 34 (0x22), 3 (0x3)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x380c0214),        //ld $r3 = 8 (0x8)[$r20];;
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0xf9063041),        //sllw $r1 = $r1, 1 (0x1)
     _32(0x790a6080),        //slld $r2 = $r0, $r2;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _32(0x7a0900c2),        //ord $r2 = $r2, $r3;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x27090214),        //sd 8 (0x8)[$r20] = $r2;;
     _96(0x80000102b8046400e10c6000),        //addd $r3 = $r0, 264576 (0x40980)
     _96(0x180000009800010280000000),        //ld $r1 = 264592 (0x40990)[$r0];;
     _32(0x270d060e),        //sd 24 (0x18)[$r14] = $r3;;
     _32(0x2705040e),        //sd 16 (0x10)[$r14] = $r1;;
     _96(0x1800000098000102a7396400),        //sd 264592 (0x40990)[$r0] = $r14;;
     _32(0x27390601),        //sd 24 (0x18)[$r1] = $r14;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0x601c0001),        //make $r7 = 1 (0x1);;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08001680),        //cb.dnez $r0? 19060 <_malloc_r+0x358>;;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x080002c0),        //cb.dnez $r0? 18f2c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x7814ff05),        //andw $r5 = $r5, -4 (0xfffffffc);;
     _32(0xf8010087),        //andd $r0 = $r7, $r2
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x08000140),        //cb.dnez $r0? 18f2c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x08ffff40),        //cb.deqz $r0? 18f1c <_malloc_r+0x214>;;
     _96(0x0000000080000102e0286400),        //make $r10 = 264592 (0x40990);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x6a240005),        //copyd $r9 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _64(0x07fffffff4018400),        //addx8wd $r0 = $r0, 4294967280 (0xfffffff0);;
     _96(0x0000000080000102e1006400),        //addd $r0 = $r0, 264592 (0x40990);;
     _32(0x6a200000),        //copyd $r8 = $r0;;
     _32(0x38040608),        //ld $r1 = 24 (0x18)[$r8];;
     _32(0x7109a048),        //compd.eq $r2 = $r8, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 18f74 <_malloc_r+0x26c>;;
     _32(0x10000128),        //goto 19408 <_malloc_r+0x700>;;
     _32(0x09804b43),        //cb.dgez $r3? 19420 <_malloc_r+0x718>;;
     _32(0x08804986),        //cb.deqz $r6? 19408 <_malloc_r+0x700>;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x38040601),        //ld $r1 = 24 (0x18)[$r1];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0xf50d0092),        //sbfd $r3 = $r18, $r2
     _32(0x7019a048),        //compd.ne $r6 = $r8, $r1;;
     _32(0x641107c3),        //compd.le $r4 = $r3, 31 (0x1f);;
     _32(0x087ffdc4),        //cb.dnez $r4? 18f6c <_malloc_r+0x264>;;
     _32(0xea000052),        //ord $r0 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _96(0x90000102b818040ee0106400),        //make $r4 = 264592 (0x40990)
     _32(0x10000000),        //ld $r6 = 16 (0x10)[$r14];;
     _32(0xe1140404),        //addd $r5 = $r4, 16 (0x10)
     _32(0xea1c0043),        //ord $r7 = $r3, 1 (0x1)
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x2701020e),        //sd 8 (0x8)[$r14] = $r0;;
     _32(0x27050606),        //sd 24 (0x18)[$r6] = $r1;;
     _32(0x27190401),        //sd 16 (0x10)[$r1] = $r6;;
     _32(0x27490a04),        //sd 40 (0x28)[$r4] = $r18;;
     _32(0x27490804),        //sd 32 (0x20)[$r4] = $r18;;
     _32(0x27150612),        //sd 24 (0x18)[$r18] = $r5;;
     _32(0x27150412),        //sd 16 (0x10)[$r18] = $r5;;
     _32(0x271d0212),        //sd 8 (0x8)[$r18] = $r7;;
     _32(0x980001b6),        //call 196b0 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x90000005),        //goto 18ff4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xe004000c),        //make $r1 = 12 (0xc)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf1140085),        //addw $r5 = $r5, 2 (0x2)
     _96(0x88000102b8386a00e0506400),        //make $r20 = 264592 (0x40990)
     _96(0x180000009800010288000000),        //ld $r14 = 264616 (0x409a8)[$r0];;
     _32(0x61040414),        //addd $r1 = $r20, 16 (0x10);;
     _32(0x7109a382),        //compd.eq $r2 = $r2, $r14;;
     _32(0x08ffd382),        //cb.deqz $r2? 18d70 <_malloc_r+0x68>;;
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x087fe200),        //cb.dnez $r0? 18e64 <_malloc_r+0x15c>;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x38080214),        //ld $r2 = 8 (0x8)[$r20];;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08ffea00),        //cb.deqz $r0? 18efc <_malloc_r+0x1f4>;;
     _96(0x80000102e06c6000e0646400),        //make $r25 = 264592 (0x40990)
     _96(0x080000008800010280000000),        //make $r27 = 264576 (0x40980);;
     _96(0x8000010eb8380419e0687000),        //make $r26 = 276928 (0x439c0)
     _32(0x00000000),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x3858020e),        //ld $r22 = 8 (0x8)[$r14];;
     _32(0x6858ff16),        //andd $r22 = $r22, -4 (0xfffffffc);;
     _32(0xf5010592),        //sbfd $r0 = $r18, $r22
     _32(0xf909a592),        //compd.gtu $r2 = $r18, $r22
     _32(0x7161058e),        //addd $r24 = $r14, $r22;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0c8020c1),        //cb.weqz $r1? 192b0 <_malloc_r+0x5a8>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _96(0x8800010eb808001be0047e00),        //make $r1 = 276984 (0x439f8)
     _32(0x08000000),        //ld $r2 = 0 (0x0)[$r27];;
     _32(0x38540001),        //ld $r21 = 0 (0x0)[$r1];;
     _32(0x6009ffc2),        //compd.ne $r2 = $r2, -1 (0xffffffff);;
     _32(0x71550552),        //addd $r21 = $r18, $r21;;
     _32(0xe1540815),        //addd $r21 = $r21, 32 (0x20)
     _64(0x08000004e10407d5),        //addd $r1 = $r21, 4127 (0x101f);;
     _64(0x07fffffce8040001),        //andd $r1 = $r1, -4096 (0xfffffffffffff000);;
     _32(0x70560042),        //cmoved.dnez $r2? $r21 = $r1;;
     _32(0x980001d0),        //call 19820 <_sbrk_r>
     _32(0x6a040015),        //copyd $r1 = $r21;;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x7905a5d8),        //compd.gtu $r1 = $r24, $r23;;
     _32(0x08804640),        //cb.deqz $r0? 19558 <_malloc_r+0x850>;;
     _96(0x0000000080000102e0006400),        //make $r0 = 264592 (0x40990);;
     _32(0x7001a00e),        //compd.ne $r0 = $r14, $r0;;
     _32(0xf8011040),        //andw $r0 = $r0, $r1
     _32(0x7005a5d8),        //compd.ne $r1 = $r24, $r23;;
     _32(0x0c004480),        //cb.wnez $r0? 19558 <_malloc_r+0x850>;;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0xf1091540),        //addw $r2 = $r0, $r21
     _32(0x71011540),        //addw $r0 = $r0, $r21;;
     _32(0x88804101),        //cb.deqz $r1? 19530 <_malloc_r+0x828>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x3800001b),        //ld $r0 = 0 (0x0)[$r27];;
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08804200),        //cb.deqz $r0? 19550 <_malloc_r+0x848>;;
     _32(0x750105d8),        //sbfd $r0 = $r24, $r23;;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x2601001a),        //sw 0 (0x0)[$r26] = $r0;;
     _32(0xe80003d7),        //andd $r0 = $r23, 15 (0xf)
     _32(0x60601000),        //make $r24 = 4096 (0x1000);;
     _32(0x08800140),        //cb.deqz $r0? 1915c <_malloc_r+0x454>;;
     _32(0xe5040400),        //sbfd $r1 = $r0, 16 (0x10)
     _64(0x08000004e5600400),        //sbfd $r24 = $r0, 4112 (0x1010);;
     _32(0x715d0057),        //addd $r23 = $r23, $r1;;
     _32(0xf1050557),        //addd $r1 = $r23, $r21
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x60540001),        //make $r21 = 1 (0x1);;
     _64(0x00000003e804ffc1),        //andd $r1 = $r1, 4095 (0xfff);;
     _32(0x75610601),        //sbfd $r24 = $r1, $r24;;
     _32(0x980001ab),        //call 19820 <_sbrk_r>
     _32(0x6a040018),        //copyd $r1 = $r24;;
     _32(0xe109ffc0),        //compd.eq $r2 = $r0, -1 (0xffffffff)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x08000142),        //cb.dnez $r2? 19198 <_malloc_r+0x490>;;
     _32(0xf5090017),        //sbfd $r2 = $r23, $r0
     _32(0x7804ffd8),        //zxwd $r1 = $r24;;
     _32(0x71550602),        //addd $r21 = $r2, $r24;;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0xf151a50e),        //compd.eq $r20 = $r14, $r20
     _32(0xe0100009),        //make $r4 = 9 (0x9)
     _96(0x90000102b000001ae0606400),        //make $r24 = 264592 (0x40990)
     _32(0x10000000),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x275d0418),        //sd 16 (0x10)[$r24] = $r23;;
     _32(0x27550217),        //sd 8 (0x8)[$r23] = $r21;;
     _32(0xf1091040),        //addw $r2 = $r0, $r1
     _32(0xf1011040),        //addw $r0 = $r0, $r1
     _32(0x690507d6),        //compd.gtu $r1 = $r22, 31 (0x1f);;
     _32(0x88004154),        //cb.dnez $r20? 195d8 <_malloc_r+0x8d0>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x08804141),        //cb.deqz $r1? 195e0 <_malloc_r+0x8d8>;;
     _32(0xe104fa16),        //addd $r1 = $r22, -24 (0xffffffe8)
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6804fc01),        //andd $r1 = $r1, -16 (0xfffffff0);;
     _32(0xf10d004e),        //addd $r3 = $r14, $r1
     _32(0x691507c1),        //compd.gtu $r5 = $r1, 31 (0x1f);;
     _32(0x68080042),        //andd $r2 = $r2, 1 (0x1);;
     _32(0x7a050042),        //ord $r1 = $r2, $r1;;
     _32(0x2705020e),        //sd 8 (0x8)[$r14] = $r1;;
     _32(0x27110203),        //sd 8 (0x8)[$r3] = $r4;;
     _32(0x88004545),        //cb.dnez $r5? 19648 <_malloc_r+0x940>
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0xea380017),        //copyd $r14 = $r23
     _32(0x38540217),        //ld $r21 = 8 (0x8)[$r23];;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _96(0x080000008800010ee0087c00),        //make $r2 = 276976 (0x439f0);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 19224 <_malloc_r+0x51c>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _96(0x000000008000010ee0087a00),        //make $r2 = 276968 (0x439e8);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 19240 <_malloc_r+0x538>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _32(0x6854ff15),        //andd $r21 = $r21, -4 (0xfffffffc);;
     _32(0xf5010552),        //sbfd $r0 = $r18, $r21
     _32(0x7955a552),        //compd.gtu $r21 = $r18, $r21;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a551055),        //orw $r21 = $r21, $r1;;
     _32(0x0c8005d5),        //cb.weqz $r21? 192b0 <_malloc_r+0x5a8>;;
     _32(0x98000116),        //call 196b0 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x97ffff65),        //goto 18ff4 <_malloc_r+0x2ec>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x69050100),        //compd.gtu $r1 = $r0, 4 (0x4);;
     _32(0x080016c1),        //cb.dnez $r1? 193d8 <_malloc_r+0x6d0>;;
     _32(0x66175192),        //extfz $r5 = $r18, 37 (0x25), 6 (0x6);;
     _32(0xf1100e45),        //addw $r4 = $r5, 57 (0x39)
     _32(0xf1180e05),        //addw $r6 = $r5, 56 (0x38)
     _32(0x71140e45),        //addw $r5 = $r5, 57 (0x39);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffedd),        //goto 18dfc <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040202),        //ld $r1 = 8 (0x8)[$r2];;
     _32(0x6a040041),        //ord $r1 = $r1, 1 (0x1);;
     _32(0x98000104),        //call 196b0 <__malloc_unlock>
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x97ffff53),        //goto 18ff4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xea0c0052),        //ord $r3 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea040040),        //ord $r1 = $r0, 1 (0x1)
     _96(0x1800000098000102e0086400),        //make $r2 = 264592 (0x40990);;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x270d020e),        //sd 8 (0x8)[$r14] = $r3;;
     _32(0x27490402),        //sd 16 (0x10)[$r2] = $r18;;
     _32(0x980000f7),        //call 196b0 <__malloc_unlock>
     _32(0x27050212),        //sd 8 (0x8)[$r18] = $r1;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x270d0604),        //sd 24 (0x18)[$r4] = $r3;;
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x980000e4),        //call 196b0 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x7b062242),        //srld $r1 = $r2, 9 (0x9);;
     _32(0x69010101),        //compd.gtu $r0 = $r1, 4 (0x4);;
     _32(0x088014c0),        //cb.deqz $r0? 194a0 <_malloc_r+0x798>;;
     _32(0x69010501),        //compd.gtu $r0 = $r1, 20 (0x14);;
     _32(0x08002300),        //cb.dnez $r0? 1958c <_malloc_r+0x884>;;
     _32(0xf1001701),        //addw $r0 = $r1, 92 (0x5c)
     _32(0x710416c1),        //addw $r1 = $r1, 91 (0x5b);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x80000102b80c6400e1006000),        //addd $r0 = $r0, 264576 (0x40980)
     _96(0x180000009800010280000000),        //ld $r3 = 264592 (0x40990)[$r0];;
     _32(0x7011a0c0),        //compd.ne $r4 = $r0, $r3;;
     _32(0x08801d44),        //cb.deqz $r4? 19564 <_malloc_r+0x85c>;;
     _32(0x38040203),        //ld $r1 = 8 (0x8)[$r3];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x7905a081),        //compd.gtu $r1 = $r1, $r2;;
     _32(0x08800101),        //cb.deqz $r1? 193b0 <_malloc_r+0x6a8>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7105a0c0),        //compd.eq $r1 = $r0, $r3;;
     _32(0x08fffe81),        //cb.deqz $r1? 19394 <_malloc_r+0x68c>;;
     _96(0x80000102b8000603e0046400),        //make $r1 = 264592 (0x40990)
     _32(0x00000000),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x270d040e),        //sd 16 (0x10)[$r14] = $r3;;
     _32(0x27390400),        //sd 16 (0x10)[$r0] = $r14;;
     _32(0x97fffec6),        //goto 18ee8 <_malloc_r+0x1e0>
     _32(0x27390603),        //sd 24 (0x18)[$r3] = $r14;;
     _32(0x69050500),        //compd.gtu $r1 = $r0, 20 (0x14);;
     _32(0x08800e01),        //cb.deqz $r1? 194bc <_malloc_r+0x7b4>;;
     _32(0x69051500),        //compd.gtu $r1 = $r0, 84 (0x54);;
     _32(0x08001cc1),        //cb.dnez $r1? 195b0 <_malloc_r+0x8a8>;;
     _32(0x6617b312),        //extfz $r5 = $r18, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc5),        //addw $r4 = $r5, 111 (0x6f)
     _32(0xf1181b85),        //addw $r6 = $r5, 110 (0x6e)
     _32(0x71141bc5),        //addw $r5 = $r5, 111 (0x6f);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe7f),        //goto 18dfc <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf1240049),        //addw $r9 = $r9, 1 (0x1)
     _32(0x61200408),        //addd $r8 = $r8, 16 (0x10);;
     _32(0xf80400c9),        //andw $r1 = $r9, 3 (0x3)
     _32(0x7824ffc9),        //zxwd $r9 = $r9;;
     _32(0x0c7fb441),        //cb.wnez $r1? 18f5c <_malloc_r+0x254>;;
     _32(0x10000032),        //goto 194e4 <_malloc_r+0x7dc>;;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x380c0202),        //ld $r3 = 8 (0x8)[$r2];;
     _32(0x6a0c0043),        //ord $r3 = $r3, 1 (0x1);;
     _32(0x270d0202),        //sd 8 (0x8)[$r2] = $r3;;
     _32(0x27050604),        //sd 24 (0x18)[$r4] = $r1;;
     _32(0x9800009d),        //call 196b0 <__malloc_unlock>
     _32(0x27110401),        //sd 16 (0x10)[$r1] = $r4;;
     _32(0x97fffeec),        //goto 18ff4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x7b1620d2),        //srld $r5 = $r18, 3 (0x3);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97fffe3b),        //goto 18d4c <_malloc_r+0x44>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xea140052),        //ord $r5 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea100043),        //ord $r4 = $r3, 1 (0x1)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x2715020e),        //sd 8 (0x8)[$r14] = $r5;;
     _32(0x27490a14),        //sd 40 (0x28)[$r20] = $r18;;
     _32(0x27490814),        //sd 32 (0x20)[$r20] = $r18;;
     _32(0x27050612),        //sd 24 (0x18)[$r18] = $r1;;
     _32(0x27050412),        //sd 16 (0x10)[$r18] = $r1;;
     _32(0x27110212),        //sd 8 (0x8)[$r18] = $r4;;
     _32(0x98000088),        //call 196b0 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x97fffed7),        //goto 18ff4 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x66075182),        //extfz $r1 = $r2, 37 (0x25), 6 (0x6);;
     _32(0xf1000e41),        //addw $r0 = $r1, 57 (0x39)
     _32(0x71040e01),        //addw $r1 = $r1, 56 (0x38);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffffb0),        //goto 19374 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0xf11816c0),        //addw $r6 = $r0, 91 (0x5b)
     _32(0x71141700),        //addw $r5 = $r0, 92 (0x5c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe4b),        //goto 18dfc <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0x7105a001),        //compd.eq $r1 = $r1, $r0;;
     _32(0x08801b41),        //cb.deqz $r1? 19694 <_malloc_r+0x98c>;;
     _32(0xf80400c5),        //andw $r1 = $r5, 3 (0x3)
     _32(0xe100fc00),        //addd $r0 = $r0, -16 (0xfffffff0)
     _32(0x7114ffc5),        //addw $r5 = $r5, -1 (0xffffffff);;
     _32(0x0c7ffe81),        //cb.wnez $r1? 194d8 <_malloc_r+0x7d0>;;
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x7e010007),        //andnd $r0 = $r7, $r0;;
     _32(0x2701020a),        //sd 8 (0x8)[$r10] = $r0;;
     _32(0x791e2047),        //slld $r7 = $r7, 1 (0x1);;
     _32(0xe0050007),        //compd.ne $r1 = $r7, 0 (0x0)
     _32(0x7809a007),        //compd.leu $r2 = $r7, $r0;;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 19520 <_malloc_r+0x818>;;
     _32(0x17fffed3),        //goto 19060 <_malloc_r+0x358>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71240109),        //addw $r9 = $r9, 4 (0x4);;
     _32(0x78050007),        //andd $r1 = $r7, $r0;;
     _32(0x08ffff41),        //cb.deqz $r1? 19518 <_malloc_r+0x810>;;
     _32(0x97fffe84),        //goto 18f38 <_malloc_r+0x230>
     _32(0x6a140009),        //copyd $r5 = $r9;;
     _64(0x00000003e804ffd8),        //andd $r1 = $r24, 4095 (0xfff);;
     _32(0x087fbf01),        //cb.dnez $r1? 19128 <_malloc_r+0x420>;;
     _32(0xf1550556),        //addd $r21 = $r22, $r21
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0x97ffff2f),        //goto 19204 <_malloc_r+0x4fc>
     _32(0x2755020e),        //sd 8 (0x8)[$r14] = $r21;;
     _32(0x97fffefc),        //goto 19140 <_malloc_r+0x438>
     _32(0x275d001b),        //sd 0 (0x0)[$r27] = $r23;;
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x97ffff39),        //goto 19240 <_malloc_r+0x538>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000102e0106400),        //make $r4 = 264592 (0x40990);;
     _32(0xf90a6042),        //slld $r2 = $r2, $r1
     _32(0x38180204),        //ld $r6 = 8 (0x8)[$r4];;
     _32(0x7a090182),        //ord $r2 = $r2, $r6;;
     _32(0x97ffff90),        //goto 193c4 <_malloc_r+0x6bc>
     _32(0x27090204),        //sd 8 (0x8)[$r4] = $r2;;
     _32(0x69011501),        //compd.gtu $r0 = $r1, 84 (0x54);;
     _32(0x080005c0),        //cb.dnez $r0? 195ec <_malloc_r+0x8e4>;;
     _32(0x6607b302),        //extfz $r1 = $r2, 43 (0x2b), 12 (0xc);;
     _32(0xf1001bc1),        //addw $r0 = $r1, 111 (0x6f)
     _32(0x71041b81),        //addw $r1 = $r1, 110 (0x6e);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff73),        //goto 19374 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x69055500),        //compd.gtu $r1 = $r0, 340 (0x154);;
     _32(0x080005c1),        //cb.dnez $r1? 19610 <_malloc_r+0x908>;;
     _32(0x6617e3d2),        //extfz $r5 = $r18, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e05),        //addw $r4 = $r5, 120 (0x78)
     _32(0xf1181dc5),        //addw $r6 = $r5, 119 (0x77)
     _32(0x71141e05),        //addw $r5 = $r5, 120 (0x78);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe0b),        //goto 18dfc <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff0b),        //goto 19204 <_malloc_r+0x4fc>
     _32(0x6a380017),        //copyd $r14 = $r23;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97ffff1d),        //goto 19258 <_malloc_r+0x550>
     _32(0x27010217),        //sd 8 (0x8)[$r23] = $r0;;
     _32(0x69015501),        //compd.gtu $r0 = $r1, 340 (0x154);;
     _32(0x08000740),        //cb.dnez $r0? 19664 <_malloc_r+0x95c>;;
     _32(0x6607e3c2),        //extfz $r1 = $r2, 46 (0x2e), 15 (0xf);;
     _32(0xf1001e01),        //addw $r0 = $r1, 120 (0x78)
     _32(0x71041dc1),        //addw $r1 = $r1, 119 (0x77);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff5b),        //goto 19374 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe014007f),        //make $r5 = 127 (0x7f)
     _32(0xe018007e),        //make $r6 = 126 (0x7e)
     _64(0x18000001e9015500),        //compd.gtu $r0 = $r0, 1364 (0x554);;
     _32(0x087f7d80),        //cb.dnez $r0? 18dfc <_malloc_r+0xf4>;;
     _32(0x67171492),        //extfz $r5 = $r18, 49 (0x31), 18 (0x12);;
     _32(0xf1101f45),        //addw $r4 = $r5, 125 (0x7d)
     _32(0xf1181f05),        //addw $r6 = $r5, 124 (0x7c)
     _32(0x71141f45),        //addw $r5 = $r5, 125 (0x7d);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffdef),        //goto 18dfc <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x980000ea),        //call 199f0 <_free_r>
     _32(0xe104040e),        //addd $r1 = $r14, 16 (0x10)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38380418),        //ld $r14 = 16 (0x10)[$r24];;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x97fffeea),        //goto 19204 <_malloc_r+0x4fc>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xe00007f0),        //make $r0 = 2032 (0x7f0)
     _32(0xe004007e),        //make $r1 = 126 (0x7e)
     _64(0x10000001e90d5501),        //compd.gtu $r3 = $r1, 1364 (0x554);;
     _32(0x087fd003),        //cb.dnez $r3? 19374 <_malloc_r+0x66c>;;
     _32(0x67071482),        //extfz $r1 = $r2, 49 (0x31), 18 (0x12);;
     _32(0xf1001f41),        //addw $r0 = $r1, 125 (0x7d)
     _32(0x71041f01),        //addw $r1 = $r1, 124 (0x7c);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff3a),        //goto 19374 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x97ffff9b),        //goto 19500 <_malloc_r+0x7f8>
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x00000000)        //errop ;;
 |];

let __malloc_lock: list_I = 
 [|
     _32(0x90000200),        //goto 19ea0 <__libc_lock_acquire>
     _96(0x000000008000010ee0008000)        //make $r0 = 276992 (0x43a00);;
 |];

let __malloc_unlock: list_I = 
 [|
     _32(0x90000240),        //goto 19fb0 <__libc_lock_release>
     _96(0x000000008000010ee0008000)        //make $r0 = 276992 (0x43a00);;
 |];

let cleanup_glue: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x08800081),        //cb.deqz $r1? 196e8 <cleanup_glue+0x28>;;
     _32(0x1ffffff7),        //call 196c0 <cleanup_glue>;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x100000bb)        //goto 199f0 <_free_r>;;
 |];

let _reclaim_reent: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x7005a001),        //compd.ne $r1 = $r1, $r0;;
     _32(0x08800d01),        //cb.deqz $r1? 19808 <_reclaim_reent+0x100>;;
     _32(0x38041e00),        //ld $r1 = 120 (0x78)[$r0];;
     _32(0x088003c1),        //cb.deqz $r1? 1977c <_reclaim_reent+0x74>;;
     _32(0x383ae4c1),        //ld $r14 = $r19[$r1];;
     _32(0x088001ce),        //cb.deqz $r14? 19764 <_reclaim_reent+0x5c>;;
     _32(0x980000a9),        //call 199f0 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x087fff0e),        //cb.dnez $r14? 1974c <_reclaim_reent+0x44>;;
     _32(0x38041e12),        //ld $r1 = 120 (0x78)[$r18];;
     _32(0x614c0213),        //addd $r19 = $r19, 8 (0x8);;
     _64(0x00000000e0018013),        //compd.ne $r0 = $r19, 512 (0x200);;
     _32(0x087ffd40),        //cb.dnez $r0? 19744 <_reclaim_reent+0x3c>;;
     _32(0x9800009f),        //call 199f0 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041812),        //ld $r1 = 96 (0x60)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 1978c <_reclaim_reent+0x84>;;
     _32(0x1800009a),        //call 199f0 <_free_r>;;
     _64(0xb8387e12e14c8012),        //addd $r19 = $r18, 512 (0x200)
     _32(0x00000000),        //ld $r14 = 504 (0x1f8)[$r18];;
     _32(0x7101a4ce),        //compd.eq $r0 = $r14, $r19;;
     _32(0x0880020e),        //cb.deqz $r14? 197bc <_reclaim_reent+0xb4>;;
     _32(0x080001c0),        //cb.dnez $r0? 197bc <_reclaim_reent+0xb4>;;
     _32(0x98000093),        //call 199f0 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x7001a393),        //compd.ne $r0 = $r19, $r14;;
     _32(0x087ffec0),        //cb.dnez $r0? 197a4 <_reclaim_reent+0x9c>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38042212),        //ld $r1 = 136 (0x88)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 197cc <_reclaim_reent+0xc4>;;
     _32(0x1800008a),        //call 199f0 <_free_r>;;
     _32(0x30001412),        //lwz $r0 = 80 (0x50)[$r18];;
     _32(0x0c800380),        //cb.weqz $r0? 19808 <_reclaim_reent+0x100>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041612),        //ld $r1 = 88 (0x58)[$r18];;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0xea000012),        //copyd $r0 = $r18
     _64(0x18000001b8044812),        //ld $r1 = 1312 (0x520)[$r18];;
     _32(0x088001c1),        //cb.deqz $r1? 19808 <_reclaim_reent+0x100>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffffaf),        //goto 196c0 <cleanup_glue>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _sbrk_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea000001),        //copyd $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x8000011fa749040ce0482200),        //make $r18 = 294024 (0x47c88)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000399),        //call 1a6b0 <_sbrk>
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 19874 <_sbrk_r+0x54>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 1985c <_sbrk_r+0x3c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _malloc_trim_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _64(0xa7410e0ce538f7ce),        //sbfd $r14 = $r14, 4063 (0xfdf)
     _32(0x00000003),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x9fffff79),        //call 196a0 <__malloc_lock>
     _96(0x80000102a7510c0ce0506400),        //make $r20 = 264592 (0x40990)
     _32(0x00000000),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x38000414),        //ld $r0 = 16 (0x10)[$r20];;
     _32(0x38480200),        //ld $r18 = 8 (0x8)[$r0];;
     _32(0x6848ff12),        //andd $r18 = $r18, -4 (0xfffffffc);;
     _32(0x7139048e),        //addd $r14 = $r14, $r18;;
     _32(0x7b3a230e),        //srld $r14 = $r14, 12 (0xc);;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x793a230e),        //slld $r14 = $r14, 12 (0xc);;
     _64(0x00000003e501ffce),        //compd.gt $r0 = $r14, 4095 (0xfff);;
     _32(0x088001c0),        //cb.deqz $r0? 19914 <_malloc_trim_r+0x7c>;;
     _32(0x9fffffc9),        //call 19820 <_sbrk_r>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040414),        //ld $r1 = 16 (0x10)[$r20];;
     _32(0x71050481),        //addd $r1 = $r1, $r18;;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x088002c0),        //cb.deqz $r0? 1993c <_malloc_trim_r+0xa4>;;
     _32(0x9fffff67),        //call 196b0 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffb9),        //call 19820 <_sbrk_r>
     _32(0xe504000e),        //negd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff)
     _32(0xf549048e),        //sbfd $r18 = $r14, $r18
     _96(0x100000009000010ee0087000),        //make $r2 = 276928 (0x439c0);;
     _32(0x6a480052),        //ord $r18 = $r18, 1 (0x1);;
     _32(0x08800400),        //cb.deqz $r0? 199a0 <_malloc_trim_r+0x108>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x30040002),        //lwz $r1 = 0 (0x0)[$r2];;
     _32(0x380c0414),        //ld $r3 = 16 (0x10)[$r20];;
     _32(0xf539104e),        //sbfw $r14 = $r14, $r1
     _32(0x27490203),        //sd 8 (0x8)[$r3] = $r18;;
     _32(0x9fffff4e),        //call 196b0 <__malloc_unlock>
     _32(0x26390002),        //sw 0 (0x0)[$r2] = $r14;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffa0),        //call 19820 <_sbrk_r>
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38080414),        //ld $r2 = 16 (0x10)[$r20];;
     _32(0x75050002),        //sbfd $r1 = $r2, $r0;;
     _32(0x640d07c1),        //compd.le $r3 = $r1, 31 (0x1f);;
     _32(0x087ff5c3),        //cb.dnez $r3? 19914 <_malloc_trim_r+0x7c>;;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _96(0x88000102e00c7000e0106000),        //make $r4 = 264576 (0x40980)
     _96(0x100000009000010e88000000),        //make $r3 = 276928 (0x439c0);;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x97ffffcc),        //goto 19914 <_malloc_trim_r+0x7c>
     _32(0x26010003),        //sw 0 (0x0)[$r3] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let _free_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x888014c1),        //cb.deqz $r1? 19b54 <_free_r+0x164>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffff24),        //call 196a0 <__malloc_lock>;;
     _32(0xe11cfc0e),        //addd $r7 = $r14, -16 (0xfffffff0)
     _96(0x88000102b818fe0ee0146400),        //make $r5 = 264592 (0x40990)
     _32(0x08000000),        //ld $r6 = -8 (0xfffffff8)[$r14];;
     _32(0x38100405),        //ld $r4 = 16 (0x10)[$r5];;
     _32(0x6804ff86),        //andd $r1 = $r6, -2 (0xfffffffe);;
     _32(0x710d0047),        //addd $r3 = $r7, $r1;;
     _32(0xf011a0c4),        //compd.ne $r4 = $r4, $r3
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x88802144),        //cb.deqz $r4? 19c50 <_free_r+0x260>
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x8b000d86),        //cb.odd $r6? 19b1c <_free_r+0x12c>
     _32(0xf1010083),        //addd $r0 = $r3, $r2
     _32(0x27090203),        //sd 8 (0x8)[$r3] = $r2;;
     _32(0xe1140405),        //addd $r5 = $r5, 16 (0x10)
     _32(0x3810fc0e),        //ld $r4 = -16 (0xfffffff0)[$r14];;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0xf51d01c4),        //sbfd $r7 = $r4, $r7
     _32(0x71050101),        //addd $r1 = $r1, $r4;;
     _32(0xe8000040),        //andd $r0 = $r0, 1 (0x1)
     _32(0x38100407),        //ld $r4 = 16 (0x10)[$r7];;
     _32(0x7119a144),        //compd.eq $r6 = $r4, $r5;;
     _32(0x08001a06),        //cb.dnez $r6? 19c10 <_free_r+0x220>;;
     _32(0x38180607),        //ld $r6 = 24 (0x18)[$r7];;
     _32(0x27190604),        //sd 24 (0x18)[$r4] = $r6;;
     _32(0x88802700),        //cb.deqz $r0? 19cec <_free_r+0x2fc>
     _32(0x27110406),        //sd 16 (0x10)[$r6] = $r4;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x69017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff);;
     _32(0x08000ec0),        //cb.dnez $r0? 19b80 <_free_r+0x190>;;
     _32(0xe60720c1),        //extfz $r1 = $r1, 34 (0x22), 3 (0x3)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000102e00c6400),        //make $r3 = 264592 (0x40990);;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0x38100203),        //ld $r4 = 8 (0x8)[$r3];;
     _32(0xf9023040),        //sllw $r0 = $r0, 1 (0x1)
     _32(0x79066042),        //slld $r1 = $r2, $r1;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x7a050101),        //ord $r1 = $r1, $r4;;
     _96(0x80000102b8086400e1106000),        //addd $r4 = $r0, 264576 (0x40980)
     _96(0x180000009800010280000000),        //ld $r2 = 264592 (0x40990)[$r0];;
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x27050203),        //sd 8 (0x8)[$r3] = $r1;;
     _32(0x27090407),        //sd 16 (0x10)[$r7] = $r2;;
     _96(0x1800000098000102a71d6400),        //sd 264592 (0x40990)[$r0] = $r7;;
     _32(0x271d0602),        //sd 24 (0x18)[$r2] = $r7;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffee6),        //goto 196b0 <__malloc_unlock>;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x0b0004c0),        //cb.odd $r0? 19b6c <_free_r+0x17c>;;
     _32(0xf1050081),        //addd $r1 = $r1, $r2
     _32(0x61140405),        //addd $r5 = $r5, 16 (0x10);;
     _32(0xea100041),        //ord $r4 = $r1, 1 (0x1)
     _32(0x38000403),        //ld $r0 = 16 (0x10)[$r3];;
     _32(0x7009a140),        //compd.ne $r2 = $r0, $r5;;
     _32(0x08801d42),        //cb.deqz $r2? 19d0c <_free_r+0x31c>;;
     _32(0x38080603),        //ld $r2 = 24 (0x18)[$r3];;
     _32(0x27090600),        //sd 24 (0x18)[$r0] = $r2;;
     _32(0x27010402),        //sd 16 (0x10)[$r2] = $r0;;
     _32(0x27110207),        //sd 8 (0x8)[$r7] = $r4;;
     _32(0x97ffffd1),        //goto 19a90 <_free_r+0xa0>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0xe9017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff)
     _32(0x2701fe0e),        //sd -8 (0xfffffff8)[$r14] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x08fff1c0),        //cb.deqz $r0? 19a98 <_free_r+0xa8>;;
     _32(0x7b022241),        //srld $r0 = $r1, 9 (0x9);;
     _32(0x69090100),        //compd.gtu $r2 = $r0, 4 (0x4);;
     _32(0x08001382),        //cb.dnez $r2? 19cc0 <_free_r+0x2d0>;;
     _32(0x66035181),        //extfz $r0 = $r1, 37 (0x25), 6 (0x6);;
     _32(0xf1100e40),        //addw $r4 = $r0, 57 (0x39)
     _32(0x71000e00),        //addw $r0 = $r0, 56 (0x38);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x80000102b80c6404e1106004),        //addd $r4 = $r4, 264576 (0x40980)
     _96(0x180000009800010280000000),        //ld $r3 = 264592 (0x40990)[$r4];;
     _32(0x7009a0c4),        //compd.ne $r2 = $r4, $r3;;
     _32(0x08801702),        //cb.deqz $r2? 19d30 <_free_r+0x340>;;
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x7909a042),        //compd.gtu $r2 = $r2, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 19be0 <_free_r+0x1f0>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7101a0c4),        //compd.eq $r0 = $r4, $r3;;
     _32(0x08fffe80),        //cb.deqz $r0? 19bc4 <_free_r+0x1d4>;;
     _32(0x38100603),        //ld $r4 = 24 (0x18)[$r3];;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x270d0407),        //sd 16 (0x10)[$r7] = $r3;;
     _32(0x271d0404),        //sd 16 (0x10)[$r4] = $r7;;
     _32(0x271d0603),        //sd 24 (0x18)[$r3] = $r7;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffea9),        //goto 196b0 <__malloc_unlock>;;
     _32(0x080019c0),        //cb.dnez $r0? 19dac <_free_r+0x3bc>;;
     _32(0xf1050042),        //addd $r1 = $r2, $r1
     _32(0x38000603),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0xea080041),        //ord $r2 = $r1, 1 (0x1)
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x27010603),        //sd 24 (0x18)[$r3] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x270d0400),        //sd 16 (0x10)[$r0] = $r3;;
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffe99),        //goto 196b0 <__malloc_unlock>;;
     _32(0x8b000246),        //cb.odd $r6? 19c74 <_free_r+0x284>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0x3800fc0e),        //ld $r0 = -16 (0xfffffff0)[$r14];;
     _32(0xf51d01c0),        //sbfd $r7 = $r0, $r7
     _32(0x71050001),        //addd $r1 = $r1, $r0;;
     _32(0x38080407),        //ld $r2 = 16 (0x10)[$r7];;
     _32(0x38000607),        //ld $r0 = 24 (0x18)[$r7];;
     _32(0x27010602),        //sd 24 (0x18)[$r2] = $r0;;
     _32(0x27090400),        //sd 16 (0x10)[$r0] = $r2;;
     _32(0xea0c0041),        //ord $r3 = $r1, 1 (0x1)
     _96(0x88000102e0006400e0086200),        //make $r2 = 264584 (0x40988)
     _96(0x100000009000010288000000),        //make $r0 = 264592 (0x40990);;
     _32(0x38080002),        //ld $r2 = 0 (0x0)[$r2];;
     _32(0x270d0207),        //sd 8 (0x8)[$r7] = $r3;;
     _32(0x271d0400),        //sd 16 (0x10)[$r0] = $r7;;
     _32(0x7905a042),        //compd.gtu $r1 = $r2, $r1;;
     _32(0x087fe601),        //cb.dnez $r1? 19b00 <_free_r+0x110>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _96(0x080000008800010ee0047e00),        //make $r1 = 276984 (0x439f8);;
     _32(0x9ffffef9),        //call 19898 <_malloc_trim_r>
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x17ffff91),        //goto 19b00 <_free_r+0x110>;;
     _32(0x69090500),        //compd.gtu $r2 = $r0, 20 (0x14);;
     _32(0x08800302),        //cb.deqz $r2? 19cf4 <_free_r+0x304>;;
     _32(0x69091500),        //compd.gtu $r2 = $r0, 84 (0x54);;
     _32(0x080008c2),        //cb.dnez $r2? 19d58 <_free_r+0x368>;;
     _32(0x6603b301),        //extfz $r0 = $r1, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc0),        //addw $r4 = $r0, 111 (0x6f)
     _32(0x71001b80),        //addw $r0 = $r0, 110 (0x6e);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffb0),        //goto 19ba4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff90),        //goto 19b2c <_free_r+0x13c>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0x710016c0),        //addw $r0 = $r0, 91 (0x5b);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffa8),        //goto 19ba4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x0000000080000102e0006400),        //make $r0 = 264592 (0x40990);;
     _32(0x271d0a00),        //sd 40 (0x28)[$r0] = $r7;;
     _32(0x271d0800),        //sd 32 (0x20)[$r0] = $r7;;
     _32(0x27150607),        //sd 24 (0x18)[$r7] = $r5;;
     _32(0x28110207),        //sq 8 (0x8)[$r7] = $r4r5;;
     _32(0x97ffff76),        //goto 19b00 <_free_r+0x110>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xfa023080),        //sraw $r0 = $r0, 2 (0x2)
     _96(0x1000000090000102e0086400),        //make $r2 = 264592 (0x40990);;
     _32(0xf9026001),        //slld $r0 = $r1, $r0
     _32(0x38140202),        //ld $r5 = 8 (0x8)[$r2];;
     _32(0x7a010140),        //ord $r0 = $r0, $r5;;
     _32(0x97ffffa5),        //goto 19be4 <_free_r+0x1f4>
     _32(0x27010202),        //sd 8 (0x8)[$r2] = $r0;;
     _32(0x69095500),        //compd.gtu $r2 = $r0, 340 (0x154);;
     _32(0x08000202),        //cb.dnez $r2? 19d7c <_free_r+0x38c>;;
     _32(0x6603e3c1),        //extfz $r0 = $r1, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e00),        //addw $r4 = $r0, 120 (0x78)
     _32(0x71001dc0),        //addw $r0 = $r0, 119 (0x77);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff8c),        //goto 19ba4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe000007e),        //make $r0 = 126 (0x7e)
     _64(0x10000001e9095500),        //compd.gtu $r2 = $r0, 1364 (0x554);;
     _32(0x087fe182),        //cb.dnez $r2? 19ba4 <_free_r+0x1b4>;;
     _32(0x67031481),        //extfz $r0 = $r1, 49 (0x31), 18 (0x12);;
     _32(0xf1101f40),        //addw $r4 = $r0, 125 (0x7d)
     _32(0x71001f00),        //addw $r0 = $r0, 124 (0x7c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff80),        //goto 19ba4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x97ffff53),        //goto 19b00 <_free_r+0x110>
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_lock_init: list_I = 
 [|
     _32(0x08800080),        //cb.deqz $r0? 19dc8 <__libc_lock_init+0x8>;;
     _32(0x10003e63),        //goto 29750 <__cos_recursive_initlock_base>;;
     _32(0x00000000),        //errop ;;
     _32(0x10003e61)        //goto 29750 <__cos_recursive_initlock_base>;;
 |];

let __libc_lock_close: list_I = 
 [|
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_try_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0xf0055081),        //addx2w $r1 = $r1, $r2
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x98003e59),        //call 29760 <__cos_recursive_trylock_base>
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _64(0x00000000f005b040),        //compw.ne $r1 = $r0, 1 (0x1);;
     _32(0x0c8001c1),        //cb.weqz $r1? 19e28 <__libc_lock_try_acquire+0x50>;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x0000000080000000e0040000),        //make $r1 = 0 (0x0);;
     _32(0x08000201),        //cb.dnez $r1? 19e54 <__libc_lock_try_acquire+0x7c>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x80000000e0080000e0040040),        //make $r1 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r2 = 0 (0x0);;
     _32(0xe0090002),        //compd.ne $r2 = $r2, 0 (0x0)
     _64(0x08000000f505b041),        //compw.gt $r1 = $r1, 1 (0x1);;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 19e8c <__libc_lock_try_acquire+0xb4>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x97ffffee),        //goto 19e3c <__libc_lock_try_acquire+0x64>
     _32(0x3fcd0000),        //fence ;;
     _32(0x98003c61),        //call 29010 <mppa_cos_l2_wb_inval>
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x97fffffb),        //goto 19e84 <__libc_lock_try_acquire+0xac>
     _32(0x3f8d0000)        //dinval ;;
 |];

let __libc_lock_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0xe407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78383fc2),        //zxbd $r14 = $r2;;
     _32(0xf0395381),        //addx2w $r14 = $r1, $r14
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xf14c004e),        //addw $r19 = $r14, 1 (0x1)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xf138004e),        //addw $r14 = $r14, 1 (0x1)
     _32(0x27510a0c),        //sd 40 (0x28)[$r12] = $r20;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x9fffffbe),        //call 19dd8 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c800380),        //cb.weqz $r0? 19f20 <__libc_lock_acquire+0x80>;;
     _32(0x26510e0c),        //sw 56 (0x38)[$r12] = $r20;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7705b4c1),        //compw.geu $r1 = $r1, $r19;;
     _32(0x0c7ffe81),        //cb.wnez $r1? 19ee0 <__libc_lock_acquire+0x40>;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x26050e0c),        //sw 56 (0x38)[$r12] = $r1;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7605b381),        //compw.ltu $r1 = $r1, $r14;;
     _32(0x0c7ffec1),        //cb.wnez $r1? 19efc <__libc_lock_acquire+0x5c>;;
     _32(0x9fffffb1),        //call 19dd8 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c7ffd00),        //cb.wnez $r0? 19eec <__libc_lock_acquire+0x4c>;;
     _96(0x0000000080000000e0000000),        //make $r0 = 0 (0x0);;
     _32(0x08000240),        //cb.dnez $r0? 19f50 <__libc_lock_acquire+0xb0>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _96(0x80000000e0040000e0000040),        //make $r0 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r1 = 0 (0x0);;
     _32(0xe0050001),        //compd.ne $r1 = $r1, 0 (0x0)
     _64(0x08000000f501b040),        //compw.gt $r0 = $r0, 1 (0x1);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c000280),        //cb.wnez $r0? 19fa0 <__libc_lock_acquire+0x100>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _32(0x18003c1c),        //call 29010 <mppa_cos_l2_wb_inval>;;
     _32(0x97fffff7),        //goto 19f80 <__libc_lock_acquire+0xe0>
     _32(0x3f8d0000),        //dinval ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_release: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0xf80c3fc2),        //zxbd $r3 = $r2
     _96(0x1000000090000000e0080000),        //make $r2 = 0 (0x0);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x700550c1),        //addx2w $r1 = $r1, $r3;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x880001c2),        //cb.dnez $r2? 1a000 <__libc_lock_release+0x50>
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10003e2b),        //goto 298a8 <__cos_recursive_unlock_base>;;
     _96(0x80000000e00c0000e0080040),        //make $r2 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r3 = 0 (0x0);;
     _32(0xe00d0003),        //compd.ne $r3 = $r3, 0 (0x0)
     _64(0x08000000f509b042),        //compw.gt $r2 = $r2, 1 (0x1);;
     _32(0x780910c2),        //andw $r2 = $r2, $r3;;
     _32(0x0c0001c2),        //cb.wnez $r2? 1a044 <__libc_lock_release+0x94>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10003e1a),        //goto 298a8 <__cos_recursive_unlock_base>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x98003bf2),        //call 29010 <mppa_cos_l2_wb_inval>
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x97fffff6),        //goto 1a030 <__libc_lock_release+0x80>
     _32(0x3f8d0000)        //dinval ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110100000100000; //0x16820
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivdi3, 0b00011000010011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__umoddi3, 0b00011000010101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivmoddi4, 0b00011000010111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__divdi3, 0b00011000011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__moddi3, 0b00011000011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00011000011110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_fini_array, 0b00011000011110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_init_array, 0b00011000100000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r_part_0, 0b00011000100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r, 0b00011000100100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_signal_r, 0b00011000100100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_raise_r, 0b00011000100111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp_r, 0b00011000101011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(raise, 0b00011000101101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(signal, 0b00011000101110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal, 0b00011000110000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp, 0b00011000110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_kill_r, 0b00011000110001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_getpid_r, 0b00011000110100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_r, 0b00011000110100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_lock, 0b00011001011010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_unlock, 0b00011001011010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(cleanup_glue, 0b00011001011011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_reclaim_reent, 0b00011001011100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_sbrk_r, 0b00011001100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_trim_r, 0b00011001100010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_free_r, 0b00011001100111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_init, 0b00011001110111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_close, 0b00011001110111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_try_acquire, 0b00011001110111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_acquire, 0b00011001111010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_release, 0b00011001111110110000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000016820;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
