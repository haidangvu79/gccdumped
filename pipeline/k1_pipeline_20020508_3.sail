// executing pipeline 20020508_3.c.out.dumped test 
val k1_pipeline_20020508_3: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_20020508_3() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a027001),        //sraw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000200),        //sbfw $r0 = $r0, 8 (0x8);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79027002),        //sllw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001af101b0c0),        //compw.eq $r0 = $r0, 835 (0x343);;
     _32(0x0c000080),        //cb.wnez $r0? 168b0 <main+0x90>;;
     _32(0x1800022b),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7a023100),        //sraw $r0 = $r0, 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79023100),        //sllw $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001af101b0c0),        //compw.eq $r0 = $r0, 835 (0x343);;
     _32(0x0c000080),        //cb.wnez $r0? 1690c <main+0xec>;;
     _32(0x18000214),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a027001),        //sraw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000400),        //sbfw $r0 = $r0, 16 (0x10);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79027002),        //sllw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07fffff9f101b0c0),        //compw.eq $r0 = $r0, 4294967075 (0xffffff23);;
     _32(0x0c000080),        //cb.wnez $r0? 16990 <main+0x170>;;
     _32(0x180001f3),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a023100),        //sraw $r0 = $r0, 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79023300),        //sllw $r0 = $r0, 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07fffff9f101b0c0),        //compw.eq $r0 = $r0, 4294967075 (0xffffff23);;
     _32(0x0c000080),        //cb.wnez $r0? 169ec <main+0x1cc>;;
     _32(0x180001dc),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a027001),        //sraw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000800),        //sbfw $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79027002),        //sllw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x02000079f101b0c0),        //compw.eq $r0 = $r0, 1073745699 (0x40000f23);;
     _32(0x0c000080),        //cb.wnez $r0? 16a60 <main+0x240>;;
     _32(0x180001bf),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a023100),        //sraw $r0 = $r0, 4 (0x4);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79023700),        //sllw $r0 = $r0, 28 (0x1c);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x02000079f101b0c0),        //compw.eq $r0 = $r0, 1073745699 (0x40000f23);;
     _32(0x0c000080),        //cb.wnez $r0? 16aa8 <main+0x288>;;
     _32(0x180001ad),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a066001),        //srad $r1 = $r1, $r0;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75001000),        //sbfw $r0 = $r0, 64 (0x40);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79026002),        //slld $r0 = $r2, $r0;;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x040000008003c8d1e00459c0),        //make $r1 = 9223372037108745575 (0x800000000f234567);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16b18 <main+0x2f8>;;
     _32(0x18000191),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a062100),        //srad $r1 = $r0, 4 (0x4);;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x79022f00),        //slld $r0 = $r0, 60 (0x3c);;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x040000008003c8d1e00459c0),        //make $r1 = 9223372037108745575 (0x800000000f234567);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16b5c <main+0x33c>;;
     _32(0x18000180),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a066001),        //srad $r1 = $r1, $r0;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75001000),        //sbfw $r0 = $r0, 64 (0x40);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79026002),        //slld $r0 = $r2, $r0;;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x000791a2859e2af3e0047bc0),        //make $r1 = 68174490360335855 (0xf2345678abcdef);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16bcc <main+0x3ac>;;
     _32(0x18000164),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a062100),        //srad $r1 = $r0, 4 (0x4);;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x79022f00),        //slld $r0 = $r0, 60 (0x3c);;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x000791a2859e2af3e0047bc0),        //make $r1 = 68174490360335855 (0xf2345678abcdef);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c10 <main+0x3f0>;;
     _32(0x18000153),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000e00),        //make $r0 = 258104 (0x3f038);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a066001),        //srad $r1 = $r1, $r0;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000e00),        //make $r0 = 258104 (0x3f038);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75001000),        //sbfw $r0 = $r0, 64 (0x40);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79026002),        //slld $r0 = $r2, $r0;;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x0791a2b3862af37be004c000),        //make $r1 = 17452669532245978880 (0xf2345678abcdef00);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16c80 <main+0x460>;;
     _32(0x18000137),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a062f00),        //srad $r1 = $r0, 60 (0x3c);;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x0791a2b3862af37be004c000),        //make $r1 = 17452669532245978880 (0xf2345678abcdef00);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 16cc4 <main+0x4a4>;;
     _32(0x18000126),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79027001),        //sllw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000200),        //sbfw $r0 = $r0, 8 (0x8);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a027002),        //sraw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001af101b0c0),        //compw.eq $r0 = $r0, 835 (0x343);;
     _32(0x0c000080),        //cb.wnez $r0? 16d48 <main+0x528>;;
     _32(0x18000105),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79023100),        //sllw $r0 = $r0, 4 (0x4);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7a023100),        //sraw $r0 = $r0, 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001af101b0c0),        //compw.eq $r0 = $r0, 835 (0x343);;
     _32(0x0c000080),        //cb.wnez $r0? 16da4 <main+0x584>;;
     _32(0x180000ee),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79027001),        //sllw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000400),        //sbfw $r0 = $r0, 16 (0x10);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a027002),        //sraw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07fffffff101b7c0),        //compw.eq $r0 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c000080),        //cb.wnez $r0? 16e28 <main+0x608>;;
     _32(0x180000cd),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x79023100),        //sllw $r0 = $r0, 4 (0x4);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a023300),        //sraw $r0 = $r0, 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07fffffff101b7c0),        //compw.eq $r0 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c000080),        //cb.wnez $r0? 16e84 <main+0x664>;;
     _32(0x180000b6),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79027001),        //sllw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30080000),        //lwz $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75000800),        //sbfw $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a027002),        //sraw $r0 = $r2, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000791af101b000),        //compw.eq $r0 = $r0, 992064 (0xf2340);;
     _32(0x0c000080),        //cb.wnez $r0? 16ef8 <main+0x6d8>;;
     _32(0x18000099),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79023100),        //sllw $r0 = $r0, 4 (0x4);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7a023700),        //sraw $r0 = $r0, 28 (0x1c);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000791af101b000),        //compw.eq $r0 = $r0, 992064 (0xf2340);;
     _32(0x0c000080),        //cb.wnez $r0? 16f40 <main+0x720>;;
     _32(0x18000087),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79066001),        //slld $r1 = $r1, $r0;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75001000),        //sbfw $r0 = $r0, 64 (0x40);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a026002),        //srad $r0 = $r2, $r0;;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _64(0x03c8d159e101e000),        //compd.eq $r0 = $r0, 65016260480 (0xf23456780);;
     _32(0x08000080),        //cb.dnez $r0? 16fa8 <main+0x788>;;
     _32(0x1800006d),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x79062100),        //slld $r1 = $r0, 4 (0x4);;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a022f00),        //srad $r0 = $r0, 60 (0x3c);;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _64(0x03c8d159e101e000),        //compd.eq $r0 = $r0, 65016260480 (0xf23456780);;
     _32(0x08000080),        //cb.dnez $r0? 16fe4 <main+0x7c4>;;
     _32(0x1800005e),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79066001),        //slld $r1 = $r1, $r0;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75001000),        //sbfw $r0 = $r0, 64 (0x40);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a026002),        //srad $r0 = $r2, $r0;;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x0791a2b3862af37be004c000),        //make $r1 = 17452669532245978880 (0xf2345678abcdef00);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 17054 <main+0x834>;;
     _32(0x18000042),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x79062100),        //slld $r1 = $r0, 4 (0x4);;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a022f00),        //srad $r0 = $r0, 60 (0x3c);;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x0791a2b3862af37be004c000),        //make $r1 = 17452669532245978880 (0xf2345678abcdef00);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 17098 <main+0x878>;;
     _32(0x18000031),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000e00),        //make $r0 = 258104 (0x3f038);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x79066001),        //slld $r1 = $r1, $r0;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38080000),        //ld $r2 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000e00),        //make $r0 = 258104 (0x3f038);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x75001000),        //sbfw $r0 = $r0, 64 (0x40);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a026002),        //srad $r0 = $r2, $r0;;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x000791a2859e2af3e0047bc0),        //make $r1 = 68174490360335855 (0xf2345678abcdef);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 17108 <main+0x8e8>;;
     _32(0x18000015),        //call 17158 <abort>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x79062f00),        //slld $r1 = $r0, 60 (0x3c);;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a022100),        //srad $r0 = $r0, 4 (0x4);;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _96(0x000791a2859e2af3e0047bc0),        //make $r1 = 68174490360335855 (0xf2345678abcdef);;
     _32(0x7101a040),        //compd.eq $r0 = $r0, $r1;;
     _32(0x08000080),        //cb.dnez $r0? 1714c <main+0x92c>;;
     _32(0x18000004),        //call 17158 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 17178 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 17578 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 19250 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit_: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 17710 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 171b4 <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 19250 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110100000100000; //0x16820
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111000101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit_, 0b00010111000101111000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000016820;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
