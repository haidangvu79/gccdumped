// executing pipeline 20040709_1.c.out.dumped test 
val k1_pipeline_20040709_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_20040709_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let myrnd: list_I = 
 [|
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x120e3273db003340),        //mulw $r0 = $r0, 1103515245 (0x41c64e6d);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x0000000cf1000e40),        //addw $r0 = $r0, 12345 (0x3039);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023400),        //srlw $r0 = $r0, 16 (0x10);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeA: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 168a0 <retmeA>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitA: list_I = 
 [|
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 16a08 <retitA>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testA: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 16af0 <testA+0x50>;;
     _32(0x1fffff56),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 16ac8 <testA+0x28>;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087fff),        //make $r2 = 32767 (0x7fff);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffff3a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffff38),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 168b8 <fn1A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16c6c <testA+0x1cc>;;
     _32(0x1800281e),        //call 20ce0 <abort>;;
     _32(0x1ffffeed),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffeeb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 16940 <fn2A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16dd8 <testA+0x338>;;
     _32(0x180027c3),        //call 20ce0 <abort>;;
     _32(0x1ffffe92),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffe90),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff00),        //call 16a28 <fn3A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16f08 <testA+0x468>;;
     _32(0x18002777),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeB: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 16f20 <retmeB>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitB: list_I = 
 [|
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 17088 <retitB>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testB: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17170 <testB+0x50>;;
     _32(0x1ffffdb6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17148 <testB+0x28>;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087fff),        //make $r2 = 32767 (0x7fff);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffd9a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd98),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 16f38 <fn1B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 172dc <testB+0x1bc>;;
     _32(0x18002682),        //call 20ce0 <abort>;;
     _32(0x1ffffd51),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd4f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 16fc0 <fn2B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17438 <testB+0x318>;;
     _32(0x1800262b),        //call 20ce0 <abort>;;
     _32(0x1ffffcfa),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffcf8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 170a8 <fn3B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17558 <testB+0x438>;;
     _32(0x180025e3),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeC: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 17570 <retmeC>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitC: list_I = 
 [|
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 176d8 <retitC>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testC: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 177c0 <testC+0x50>;;
     _32(0x1ffffc22),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17798 <testC+0x28>;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60087fff),        //make $r2 = 32767 (0x7fff);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffc06),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffc04),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 17588 <fn1C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1792c <testC+0x1bc>;;
     _32(0x180024ee),        //call 20ce0 <abort>;;
     _32(0x1ffffbbd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffbbb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 17610 <fn2C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17a88 <testC+0x318>;;
     _32(0x18002497),        //call 20ce0 <abort>;;
     _32(0x1ffffb66),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffb64),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 176f8 <fn3C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17ba8 <testC+0x438>;;
     _32(0x1800244f),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeD: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 17bc0 <retmeD>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitD: list_I = 
 [|
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 17d18 <retitD>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testD: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17e00 <testD+0x50>;;
     _32(0x1ffffa92),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17dd8 <testD+0x28>;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffa75),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffa73),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 17bd8 <fn1D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17f80 <testD+0x1d0>;;
     _32(0x18002359),        //call 20ce0 <abort>;;
     _32(0x1ffffa28),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffa26),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff22),        //call 17c58 <fn2D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 180ec <testD+0x33c>;;
     _32(0x180022fe),        //call 20ce0 <abort>;;
     _32(0x1ffff9cd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff9cb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffeff),        //call 17d38 <fn3D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000580),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1821c <testD+0x46c>;;
     _32(0x180022b2),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeE: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18230 <retmeE>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitE: list_I = 
 [|
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 18388 <retitE>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testE: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 18470 <testE+0x50>;;
     _32(0x1ffff8f6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 18448 <testE+0x28>;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff8d9),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff8d7),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18248 <fn1E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 185dc <testE+0x1bc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 185dc <testE+0x1bc>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 185dc <testE+0x1bc>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 185dc <testE+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 185e0 <testE+0x1c0>;;
     _32(0x180021c1),        //call 20ce0 <abort>;;
     _32(0x1ffff890),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff88e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff26),        //call 182c8 <fn2E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 18738 <testE+0x318>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18738 <testE+0x318>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18738 <testE+0x318>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18738 <testE+0x318>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1873c <testE+0x31c>;;
     _32(0x1800216a),        //call 20ce0 <abort>;;
     _32(0x1ffff839),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff837),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff07),        //call 183a8 <fn3E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 18858 <testE+0x438>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 18858 <testE+0x438>;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 18858 <testE+0x438>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18858 <testE+0x438>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1885c <testE+0x43c>;;
     _32(0x18002122),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeF: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18870 <retmeF>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitF: list_I = 
 [|
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 189c8 <retitF>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testF: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 18ab0 <testF+0x50>;;
     _32(0x1ffff766),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 18a88 <testF+0x28>;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff749),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff747),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18888 <fn1F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18c20 <testF+0x1c0>;;
     _32(0x18002031),        //call 20ce0 <abort>;;
     _32(0x1ffff700),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff6fe),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff26),        //call 18908 <fn2F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 18d78 <testF+0x318>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18d78 <testF+0x318>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18d78 <testF+0x318>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18d78 <testF+0x318>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18d7c <testF+0x31c>;;
     _32(0x18001fda),        //call 20ce0 <abort>;;
     _32(0x1ffff6a9),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff6a7),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff07),        //call 189e8 <fn3F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 18e98 <testF+0x438>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 18e98 <testF+0x438>;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 18e98 <testF+0x438>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18e98 <testF+0x438>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18e9c <testF+0x43c>;;
     _32(0x18001f92),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeG: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f641),        //insf $r0 = $r1, 31 (0x1f), 25 (0x19);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18eb0 <retmeG>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f641),        //insf $r0 = $r1, 31 (0x1f), 25 (0x19);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f641),        //insf $r0 = $r1, 31 (0x1f), 25 (0x19);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitG: list_I = 
 [|
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19010 <retitG>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testG: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 190f8 <testG+0x50>;;
     _32(0x1ffff5d4),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 190d0 <testG+0x28>;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008007f),        //make $r2 = 127 (0x7f);;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff5b8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff5b6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18ec8 <fn1G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1925c <testG+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1925c <testG+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1925c <testG+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1925c <testG+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19260 <testG+0x1b8>;;
     _32(0x18001ea1),        //call 20ce0 <abort>;;
     _32(0x1ffff570),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff56e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 18f50 <fn2G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 193b4 <testG+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 193b4 <testG+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 193b4 <testG+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 193b4 <testG+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 193b8 <testG+0x310>;;
     _32(0x18001e4b),        //call 20ce0 <abort>;;
     _32(0x1ffff51a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff518),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 19030 <fn3G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 194d0 <testG+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 194d0 <testG+0x428>;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 194d0 <testG+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 194d0 <testG+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 194d4 <testG+0x42c>;;
     _32(0x18001e04),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeH: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f5c1),        //insf $r0 = $r1, 31 (0x1f), 23 (0x17);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 194e8 <retmeH>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f5c1),        //insf $r0 = $r1, 31 (0x1f), 23 (0x17);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f5c1),        //insf $r0 = $r1, 31 (0x1f), 23 (0x17);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitH: list_I = 
 [|
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19648 <retitH>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testH: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 19730 <testH+0x50>;;
     _32(0x1ffff446),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19708 <testH+0x28>;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x600801ff),        //make $r2 = 511 (0x1ff);;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff42a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff428),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 19500 <fn1H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 19894 <testH+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 19894 <testH+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19894 <testH+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19894 <testH+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19898 <testH+0x1b8>;;
     _32(0x18001d13),        //call 20ce0 <abort>;;
     _32(0x1ffff3e2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff3e0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 19588 <fn2H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 199ec <testH+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 199ec <testH+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 199ec <testH+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 199ec <testH+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 199f0 <testH+0x310>;;
     _32(0x18001cbd),        //call 20ce0 <abort>;;
     _32(0x1ffff38c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff38a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 19668 <fn3H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 19b08 <testH+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 19b08 <testH+0x428>;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19b08 <testH+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19b08 <testH+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19b0c <testH+0x42c>;;
     _32(0x18001c76),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeI: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003f1c1),        //insf $r0 = $r1, 15 (0xf), 7 (0x7);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 19b20 <retmeI>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003f1c1),        //insf $r0 = $r1, 15 (0xf), 7 (0x7);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003f1c1),        //insf $r0 = $r1, 15 (0xf), 7 (0x7);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitI: list_I = 
 [|
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19c80 <retitI>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testI: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 19d68 <testI+0x50>;;
     _32(0x1ffff2b8),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19d40 <testI+0x28>;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x600801ff),        //make $r2 = 511 (0x1ff);;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff29c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff29a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 19b38 <fn1I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19ed0 <testI+0x1b8>;;
     _32(0x18001b85),        //call 20ce0 <abort>;;
     _32(0x1ffff254),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff252),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 19bc0 <fn2I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a024 <testI+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a024 <testI+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a024 <testI+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1a024 <testI+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a028 <testI+0x310>;;
     _32(0x18001b2f),        //call 20ce0 <abort>;;
     _32(0x1ffff1fe),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff1fc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 19ca0 <fn3I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1a140 <testI+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1a140 <testI+0x428>;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a140 <testI+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1a140 <testI+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a144 <testI+0x42c>;;
     _32(0x18001ae8),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeJ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1a158 <retmeJ>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitJ: list_I = 
 [|
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1a2b8 <retitJ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testJ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1a3a0 <testJ+0x50>;;
     _32(0x1ffff12a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1a378 <testJ+0x28>;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6008007f),        //make $r2 = 127 (0x7f);;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff10e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff10c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1a170 <fn1J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a508 <testJ+0x1b8>;;
     _32(0x180019f7),        //call 20ce0 <abort>;;
     _32(0x1ffff0c6),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff0c4),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1a1f8 <fn2J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a660 <testJ+0x310>;;
     _32(0x180019a1),        //call 20ce0 <abort>;;
     _32(0x1ffff070),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff06e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1a2d8 <fn3J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a77c <testJ+0x42c>;;
     _32(0x1800195a),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeK: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1a790 <retmeK>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitK: list_I = 
 [|
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1a8f0 <retitK>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testK: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1a9d8 <testK+0x50>;;
     _32(0x1fffef9c),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1a9b0 <testK+0x28>;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffef80),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffef7e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1a7a8 <fn1K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ab50 <testK+0x1c8>;;
     _32(0x18001865),        //call 20ce0 <abort>;;
     _32(0x1fffef34),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffef32),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1a830 <fn2K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1acb8 <testK+0x330>;;
     _32(0x1800180b),        //call 20ce0 <abort>;;
     _32(0x1fffeeda),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeed8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff03),        //call 1a910 <fn3K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ade4 <testK+0x45c>;;
     _32(0x180017c0),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeL: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1adf8 <retmeL>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitL: list_I = 
 [|
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1af58 <retitL>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testL: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b040 <testL+0x50>;;
     _32(0x1fffee02),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b018 <testL+0x28>;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffede6),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffede4),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1ae10 <fn1L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b1a8 <testL+0x1b8>;;
     _32(0x180016cf),        //call 20ce0 <abort>;;
     _32(0x1fffed9e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffed9c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1ae98 <fn2L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b300 <testL+0x310>;;
     _32(0x18001679),        //call 20ce0 <abort>;;
     _32(0x1fffed48),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffed46),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1af78 <fn3L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b41c <testL+0x42c>;;
     _32(0x18001632),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeM: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1b430 <retmeM>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitM: list_I = 
 [|
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1b590 <retitM>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testM: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b678 <testM+0x50>;;
     _32(0x1fffec74),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b650 <testM+0x28>;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffec58),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffec56),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1b448 <fn1M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b7e0 <testM+0x1b8>;;
     _32(0x18001541),        //call 20ce0 <abort>;;
     _32(0x1fffec10),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffec0e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1b4d0 <fn2M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b938 <testM+0x310>;;
     _32(0x180014eb),        //call 20ce0 <abort>;;
     _32(0x1fffebba),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffebb8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1b5b0 <fn3M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ba54 <testM+0x42c>;;
     _32(0x180014a4),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeN: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1ba68 <retmeN>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitN: list_I = 
 [|
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1bbc8 <retitN>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testN: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1bcb0 <testN+0x50>;;
     _32(0x1fffeae6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1bc88 <testN+0x28>;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffeaca),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeac8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1ba80 <fn1N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1be28 <testN+0x1c8>;;
     _32(0x180013af),        //call 20ce0 <abort>;;
     _32(0x1fffea7e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffea7c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1bb08 <fn2N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bf90 <testN+0x330>;;
     _32(0x18001355),        //call 20ce0 <abort>;;
     _32(0x1fffea24),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffea22),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff03),        //call 1bbe8 <fn3N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c0bc <testN+0x45c>;;
     _32(0x1800130a),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeO: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1c0d0 <retmeO>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitO: list_I = 
 [|
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1c238 <retitO>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testO: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c320 <testO+0x50>;;
     _32(0x1fffe94a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c2f8 <testO+0x28>;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe92e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe92c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1c0e8 <fn1O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c48c <testO+0x1bc>;;
     _32(0x18001216),        //call 20ce0 <abort>;;
     _32(0x1fffe8e5),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe8e3),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1c170 <fn2O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c5e8 <testO+0x318>;;
     _32(0x180011bf),        //call 20ce0 <abort>;;
     _32(0x1fffe88e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe88c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1c258 <fn3O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1c704 <testO+0x434>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1c704 <testO+0x434>;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1c704 <testO+0x434>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1c704 <testO+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c708 <testO+0x438>;;
     _32(0x18001177),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeP: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1c720 <retmeP>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitP: list_I = 
 [|
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1c888 <retitP>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testP: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c970 <testP+0x50>;;
     _32(0x1fffe7b6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c948 <testP+0x28>;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe79a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe798),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1c738 <fn1P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cadc <testP+0x1bc>;;
     _32(0x18001082),        //call 20ce0 <abort>;;
     _32(0x1fffe751),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe74f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1c7c0 <fn2P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1cc34 <testP+0x314>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1cc34 <testP+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1cc34 <testP+0x314>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1cc34 <testP+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cc38 <testP+0x318>;;
     _32(0x1800102b),        //call 20ce0 <abort>;;
     _32(0x1fffe6fa),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe6f8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1c8a8 <fn3P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1cd54 <testP+0x434>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1cd54 <testP+0x434>;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cd54 <testP+0x434>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cd54 <testP+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cd58 <testP+0x438>;;
     _32(0x18000fe3),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeQ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1cd70 <retmeQ>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitQ: list_I = 
 [|
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1ced8 <retitQ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testQ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1cfc0 <testQ+0x50>;;
     _32(0x1fffe622),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1cf98 <testQ+0x28>;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe606),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe604),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1cd88 <fn1Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d12c <testQ+0x1bc>;;
     _32(0x18000eee),        //call 20ce0 <abort>;;
     _32(0x1fffe5bd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe5bb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1ce10 <fn2Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1d284 <testQ+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d284 <testQ+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d284 <testQ+0x314>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d284 <testQ+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d288 <testQ+0x318>;;
     _32(0x18000e97),        //call 20ce0 <abort>;;
     _32(0x1fffe566),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe564),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1cef8 <fn3Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1d3a4 <testQ+0x434>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d3a4 <testQ+0x434>;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d3a4 <testQ+0x434>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d3a4 <testQ+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d3a8 <testQ+0x438>;;
     _32(0x18000e4f),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeR: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1d3c0 <retmeR>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitR: list_I = 
 [|
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1d528 <retitR>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testR: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1d610 <testR+0x50>;;
     _32(0x1fffe48e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1d5e8 <testR+0x28>;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe472),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe470),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1d3d8 <fn1R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d77c <testR+0x1bc>;;
     _32(0x18000d5a),        //call 20ce0 <abort>;;
     _32(0x1fffe429),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe427),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1d460 <fn2R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d8d8 <testR+0x318>;;
     _32(0x18000d03),        //call 20ce0 <abort>;;
     _32(0x1fffe3d2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe3d0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1d548 <fn3R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1d9f4 <testR+0x434>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d9f4 <testR+0x434>;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d9f4 <testR+0x434>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d9f4 <testR+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d9f8 <testR+0x438>;;
     _32(0x18000cbb),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeS: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 1da10 <retmeS>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitS: list_I = 
 [|
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1db70 <retitS>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testS: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1dc58 <testS+0x50>;;
     _32(0x1fffe2fc),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1dc30 <testS+0x28>;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe2e0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe2de),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1da28 <fn1S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ddc0 <testS+0x1b8>;;
     _32(0x18000bc9),        //call 20ce0 <abort>;;
     _32(0x1fffe298),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe296),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1dab0 <fn2S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1df14 <testS+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1df14 <testS+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1df14 <testS+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1df14 <testS+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1df18 <testS+0x310>;;
     _32(0x18000b73),        //call 20ce0 <abort>;;
     _32(0x1fffe242),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe240),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1db90 <fn3S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1e030 <testS+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1e030 <testS+0x428>;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e030 <testS+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1e030 <testS+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e034 <testS+0x42c>;;
     _32(0x18000b2c),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeT: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1e048 <retmeT>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitT: list_I = 
 [|
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e1a8 <retitT>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testT: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e290 <testT+0x50>;;
     _32(0x1fffe16e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e268 <testT+0x28>;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe152),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe150),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1e060 <fn1T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e3f8 <testT+0x1b8>;;
     _32(0x18000a3b),        //call 20ce0 <abort>;;
     _32(0x1fffe10a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe108),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1e0e8 <fn2T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e550 <testT+0x310>;;
     _32(0x180009e5),        //call 20ce0 <abort>;;
     _32(0x1fffe0b4),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe0b2),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1e1c8 <fn3T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e66c <testT+0x42c>;;
     _32(0x1800099e),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeU: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 1e680 <retmeU>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitU: list_I = 
 [|
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e7e0 <retitU>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testU: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e8c8 <testU+0x50>;;
     _32(0x1fffdfe0),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e8a0 <testU+0x28>;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdfc4),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdfc2),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1e698 <fn1U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ea30 <testU+0x1b8>;;
     _32(0x180008ad),        //call 20ce0 <abort>;;
     _32(0x1fffdf7c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf7a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1e720 <fn2U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1eb88 <testU+0x310>;;
     _32(0x18000857),        //call 20ce0 <abort>;;
     _32(0x1fffdf26),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf24),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1e800 <fn3U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1eca0 <testU+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1eca0 <testU+0x428>;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1eca0 <testU+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1eca0 <testU+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1eca4 <testU+0x42c>;;
     _32(0x18000810),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeV: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1ecb8 <retmeV>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitV: list_I = 
 [|
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1ee18 <retitV>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testV: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ef00 <testV+0x50>;;
     _32(0x1fffde52),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1eed8 <testV+0x28>;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffde36),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffde34),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1ecd0 <fn1V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f058 <testV+0x1a8>;;
     _32(0x18000723),        //call 20ce0 <abort>;;
     _32(0x1fffddf2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffddf0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff2d),        //call 1ed58 <fn2V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f1a0 <testV+0x2f0>;;
     _32(0x180006d1),        //call 20ce0 <abort>;;
     _32(0x1fffdda0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdd9e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 1ee38 <fn3V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0008c0),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f2ac <testV+0x3fc>;;
     _32(0x1800068e),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeW: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1f2c0 <retmeW>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitW: list_I = 
 [|
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1f428 <retitW>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testW: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1f510 <testW+0x50>;;
     _32(0x1fffdcce),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1f4e8 <testW+0x28>;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdcab),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdca9),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1f2d8 <fn1W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f698 <testW+0x1d8>;;
     _32(0x18000593),        //call 20ce0 <abort>;;
     _32(0x1fffdc62),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc60),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 1f360 <fn2W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f7f4 <testW+0x334>;;
     _32(0x1800053c),        //call 20ce0 <abort>;;
     _32(0x1fffdc0b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc09),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 1f448 <fn3W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1f910 <testW+0x450>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f910 <testW+0x450>;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f910 <testW+0x450>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f910 <testW+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f914 <testW+0x454>;;
     _32(0x180004f4),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeX: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1f928 <retmeX>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitX: list_I = 
 [|
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1fa90 <retitX>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testX: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1fb78 <testX+0x50>;;
     _32(0x1fffdb34),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1fb50 <testX+0x28>;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdb11),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdb0f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1f940 <fn1X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fd00 <testX+0x1d8>;;
     _32(0x180003f9),        //call 20ce0 <abort>;;
     _32(0x1fffdac8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdac6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 1f9c8 <fn2X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1fe58 <testX+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1fe58 <testX+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1fe58 <testX+0x330>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1fe58 <testX+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fe5c <testX+0x334>;;
     _32(0x180003a2),        //call 20ce0 <abort>;;
     _32(0x1fffda71),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffda6f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 1fab0 <fn3X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ff78 <testX+0x450>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ff78 <testX+0x450>;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ff78 <testX+0x450>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ff78 <testX+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ff7c <testX+0x454>;;
     _32(0x1800035a),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeY: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1ff90 <retmeY>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitY: list_I = 
 [|
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 200f8 <retitY>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testY: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 201e0 <testY+0x50>;;
     _32(0x1fffd99a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 201b8 <testY+0x28>;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd977),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd975),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1ffa8 <fn1Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 20364 <testY+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 20364 <testY+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20364 <testY+0x1d4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20364 <testY+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20368 <testY+0x1d8>;;
     _32(0x1800025f),        //call 20ce0 <abort>;;
     _32(0x1fffd92e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd92c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 20030 <fn2Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 204c0 <testY+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 204c0 <testY+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 204c0 <testY+0x330>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 204c0 <testY+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 204c4 <testY+0x334>;;
     _32(0x18000208),        //call 20ce0 <abort>;;
     _32(0x1fffd8d7),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd8d5),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 20118 <fn3Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 205e0 <testY+0x450>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 205e0 <testY+0x450>;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 205e0 <testY+0x450>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 205e0 <testY+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 205e4 <testY+0x454>;;
     _32(0x180001c0),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeZ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 205f8 <retmeZ>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitZ: list_I = 
 [|
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20760 <retitZ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testZ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 20848 <testZ+0x50>;;
     _32(0x1fffd800),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 20820 <testZ+0x28>;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd7dd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd7db),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 20610 <fn1Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 209d0 <testZ+0x1d8>;;
     _32(0x180000c5),        //call 20ce0 <abort>;;
     _32(0x1fffd794),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd792),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 20698 <fn2Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 20b28 <testZ+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 20b28 <testZ+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 20b28 <testZ+0x330>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 20b28 <testZ+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20b2c <testZ+0x334>;;
     _32(0x1800006e),        //call 20ce0 <abort>;;
     _32(0x1fffd73d),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd73b),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 20780 <fn3Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 20c48 <testZ+0x450>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 20c48 <testZ+0x450>;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20c48 <testZ+0x450>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20c48 <testZ+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20c4c <testZ+0x454>;;
     _32(0x18000026),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffd78d),        //call 16aa0 <testA>;;
     _32(0x1fffd92c),        //call 17120 <testB>;;
     _32(0x1fffdabf),        //call 17770 <testC>;;
     _32(0x1fffdc4e),        //call 17db0 <testD>;;
     _32(0x1fffdde9),        //call 18420 <testE>;;
     _32(0x1fffdf78),        //call 18a60 <testF>;;
     _32(0x1fffe109),        //call 190a8 <testG>;;
     _32(0x1fffe296),        //call 196e0 <testH>;;
     _32(0x1fffe423),        //call 19d18 <testI>;;
     _32(0x1fffe5b0),        //call 1a350 <testJ>;;
     _32(0x1fffe73d),        //call 1a988 <testK>;;
     _32(0x1fffe8d6),        //call 1aff0 <testL>;;
     _32(0x1fffea63),        //call 1b628 <testM>;;
     _32(0x1fffebf0),        //call 1bc60 <testN>;;
     _32(0x1fffed8b),        //call 1c2d0 <testO>;;
     _32(0x1fffef1e),        //call 1c920 <testP>;;
     _32(0x1ffff0b1),        //call 1cf70 <testQ>;;
     _32(0x1ffff244),        //call 1d5c0 <testR>;;
     _32(0x1ffff3d5),        //call 1dc08 <testS>;;
     _32(0x1ffff562),        //call 1e240 <testT>;;
     _32(0x1ffff6ef),        //call 1e878 <testU>;;
     _32(0x1ffff87c),        //call 1eeb0 <testV>;;
     _32(0x1ffff9ff),        //call 1f4c0 <testW>;;
     _32(0x1ffffb98),        //call 1fb28 <testX>;;
     _32(0x1ffffd31),        //call 20190 <testY>;;
     _32(0x1ffffeca),        //call 207f8 <testZ>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 20d00 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 21100 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 22dd8 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 21298 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000124e000f000),        //make $r0 = 299968 (0x493c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 20d3c <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 22dd8 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_fini_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x80000100a749040ce0480000),        //make $r18 = 262144 (0x40000)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _96(0x80000100a739020ce5380012),        //sbfd $r14 = $r18, 262144 (0x40000)
     _32(0x00000000),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa3a20ce),        //srad $r14 = $r14, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x0880014e),        //cb.deqz $r14? 20d8c <__libc_fini_array+0x44>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x3802f392),        //ld.xs $r0 = $r14[$r18];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x087fff4e),        //cb.dnez $r14? 20d7c <__libc_fini_array+0x34>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_init_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x80000100a849020ce04c0000),        //make $r19 = 262144 (0x40000)
     _32(0x00000000),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x88000100a739000ce5480013),        //sbfd $r18 = $r19, 262144 (0x40000)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xfa4a20d2),        //srad $r18 = $r18, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x08800192),        //cb.deqz $r18? 20df4 <__libc_init_array+0x4c>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 20de0 <__libc_init_array+0x38>;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x0800000088000100e04c0000),        //make $r19 = 262144 (0x40000);;
     _96(0x0000000080000100e5480013),        //sbfd $r18 = $r19, 262144 (0x40000);;
     _32(0x7a4a20d2),        //srad $r18 = $r18, 3 (0x3);;
     _32(0x08800192),        //cb.deqz $r18? 20e2c <__libc_init_array+0x84>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 20e18 <__libc_init_array+0x70>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _init_signal_r_part_0: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040100),        //make $r1 = 256 (0x100);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000221),        //call 216e0 <_malloc_r>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x888003c0),        //cb.deqz $r0? 20ea0 <_init_signal_r.part.0+0x58>
     _64(0x18000001a701460e),        //sd 1304 (0x518)[$r14] = $r0;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x0f0000c1),        //loopdo $r1, 20e88 <_init_signal_r.part.0+0x40>;;
     _32(0xe1080042),        //addd $r2 = $r2, 1 (0x1)
     _32(0x270ff080),        //sd.xs $r2[$r0] = $r3;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x97fffffb),        //goto 20e8c <_init_signal_r.part.0+0x44>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal_r: list_I = 
 [|
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 20ec4 <_init_signal_r+0x14>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffffe1)        //goto 20e48 <_init_signal_r.part.0>;;
 |];

let _signal_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f80db7c1),        //compw.leu $r3 = $r1, 31 (0x1f);;
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800383),        //cb.weqz $r3? 20f24 <_signal_r+0x5c>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088004c2),        //cb.deqz $r2? 20f48 <_signal_r+0x80>;;
     _32(0x6907f013),        //sxwd $r1 = $r19;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x274bf042),        //sd.xs $r1[$r2] = $r18;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffffc0),        //call 20e48 <_init_signal_r.part.0>;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb81),        //cb.wnez $r1? 20f0c <_signal_r+0x44>;;
     _32(0x97ffffea),        //goto 20f00 <_signal_r+0x38>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x7f03f000)        //nop ;;
 |];

let _raise_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe907f012),        //sxwd $r1 = $r18
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800a82),        //cb.weqz $r2? 21038 <_raise_r+0xd0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8004600),        //ld $r0 = 1304 (0x518)[$r0];;
     _32(0x08800440),        //cb.deqz $r0? 20fe4 <_raise_r+0x7c>;;
     _32(0x380ef040),        //ld.xs $r3 = $r1[$r0];;
     _32(0xe1110043),        //compd.eq $r4 = $r3, 1 (0x1)
     _32(0x6009ffc3),        //compd.ne $r2 = $r3, -1 (0xffffffff);;
     _32(0x08800343),        //cb.deqz $r3? 20fe4 <_raise_r+0x7c>;;
     _32(0x08000144),        //cb.dnez $r4? 20fc8 <_raise_r+0x60>;;
     _32(0x08800582),        //cb.deqz $r2? 21010 <_raise_r+0xa8>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x274ff040),        //sd.xs $r1[$r0] = $r19;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x980000ab),        //call 21290 <_getpid_r>
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0xfa080012),        //copyw $r2 = $r18
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000007f),        //goto 21208 <_kill_r>;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _32(0x604c0001),        //make $r19 = 1 (0x1);;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _64(0x083fffffe04cffc0),        //make $r19 = 4294967295 (0xffffffff);;
     _32(0x97ffffe1),        //goto 20fc8 <_raise_r+0x60>
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sigtramp_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x8c800802),        //cb.weqz $r2? 210f0 <__sigtramp_r+0xa0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088005c2),        //cb.deqz $r2? 210dc <__sigtramp_r+0x8c>;;
     _32(0xe90ff012),        //sxwd $r3 = $r18
     _32(0xf4118092),        //addx8wd $r4 = $r18, $r2
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x380af0c2),        //ld.xs $r2 = $r3[$r2];;
     _32(0x6105ffc2),        //compd.eq $r1 = $r2, -1 (0xffffffff);;
     _32(0x088002c2),        //cb.deqz $r2? 210c4 <__sigtramp_r+0x74>;;
     _32(0x88000281),        //cb.dnez $r1? 210c4 <__sigtramp_r+0x74>
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0xe1050042),        //compd.eq $r1 = $r2, 1 (0x1)
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x08000181),        //cb.dnez $r1? 210c4 <__sigtramp_r+0x74>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x7a000012),        //copyw $r0 = $r18;;
     _32(0x8fdc0002),        //icall $r2
     _32(0x27050004),        //sd 0 (0x0)[$r4] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffff5b),        //call 20e48 <_init_signal_r.part.0>;;
     _32(0x0c000100),        //cb.wnez $r0? 210f0 <__sigtramp_r+0xa0>;;
     _32(0x97ffffe8),        //goto 21084 <__sigtramp_r+0x34>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x97fffff5),        //goto 210c4 <__sigtramp_r+0x74>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let raise: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000120e0081000),        //make $r2 = 294976 (0x48040);;
     _32(0x97ffff96),        //goto 20f68 <_raise_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let signal: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000120e00c1000),        //make $r3 = 294976 (0x48040);;
     _32(0xea380001),        //copyd $r14 = $r1
     _64(0xa739000cf809b7c0),        //compw.leu $r2 = $r0, 31 (0x1f)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf848ffc0),        //zxwd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x8c800382),        //cb.weqz $r2? 21180 <signal+0x68>
     _32(0x384c0003),        //ld $r19 = 0 (0x0)[$r3];;
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x088004c2),        //cb.deqz $r2? 211a4 <signal+0x8c>;;
     _32(0x6907f012),        //sxwd $r1 = $r18;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x273bf042),        //sd.xs $r1[$r2] = $r14;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffff29),        //call 20e48 <_init_signal_r.part.0>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb41),        //cb.wnez $r1? 21168 <signal+0x50>;;
     _32(0x97ffffe9),        //goto 2115c <signal+0x44>
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal: list_I = 
 [|
     _96(0x0000000080000120e0001000),        //make $r0 = 294976 (0x48040);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 211ec <_init_signal+0x24>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffff17)        //goto 20e48 <_init_signal_r.part.0>;;
 |];

let __sigtramp: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000120e0081000),        //make $r2 = 294976 (0x48040);;
     _32(0x97ffff94),        //goto 21050 <__sigtramp_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let _kill_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xfa040002),        //copyw $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000003),        //copyw $r0 = $r3
     _96(0x8800013fa749040ce0487400),        //make $r18 = 327120 (0x4fdd0)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x9800075f),        //call 22fb8 <_kill>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 21268 <_kill_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 21250 <_kill_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _getpid_r: list_I = 
 [|
     _32(0x10000756),        //goto 22fe8 <_getpid>;;
     _32(0x00000000)        //errop ;;
 |];

let __call_exitprocs: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e00c),        //addd $r12 = $r12, -128 (0xffffff80);;
     _32(0xf858ffc0),        //zxwd $r22 = $r0
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _96(0x9000012ea855080ce0007000),        //make $r0 = 309696 (0x4b9c0)
     _32(0x10000000),        //so 32 (0x20)[$r12] = $r20r21r22r23;;
     _32(0xea680001),        //copyd $r26 = $r1
     _96(0x8800008fa865100ce05c8200),        //make $r23 = 146952 (0x23e08)
     _32(0x08000000),        //so 64 (0x40)[$r12] = $r24r25r26r27;;
     _32(0xe04c0001),        //make $r19 = 1 (0x1)
     _32(0x2849040c),        //sq 16 (0x10)[$r12] = $r18r19;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x27411e0c),        //sd 120 (0x78)[$r12] = $r16;;
     _32(0x2871180c),        //sq 96 (0x60)[$r12] = $r28r29;;
     _32(0x98000090),        //call 21520 <__libc_lock_acquire>
     _32(0x27791c0c),        //sd 112 (0x70)[$r12] = $r30;;
     _96(0x0000000080000124e000f000),        //make $r0 = 299968 (0x493c0);;
     _32(0x38600000),        //ld $r24 = 0 (0x0)[$r0];;
     _32(0x61647e18),        //addd $r25 = $r24, 504 (0x1f8);;
     _32(0xea780019),        //copyd $r30 = $r25
     _32(0x38487e18),        //ld $r18 = 504 (0x1f8)[$r24];;
     _32(0x08800c52),        //cb.deqz $r18? 213c8 <__call_exitprocs+0x130>;;
     _32(0xe16c0412),        //addd $r27 = $r18, 16 (0x10)
     _32(0xe1544412),        //addd $r21 = $r18, 272 (0x110)
     _64(0xb0000212e1748412),        //addd $r29 = $r18, 528 (0x210)
     _32(0x10000000),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x693bf000),        //sxwd $r14 = $r0;;
     _32(0x0d800100),        //cb.wgez $r0? 21334 <__call_exitprocs+0x9c>;;
     _32(0x1000001e),        //goto 213a0 <__call_exitprocs+0x108>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x0d00070e),        //cb.wltz $r14? 213a0 <__call_exitprocs+0x108>;;
     _32(0x8880015a),        //cb.deqz $r26? 21348 <__call_exitprocs+0xb0>
     _32(0x7808ffce),        //zxwd $r2 = $r14;;
     _32(0x3802f39d),        //ld.xs $r0 = $r14[$r29];;
     _32(0x7101a680),        //compd.eq $r0 = $r0, $r26;;
     _32(0x08fffe80),        //cb.deqz $r0? 2132c <__call_exitprocs+0x94>;;
     _32(0x30000212),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x380ef39b),        //ld.xs $r3 = $r14[$r27];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7001b380),        //compw.ne $r0 = $r0, $r14;;
     _32(0x0c800c80),        //cb.weqz $r0? 21420 <__call_exitprocs+0x188>;;
     _32(0x2753f39b),        //sd.xs $r14[$r27] = $r20;;
     _32(0x08fffcc3),        //cb.deqz $r3? 2132c <__call_exitprocs+0x94>;;
     _32(0xf90a7093),        //sllw $r2 = $r19, $r2
     _64(0x18000000b000c412),        //lwz $r0 = 784 (0x310)[$r18];;
     _32(0x30700212),        //lwz $r28 = 8 (0x8)[$r18];;
     _32(0x78011080),        //andw $r0 = $r0, $r2;;
     _32(0x0c000840),        //cb.wnez $r0? 213fc <__call_exitprocs+0x164>;;
     _32(0x0fdc0003),        //icall $r3;;
     _32(0xe138ffce),        //addd $r14 = $r14, -1 (0xffffffff)
     _32(0x30000212),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x7001b700),        //compw.ne $r0 = $r0, $r28;;
     _32(0x0c7ff700),        //cb.wnez $r0? 212fc <__call_exitprocs+0x64>;;
     _32(0x3800001e),        //ld $r0 = 0 (0x0)[$r30];;
     _32(0x7001a480),        //compd.ne $r0 = $r0, $r18;;
     _32(0x087ff640),        //cb.dnez $r0? 212fc <__call_exitprocs+0x64>;;
     _32(0x0dfff98e),        //cb.wgez $r14? 21334 <__call_exitprocs+0x9c>;;
     _32(0x08800297),        //cb.deqz $r23? 213c8 <__call_exitprocs+0x130>;;
     _32(0x30000212),        //lwz $r0 = 8 (0x8)[$r18];;
     _32(0x38040012),        //ld $r1 = 0 (0x0)[$r18];;
     _32(0x0c000840),        //cb.wnez $r0? 21430 <__call_exitprocs+0x198>;;
     _32(0x08800801),        //cb.deqz $r1? 21430 <__call_exitprocs+0x198>;;
     _32(0x8fdc0017),        //icall $r23
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x2705001e),        //sd 0 (0x0)[$r30] = $r1;;
     _32(0x3848001e),        //ld $r18 = 0 (0x0)[$r30];;
     _32(0x087ff452),        //cb.dnez $r18? 21308 <__call_exitprocs+0x70>;;
     _96(0x8000012eb8401e0ce0007000),        //make $r0 = 309696 (0x4b9c0)
     _32(0x00000000),        //ld $r16 = 120 (0x78)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x3c48040c),        //lq $r18r19 = 16 (0x10)[$r12];;
     _32(0x3c54080c),        //lo $r20r21r22r23 = 32 (0x20)[$r12];;
     _32(0x3c64100c),        //lo $r24r25r26r27 = 64 (0x40)[$r12];;
     _32(0x3c70180c),        //lq $r28r29 = 96 (0x60)[$r12];;
     _32(0xe130200c),        //addd $r12 = $r12, 128 (0x80)
     _32(0x38781c0c),        //ld $r30 = 112 (0x70)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000008e),        //goto 21630 <__libc_lock_release>;;
     _64(0x18000000b010c512),        //lwz $r4 = 788 (0x314)[$r18];;
     _32(0x3802f395),        //ld.xs $r0 = $r14[$r21];;
     _32(0x78091084),        //andw $r2 = $r4, $r2;;
     _32(0x0c0001c2),        //cb.wnez $r2? 21428 <__call_exitprocs+0x190>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xea040000),        //copyd $r1 = $r0
     _32(0x7a000016),        //copyw $r0 = $r22;;
     _32(0x17ffffd9),        //goto 21380 <__call_exitprocs+0xe8>;;
     _32(0x97ffffd0),        //goto 21360 <__call_exitprocs+0xc8>
     _32(0x26090212),        //sw 8 (0x8)[$r18] = $r2;;
     _32(0x0fdc0003),        //icall $r3;;
     _32(0x17ffffd5),        //goto 21380 <__call_exitprocs+0xe8>;;
     _32(0xea780012),        //copyd $r30 = $r18
     _32(0x6a480001),        //copyd $r18 = $r1;;
     _32(0x087fed12),        //cb.dnez $r18? 21308 <__call_exitprocs+0x70>;;
     _32(0x17ffffe3)        //goto 213c8 <__call_exitprocs+0x130>;;
 |];

let __libc_lock_init: list_I = 
 [|
     _32(0x08800080),        //cb.deqz $r0? 21448 <__libc_lock_init+0x8>;;
     _32(0x100042bf),        //goto 31f40 <__cos_recursive_initlock_base>;;
     _32(0x00000000),        //errop ;;
     _32(0x100042bd)        //goto 31f40 <__cos_recursive_initlock_base>;;
 |];

let __libc_lock_close: list_I = 
 [|
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_try_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0xf0055081),        //addx2w $r1 = $r1, $r2
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x980042b5),        //call 31f50 <__cos_recursive_trylock_base>
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _64(0x00000000f005b040),        //compw.ne $r1 = $r0, 1 (0x1);;
     _32(0x0c8001c1),        //cb.weqz $r1? 214a8 <__libc_lock_try_acquire+0x50>;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x0000000080000000e0040000),        //make $r1 = 0 (0x0);;
     _32(0x08000201),        //cb.dnez $r1? 214d4 <__libc_lock_try_acquire+0x7c>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x80000000e0080000e0040040),        //make $r1 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r2 = 0 (0x0);;
     _32(0xe0090002),        //compd.ne $r2 = $r2, 0 (0x0)
     _64(0x08000000f505b041),        //compw.gt $r1 = $r1, 1 (0x1);;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 2150c <__libc_lock_try_acquire+0xb4>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x97ffffee),        //goto 214bc <__libc_lock_try_acquire+0x64>
     _32(0x3fcd0000),        //fence ;;
     _32(0x980040bd),        //call 31800 <mppa_cos_l2_wb_inval>
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x97fffffb),        //goto 21504 <__libc_lock_try_acquire+0xac>
     _32(0x3f8d0000)        //dinval ;;
 |];

let __libc_lock_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0xe407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78383fc2),        //zxbd $r14 = $r2;;
     _32(0xf0395381),        //addx2w $r14 = $r1, $r14
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xf14c004e),        //addw $r19 = $r14, 1 (0x1)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xf138004e),        //addw $r14 = $r14, 1 (0x1)
     _32(0x27510a0c),        //sd 40 (0x28)[$r12] = $r20;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x9fffffbe),        //call 21458 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c800380),        //cb.weqz $r0? 215a0 <__libc_lock_acquire+0x80>;;
     _32(0x26510e0c),        //sw 56 (0x38)[$r12] = $r20;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7705b4c1),        //compw.geu $r1 = $r1, $r19;;
     _32(0x0c7ffe81),        //cb.wnez $r1? 21560 <__libc_lock_acquire+0x40>;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x26050e0c),        //sw 56 (0x38)[$r12] = $r1;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7605b381),        //compw.ltu $r1 = $r1, $r14;;
     _32(0x0c7ffec1),        //cb.wnez $r1? 2157c <__libc_lock_acquire+0x5c>;;
     _32(0x9fffffb1),        //call 21458 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c7ffd00),        //cb.wnez $r0? 2156c <__libc_lock_acquire+0x4c>;;
     _96(0x0000000080000000e0000000),        //make $r0 = 0 (0x0);;
     _32(0x08000240),        //cb.dnez $r0? 215d0 <__libc_lock_acquire+0xb0>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _96(0x80000000e0040000e0000040),        //make $r0 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r1 = 0 (0x0);;
     _32(0xe0050001),        //compd.ne $r1 = $r1, 0 (0x0)
     _64(0x08000000f501b040),        //compw.gt $r0 = $r0, 1 (0x1);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c000280),        //cb.wnez $r0? 21620 <__libc_lock_acquire+0x100>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _32(0x18004078),        //call 31800 <mppa_cos_l2_wb_inval>;;
     _32(0x97fffff7),        //goto 21600 <__libc_lock_acquire+0xe0>
     _32(0x3f8d0000),        //dinval ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_release: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0xf80c3fc2),        //zxbd $r3 = $r2
     _96(0x1000000090000000e0080000),        //make $r2 = 0 (0x0);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x700550c1),        //addx2w $r1 = $r1, $r3;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x880001c2),        //cb.dnez $r2? 21680 <__libc_lock_release+0x50>
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10004287),        //goto 32098 <__cos_recursive_unlock_base>;;
     _96(0x80000000e00c0000e0080040),        //make $r2 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r3 = 0 (0x0);;
     _32(0xe00d0003),        //compd.ne $r3 = $r3, 0 (0x0)
     _64(0x08000000f509b042),        //compw.gt $r2 = $r2, 1 (0x1);;
     _32(0x780910c2),        //andw $r2 = $r2, $r3;;
     _32(0x0c0001c2),        //cb.wnez $r2? 216c4 <__libc_lock_release+0x94>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10004276),        //goto 32098 <__cos_recursive_unlock_base>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x9800404e),        //call 31800 <mppa_cos_l2_wb_inval>
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x97fffff6),        //goto 216b0 <__libc_lock_release+0x80>
     _32(0x3f8d0000)        //dinval ;;
 |];

let _malloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xe14805c1),        //addd $r18 = $r1, 23 (0x17)
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe9090b92),        //compd.gtu $r2 = $r18, 46 (0x2e)
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x88000982),        //cb.dnez $r2? 2179c <_malloc_r+0xbc>
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0xe9050801),        //compd.gtu $r1 = $r1, 32 (0x20)
     _32(0x60480020),        //make $r18 = 32 (0x20);;
     _32(0x08002ac1),        //cb.dnez $r1? 219c0 <_malloc_r+0x2e0>;;
     _32(0x18000258),        //call 22078 <__malloc_lock>;;
     _32(0xe0000050),        //make $r0 = 80 (0x50)
     _32(0x60140004),        //make $r5 = 4 (0x4);;
     _96(0x80000122b8386600e1086400),        //addd $r2 = $r0, 297360 (0x48990)
     _96(0x180000009800012280000000),        //ld $r14 = 297368 (0x48998)[$r0];;
     _32(0x6104fc02),        //addd $r1 = $r2, -16 (0xfffffff0);;
     _32(0x7005a04e),        //compd.ne $r1 = $r14, $r1;;
     _32(0x08802a81),        //cb.deqz $r1? 219ec <_malloc_r+0x30c>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0x27090603),        //sd 24 (0x18)[$r3] = $r2;;
     _32(0x270d0402),        //sd 16 (0x10)[$r2] = $r3;;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x98000246),        //call 22088 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x6848fc12),        //andd $r18 = $r18, -16 (0xfffffff0);;
     _32(0xf905a481),        //compd.gtu $r1 = $r1, $r18
     _64(0x081fffffe909ffd2),        //compd.gtu $r2 = $r18, 2147483647 (0x7fffffff);;
     _32(0x7a051042),        //orw $r1 = $r2, $r1;;
     _32(0x0c002101),        //cb.wnez $r1? 219c0 <_malloc_r+0x2e0>;;
     _32(0x18000231),        //call 22078 <__malloc_lock>;;
     _32(0xe9017dd2),        //compd.gtu $r0 = $r18, 503 (0x1f7)
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _32(0xe0140040),        //make $r5 = 64 (0x40)
     _32(0x6018003f),        //make $r6 = 63 (0x3f);;
     _32(0x088065c0),        //cb.deqz $r0? 21e24 <_malloc_r+0x744>;;
     _32(0x7b022252),        //srld $r0 = $r18, 9 (0x9);;
     _32(0x08004700),        //cb.dnez $r0? 21c40 <_malloc_r+0x560>;;
     _96(0x80000122b8386604e1106004),        //addd $r4 = $r4, 297344 (0x48980)
     _96(0x180000009800012280000000),        //ld $r14 = 297368 (0x48998)[$r4];;
     _32(0x7101a384),        //compd.eq $r0 = $r4, $r14;;
     _32(0x08800180),        //cb.deqz $r0? 21808 <_malloc_r+0x128>;;
     _32(0x1000000b),        //goto 21820 <_malloc_r+0x140>;;
     _32(0x09804e02),        //cb.dgez $r2? 21cd8 <_malloc_r+0x5f8>;;
     _32(0x3838060e),        //ld $r14 = 24 (0x18)[$r14];;
     _32(0x7005a384),        //compd.ne $r1 = $r4, $r14;;
     _32(0x088001c1),        //cb.deqz $r1? 21820 <_malloc_r+0x140>;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x75090052),        //sbfd $r2 = $r18, $r1;;
     _32(0x650d07c2),        //compd.gt $r3 = $r2, 31 (0x1f);;
     _32(0x08fffe03),        //cb.deqz $r3? 217f8 <_malloc_r+0x118>;;
     _32(0x6a140006),        //copyd $r5 = $r6;;
     _96(0x0000000080000122e0506400),        //make $r20 = 297360 (0x48990);;
     _32(0xe1040414),        //addd $r1 = $r20, 16 (0x10)
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x08801e80),        //cb.deqz $r0? 21a20 <_malloc_r+0x340>;;
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x750d0092),        //sbfd $r3 = $r18, $r2;;
     _32(0x640107c3),        //compd.le $r0 = $r3, 31 (0x1f);;
     _32(0x08805f40),        //cb.deqz $r0? 21e40 <_malloc_r+0x760>;;
     _32(0xe9017fc2),        //compd.gtu $r0 = $r2, 511 (0x1ff)
     _32(0x27050a14),        //sd 40 (0x28)[$r20] = $r1;;
     _32(0x89804103),        //cb.dgez $r3? 21c68 <_malloc_r+0x588>
     _32(0x27050814),        //sd 32 (0x20)[$r20] = $r1;;
     _32(0x08004c40),        //cb.dnez $r0? 21d24 <_malloc_r+0x644>;;
     _32(0xe60b20c2),        //extfz $r2 = $r2, 34 (0x22), 3 (0x3)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x380c0214),        //ld $r3 = 8 (0x8)[$r20];;
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0xf9063041),        //sllw $r1 = $r1, 1 (0x1)
     _32(0x790a6080),        //slld $r2 = $r0, $r2;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _32(0x7a0900c2),        //ord $r2 = $r2, $r3;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x27090214),        //sd 8 (0x8)[$r20] = $r2;;
     _96(0x80000122b8046400e10c6000),        //addd $r3 = $r0, 297344 (0x48980)
     _96(0x180000009800012280000000),        //ld $r1 = 297360 (0x48990)[$r0];;
     _32(0x270d060e),        //sd 24 (0x18)[$r14] = $r3;;
     _32(0x2705040e),        //sd 16 (0x10)[$r14] = $r1;;
     _96(0x1800000098000122a7396400),        //sd 297360 (0x48990)[$r0] = $r14;;
     _32(0x27390601),        //sd 24 (0x18)[$r1] = $r14;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0x601c0001),        //make $r7 = 1 (0x1);;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08001680),        //cb.dnez $r0? 21a38 <_malloc_r+0x358>;;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x080002c0),        //cb.dnez $r0? 21904 <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x7814ff05),        //andw $r5 = $r5, -4 (0xfffffffc);;
     _32(0xf8010087),        //andd $r0 = $r7, $r2
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x08000140),        //cb.dnez $r0? 21904 <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x08ffff40),        //cb.deqz $r0? 218f4 <_malloc_r+0x214>;;
     _96(0x0000000080000122e0286400),        //make $r10 = 297360 (0x48990);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x6a240005),        //copyd $r9 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _64(0x07fffffff4018400),        //addx8wd $r0 = $r0, 4294967280 (0xfffffff0);;
     _96(0x0000000080000122e1006400),        //addd $r0 = $r0, 297360 (0x48990);;
     _32(0x6a200000),        //copyd $r8 = $r0;;
     _32(0x38040608),        //ld $r1 = 24 (0x18)[$r8];;
     _32(0x7109a048),        //compd.eq $r2 = $r8, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 2194c <_malloc_r+0x26c>;;
     _32(0x10000128),        //goto 21de0 <_malloc_r+0x700>;;
     _32(0x09804b43),        //cb.dgez $r3? 21df8 <_malloc_r+0x718>;;
     _32(0x08804986),        //cb.deqz $r6? 21de0 <_malloc_r+0x700>;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x38040601),        //ld $r1 = 24 (0x18)[$r1];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0xf50d0092),        //sbfd $r3 = $r18, $r2
     _32(0x7019a048),        //compd.ne $r6 = $r8, $r1;;
     _32(0x641107c3),        //compd.le $r4 = $r3, 31 (0x1f);;
     _32(0x087ffdc4),        //cb.dnez $r4? 21944 <_malloc_r+0x264>;;
     _32(0xea000052),        //ord $r0 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _96(0x90000122b818040ee0106400),        //make $r4 = 297360 (0x48990)
     _32(0x10000000),        //ld $r6 = 16 (0x10)[$r14];;
     _32(0xe1140404),        //addd $r5 = $r4, 16 (0x10)
     _32(0xea1c0043),        //ord $r7 = $r3, 1 (0x1)
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x2701020e),        //sd 8 (0x8)[$r14] = $r0;;
     _32(0x27050606),        //sd 24 (0x18)[$r6] = $r1;;
     _32(0x27190401),        //sd 16 (0x10)[$r1] = $r6;;
     _32(0x27490a04),        //sd 40 (0x28)[$r4] = $r18;;
     _32(0x27490804),        //sd 32 (0x20)[$r4] = $r18;;
     _32(0x27150612),        //sd 24 (0x18)[$r18] = $r5;;
     _32(0x27150412),        //sd 16 (0x10)[$r18] = $r5;;
     _32(0x271d0212),        //sd 8 (0x8)[$r18] = $r7;;
     _32(0x980001b6),        //call 22088 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x90000005),        //goto 219cc <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xe004000c),        //make $r1 = 12 (0xc)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf1140085),        //addw $r5 = $r5, 2 (0x2)
     _96(0x88000122b8386a00e0506400),        //make $r20 = 297360 (0x48990)
     _96(0x180000009800012288000000),        //ld $r14 = 297384 (0x489a8)[$r0];;
     _32(0x61040414),        //addd $r1 = $r20, 16 (0x10);;
     _32(0x7109a382),        //compd.eq $r2 = $r2, $r14;;
     _32(0x08ffd382),        //cb.deqz $r2? 21748 <_malloc_r+0x68>;;
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x087fe200),        //cb.dnez $r0? 2183c <_malloc_r+0x15c>;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x38080214),        //ld $r2 = 8 (0x8)[$r20];;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08ffea00),        //cb.deqz $r0? 218d4 <_malloc_r+0x1f4>;;
     _96(0x80000122e06c6000e0646400),        //make $r25 = 297360 (0x48990)
     _96(0x080000008800012280000000),        //make $r27 = 297344 (0x48980);;
     _96(0x8000012eb8380419e0688000),        //make $r26 = 309760 (0x4ba00)
     _32(0x00000000),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x3858020e),        //ld $r22 = 8 (0x8)[$r14];;
     _32(0x6858ff16),        //andd $r22 = $r22, -4 (0xfffffffc);;
     _32(0xf5010592),        //sbfd $r0 = $r18, $r22
     _32(0xf909a592),        //compd.gtu $r2 = $r18, $r22
     _32(0x7161058e),        //addd $r24 = $r14, $r22;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0c8020c1),        //cb.weqz $r1? 21c88 <_malloc_r+0x5a8>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _96(0x8800012eb808001be0048e00),        //make $r1 = 309816 (0x4ba38)
     _32(0x08000000),        //ld $r2 = 0 (0x0)[$r27];;
     _32(0x38540001),        //ld $r21 = 0 (0x0)[$r1];;
     _32(0x6009ffc2),        //compd.ne $r2 = $r2, -1 (0xffffffff);;
     _32(0x71550552),        //addd $r21 = $r18, $r21;;
     _32(0xe1540815),        //addd $r21 = $r21, 32 (0x20)
     _64(0x08000004e10407d5),        //addd $r1 = $r21, 4127 (0x101f);;
     _64(0x07fffffce8040001),        //andd $r1 = $r1, -4096 (0xfffffffffffff000);;
     _32(0x70560042),        //cmoved.dnez $r2? $r21 = $r1;;
     _32(0x980001d0),        //call 221f8 <_sbrk_r>
     _32(0x6a040015),        //copyd $r1 = $r21;;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x7905a5d8),        //compd.gtu $r1 = $r24, $r23;;
     _32(0x08804640),        //cb.deqz $r0? 21f30 <_malloc_r+0x850>;;
     _96(0x0000000080000122e0006400),        //make $r0 = 297360 (0x48990);;
     _32(0x7001a00e),        //compd.ne $r0 = $r14, $r0;;
     _32(0xf8011040),        //andw $r0 = $r0, $r1
     _32(0x7005a5d8),        //compd.ne $r1 = $r24, $r23;;
     _32(0x0c004480),        //cb.wnez $r0? 21f30 <_malloc_r+0x850>;;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0xf1091540),        //addw $r2 = $r0, $r21
     _32(0x71011540),        //addw $r0 = $r0, $r21;;
     _32(0x88804101),        //cb.deqz $r1? 21f08 <_malloc_r+0x828>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x3800001b),        //ld $r0 = 0 (0x0)[$r27];;
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08804200),        //cb.deqz $r0? 21f28 <_malloc_r+0x848>;;
     _32(0x750105d8),        //sbfd $r0 = $r24, $r23;;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x2601001a),        //sw 0 (0x0)[$r26] = $r0;;
     _32(0xe80003d7),        //andd $r0 = $r23, 15 (0xf)
     _32(0x60601000),        //make $r24 = 4096 (0x1000);;
     _32(0x08800140),        //cb.deqz $r0? 21b34 <_malloc_r+0x454>;;
     _32(0xe5040400),        //sbfd $r1 = $r0, 16 (0x10)
     _64(0x08000004e5600400),        //sbfd $r24 = $r0, 4112 (0x1010);;
     _32(0x715d0057),        //addd $r23 = $r23, $r1;;
     _32(0xf1050557),        //addd $r1 = $r23, $r21
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x60540001),        //make $r21 = 1 (0x1);;
     _64(0x00000003e804ffc1),        //andd $r1 = $r1, 4095 (0xfff);;
     _32(0x75610601),        //sbfd $r24 = $r1, $r24;;
     _32(0x980001ab),        //call 221f8 <_sbrk_r>
     _32(0x6a040018),        //copyd $r1 = $r24;;
     _32(0xe109ffc0),        //compd.eq $r2 = $r0, -1 (0xffffffff)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x08000142),        //cb.dnez $r2? 21b70 <_malloc_r+0x490>;;
     _32(0xf5090017),        //sbfd $r2 = $r23, $r0
     _32(0x7804ffd8),        //zxwd $r1 = $r24;;
     _32(0x71550602),        //addd $r21 = $r2, $r24;;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0xf151a50e),        //compd.eq $r20 = $r14, $r20
     _32(0xe0100009),        //make $r4 = 9 (0x9)
     _96(0x90000122b000001ae0606400),        //make $r24 = 297360 (0x48990)
     _32(0x10000000),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x275d0418),        //sd 16 (0x10)[$r24] = $r23;;
     _32(0x27550217),        //sd 8 (0x8)[$r23] = $r21;;
     _32(0xf1091040),        //addw $r2 = $r0, $r1
     _32(0xf1011040),        //addw $r0 = $r0, $r1
     _32(0x690507d6),        //compd.gtu $r1 = $r22, 31 (0x1f);;
     _32(0x88004154),        //cb.dnez $r20? 21fb0 <_malloc_r+0x8d0>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x08804141),        //cb.deqz $r1? 21fb8 <_malloc_r+0x8d8>;;
     _32(0xe104fa16),        //addd $r1 = $r22, -24 (0xffffffe8)
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6804fc01),        //andd $r1 = $r1, -16 (0xfffffff0);;
     _32(0xf10d004e),        //addd $r3 = $r14, $r1
     _32(0x691507c1),        //compd.gtu $r5 = $r1, 31 (0x1f);;
     _32(0x68080042),        //andd $r2 = $r2, 1 (0x1);;
     _32(0x7a050042),        //ord $r1 = $r2, $r1;;
     _32(0x2705020e),        //sd 8 (0x8)[$r14] = $r1;;
     _32(0x27110203),        //sd 8 (0x8)[$r3] = $r4;;
     _32(0x88004545),        //cb.dnez $r5? 22020 <_malloc_r+0x940>
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0xea380017),        //copyd $r14 = $r23
     _32(0x38540217),        //ld $r21 = 8 (0x8)[$r23];;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _96(0x080000008800012ee0088c00),        //make $r2 = 309808 (0x4ba30);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 21bfc <_malloc_r+0x51c>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _96(0x000000008000012ee0088a00),        //make $r2 = 309800 (0x4ba28);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 21c18 <_malloc_r+0x538>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _32(0x6854ff15),        //andd $r21 = $r21, -4 (0xfffffffc);;
     _32(0xf5010552),        //sbfd $r0 = $r18, $r21
     _32(0x7955a552),        //compd.gtu $r21 = $r18, $r21;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a551055),        //orw $r21 = $r21, $r1;;
     _32(0x0c8005d5),        //cb.weqz $r21? 21c88 <_malloc_r+0x5a8>;;
     _32(0x98000116),        //call 22088 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x97ffff65),        //goto 219cc <_malloc_r+0x2ec>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x69050100),        //compd.gtu $r1 = $r0, 4 (0x4);;
     _32(0x080016c1),        //cb.dnez $r1? 21db0 <_malloc_r+0x6d0>;;
     _32(0x66175192),        //extfz $r5 = $r18, 37 (0x25), 6 (0x6);;
     _32(0xf1100e45),        //addw $r4 = $r5, 57 (0x39)
     _32(0xf1180e05),        //addw $r6 = $r5, 56 (0x38)
     _32(0x71140e45),        //addw $r5 = $r5, 57 (0x39);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffedd),        //goto 217d4 <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040202),        //ld $r1 = 8 (0x8)[$r2];;
     _32(0x6a040041),        //ord $r1 = $r1, 1 (0x1);;
     _32(0x98000104),        //call 22088 <__malloc_unlock>
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x97ffff53),        //goto 219cc <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xea0c0052),        //ord $r3 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea040040),        //ord $r1 = $r0, 1 (0x1)
     _96(0x1800000098000122e0086400),        //make $r2 = 297360 (0x48990);;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x270d020e),        //sd 8 (0x8)[$r14] = $r3;;
     _32(0x27490402),        //sd 16 (0x10)[$r2] = $r18;;
     _32(0x980000f7),        //call 22088 <__malloc_unlock>
     _32(0x27050212),        //sd 8 (0x8)[$r18] = $r1;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x270d0604),        //sd 24 (0x18)[$r4] = $r3;;
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x980000e4),        //call 22088 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x7b062242),        //srld $r1 = $r2, 9 (0x9);;
     _32(0x69010101),        //compd.gtu $r0 = $r1, 4 (0x4);;
     _32(0x088014c0),        //cb.deqz $r0? 21e78 <_malloc_r+0x798>;;
     _32(0x69010501),        //compd.gtu $r0 = $r1, 20 (0x14);;
     _32(0x08002300),        //cb.dnez $r0? 21f64 <_malloc_r+0x884>;;
     _32(0xf1001701),        //addw $r0 = $r1, 92 (0x5c)
     _32(0x710416c1),        //addw $r1 = $r1, 91 (0x5b);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x80000122b80c6400e1006000),        //addd $r0 = $r0, 297344 (0x48980)
     _96(0x180000009800012280000000),        //ld $r3 = 297360 (0x48990)[$r0];;
     _32(0x7011a0c0),        //compd.ne $r4 = $r0, $r3;;
     _32(0x08801d44),        //cb.deqz $r4? 21f3c <_malloc_r+0x85c>;;
     _32(0x38040203),        //ld $r1 = 8 (0x8)[$r3];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x7905a081),        //compd.gtu $r1 = $r1, $r2;;
     _32(0x08800101),        //cb.deqz $r1? 21d88 <_malloc_r+0x6a8>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7105a0c0),        //compd.eq $r1 = $r0, $r3;;
     _32(0x08fffe81),        //cb.deqz $r1? 21d6c <_malloc_r+0x68c>;;
     _96(0x80000122b8000603e0046400),        //make $r1 = 297360 (0x48990)
     _32(0x00000000),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x270d040e),        //sd 16 (0x10)[$r14] = $r3;;
     _32(0x27390400),        //sd 16 (0x10)[$r0] = $r14;;
     _32(0x97fffec6),        //goto 218c0 <_malloc_r+0x1e0>
     _32(0x27390603),        //sd 24 (0x18)[$r3] = $r14;;
     _32(0x69050500),        //compd.gtu $r1 = $r0, 20 (0x14);;
     _32(0x08800e01),        //cb.deqz $r1? 21e94 <_malloc_r+0x7b4>;;
     _32(0x69051500),        //compd.gtu $r1 = $r0, 84 (0x54);;
     _32(0x08001cc1),        //cb.dnez $r1? 21f88 <_malloc_r+0x8a8>;;
     _32(0x6617b312),        //extfz $r5 = $r18, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc5),        //addw $r4 = $r5, 111 (0x6f)
     _32(0xf1181b85),        //addw $r6 = $r5, 110 (0x6e)
     _32(0x71141bc5),        //addw $r5 = $r5, 111 (0x6f);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe7f),        //goto 217d4 <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf1240049),        //addw $r9 = $r9, 1 (0x1)
     _32(0x61200408),        //addd $r8 = $r8, 16 (0x10);;
     _32(0xf80400c9),        //andw $r1 = $r9, 3 (0x3)
     _32(0x7824ffc9),        //zxwd $r9 = $r9;;
     _32(0x0c7fb441),        //cb.wnez $r1? 21934 <_malloc_r+0x254>;;
     _32(0x10000032),        //goto 21ebc <_malloc_r+0x7dc>;;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x380c0202),        //ld $r3 = 8 (0x8)[$r2];;
     _32(0x6a0c0043),        //ord $r3 = $r3, 1 (0x1);;
     _32(0x270d0202),        //sd 8 (0x8)[$r2] = $r3;;
     _32(0x27050604),        //sd 24 (0x18)[$r4] = $r1;;
     _32(0x9800009d),        //call 22088 <__malloc_unlock>
     _32(0x27110401),        //sd 16 (0x10)[$r1] = $r4;;
     _32(0x97fffeec),        //goto 219cc <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x7b1620d2),        //srld $r5 = $r18, 3 (0x3);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97fffe3b),        //goto 21724 <_malloc_r+0x44>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xea140052),        //ord $r5 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea100043),        //ord $r4 = $r3, 1 (0x1)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x2715020e),        //sd 8 (0x8)[$r14] = $r5;;
     _32(0x27490a14),        //sd 40 (0x28)[$r20] = $r18;;
     _32(0x27490814),        //sd 32 (0x20)[$r20] = $r18;;
     _32(0x27050612),        //sd 24 (0x18)[$r18] = $r1;;
     _32(0x27050412),        //sd 16 (0x10)[$r18] = $r1;;
     _32(0x27110212),        //sd 8 (0x8)[$r18] = $r4;;
     _32(0x98000088),        //call 22088 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x97fffed7),        //goto 219cc <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x66075182),        //extfz $r1 = $r2, 37 (0x25), 6 (0x6);;
     _32(0xf1000e41),        //addw $r0 = $r1, 57 (0x39)
     _32(0x71040e01),        //addw $r1 = $r1, 56 (0x38);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffffb0),        //goto 21d4c <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0xf11816c0),        //addw $r6 = $r0, 91 (0x5b)
     _32(0x71141700),        //addw $r5 = $r0, 92 (0x5c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe4b),        //goto 217d4 <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0x7105a001),        //compd.eq $r1 = $r1, $r0;;
     _32(0x08801b41),        //cb.deqz $r1? 2206c <_malloc_r+0x98c>;;
     _32(0xf80400c5),        //andw $r1 = $r5, 3 (0x3)
     _32(0xe100fc00),        //addd $r0 = $r0, -16 (0xfffffff0)
     _32(0x7114ffc5),        //addw $r5 = $r5, -1 (0xffffffff);;
     _32(0x0c7ffe81),        //cb.wnez $r1? 21eb0 <_malloc_r+0x7d0>;;
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x7e010007),        //andnd $r0 = $r7, $r0;;
     _32(0x2701020a),        //sd 8 (0x8)[$r10] = $r0;;
     _32(0x791e2047),        //slld $r7 = $r7, 1 (0x1);;
     _32(0xe0050007),        //compd.ne $r1 = $r7, 0 (0x0)
     _32(0x7809a007),        //compd.leu $r2 = $r7, $r0;;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 21ef8 <_malloc_r+0x818>;;
     _32(0x17fffed3),        //goto 21a38 <_malloc_r+0x358>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71240109),        //addw $r9 = $r9, 4 (0x4);;
     _32(0x78050007),        //andd $r1 = $r7, $r0;;
     _32(0x08ffff41),        //cb.deqz $r1? 21ef0 <_malloc_r+0x810>;;
     _32(0x97fffe84),        //goto 21910 <_malloc_r+0x230>
     _32(0x6a140009),        //copyd $r5 = $r9;;
     _64(0x00000003e804ffd8),        //andd $r1 = $r24, 4095 (0xfff);;
     _32(0x087fbf01),        //cb.dnez $r1? 21b00 <_malloc_r+0x420>;;
     _32(0xf1550556),        //addd $r21 = $r22, $r21
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0x97ffff2f),        //goto 21bdc <_malloc_r+0x4fc>
     _32(0x2755020e),        //sd 8 (0x8)[$r14] = $r21;;
     _32(0x97fffefc),        //goto 21b18 <_malloc_r+0x438>
     _32(0x275d001b),        //sd 0 (0x0)[$r27] = $r23;;
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x97ffff39),        //goto 21c18 <_malloc_r+0x538>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000122e0106400),        //make $r4 = 297360 (0x48990);;
     _32(0xf90a6042),        //slld $r2 = $r2, $r1
     _32(0x38180204),        //ld $r6 = 8 (0x8)[$r4];;
     _32(0x7a090182),        //ord $r2 = $r2, $r6;;
     _32(0x97ffff90),        //goto 21d9c <_malloc_r+0x6bc>
     _32(0x27090204),        //sd 8 (0x8)[$r4] = $r2;;
     _32(0x69011501),        //compd.gtu $r0 = $r1, 84 (0x54);;
     _32(0x080005c0),        //cb.dnez $r0? 21fc4 <_malloc_r+0x8e4>;;
     _32(0x6607b302),        //extfz $r1 = $r2, 43 (0x2b), 12 (0xc);;
     _32(0xf1001bc1),        //addw $r0 = $r1, 111 (0x6f)
     _32(0x71041b81),        //addw $r1 = $r1, 110 (0x6e);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff73),        //goto 21d4c <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x69055500),        //compd.gtu $r1 = $r0, 340 (0x154);;
     _32(0x080005c1),        //cb.dnez $r1? 21fe8 <_malloc_r+0x908>;;
     _32(0x6617e3d2),        //extfz $r5 = $r18, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e05),        //addw $r4 = $r5, 120 (0x78)
     _32(0xf1181dc5),        //addw $r6 = $r5, 119 (0x77)
     _32(0x71141e05),        //addw $r5 = $r5, 120 (0x78);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe0b),        //goto 217d4 <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff0b),        //goto 21bdc <_malloc_r+0x4fc>
     _32(0x6a380017),        //copyd $r14 = $r23;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97ffff1d),        //goto 21c30 <_malloc_r+0x550>
     _32(0x27010217),        //sd 8 (0x8)[$r23] = $r0;;
     _32(0x69015501),        //compd.gtu $r0 = $r1, 340 (0x154);;
     _32(0x08000740),        //cb.dnez $r0? 2203c <_malloc_r+0x95c>;;
     _32(0x6607e3c2),        //extfz $r1 = $r2, 46 (0x2e), 15 (0xf);;
     _32(0xf1001e01),        //addw $r0 = $r1, 120 (0x78)
     _32(0x71041dc1),        //addw $r1 = $r1, 119 (0x77);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff5b),        //goto 21d4c <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe014007f),        //make $r5 = 127 (0x7f)
     _32(0xe018007e),        //make $r6 = 126 (0x7e)
     _64(0x18000001e9015500),        //compd.gtu $r0 = $r0, 1364 (0x554);;
     _32(0x087f7d80),        //cb.dnez $r0? 217d4 <_malloc_r+0xf4>;;
     _32(0x67171492),        //extfz $r5 = $r18, 49 (0x31), 18 (0x12);;
     _32(0xf1101f45),        //addw $r4 = $r5, 125 (0x7d)
     _32(0xf1181f05),        //addw $r6 = $r5, 124 (0x7c)
     _32(0x71141f45),        //addw $r5 = $r5, 125 (0x7d);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffdef),        //goto 217d4 <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x980000ea),        //call 223c8 <_free_r>
     _32(0xe104040e),        //addd $r1 = $r14, 16 (0x10)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38380418),        //ld $r14 = 16 (0x10)[$r24];;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x97fffeea),        //goto 21bdc <_malloc_r+0x4fc>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xe00007f0),        //make $r0 = 2032 (0x7f0)
     _32(0xe004007e),        //make $r1 = 126 (0x7e)
     _64(0x10000001e90d5501),        //compd.gtu $r3 = $r1, 1364 (0x554);;
     _32(0x087fd003),        //cb.dnez $r3? 21d4c <_malloc_r+0x66c>;;
     _32(0x67071482),        //extfz $r1 = $r2, 49 (0x31), 18 (0x12);;
     _32(0xf1001f41),        //addw $r0 = $r1, 125 (0x7d)
     _32(0x71041f01),        //addw $r1 = $r1, 124 (0x7c);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff3a),        //goto 21d4c <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x97ffff9b),        //goto 21ed8 <_malloc_r+0x7f8>
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x00000000)        //errop ;;
 |];

let __malloc_lock: list_I = 
 [|
     _32(0x97fffd2a),        //goto 21520 <__libc_lock_acquire>
     _96(0x000000008000012ee0009000)        //make $r0 = 309824 (0x4ba40);;
 |];

let __malloc_unlock: list_I = 
 [|
     _32(0x97fffd6a),        //goto 21630 <__libc_lock_release>
     _96(0x000000008000012ee0009000)        //make $r0 = 309824 (0x4ba40);;
 |];

let cleanup_glue: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x08800081),        //cb.deqz $r1? 220c0 <cleanup_glue+0x28>;;
     _32(0x1ffffff7),        //call 22098 <cleanup_glue>;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x100000bb)        //goto 223c8 <_free_r>;;
 |];

let _reclaim_reent: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000120e0041000),        //make $r1 = 294976 (0x48040);;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x7005a001),        //compd.ne $r1 = $r1, $r0;;
     _32(0x08800d01),        //cb.deqz $r1? 221e0 <_reclaim_reent+0x100>;;
     _32(0x38041e00),        //ld $r1 = 120 (0x78)[$r0];;
     _32(0x088003c1),        //cb.deqz $r1? 22154 <_reclaim_reent+0x74>;;
     _32(0x383ae4c1),        //ld $r14 = $r19[$r1];;
     _32(0x088001ce),        //cb.deqz $r14? 2213c <_reclaim_reent+0x5c>;;
     _32(0x980000a9),        //call 223c8 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x087fff0e),        //cb.dnez $r14? 22124 <_reclaim_reent+0x44>;;
     _32(0x38041e12),        //ld $r1 = 120 (0x78)[$r18];;
     _32(0x614c0213),        //addd $r19 = $r19, 8 (0x8);;
     _64(0x00000000e0018013),        //compd.ne $r0 = $r19, 512 (0x200);;
     _32(0x087ffd40),        //cb.dnez $r0? 2211c <_reclaim_reent+0x3c>;;
     _32(0x9800009f),        //call 223c8 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041812),        //ld $r1 = 96 (0x60)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 22164 <_reclaim_reent+0x84>;;
     _32(0x1800009a),        //call 223c8 <_free_r>;;
     _64(0xb8387e12e14c8012),        //addd $r19 = $r18, 512 (0x200)
     _32(0x00000000),        //ld $r14 = 504 (0x1f8)[$r18];;
     _32(0x7101a4ce),        //compd.eq $r0 = $r14, $r19;;
     _32(0x0880020e),        //cb.deqz $r14? 22194 <_reclaim_reent+0xb4>;;
     _32(0x080001c0),        //cb.dnez $r0? 22194 <_reclaim_reent+0xb4>;;
     _32(0x98000093),        //call 223c8 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x7001a393),        //compd.ne $r0 = $r19, $r14;;
     _32(0x087ffec0),        //cb.dnez $r0? 2217c <_reclaim_reent+0x9c>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38042212),        //ld $r1 = 136 (0x88)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 221a4 <_reclaim_reent+0xc4>;;
     _32(0x1800008a),        //call 223c8 <_free_r>;;
     _32(0x30001412),        //lwz $r0 = 80 (0x50)[$r18];;
     _32(0x0c800380),        //cb.weqz $r0? 221e0 <_reclaim_reent+0x100>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041612),        //ld $r1 = 88 (0x58)[$r18];;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0xea000012),        //copyd $r0 = $r18
     _64(0x18000001b8044812),        //ld $r1 = 1312 (0x520)[$r18];;
     _32(0x088001c1),        //cb.deqz $r1? 221e0 <_reclaim_reent+0x100>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffffaf),        //goto 22098 <cleanup_glue>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _sbrk_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea000001),        //copyd $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x8000013fa749040ce0487400),        //make $r18 = 327120 (0x4fdd0)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980002f1),        //call 22de8 <_sbrk>
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 2224c <_sbrk_r+0x54>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 22234 <_sbrk_r+0x3c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _malloc_trim_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _64(0xa7410e0ce538f7ce),        //sbfd $r14 = $r14, 4063 (0xfdf)
     _32(0x00000003),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x9fffff79),        //call 22078 <__malloc_lock>
     _96(0x80000122a7510c0ce0506400),        //make $r20 = 297360 (0x48990)
     _32(0x00000000),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x38000414),        //ld $r0 = 16 (0x10)[$r20];;
     _32(0x38480200),        //ld $r18 = 8 (0x8)[$r0];;
     _32(0x6848ff12),        //andd $r18 = $r18, -4 (0xfffffffc);;
     _32(0x7139048e),        //addd $r14 = $r14, $r18;;
     _32(0x7b3a230e),        //srld $r14 = $r14, 12 (0xc);;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x793a230e),        //slld $r14 = $r14, 12 (0xc);;
     _64(0x00000003e501ffce),        //compd.gt $r0 = $r14, 4095 (0xfff);;
     _32(0x088001c0),        //cb.deqz $r0? 222ec <_malloc_trim_r+0x7c>;;
     _32(0x9fffffc9),        //call 221f8 <_sbrk_r>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040414),        //ld $r1 = 16 (0x10)[$r20];;
     _32(0x71050481),        //addd $r1 = $r1, $r18;;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x088002c0),        //cb.deqz $r0? 22314 <_malloc_trim_r+0xa4>;;
     _32(0x9fffff67),        //call 22088 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffb9),        //call 221f8 <_sbrk_r>
     _32(0xe504000e),        //negd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff)
     _32(0xf549048e),        //sbfd $r18 = $r14, $r18
     _96(0x100000009000012ee0088000),        //make $r2 = 309760 (0x4ba00);;
     _32(0x6a480052),        //ord $r18 = $r18, 1 (0x1);;
     _32(0x08800400),        //cb.deqz $r0? 22378 <_malloc_trim_r+0x108>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x30040002),        //lwz $r1 = 0 (0x0)[$r2];;
     _32(0x380c0414),        //ld $r3 = 16 (0x10)[$r20];;
     _32(0xf539104e),        //sbfw $r14 = $r14, $r1
     _32(0x27490203),        //sd 8 (0x8)[$r3] = $r18;;
     _32(0x9fffff4e),        //call 22088 <__malloc_unlock>
     _32(0x26390002),        //sw 0 (0x0)[$r2] = $r14;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffa0),        //call 221f8 <_sbrk_r>
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38080414),        //ld $r2 = 16 (0x10)[$r20];;
     _32(0x75050002),        //sbfd $r1 = $r2, $r0;;
     _32(0x640d07c1),        //compd.le $r3 = $r1, 31 (0x1f);;
     _32(0x087ff5c3),        //cb.dnez $r3? 222ec <_malloc_trim_r+0x7c>;;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _96(0x88000122e00c8000e0106000),        //make $r4 = 297344 (0x48980)
     _96(0x100000009000012e88000000),        //make $r3 = 309760 (0x4ba00);;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x97ffffcc),        //goto 222ec <_malloc_trim_r+0x7c>
     _32(0x26010003),        //sw 0 (0x0)[$r3] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let _free_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x888014c1),        //cb.deqz $r1? 2252c <_free_r+0x164>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffff24),        //call 22078 <__malloc_lock>;;
     _32(0xe11cfc0e),        //addd $r7 = $r14, -16 (0xfffffff0)
     _96(0x88000122b818fe0ee0146400),        //make $r5 = 297360 (0x48990)
     _32(0x08000000),        //ld $r6 = -8 (0xfffffff8)[$r14];;
     _32(0x38100405),        //ld $r4 = 16 (0x10)[$r5];;
     _32(0x6804ff86),        //andd $r1 = $r6, -2 (0xfffffffe);;
     _32(0x710d0047),        //addd $r3 = $r7, $r1;;
     _32(0xf011a0c4),        //compd.ne $r4 = $r4, $r3
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x88802144),        //cb.deqz $r4? 22628 <_free_r+0x260>
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x8b000d86),        //cb.odd $r6? 224f4 <_free_r+0x12c>
     _32(0xf1010083),        //addd $r0 = $r3, $r2
     _32(0x27090203),        //sd 8 (0x8)[$r3] = $r2;;
     _32(0xe1140405),        //addd $r5 = $r5, 16 (0x10)
     _32(0x3810fc0e),        //ld $r4 = -16 (0xfffffff0)[$r14];;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0xf51d01c4),        //sbfd $r7 = $r4, $r7
     _32(0x71050101),        //addd $r1 = $r1, $r4;;
     _32(0xe8000040),        //andd $r0 = $r0, 1 (0x1)
     _32(0x38100407),        //ld $r4 = 16 (0x10)[$r7];;
     _32(0x7119a144),        //compd.eq $r6 = $r4, $r5;;
     _32(0x08001a06),        //cb.dnez $r6? 225e8 <_free_r+0x220>;;
     _32(0x38180607),        //ld $r6 = 24 (0x18)[$r7];;
     _32(0x27190604),        //sd 24 (0x18)[$r4] = $r6;;
     _32(0x88802700),        //cb.deqz $r0? 226c4 <_free_r+0x2fc>
     _32(0x27110406),        //sd 16 (0x10)[$r6] = $r4;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x69017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff);;
     _32(0x08000ec0),        //cb.dnez $r0? 22558 <_free_r+0x190>;;
     _32(0xe60720c1),        //extfz $r1 = $r1, 34 (0x22), 3 (0x3)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000122e00c6400),        //make $r3 = 297360 (0x48990);;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0x38100203),        //ld $r4 = 8 (0x8)[$r3];;
     _32(0xf9023040),        //sllw $r0 = $r0, 1 (0x1)
     _32(0x79066042),        //slld $r1 = $r2, $r1;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x7a050101),        //ord $r1 = $r1, $r4;;
     _96(0x80000122b8086400e1106000),        //addd $r4 = $r0, 297344 (0x48980)
     _96(0x180000009800012280000000),        //ld $r2 = 297360 (0x48990)[$r0];;
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x27050203),        //sd 8 (0x8)[$r3] = $r1;;
     _32(0x27090407),        //sd 16 (0x10)[$r7] = $r2;;
     _96(0x1800000098000122a71d6400),        //sd 297360 (0x48990)[$r0] = $r7;;
     _32(0x271d0602),        //sd 24 (0x18)[$r2] = $r7;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffee6),        //goto 22088 <__malloc_unlock>;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x0b0004c0),        //cb.odd $r0? 22544 <_free_r+0x17c>;;
     _32(0xf1050081),        //addd $r1 = $r1, $r2
     _32(0x61140405),        //addd $r5 = $r5, 16 (0x10);;
     _32(0xea100041),        //ord $r4 = $r1, 1 (0x1)
     _32(0x38000403),        //ld $r0 = 16 (0x10)[$r3];;
     _32(0x7009a140),        //compd.ne $r2 = $r0, $r5;;
     _32(0x08801d42),        //cb.deqz $r2? 226e4 <_free_r+0x31c>;;
     _32(0x38080603),        //ld $r2 = 24 (0x18)[$r3];;
     _32(0x27090600),        //sd 24 (0x18)[$r0] = $r2;;
     _32(0x27010402),        //sd 16 (0x10)[$r2] = $r0;;
     _32(0x27110207),        //sd 8 (0x8)[$r7] = $r4;;
     _32(0x97ffffd1),        //goto 22468 <_free_r+0xa0>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0xe9017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff)
     _32(0x2701fe0e),        //sd -8 (0xfffffff8)[$r14] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x08fff1c0),        //cb.deqz $r0? 22470 <_free_r+0xa8>;;
     _32(0x7b022241),        //srld $r0 = $r1, 9 (0x9);;
     _32(0x69090100),        //compd.gtu $r2 = $r0, 4 (0x4);;
     _32(0x08001382),        //cb.dnez $r2? 22698 <_free_r+0x2d0>;;
     _32(0x66035181),        //extfz $r0 = $r1, 37 (0x25), 6 (0x6);;
     _32(0xf1100e40),        //addw $r4 = $r0, 57 (0x39)
     _32(0x71000e00),        //addw $r0 = $r0, 56 (0x38);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x80000122b80c6404e1106004),        //addd $r4 = $r4, 297344 (0x48980)
     _96(0x180000009800012280000000),        //ld $r3 = 297360 (0x48990)[$r4];;
     _32(0x7009a0c4),        //compd.ne $r2 = $r4, $r3;;
     _32(0x08801702),        //cb.deqz $r2? 22708 <_free_r+0x340>;;
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x7909a042),        //compd.gtu $r2 = $r2, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 225b8 <_free_r+0x1f0>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7101a0c4),        //compd.eq $r0 = $r4, $r3;;
     _32(0x08fffe80),        //cb.deqz $r0? 2259c <_free_r+0x1d4>;;
     _32(0x38100603),        //ld $r4 = 24 (0x18)[$r3];;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x270d0407),        //sd 16 (0x10)[$r7] = $r3;;
     _32(0x271d0404),        //sd 16 (0x10)[$r4] = $r7;;
     _32(0x271d0603),        //sd 24 (0x18)[$r3] = $r7;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffea9),        //goto 22088 <__malloc_unlock>;;
     _32(0x080019c0),        //cb.dnez $r0? 22784 <_free_r+0x3bc>;;
     _32(0xf1050042),        //addd $r1 = $r2, $r1
     _32(0x38000603),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0xea080041),        //ord $r2 = $r1, 1 (0x1)
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x27010603),        //sd 24 (0x18)[$r3] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x270d0400),        //sd 16 (0x10)[$r0] = $r3;;
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffe99),        //goto 22088 <__malloc_unlock>;;
     _32(0x8b000246),        //cb.odd $r6? 2264c <_free_r+0x284>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0x3800fc0e),        //ld $r0 = -16 (0xfffffff0)[$r14];;
     _32(0xf51d01c0),        //sbfd $r7 = $r0, $r7
     _32(0x71050001),        //addd $r1 = $r1, $r0;;
     _32(0x38080407),        //ld $r2 = 16 (0x10)[$r7];;
     _32(0x38000607),        //ld $r0 = 24 (0x18)[$r7];;
     _32(0x27010602),        //sd 24 (0x18)[$r2] = $r0;;
     _32(0x27090400),        //sd 16 (0x10)[$r0] = $r2;;
     _32(0xea0c0041),        //ord $r3 = $r1, 1 (0x1)
     _96(0x88000122e0006400e0086200),        //make $r2 = 297352 (0x48988)
     _96(0x100000009000012288000000),        //make $r0 = 297360 (0x48990);;
     _32(0x38080002),        //ld $r2 = 0 (0x0)[$r2];;
     _32(0x270d0207),        //sd 8 (0x8)[$r7] = $r3;;
     _32(0x271d0400),        //sd 16 (0x10)[$r0] = $r7;;
     _32(0x7905a042),        //compd.gtu $r1 = $r2, $r1;;
     _32(0x087fe601),        //cb.dnez $r1? 224d8 <_free_r+0x110>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _96(0x080000008800012ee0048e00),        //make $r1 = 309816 (0x4ba38);;
     _32(0x9ffffef9),        //call 22270 <_malloc_trim_r>
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x17ffff91),        //goto 224d8 <_free_r+0x110>;;
     _32(0x69090500),        //compd.gtu $r2 = $r0, 20 (0x14);;
     _32(0x08800302),        //cb.deqz $r2? 226cc <_free_r+0x304>;;
     _32(0x69091500),        //compd.gtu $r2 = $r0, 84 (0x54);;
     _32(0x080008c2),        //cb.dnez $r2? 22730 <_free_r+0x368>;;
     _32(0x6603b301),        //extfz $r0 = $r1, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc0),        //addw $r4 = $r0, 111 (0x6f)
     _32(0x71001b80),        //addw $r0 = $r0, 110 (0x6e);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffb0),        //goto 2257c <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff90),        //goto 22504 <_free_r+0x13c>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0x710016c0),        //addw $r0 = $r0, 91 (0x5b);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffa8),        //goto 2257c <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x0000000080000122e0006400),        //make $r0 = 297360 (0x48990);;
     _32(0x271d0a00),        //sd 40 (0x28)[$r0] = $r7;;
     _32(0x271d0800),        //sd 32 (0x20)[$r0] = $r7;;
     _32(0x27150607),        //sd 24 (0x18)[$r7] = $r5;;
     _32(0x28110207),        //sq 8 (0x8)[$r7] = $r4r5;;
     _32(0x97ffff76),        //goto 224d8 <_free_r+0x110>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xfa023080),        //sraw $r0 = $r0, 2 (0x2)
     _96(0x1000000090000122e0086400),        //make $r2 = 297360 (0x48990);;
     _32(0xf9026001),        //slld $r0 = $r1, $r0
     _32(0x38140202),        //ld $r5 = 8 (0x8)[$r2];;
     _32(0x7a010140),        //ord $r0 = $r0, $r5;;
     _32(0x97ffffa5),        //goto 225bc <_free_r+0x1f4>
     _32(0x27010202),        //sd 8 (0x8)[$r2] = $r0;;
     _32(0x69095500),        //compd.gtu $r2 = $r0, 340 (0x154);;
     _32(0x08000202),        //cb.dnez $r2? 22754 <_free_r+0x38c>;;
     _32(0x6603e3c1),        //extfz $r0 = $r1, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e00),        //addw $r4 = $r0, 120 (0x78)
     _32(0x71001dc0),        //addw $r0 = $r0, 119 (0x77);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff8c),        //goto 2257c <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe000007e),        //make $r0 = 126 (0x7e)
     _64(0x10000001e9095500),        //compd.gtu $r2 = $r0, 1364 (0x554);;
     _32(0x087fe182),        //cb.dnez $r2? 2257c <_free_r+0x1b4>;;
     _32(0x67031481),        //extfz $r0 = $r1, 49 (0x31), 18 (0x12);;
     _32(0xf1101f40),        //addw $r4 = $r0, 125 (0x7d)
     _32(0x71001f00),        //addw $r0 = $r0, 124 (0x7c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff80),        //goto 2257c <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x97ffff53),        //goto 224d8 <_free_r+0x110>
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00100000110001100000; //0x20c60
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(myrnd, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeA, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1A, 0b00010110100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2A, 0b00010110100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitA, 0b00010110101000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3A, 0b00010110101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testA, 0b00010110101010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeB, 0b00010110111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1B, 0b00010110111100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2B, 0b00010110111111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitB, 0b00010111000010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3B, 0b00010111000010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testB, 0b00010111000100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeC, 0b00010111010101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1C, 0b00010111010110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2C, 0b00010111011000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitC, 0b00010111011011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3C, 0b00010111011011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testC, 0b00010111011101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeD, 0b00010111101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1D, 0b00010111101111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2D, 0b00010111110001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitD, 0b00010111110100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3D, 0b00010111110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testD, 0b00010111110110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeE, 0b00011000001000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1E, 0b00011000001001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2E, 0b00011000001011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitE, 0b00011000001110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3E, 0b00011000001110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testE, 0b00011000010000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeF, 0b00011000100001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1F, 0b00011000100010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2F, 0b00011000100100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitF, 0b00011000100111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3F, 0b00011000100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testF, 0b00011000101001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeG, 0b00011000111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1G, 0b00011000111011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2G, 0b00011000111101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitG, 0b00011001000000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3G, 0b00011001000000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testG, 0b00011001000010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeH, 0b00011001010011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1H, 0b00011001010100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2H, 0b00011001010110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitH, 0b00011001011001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3H, 0b00011001011001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testH, 0b00011001011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeI, 0b00011001101100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1I, 0b00011001101100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2I, 0b00011001101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitI, 0b00011001110010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3I, 0b00011001110010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testI, 0b00011001110100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeJ, 0b00011010000101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1J, 0b00011010000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2J, 0b00011010000111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitJ, 0b00011010001010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3J, 0b00011010001011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testJ, 0b00011010001101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeK, 0b00011010011110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1K, 0b00011010011110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2K, 0b00011010100000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitK, 0b00011010100011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3K, 0b00011010100100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testK, 0b00011010100110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeL, 0b00011010110111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1L, 0b00011010111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2L, 0b00011010111010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitL, 0b00011010111101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3L, 0b00011010111101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testL, 0b00011010111111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeM, 0b00011011010000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1M, 0b00011011010001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2M, 0b00011011010011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitM, 0b00011011010110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3M, 0b00011011010110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testM, 0b00011011011000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeN, 0b00011011101001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1N, 0b00011011101010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2N, 0b00011011101100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitN, 0b00011011101111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3N, 0b00011011101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testN, 0b00011011110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeO, 0b00011100000011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1O, 0b00011100000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2O, 0b00011100000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitO, 0b00011100001000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3O, 0b00011100001001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testO, 0b00011100001011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeP, 0b00011100011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1P, 0b00011100011100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2P, 0b00011100011111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitP, 0b00011100100010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3P, 0b00011100100010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testP, 0b00011100100100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeQ, 0b00011100110101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Q, 0b00011100110110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Q, 0b00011100111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitQ, 0b00011100111011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Q, 0b00011100111011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testQ, 0b00011100111101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeR, 0b00011101001111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1R, 0b00011101001111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2R, 0b00011101010001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitR, 0b00011101010100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3R, 0b00011101010101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testR, 0b00011101010111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeS, 0b00011101101000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1S, 0b00011101101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2S, 0b00011101101010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitS, 0b00011101101101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3S, 0b00011101101110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testS, 0b00011101110000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeT, 0b00011110000001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1T, 0b00011110000001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2T, 0b00011110000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitT, 0b00011110000110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3T, 0b00011110000111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testT, 0b00011110001001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeU, 0b00011110011010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1U, 0b00011110011010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2U, 0b00011110011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitU, 0b00011110011111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3U, 0b00011110100000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testU, 0b00011110100001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeV, 0b00011110110010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1V, 0b00011110110011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2V, 0b00011110110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitV, 0b00011110111000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3V, 0b00011110111000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testV, 0b00011110111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeW, 0b00011111001011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1W, 0b00011111001011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2W, 0b00011111001101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitW, 0b00011111010000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3W, 0b00011111010001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testW, 0b00011111010011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeX, 0b00011111100100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1X, 0b00011111100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2X, 0b00011111100111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitX, 0b00011111101010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3X, 0b00011111101010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testX, 0b00011111101100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeY, 0b00011111111110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Y, 0b00011111111110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Y, 0b00100000000000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitY, 0b00100000000011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Y, 0b00100000000100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testY, 0b00100000000110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeZ, 0b00100000010111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Z, 0b00100000011000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Z, 0b00100000011010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitZ, 0b00100000011101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Z, 0b00100000011110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testZ, 0b00100000011111111000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00100000110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00100000110011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit, 0b00100000110100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_fini_array, 0b00100000110101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_init_array, 0b00100000110110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r_part_0, 0b00100000111001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r, 0b00100000111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_signal_r, 0b00100000111011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_raise_r, 0b00100000111101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp_r, 0b00100001000001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(raise, 0b00100001000100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(signal, 0b00100001000100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal, 0b00100001000111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp, 0b00100001000111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_kill_r, 0b00100001001000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_getpid_r, 0b00100001001010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__call_exitprocs, 0b00100001001010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_init, 0b00100001010001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_close, 0b00100001010001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_try_acquire, 0b00100001010001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_acquire, 0b00100001010100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_release, 0b00100001011000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_r, 0b00100001011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_lock, 0b00100010000001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_unlock, 0b00100010000010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(cleanup_glue, 0b00100010000010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_reclaim_reent, 0b00100010000011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_sbrk_r, 0b00100010000111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_trim_r, 0b00100010001001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_free_r, 0b00100010001111001000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000020c60;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
