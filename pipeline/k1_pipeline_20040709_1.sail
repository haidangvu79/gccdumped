// executing pipeline 20040709_1 test 
val k1_pipeline_20040709_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_20040709_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let myrnd: list_I = 
 [|
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x120e3273db003340),        //mulw $r0 = $r0, 1103515245 (0x41c64e6d);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x0000000cf1000e40),        //addw $r0 = $r0, 12345 (0x3039);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000120e0000200),        //make $r0 = 294920 (0x48008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023400),        //srlw $r0 = $r0, 16 (0x10);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeA: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 168a0 <retmeA>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitA: list_I = 
 [|
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 16a08 <retitA>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testA: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 16af0 <testA+0x50>;;
     _32(0x1fffff56),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 16ac8 <testA+0x28>;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087fff),        //make $r2 = 32767 (0x7fff);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffff3a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffff38),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 168b8 <fn1A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16c6c <testA+0x1cc>;;
     _32(0x1800281e),        //call 20ce0 <abort>;;
     _32(0x1ffffeed),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffeeb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 16940 <fn2A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16dd8 <testA+0x338>;;
     _32(0x180027c3),        //call 20ce0 <abort>;;
     _32(0x1ffffe92),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffe90),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044c00),        //make $r1 = 326960 (0x4fd30);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff00),        //call 16a28 <fn3A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004c00),        //make $r0 = 326960 (0x4fd30);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16f08 <testA+0x468>;;
     _32(0x18002777),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeB: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 16f20 <retmeB>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitB: list_I = 
 [|
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 17088 <retitB>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testB: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17170 <testB+0x50>;;
     _32(0x1ffffdb6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17148 <testB+0x28>;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087fff),        //make $r2 = 32767 (0x7fff);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffd9a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd98),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 16f38 <fn1B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 172d8 <testB+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 172dc <testB+0x1bc>;;
     _32(0x18002682),        //call 20ce0 <abort>;;
     _32(0x1ffffd51),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd4f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 16fc0 <fn2B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17434 <testB+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17438 <testB+0x318>;;
     _32(0x1800262b),        //call 20ce0 <abort>;;
     _32(0x1ffffcfa),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffcf8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042800),        //make $r1 = 326816 (0x4fca0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 170a8 <fn3B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0002800),        //make $r0 = 326816 (0x4fca0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17554 <testB+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17558 <testB+0x438>;;
     _32(0x180025e3),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeC: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 17570 <retmeC>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f441),        //insf $r0 = $r1, 31 (0x1f), 17 (0x11);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitC: list_I = 
 [|
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 176d8 <retitC>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testC: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 177c0 <testC+0x50>;;
     _32(0x1ffffc22),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17798 <testC+0x28>;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60087fff),        //make $r2 = 32767 (0x7fff);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffc06),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffc04),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 17588 <fn1C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17928 <testC+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1792c <testC+0x1bc>;;
     _32(0x180024ee),        //call 20ce0 <abort>;;
     _32(0x1ffffbbd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffbbb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 17610 <fn2C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17a84 <testC+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17a88 <testC+0x318>;;
     _32(0x18002497),        //call 20ce0 <abort>;;
     _32(0x1ffffb66),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffb64),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042600),        //make $r1 = 326808 (0x4fc98);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 176f8 <fn3C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002600),        //make $r0 = 326808 (0x4fc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17ba4 <testC+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17ba8 <testC+0x438>;;
     _32(0x1800244f),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeD: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 17bc0 <retmeD>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitD: list_I = 
 [|
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 17d18 <retitD>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testD: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17e00 <testD+0x50>;;
     _32(0x1ffffa92),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17dd8 <testD+0x28>;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffa75),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffa73),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 17bd8 <fn1D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17f7c <testD+0x1cc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17f80 <testD+0x1d0>;;
     _32(0x18002359),        //call 20ce0 <abort>;;
     _32(0x1ffffa28),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffa26),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff22),        //call 17c58 <fn2D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 180e8 <testD+0x338>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 180ec <testD+0x33c>;;
     _32(0x180022fe),        //call 20ce0 <abort>;;
     _32(0x1ffff9cd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff9cb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044a00),        //make $r1 = 326952 (0x4fd28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffeff),        //call 17d38 <fn3D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000580),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004a00),        //make $r0 = 326952 (0x4fd28);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 18218 <testD+0x468>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1821c <testD+0x46c>;;
     _32(0x180022b2),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeE: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18230 <retmeE>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitE: list_I = 
 [|
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 18388 <retitE>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testE: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 18470 <testE+0x50>;;
     _32(0x1ffff8f6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 18448 <testE+0x28>;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff8d9),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff8d7),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18248 <fn1E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 185dc <testE+0x1bc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 185dc <testE+0x1bc>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 185dc <testE+0x1bc>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 185dc <testE+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 185e0 <testE+0x1c0>;;
     _32(0x180021c1),        //call 20ce0 <abort>;;
     _32(0x1ffff890),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff88e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff26),        //call 182c8 <fn2E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 18738 <testE+0x318>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18738 <testE+0x318>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18738 <testE+0x318>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18738 <testE+0x318>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1873c <testE+0x31c>;;
     _32(0x1800216a),        //call 20ce0 <abort>;;
     _32(0x1ffff839),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff837),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0045e00),        //make $r1 = 327032 (0x4fd78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff07),        //call 183a8 <fn3E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 18858 <testE+0x438>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 18858 <testE+0x438>;;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 18858 <testE+0x438>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0005e00),        //make $r0 = 327032 (0x4fd78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18858 <testE+0x438>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1885c <testE+0x43c>;;
     _32(0x18002122),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeF: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18870 <retmeF>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitF: list_I = 
 [|
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 189c8 <retitF>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testF: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 18ab0 <testF+0x50>;;
     _32(0x1ffff766),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 18a88 <testF+0x28>;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff749),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff747),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18888 <fn1F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18c1c <testF+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18c20 <testF+0x1c0>;;
     _32(0x18002031),        //call 20ce0 <abort>;;
     _32(0x1ffff700),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff6fe),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff26),        //call 18908 <fn2F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 18d78 <testF+0x318>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18d78 <testF+0x318>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18d78 <testF+0x318>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18d78 <testF+0x318>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18d7c <testF+0x31c>;;
     _32(0x18001fda),        //call 20ce0 <abort>;;
     _32(0x1ffff6a9),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff6a7),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013fe0044e00),        //make $r1 = 326968 (0x4fd38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff07),        //call 189e8 <fn3F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 18e98 <testF+0x438>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 18e98 <testF+0x438>;;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 18e98 <testF+0x438>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004e00),        //make $r0 = 326968 (0x4fd38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18e98 <testF+0x438>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18e9c <testF+0x43c>;;
     _32(0x18001f92),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeG: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f641),        //insf $r0 = $r1, 31 (0x1f), 25 (0x19);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18eb0 <retmeG>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f641),        //insf $r0 = $r1, 31 (0x1f), 25 (0x19);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f641),        //insf $r0 = $r1, 31 (0x1f), 25 (0x19);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitG: list_I = 
 [|
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19010 <retitG>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testG: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 190f8 <testG+0x50>;;
     _32(0x1ffff5d4),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 190d0 <testG+0x28>;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008007f),        //make $r2 = 127 (0x7f);;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff5b8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff5b6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18ec8 <fn1G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1925c <testG+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1925c <testG+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1925c <testG+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1925c <testG+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19260 <testG+0x1b8>;;
     _32(0x18001ea1),        //call 20ce0 <abort>;;
     _32(0x1ffff570),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff56e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 18f50 <fn2G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 193b4 <testG+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 193b4 <testG+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 193b4 <testG+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 193b4 <testG+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 193b8 <testG+0x310>;;
     _32(0x18001e4b),        //call 20ce0 <abort>;;
     _32(0x1ffff51a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff518),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045a00),        //make $r1 = 327016 (0x4fd68);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f642),        //insf $r0 = $r2, 31 (0x1f), 25 (0x19);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 19030 <fn3G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 194d0 <testG+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 194d0 <testG+0x428>;;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 194d0 <testG+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005a00),        //make $r0 = 327016 (0x4fd68);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 194d0 <testG+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 194d4 <testG+0x42c>;;
     _32(0x18001e04),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeH: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f5c1),        //insf $r0 = $r1, 31 (0x1f), 23 (0x17);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 194e8 <retmeH>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f5c1),        //insf $r0 = $r1, 31 (0x1f), 23 (0x17);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6103f5c1),        //insf $r0 = $r1, 31 (0x1f), 23 (0x17);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitH: list_I = 
 [|
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19648 <retitH>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testH: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 19730 <testH+0x50>;;
     _32(0x1ffff446),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19708 <testH+0x28>;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x600801ff),        //make $r2 = 511 (0x1ff);;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff42a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff428),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 19500 <fn1H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 19894 <testH+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 19894 <testH+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19894 <testH+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19894 <testH+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19898 <testH+0x1b8>;;
     _32(0x18001d13),        //call 20ce0 <abort>;;
     _32(0x1ffff3e2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff3e0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 19588 <fn2H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 199ec <testH+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 199ec <testH+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 199ec <testH+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 199ec <testH+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 199f0 <testH+0x310>;;
     _32(0x18001cbd),        //call 20ce0 <abort>;;
     _32(0x1ffff38c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff38a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042a00),        //make $r1 = 326824 (0x4fca8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f5c2),        //insf $r0 = $r2, 31 (0x1f), 23 (0x17);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 19668 <fn3H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 19b08 <testH+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 19b08 <testH+0x428>;;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19b08 <testH+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002a00),        //make $r0 = 326824 (0x4fca8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19b08 <testH+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19b0c <testH+0x42c>;;
     _32(0x18001c76),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeI: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003f1c1),        //insf $r0 = $r1, 15 (0xf), 7 (0x7);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 19b20 <retmeI>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003f1c1),        //insf $r0 = $r1, 15 (0xf), 7 (0x7);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003f1c1),        //insf $r0 = $r1, 15 (0xf), 7 (0x7);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitI: list_I = 
 [|
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19c80 <retitI>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testI: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 19d68 <testI+0x50>;;
     _32(0x1ffff2b8),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19d40 <testI+0x28>;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x600801ff),        //make $r2 = 511 (0x1ff);;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff29c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff29a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 19b38 <fn1I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19ecc <testI+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19ed0 <testI+0x1b8>;;
     _32(0x18001b85),        //call 20ce0 <abort>;;
     _32(0x1ffff254),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff252),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 19bc0 <fn2I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a024 <testI+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a024 <testI+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a024 <testI+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1a024 <testI+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a028 <testI+0x310>;;
     _32(0x18001b2f),        //call 20ce0 <abort>;;
     _32(0x1ffff1fe),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff1fc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78007fc0),        //andw $r0 = $r0, 511 (0x1ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0044200),        //make $r1 = 326920 (0x4fd08);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f1c2),        //insf $r0 = $r2, 15 (0xf), 7 (0x7);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 19ca0 <fn3I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1a140 <testI+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1a140 <testI+0x428>;;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a140 <testI+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004200),        //make $r0 = 326920 (0x4fd08);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1a140 <testI+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a144 <testI+0x42c>;;
     _32(0x18001ae8),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeJ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1a158 <retmeJ>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitJ: list_I = 
 [|
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1a2b8 <retitJ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testJ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1a3a0 <testJ+0x50>;;
     _32(0x1ffff12a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1a378 <testJ+0x28>;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6008007f),        //make $r2 = 127 (0x7f);;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff10e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff10c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1a170 <fn1J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1a504 <testJ+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a508 <testJ+0x1b8>;;
     _32(0x180019f7),        //call 20ce0 <abort>;;
     _32(0x1ffff0c6),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff0c4),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1a1f8 <fn2J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1a65c <testJ+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a660 <testJ+0x310>;;
     _32(0x180019a1),        //call 20ce0 <abort>;;
     _32(0x1ffff070),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff06e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046200),        //make $r1 = 327048 (0x4fd88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1a2d8 <fn3J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006200),        //make $r0 = 327048 (0x4fd88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1a778 <testJ+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a77c <testJ+0x42c>;;
     _32(0x1800195a),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeK: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1a790 <retmeK>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitK: list_I = 
 [|
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1a8f0 <retitK>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testK: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1a9d8 <testK+0x50>;;
     _32(0x1fffef9c),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1a9b0 <testK+0x28>;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffef80),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffef7e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1a7a8 <fn1K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ab4c <testK+0x1c4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ab50 <testK+0x1c8>;;
     _32(0x18001865),        //call 20ce0 <abort>;;
     _32(0x1fffef34),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffef32),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1a830 <fn2K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1acb4 <testK+0x32c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1acb8 <testK+0x330>;;
     _32(0x1800180b),        //call 20ce0 <abort>;;
     _32(0x1fffeeda),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeed8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045200),        //make $r1 = 326984 (0x4fd48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff03),        //call 1a910 <fn3K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005200),        //make $r0 = 326984 (0x4fd48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ade0 <testK+0x458>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ade4 <testK+0x45c>;;
     _32(0x180017c0),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeL: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1adf8 <retmeL>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitL: list_I = 
 [|
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1af58 <retitL>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testL: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b040 <testL+0x50>;;
     _32(0x1fffee02),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b018 <testL+0x28>;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffede6),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffede4),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1ae10 <fn1L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b1a4 <testL+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b1a8 <testL+0x1b8>;;
     _32(0x180016cf),        //call 20ce0 <abort>;;
     _32(0x1fffed9e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffed9c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1ae98 <fn2L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b2fc <testL+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b300 <testL+0x310>;;
     _32(0x18001679),        //call 20ce0 <abort>;;
     _32(0x1fffed48),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffed46),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043600),        //make $r1 = 326872 (0x4fcd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1af78 <fn3L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x000000008000013fe0003600),        //make $r0 = 326872 (0x4fcd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b418 <testL+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b41c <testL+0x42c>;;
     _32(0x18001632),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeM: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1b430 <retmeM>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitM: list_I = 
 [|
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1b590 <retitM>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testM: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b678 <testM+0x50>;;
     _32(0x1fffec74),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b650 <testM+0x28>;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffec58),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffec56),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1b448 <fn1M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b7dc <testM+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b7e0 <testM+0x1b8>;;
     _32(0x18001541),        //call 20ce0 <abort>;;
     _32(0x1fffec10),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffec0e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1b4d0 <fn2M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b934 <testM+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b938 <testM+0x310>;;
     _32(0x180014eb),        //call 20ce0 <abort>;;
     _32(0x1fffebba),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffebb8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043c00),        //make $r1 = 326896 (0x4fcf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1b5b0 <fn3M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003c00),        //make $r0 = 326896 (0x4fcf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ba50 <testM+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ba54 <testM+0x42c>;;
     _32(0x180014a4),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeN: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1ba68 <retmeN>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitN: list_I = 
 [|
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1bbc8 <retitN>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testN: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1bcb0 <testN+0x50>;;
     _32(0x1fffeae6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1bc88 <testN+0x28>;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffeaca),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeac8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1ba80 <fn1N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1be24 <testN+0x1c4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1be28 <testN+0x1c8>;;
     _32(0x180013af),        //call 20ce0 <abort>;;
     _32(0x1fffea7e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffea7c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1bb08 <fn2N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1bf8c <testN+0x32c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bf90 <testN+0x330>;;
     _32(0x18001355),        //call 20ce0 <abort>;;
     _32(0x1fffea24),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffea22),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0045800),        //make $r1 = 327008 (0x4fd60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff03),        //call 1bbe8 <fn3N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0005800),        //make $r0 = 327008 (0x4fd60);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1c0b8 <testN+0x458>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c0bc <testN+0x45c>;;
     _32(0x1800130a),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeO: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1c0d0 <retmeO>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitO: list_I = 
 [|
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1c238 <retitO>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testO: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c320 <testO+0x50>;;
     _32(0x1fffe94a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c2f8 <testO+0x28>;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe92e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe92c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1c0e8 <fn1O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1c488 <testO+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c48c <testO+0x1bc>;;
     _32(0x18001216),        //call 20ce0 <abort>;;
     _32(0x1fffe8e5),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe8e3),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1c170 <fn2O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1c5e4 <testO+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c5e8 <testO+0x318>;;
     _32(0x180011bf),        //call 20ce0 <abort>;;
     _32(0x1fffe88e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe88c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046c00),        //make $r1 = 327088 (0x4fdb0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1c258 <fn3O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1c704 <testO+0x434>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1c704 <testO+0x434>;;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1c704 <testO+0x434>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006c00),        //make $r0 = 327088 (0x4fdb0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1c704 <testO+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c708 <testO+0x438>;;
     _32(0x18001177),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeP: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1c720 <retmeP>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitP: list_I = 
 [|
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1c888 <retitP>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testP: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c970 <testP+0x50>;;
     _32(0x1fffe7b6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c948 <testP+0x28>;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe79a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe798),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1c738 <fn1P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cad8 <testP+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cadc <testP+0x1bc>;;
     _32(0x18001082),        //call 20ce0 <abort>;;
     _32(0x1fffe751),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe74f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1c7c0 <fn2P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1cc34 <testP+0x314>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1cc34 <testP+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1cc34 <testP+0x314>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1cc34 <testP+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cc38 <testP+0x318>;;
     _32(0x1800102b),        //call 20ce0 <abort>;;
     _32(0x1fffe6fa),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe6f8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0045400),        //make $r1 = 326992 (0x4fd50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1c8a8 <fn3P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1cd54 <testP+0x434>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1cd54 <testP+0x434>;;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cd54 <testP+0x434>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0005400),        //make $r0 = 326992 (0x4fd50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cd54 <testP+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cd58 <testP+0x438>;;
     _32(0x18000fe3),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeQ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1cd70 <retmeQ>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitQ: list_I = 
 [|
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1ced8 <retitQ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testQ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1cfc0 <testQ+0x50>;;
     _32(0x1fffe622),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1cf98 <testQ+0x28>;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe606),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe604),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1cd88 <fn1Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d128 <testQ+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d12c <testQ+0x1bc>;;
     _32(0x18000eee),        //call 20ce0 <abort>;;
     _32(0x1fffe5bd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe5bb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1ce10 <fn2Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1d284 <testQ+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d284 <testQ+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d284 <testQ+0x314>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d284 <testQ+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d288 <testQ+0x318>;;
     _32(0x18000e97),        //call 20ce0 <abort>;;
     _32(0x1fffe566),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe564),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0047000),        //make $r1 = 327104 (0x4fdc0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1cef8 <fn3Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1d3a4 <testQ+0x434>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d3a4 <testQ+0x434>;;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d3a4 <testQ+0x434>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0007000),        //make $r0 = 327104 (0x4fdc0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d3a4 <testQ+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d3a8 <testQ+0x438>;;
     _32(0x18000e4f),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeR: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1d3c0 <retmeR>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitR: list_I = 
 [|
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1d528 <retitR>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testR: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1d610 <testR+0x50>;;
     _32(0x1fffe48e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1d5e8 <testR+0x28>;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe472),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe470),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1d3d8 <fn1R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d778 <testR+0x1b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d77c <testR+0x1bc>;;
     _32(0x18000d5a),        //call 20ce0 <abort>;;
     _32(0x1fffe429),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe427),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff25),        //call 1d460 <fn2R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d8d4 <testR+0x314>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d8d8 <testR+0x318>;;
     _32(0x18000d03),        //call 20ce0 <abort>;;
     _32(0x1fffe3d2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe3d0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043800),        //make $r1 = 326880 (0x4fce0);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff08),        //call 1d548 <fn3R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1d9f4 <testR+0x434>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d9f4 <testR+0x434>;;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d9f4 <testR+0x434>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003800),        //make $r0 = 326880 (0x4fce0);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d9f4 <testR+0x434>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d9f8 <testR+0x438>;;
     _32(0x18000cbb),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeS: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 1da10 <retmeS>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitS: list_I = 
 [|
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1db70 <retitS>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testS: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1dc58 <testS+0x50>;;
     _32(0x1fffe2fc),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1dc30 <testS+0x28>;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe2e0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe2de),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1da28 <fn1S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ddbc <testS+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ddc0 <testS+0x1b8>;;
     _32(0x18000bc9),        //call 20ce0 <abort>;;
     _32(0x1fffe298),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe296),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1dab0 <fn2S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1df14 <testS+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1df14 <testS+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1df14 <testS+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1df14 <testS+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1df18 <testS+0x310>;;
     _32(0x18000b73),        //call 20ce0 <abort>;;
     _32(0x1fffe242),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe240),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0043200),        //make $r1 = 326856 (0x4fcc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1db90 <fn3S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1e030 <testS+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1e030 <testS+0x428>;;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e030 <testS+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0003200),        //make $r0 = 326856 (0x4fcc8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1e030 <testS+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e034 <testS+0x42c>;;
     _32(0x18000b2c),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeT: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1e048 <retmeT>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitT: list_I = 
 [|
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e1a8 <retitT>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testT: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e290 <testT+0x50>;;
     _32(0x1fffe16e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e268 <testT+0x28>;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe152),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe150),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1e060 <fn1T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1e3f4 <testT+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e3f8 <testT+0x1b8>;;
     _32(0x18000a3b),        //call 20ce0 <abort>;;
     _32(0x1fffe10a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe108),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1e0e8 <fn2T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1e54c <testT+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e550 <testT+0x310>;;
     _32(0x180009e5),        //call 20ce0 <abort>;;
     _32(0x1fffe0b4),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe0b2),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046a00),        //make $r1 = 327080 (0x4fda8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1e1c8 <fn3T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006a00),        //make $r0 = 327080 (0x4fda8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1e668 <testT+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e66c <testT+0x42c>;;
     _32(0x1800099e),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeU: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 1e680 <retmeU>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitU: list_I = 
 [|
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e7e0 <retitU>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testU: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e8c8 <testU+0x50>;;
     _32(0x1fffdfe0),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e8a0 <testU+0x28>;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdfc4),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdfc2),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1e698 <fn1U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ea2c <testU+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ea30 <testU+0x1b8>;;
     _32(0x180008ad),        //call 20ce0 <abort>;;
     _32(0x1fffdf7c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf7a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1e720 <fn2U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1eb84 <testU+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1eb88 <testU+0x310>;;
     _32(0x18000857),        //call 20ce0 <abort>;;
     _32(0x1fffdf26),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf24),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0044600),        //make $r1 = 326936 (0x4fd18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1e800 <fn3U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1eca0 <testU+0x428>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1eca0 <testU+0x428>;;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1eca0 <testU+0x428>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0004600),        //make $r0 = 326936 (0x4fd18);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1eca0 <testU+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1eca4 <testU+0x42c>;;
     _32(0x18000810),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeV: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1ecb8 <retmeV>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitV: list_I = 
 [|
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1ee18 <retitV>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testV: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ef00 <testV+0x50>;;
     _32(0x1fffde52),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1eed8 <testV+0x28>;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffde36),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffde34),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1ecd0 <fn1V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f054 <testV+0x1a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f058 <testV+0x1a8>;;
     _32(0x18000723),        //call 20ce0 <abort>;;
     _32(0x1fffddf2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffddf0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff2d),        //call 1ed58 <fn2V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1f19c <testV+0x2ec>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f1a0 <testV+0x2f0>;;
     _32(0x180006d1),        //call 20ce0 <abort>;;
     _32(0x1fffdda0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdd9e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x000000008000013fe0046400),        //make $r1 = 327056 (0x4fd90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 1ee38 <fn3V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0008c0),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x000000008000013fe0006400),        //make $r0 = 327056 (0x4fd90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f2a8 <testV+0x3f8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f2ac <testV+0x3fc>;;
     _32(0x1800068e),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeW: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1f2c0 <retmeW>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitW: list_I = 
 [|
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1f428 <retitW>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testW: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1f510 <testW+0x50>;;
     _32(0x1fffdcce),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1f4e8 <testW+0x28>;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdcab),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdca9),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1f2d8 <fn1W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f694 <testW+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f698 <testW+0x1d8>;;
     _32(0x18000593),        //call 20ce0 <abort>;;
     _32(0x1fffdc62),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc60),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 1f360 <fn2W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1f7f0 <testW+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f7f4 <testW+0x334>;;
     _32(0x1800053c),        //call 20ce0 <abort>;;
     _32(0x1fffdc0b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc09),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0043e00),        //make $r1 = 326904 (0x4fcf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 1f448 <fn3W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1f910 <testW+0x450>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f910 <testW+0x450>;;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f910 <testW+0x450>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0003e00),        //make $r0 = 326904 (0x4fcf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f910 <testW+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f914 <testW+0x454>;;
     _32(0x180004f4),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeX: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1f928 <retmeX>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitX: list_I = 
 [|
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1fa90 <retitX>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testX: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1fb78 <testX+0x50>;;
     _32(0x1fffdb34),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1fb50 <testX+0x28>;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdb11),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdb0f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1f940 <fn1X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1fcfc <testX+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fd00 <testX+0x1d8>;;
     _32(0x180003f9),        //call 20ce0 <abort>;;
     _32(0x1fffdac8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdac6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 1f9c8 <fn2X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1fe58 <testX+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1fe58 <testX+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1fe58 <testX+0x330>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1fe58 <testX+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fe5c <testX+0x334>;;
     _32(0x180003a2),        //call 20ce0 <abort>;;
     _32(0x1fffda71),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffda6f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042200),        //make $r1 = 326792 (0x4fc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 1fab0 <fn3X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ff78 <testX+0x450>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ff78 <testX+0x450>;;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ff78 <testX+0x450>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002200),        //make $r0 = 326792 (0x4fc88);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ff78 <testX+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ff7c <testX+0x454>;;
     _32(0x1800035a),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeY: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1ff90 <retmeY>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitY: list_I = 
 [|
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 200f8 <retitY>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testY: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 201e0 <testY+0x50>;;
     _32(0x1fffd99a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 201b8 <testY+0x28>;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050200),        //sd 8 (0x8)[$r0] = $r1;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd977),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd975),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1ffa8 <fn1Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 20364 <testY+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 20364 <testY+0x1d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20364 <testY+0x1d4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20364 <testY+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20368 <testY+0x1d8>;;
     _32(0x1800025f),        //call 20ce0 <abort>;;
     _32(0x1fffd92e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd92c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 20030 <fn2Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 204c0 <testY+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 204c0 <testY+0x330>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 204c0 <testY+0x330>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 204c0 <testY+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 204c4 <testY+0x334>;;
     _32(0x18000208),        //call 20ce0 <abort>;;
     _32(0x1fffd8d7),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd8d5),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0042e00),        //make $r1 = 326840 (0x4fcb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 20118 <fn3Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 205e0 <testY+0x450>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 205e0 <testY+0x450>;;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 205e0 <testY+0x450>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x000000008000013fe0002e00),        //make $r0 = 326840 (0x4fcb8);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 205e0 <testY+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 205e4 <testY+0x454>;;
     _32(0x180001c0),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeZ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 205f8 <retmeZ>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitZ: list_I = 
 [|
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20760 <retitZ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testZ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 20848 <testZ+0x50>;;
     _32(0x1fffd800),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 20820 <testZ+0x28>;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd7dd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd7db),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 20610 <fn1Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 209cc <testZ+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 209d0 <testZ+0x1d8>;;
     _32(0x180000c5),        //call 20ce0 <abort>;;
     _32(0x1fffd794),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd792),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1e),        //call 20698 <fn2Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 20b28 <testZ+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 20b28 <testZ+0x330>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 20b28 <testZ+0x330>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 20b28 <testZ+0x330>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20b2c <testZ+0x334>;;
     _32(0x1800006e),        //call 20ce0 <abort>;;
     _32(0x1fffd73d),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd73b),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x000000008000013fe0046600),        //make $r1 = 327064 (0x4fd98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff01),        //call 20780 <fn3Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 20c48 <testZ+0x450>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 20c48 <testZ+0x450>;;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20c48 <testZ+0x450>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x000000008000013fe0006600),        //make $r0 = 327064 (0x4fd98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20c48 <testZ+0x450>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20c4c <testZ+0x454>;;
     _32(0x18000026),        //call 20ce0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffd78d),        //call 16aa0 <testA>;;
     _32(0x1fffd92c),        //call 17120 <testB>;;
     _32(0x1fffdabf),        //call 17770 <testC>;;
     _32(0x1fffdc4e),        //call 17db0 <testD>;;
     _32(0x1fffdde9),        //call 18420 <testE>;;
     _32(0x1fffdf78),        //call 18a60 <testF>;;
     _32(0x1fffe109),        //call 190a8 <testG>;;
     _32(0x1fffe296),        //call 196e0 <testH>;;
     _32(0x1fffe423),        //call 19d18 <testI>;;
     _32(0x1fffe5b0),        //call 1a350 <testJ>;;
     _32(0x1fffe73d),        //call 1a988 <testK>;;
     _32(0x1fffe8d6),        //call 1aff0 <testL>;;
     _32(0x1fffea63),        //call 1b628 <testM>;;
     _32(0x1fffebf0),        //call 1bc60 <testN>;;
     _32(0x1fffed8b),        //call 1c2d0 <testO>;;
     _32(0x1fffef1e),        //call 1c920 <testP>;;
     _32(0x1ffff0b1),        //call 1cf70 <testQ>;;
     _32(0x1ffff244),        //call 1d5c0 <testR>;;
     _32(0x1ffff3d5),        //call 1dc08 <testS>;;
     _32(0x1ffff562),        //call 1e240 <testT>;;
     _32(0x1ffff6ef),        //call 1e878 <testU>;;
     _32(0x1ffff87c),        //call 1eeb0 <testV>;;
     _32(0x1ffff9ff),        //call 1f4c0 <testW>;;
     _32(0x1ffffb98),        //call 1fb28 <testX>;;
     _32(0x1ffffd31),        //call 20190 <testY>;;
     _32(0x1ffffeca),        //call 207f8 <testZ>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 20d00 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 21100 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 22dd8 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 21298 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000124e000f000),        //make $r0 = 299968 (0x493c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 20d3c <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 22dd8 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00100000110001100000; //0x20c60
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(myrnd, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeA, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1A, 0b00010110100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2A, 0b00010110100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitA, 0b00010110101000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3A, 0b00010110101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testA, 0b00010110101010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeB, 0b00010110111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1B, 0b00010110111100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2B, 0b00010110111111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitB, 0b00010111000010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3B, 0b00010111000010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testB, 0b00010111000100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeC, 0b00010111010101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1C, 0b00010111010110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2C, 0b00010111011000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitC, 0b00010111011011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3C, 0b00010111011011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testC, 0b00010111011101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeD, 0b00010111101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1D, 0b00010111101111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2D, 0b00010111110001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitD, 0b00010111110100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3D, 0b00010111110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testD, 0b00010111110110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeE, 0b00011000001000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1E, 0b00011000001001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2E, 0b00011000001011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitE, 0b00011000001110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3E, 0b00011000001110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testE, 0b00011000010000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeF, 0b00011000100001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1F, 0b00011000100010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2F, 0b00011000100100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitF, 0b00011000100111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3F, 0b00011000100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testF, 0b00011000101001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeG, 0b00011000111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1G, 0b00011000111011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2G, 0b00011000111101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitG, 0b00011001000000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3G, 0b00011001000000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testG, 0b00011001000010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeH, 0b00011001010011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1H, 0b00011001010100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2H, 0b00011001010110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitH, 0b00011001011001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3H, 0b00011001011001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testH, 0b00011001011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeI, 0b00011001101100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1I, 0b00011001101100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2I, 0b00011001101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitI, 0b00011001110010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3I, 0b00011001110010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testI, 0b00011001110100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeJ, 0b00011010000101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1J, 0b00011010000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2J, 0b00011010000111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitJ, 0b00011010001010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3J, 0b00011010001011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testJ, 0b00011010001101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeK, 0b00011010011110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1K, 0b00011010011110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2K, 0b00011010100000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitK, 0b00011010100011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3K, 0b00011010100100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testK, 0b00011010100110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeL, 0b00011010110111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1L, 0b00011010111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2L, 0b00011010111010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitL, 0b00011010111101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3L, 0b00011010111101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testL, 0b00011010111111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeM, 0b00011011010000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1M, 0b00011011010001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2M, 0b00011011010011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitM, 0b00011011010110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3M, 0b00011011010110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testM, 0b00011011011000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeN, 0b00011011101001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1N, 0b00011011101010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2N, 0b00011011101100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitN, 0b00011011101111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3N, 0b00011011101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testN, 0b00011011110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeO, 0b00011100000011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1O, 0b00011100000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2O, 0b00011100000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitO, 0b00011100001000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3O, 0b00011100001001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testO, 0b00011100001011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeP, 0b00011100011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1P, 0b00011100011100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2P, 0b00011100011111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitP, 0b00011100100010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3P, 0b00011100100010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testP, 0b00011100100100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeQ, 0b00011100110101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Q, 0b00011100110110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Q, 0b00011100111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitQ, 0b00011100111011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Q, 0b00011100111011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testQ, 0b00011100111101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeR, 0b00011101001111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1R, 0b00011101001111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2R, 0b00011101010001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitR, 0b00011101010100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3R, 0b00011101010101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testR, 0b00011101010111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeS, 0b00011101101000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1S, 0b00011101101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2S, 0b00011101101010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitS, 0b00011101101101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3S, 0b00011101101110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testS, 0b00011101110000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeT, 0b00011110000001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1T, 0b00011110000001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2T, 0b00011110000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitT, 0b00011110000110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3T, 0b00011110000111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testT, 0b00011110001001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeU, 0b00011110011010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1U, 0b00011110011010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2U, 0b00011110011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitU, 0b00011110011111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3U, 0b00011110100000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testU, 0b00011110100001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeV, 0b00011110110010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1V, 0b00011110110011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2V, 0b00011110110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitV, 0b00011110111000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3V, 0b00011110111000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testV, 0b00011110111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeW, 0b00011111001011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1W, 0b00011111001011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2W, 0b00011111001101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitW, 0b00011111010000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3W, 0b00011111010001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testW, 0b00011111010011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeX, 0b00011111100100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1X, 0b00011111100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2X, 0b00011111100111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitX, 0b00011111101010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3X, 0b00011111101010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testX, 0b00011111101100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeY, 0b00011111111110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Y, 0b00011111111110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Y, 0b00100000000000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitY, 0b00100000000011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Y, 0b00100000000100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testY, 0b00100000000110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeZ, 0b00100000010111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Z, 0b00100000011000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Z, 0b00100000011010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitZ, 0b00100000011101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Z, 0b00100000011110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testZ, 0b00100000011111111000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00100000110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00100000110011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit, 0b00100000110100000000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000020c60;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
