// executing pipeline 990326_1 test 
val k1_pipeline_990326_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_990326_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let a1: list_I = 
 [|
     _96(0x0000000080000100e0000800),        //make $r0 = 262176 (0x40020);;
     _32(0x20040000),        //lbz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000100e0000a00),        //make $r0 = 262184 (0x40028);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x68077001),        //sxbd $r1 = $r1;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0003c0),        //cb.wnez $r0? 16890 <a1+0x70>;;
     _96(0x0000000080000100e0000800),        //make $r0 = 262176 (0x40020);;
     _32(0x20040040),        //lbz $r1 = 1 (0x1)[$r0];;
     _96(0x0000000080000100e0000a00),        //make $r0 = 262184 (0x40028);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x68077001),        //sxbd $r1 = $r1;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16890 <a1+0x70>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16894 <a1+0x74>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let a2: list_I = 
 [|
     _96(0x0000000080000100e0000c00),        //make $r0 = 262192 (0x40030);;
     _32(0x20040000),        //lbz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000100e0000e00),        //make $r0 = 262200 (0x40038);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x68077001),        //sxbd $r1 = $r1;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 16910 <a2+0x70>;;
     _96(0x0000000080000100e0000c00),        //make $r0 = 262192 (0x40030);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000100e0000e00),        //make $r0 = 262200 (0x40038);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x68077001),        //sxbd $r1 = $r1;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16910 <a2+0x70>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16914 <a2+0x74>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let a3: list_I = 
 [|
     _96(0x0000000080000100e0001000),        //make $r0 = 262208 (0x40040);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000100e0001200),        //make $r0 = 262216 (0x40048);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x68077001),        //sxbd $r1 = $r1;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 169a8 <a3+0x88>;;
     _96(0x0000000080000100e0001000),        //make $r0 = 262208 (0x40040);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000100e0001200),        //make $r0 = 262216 (0x40048);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x68077001),        //sxbd $r1 = $r1;;
     _32(0x68037000),        //sxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 169a8 <a3+0x88>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 169ac <a3+0x8c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let b1: list_I = 
 [|
     _96(0x0000000080000100e0001400),        //make $r0 = 262224 (0x40050);;
     _32(0x28040180),        //lhz $r1 = 6 (0x6)[$r0];;
     _96(0x0000000080000100e0001600),        //make $r0 = 262232 (0x40058);;
     _32(0x28000180),        //lhz $r0 = 6 (0x6)[$r0];;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0003c0),        //cb.wnez $r0? 16a28 <b1+0x70>;;
     _96(0x0000000080000100e0001400),        //make $r0 = 262224 (0x40050);;
     _32(0x28040100),        //lhz $r1 = 4 (0x4)[$r0];;
     _96(0x0000000080000100e0001600),        //make $r0 = 262232 (0x40058);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16a28 <b1+0x70>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16a2c <b1+0x74>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let b2: list_I = 
 [|
     _96(0x0000000080000100e0001800),        //make $r0 = 262240 (0x40060);;
     _32(0x28040180),        //lhz $r1 = 6 (0x6)[$r0];;
     _96(0x0000000080000100e0001a00),        //make $r0 = 262248 (0x40068);;
     _32(0x28000180),        //lhz $r0 = 6 (0x6)[$r0];;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 16aa8 <b2+0x70>;;
     _96(0x0000000080000100e0001800),        //make $r0 = 262240 (0x40060);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0001a00),        //make $r0 = 262248 (0x40068);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16aa8 <b2+0x70>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16aac <b2+0x74>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let b3: list_I = 
 [|
     _96(0x0000000080000100e0001c00),        //make $r0 = 262256 (0x40070);;
     _32(0x28000180),        //lhz $r0 = 6 (0x6)[$r0];;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0001e00),        //make $r0 = 262264 (0x40078);;
     _32(0x28000180),        //lhz $r0 = 6 (0x6)[$r0];;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 16b40 <b3+0x88>;;
     _96(0x0000000080000100e0001c00),        //make $r0 = 262256 (0x40070);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0001e00),        //make $r0 = 262264 (0x40078);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16b40 <b3+0x88>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16b44 <b3+0x8c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let c1: list_I = 
 [|
     _96(0x0000000080000100e0002000),        //make $r0 = 262272 (0x40080);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f480),        //extfz $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0002800),        //make $r0 = 262304 (0x400a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f480),        //extfz $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 16bd8 <c1+0x88>;;
     _96(0x0000000080000100e0002000),        //make $r0 = 262272 (0x40080);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65031100),        //extfz $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0002800),        //make $r0 = 262304 (0x400a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65031100),        //extfz $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16bd8 <c1+0x88>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16bdc <c1+0x8c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let c2: list_I = 
 [|
     _96(0x0000000080000100e0003000),        //make $r0 = 262336 (0x400c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f480),        //extfz $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0003800),        //make $r0 = 262368 (0x400e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f480),        //extfz $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 16c70 <c2+0x88>;;
     _96(0x0000000080000100e0003000),        //make $r0 = 262336 (0x400c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65031100),        //extfz $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0003800),        //make $r0 = 262368 (0x400e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65031100),        //extfz $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16c70 <c2+0x88>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16c74 <c2+0x8c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let c3: list_I = 
 [|
     _96(0x0000000080000100e0004000),        //make $r0 = 262400 (0x40100);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f480),        //extfz $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0004800),        //make $r0 = 262432 (0x40120);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f480),        //extfz $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 16d28 <c3+0xa8>;;
     _96(0x0000000080000100e0004000),        //make $r0 = 262400 (0x40100);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65031100),        //extfz $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0004800),        //make $r0 = 262432 (0x40120);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65031100),        //extfz $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16d28 <c3+0xa8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16d2c <c3+0xac>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let d1: list_I = 
 [|
     _96(0x0000000080000100e0005000),        //make $r0 = 262464 (0x40140);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403d000),        //extfz $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0005800),        //make $r0 = 262496 (0x40160);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403d000),        //extfz $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 16dc0 <d1+0x88>;;
     _96(0x0000000080000100e0005000),        //make $r0 = 262464 (0x40140);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503b380),        //extfz $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0005800),        //make $r0 = 262496 (0x40160);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503b380),        //extfz $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16dc0 <d1+0x88>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16dc4 <d1+0x8c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let d2: list_I = 
 [|
     _96(0x0000000080000100e0006000),        //make $r0 = 262528 (0x40180);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403d000),        //extfz $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0006800),        //make $r0 = 262560 (0x401a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403d000),        //extfz $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 16e58 <d2+0x88>;;
     _96(0x0000000080000100e0006000),        //make $r0 = 262528 (0x40180);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503b380),        //extfz $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0006800),        //make $r0 = 262560 (0x401a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503b380),        //extfz $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16e58 <d2+0x88>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16e5c <d2+0x8c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let d3: list_I = 
 [|
     _96(0x0000000080000100e0007000),        //make $r0 = 262592 (0x401c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403d000),        //extfz $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0007800),        //make $r0 = 262624 (0x401e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6403d000),        //extfz $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 16f10 <d3+0xa8>;;
     _96(0x0000000080000100e0007000),        //make $r0 = 262592 (0x401c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503b380),        //extfz $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000100e0007800),        //make $r0 = 262624 (0x401e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503b380),        //extfz $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16f10 <d3+0xa8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16f14 <d3+0xac>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let e1: list_I = 
 [|
     _96(0x0000000080000100e0008000),        //make $r0 = 262656 (0x40200);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0008800),        //make $r0 = 262688 (0x40220);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 16fb0 <e1+0x90>;;
     _96(0x0000000080000100e0008000),        //make $r0 = 262656 (0x40200);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0008800),        //make $r0 = 262688 (0x40220);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 16fb0 <e1+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 16fb4 <e1+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let e2: list_I = 
 [|
     _96(0x0000000080000100e0009000),        //make $r0 = 262720 (0x40240);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0009800),        //make $r0 = 262752 (0x40260);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 17050 <e2+0x90>;;
     _96(0x0000000080000100e0009000),        //make $r0 = 262720 (0x40240);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e0009800),        //make $r0 = 262752 (0x40260);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17050 <e2+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17054 <e2+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let e3: list_I = 
 [|
     _96(0x0000000080000100e000a000),        //make $r0 = 262784 (0x40280);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000a800),        //make $r0 = 262816 (0x402a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 17108 <e3+0xa8>;;
     _96(0x0000000080000100e000a000),        //make $r0 = 262784 (0x40280);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000a800),        //make $r0 = 262816 (0x402a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17108 <e3+0xa8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 1710c <e3+0xac>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let e4: list_I = 
 [|
     _96(0x0000000080000100e000b000),        //make $r0 = 262848 (0x402c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x07ffff00f8000000),        //andw $r0 = $r0, -262144 (0xfffffffffffc0000);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x080003c0),        //cb.dnez $r0? 17170 <e4+0x58>;;
     _96(0x0000000080000100e000b000),        //make $r0 = 262848 (0x402c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000008f8000000),        //andw $r0 = $r0, 8192 (0x2000);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 17170 <e4+0x58>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17174 <e4+0x5c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f1: list_I = 
 [|
     _96(0x0000000080000100e000b800),        //make $r0 = 262880 (0x402e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000c000),        //make $r0 = 262912 (0x40300);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 17210 <f1+0x90>;;
     _96(0x0000000080000100e000b800),        //make $r0 = 262880 (0x402e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000c000),        //make $r0 = 262912 (0x40300);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17210 <f1+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17214 <f1+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f2: list_I = 
 [|
     _96(0x0000000080000100e000c800),        //make $r0 = 262944 (0x40320);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000d000),        //make $r0 = 262976 (0x40340);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 172b0 <f2+0x90>;;
     _96(0x0000000080000100e000c800),        //make $r0 = 262944 (0x40320);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000d000),        //make $r0 = 262976 (0x40340);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 172b0 <f2+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 172b4 <f2+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f3: list_I = 
 [|
     _96(0x0000000080000100e000d800),        //make $r0 = 263008 (0x40360);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000e000),        //make $r0 = 263040 (0x40380);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 17368 <f3+0xa8>;;
     _96(0x0000000080000100e000d800),        //make $r0 = 263008 (0x40360);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000e000),        //make $r0 = 263040 (0x40380);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17368 <f3+0xa8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 1736c <f3+0xac>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f4: list_I = 
 [|
     _96(0x0000000080000100e000e800),        //make $r0 = 263072 (0x403a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x080003c0),        //cb.dnez $r0? 173d0 <f4+0x58>;;
     _96(0x0000000080000100e000e800),        //make $r0 = 263072 (0x403a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000008f8000000),        //andw $r0 = $r0, 8192 (0x2000);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 173d0 <f4+0x58>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 173d4 <f4+0x5c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g1: list_I = 
 [|
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000f800),        //make $r0 = 263136 (0x403e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 17470 <g1+0x90>;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000100e000f800),        //make $r0 = 263136 (0x403e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17470 <g1+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17474 <g1+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g2: list_I = 
 [|
     _96(0x0000000080000101e0000000),        //make $r0 = 263168 (0x40400);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0000800),        //make $r0 = 263200 (0x40420);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 17510 <g2+0x90>;;
     _96(0x0000000080000101e0000000),        //make $r0 = 263168 (0x40400);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0000800),        //make $r0 = 263200 (0x40420);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17510 <g2+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17514 <g2+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g3: list_I = 
 [|
     _96(0x0000000080000101e0001000),        //make $r0 = 263232 (0x40440);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0001800),        //make $r0 = 263264 (0x40460);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 175c8 <g3+0xa8>;;
     _96(0x0000000080000101e0001000),        //make $r0 = 263232 (0x40440);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0001800),        //make $r0 = 263264 (0x40460);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 175c8 <g3+0xa8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 175cc <g3+0xac>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g4: list_I = 
 [|
     _96(0x0000000080000101e0002000),        //make $r0 = 263296 (0x40480);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0002800),        //make $r0 = 263328 (0x404a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000780),        //cb.wnez $r0? 176b8 <g4+0xe0>;;
     _96(0x0000000080000101e0002000),        //make $r0 = 263296 (0x40480);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0002800),        //make $r0 = 263328 (0x404a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 176b8 <g4+0xe0>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 176bc <g4+0xe4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g5: list_I = 
 [|
     _96(0x0000000080000101e0003000),        //make $r0 = 263360 (0x404c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0003800),        //make $r0 = 263392 (0x404e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000780),        //cb.wnez $r0? 177a8 <g5+0xe0>;;
     _96(0x0000000080000101e0003000),        //make $r0 = 263360 (0x404c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0003800),        //make $r0 = 263392 (0x404e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 177a8 <g5+0xe0>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 177ac <g5+0xe4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g6: list_I = 
 [|
     _96(0x0000000080000101e0004000),        //make $r0 = 263424 (0x40500);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0004800),        //make $r0 = 263456 (0x40520);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17890 <g6+0xd8>;;
     _96(0x0000000080000101e0004000),        //make $r0 = 263424 (0x40500);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0004800),        //make $r0 = 263456 (0x40520);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17890 <g6+0xd8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17894 <g6+0xdc>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let g7: list_I = 
 [|
     _96(0x0000000080000101e0005000),        //make $r0 = 263488 (0x40540);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0005800),        //make $r0 = 263520 (0x40560);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17978 <g7+0xd8>;;
     _96(0x0000000080000101e0005000),        //make $r0 = 263488 (0x40540);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0005800),        //make $r0 = 263520 (0x40560);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17978 <g7+0xd8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 1797c <g7+0xdc>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h1: list_I = 
 [|
     _96(0x0000000080000101e0006000),        //make $r0 = 263552 (0x40580);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0006800),        //make $r0 = 263584 (0x405a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 17a18 <h1+0x90>;;
     _96(0x0000000080000101e0006000),        //make $r0 = 263552 (0x40580);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0006800),        //make $r0 = 263584 (0x405a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17a18 <h1+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17a1c <h1+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h2: list_I = 
 [|
     _96(0x0000000080000101e0007000),        //make $r0 = 263616 (0x405c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0007800),        //make $r0 = 263648 (0x405e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000540),        //cb.wnez $r0? 17ab8 <h2+0x90>;;
     _96(0x0000000080000101e0007000),        //make $r0 = 263616 (0x405c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0007800),        //make $r0 = 263648 (0x405e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17ab8 <h2+0x90>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17abc <h2+0x94>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h3: list_I = 
 [|
     _96(0x0000000080000101e0008000),        //make $r0 = 263680 (0x40600);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fdc0),        //andw $r0 = $r0, -9 (0xfffffff7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0008800),        //make $r0 = 263712 (0x40620);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800f7c0),        //andw $r0 = $r0, -33 (0xffffffdf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 17b70 <h3+0xa8>;;
     _96(0x0000000080000101e0008000),        //make $r0 = 263680 (0x40600);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800efc0),        //andw $r0 = $r0, -65 (0xffffffbf);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000101e0008800),        //make $r0 = 263712 (0x40620);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800fbc0),        //andw $r0 = $r0, -17 (0xffffffef);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f001),        //sxhd $r1 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17b70 <h3+0xa8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17b74 <h3+0xac>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h4: list_I = 
 [|
     _96(0x0000000080000101e0009000),        //make $r0 = 263744 (0x40640);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0009800),        //make $r0 = 263776 (0x40660);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000780),        //cb.wnez $r0? 17c60 <h4+0xe0>;;
     _96(0x0000000080000101e0009000),        //make $r0 = 263744 (0x40640);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e0009800),        //make $r0 = 263776 (0x40660);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17c60 <h4+0xe0>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17c64 <h4+0xe4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h5: list_I = 
 [|
     _96(0x0000000080000101e000a000),        //make $r0 = 263808 (0x40680);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e000a800),        //make $r0 = 263840 (0x406a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000780),        //cb.wnez $r0? 17d50 <h5+0xe0>;;
     _96(0x0000000080000101e000a000),        //make $r0 = 263808 (0x40680);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800c000),        //andw $r0 = $r0, 3840 (0xf00);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e000a800),        //make $r0 = 263840 (0x406a0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78003c00),        //andw $r0 = $r0, 240 (0xf0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17d50 <h5+0xe0>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17d54 <h5+0xe4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h6: list_I = 
 [|
     _96(0x0000000080000101e000b000),        //make $r0 = 263872 (0x406c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e000b800),        //make $r0 = 263904 (0x406e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17e38 <h6+0xd8>;;
     _96(0x0000000080000101e000b000),        //make $r0 = 263872 (0x406c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e000b800),        //make $r0 = 263904 (0x406e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17e38 <h6+0xd8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17e3c <h6+0xdc>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let h7: list_I = 
 [|
     _96(0x0000000080000101e000c000),        //make $r0 = 263936 (0x40700);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6803d000),        //extfs $r0 = $r0, 13 (0xd), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e000c800),        //make $r0 = 263968 (0x40720);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x69031100),        //extfs $r0 = $r0, 17 (0x11), 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17f20 <h7+0xd8>;;
     _96(0x0000000080000101e000c000),        //make $r0 = 263936 (0x40700);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903b380),        //extfs $r0 = $r0, 27 (0x1b), 14 (0xe);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000ff800fc00),        //andw $r0 = $r0, 16368 (0x3ff0);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000101e000c800),        //make $r0 = 263968 (0x40720);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6903f480),        //extfs $r0 = $r0, 31 (0x1f), 18 (0x12);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000000ff800ffc0),        //andw $r0 = $r0, 16383 (0x3fff);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f800ffc0),        //andw $r0 = $r0, 1023 (0x3ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0000c0),        //cb.wnez $r0? 17f20 <h7+0xd8>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x10000002),        //goto 17f24 <h7+0xdc>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1ffffa39),        //call 16820 <a1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17f4c <main+0x1c>;;
     _32(0x18000088),        //call 18168 <abort>;;
     _32(0x1ffffa55),        //call 168a0 <a2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17f5c <main+0x2c>;;
     _32(0x18000084),        //call 18168 <abort>;;
     _32(0x1ffffa71),        //call 16920 <a3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17f6c <main+0x3c>;;
     _32(0x18000080),        //call 18168 <abort>;;
     _32(0x1ffffa93),        //call 169b8 <b1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17f7c <main+0x4c>;;
     _32(0x1800007c),        //call 18168 <abort>;;
     _32(0x1ffffaaf),        //call 16a38 <b2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17f8c <main+0x5c>;;
     _32(0x18000078),        //call 18168 <abort>;;
     _32(0x1ffffacb),        //call 16ab8 <b3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17f9c <main+0x6c>;;
     _32(0x18000074),        //call 18168 <abort>;;
     _32(0x1ffffaed),        //call 16b50 <c1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17fac <main+0x7c>;;
     _32(0x18000070),        //call 18168 <abort>;;
     _32(0x1ffffb0f),        //call 16be8 <c2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17fbc <main+0x8c>;;
     _32(0x1800006c),        //call 18168 <abort>;;
     _32(0x1ffffb31),        //call 16c80 <c3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17fcc <main+0x9c>;;
     _32(0x18000068),        //call 18168 <abort>;;
     _32(0x1ffffb5b),        //call 16d38 <d1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17fdc <main+0xac>;;
     _32(0x18000064),        //call 18168 <abort>;;
     _32(0x1ffffb7d),        //call 16dd0 <d2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17fec <main+0xbc>;;
     _32(0x18000060),        //call 18168 <abort>;;
     _32(0x1ffffb9f),        //call 16e68 <d3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17ffc <main+0xcc>;;
     _32(0x1800005c),        //call 18168 <abort>;;
     _32(0x1ffffbc9),        //call 16f20 <e1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1800c <main+0xdc>;;
     _32(0x18000058),        //call 18168 <abort>;;
     _32(0x1ffffbed),        //call 16fc0 <e2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1801c <main+0xec>;;
     _32(0x18000054),        //call 18168 <abort>;;
     _32(0x1ffffc11),        //call 17060 <e3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1802c <main+0xfc>;;
     _32(0x18000050),        //call 18168 <abort>;;
     _32(0x1ffffc3b),        //call 17118 <e4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1803c <main+0x10c>;;
     _32(0x1800004c),        //call 18168 <abort>;;
     _32(0x1ffffc51),        //call 17180 <f1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1804c <main+0x11c>;;
     _32(0x18000048),        //call 18168 <abort>;;
     _32(0x1ffffc75),        //call 17220 <f2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1805c <main+0x12c>;;
     _32(0x18000044),        //call 18168 <abort>;;
     _32(0x1ffffc99),        //call 172c0 <f3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1806c <main+0x13c>;;
     _32(0x18000040),        //call 18168 <abort>;;
     _32(0x1ffffcc3),        //call 17378 <f4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1807c <main+0x14c>;;
     _32(0x1800003c),        //call 18168 <abort>;;
     _32(0x1ffffcd9),        //call 173e0 <g1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1808c <main+0x15c>;;
     _32(0x18000038),        //call 18168 <abort>;;
     _32(0x1ffffcfd),        //call 17480 <g2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1809c <main+0x16c>;;
     _32(0x18000034),        //call 18168 <abort>;;
     _32(0x1ffffd21),        //call 17520 <g3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 180ac <main+0x17c>;;
     _32(0x18000030),        //call 18168 <abort>;;
     _32(0x1ffffd4b),        //call 175d8 <g4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 180bc <main+0x18c>;;
     _32(0x1800002c),        //call 18168 <abort>;;
     _32(0x1ffffd83),        //call 176c8 <g5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 180cc <main+0x19c>;;
     _32(0x18000028),        //call 18168 <abort>;;
     _32(0x1ffffdbb),        //call 177b8 <g6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 180dc <main+0x1ac>;;
     _32(0x18000024),        //call 18168 <abort>;;
     _32(0x1ffffdf1),        //call 178a0 <g7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 180ec <main+0x1bc>;;
     _32(0x18000020),        //call 18168 <abort>;;
     _32(0x1ffffe27),        //call 17988 <h1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 180fc <main+0x1cc>;;
     _32(0x1800001c),        //call 18168 <abort>;;
     _32(0x1ffffe4b),        //call 17a28 <h2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1810c <main+0x1dc>;;
     _32(0x18000018),        //call 18168 <abort>;;
     _32(0x1ffffe6f),        //call 17ac8 <h3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1811c <main+0x1ec>;;
     _32(0x18000014),        //call 18168 <abort>;;
     _32(0x1ffffe99),        //call 17b80 <h4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1812c <main+0x1fc>;;
     _32(0x18000010),        //call 18168 <abort>;;
     _32(0x1ffffed1),        //call 17c70 <h5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1813c <main+0x20c>;;
     _32(0x1800000c),        //call 18168 <abort>;;
     _32(0x1fffff09),        //call 17d60 <h6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1814c <main+0x21c>;;
     _32(0x18000008),        //call 18168 <abort>;;
     _32(0x1fffff3f),        //call 17e48 <h7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 1815c <main+0x22c>;;
     _32(0x18000004),        //call 18168 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 18188 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 18588 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 1a260 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 18720 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000106e000b000),        //make $r0 = 268992 (0x41ac0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 181c4 <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 1a260 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010111111100110000; //0x17f30
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(a1, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(a2, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(a3, 0b00010110100100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(b1, 0b00010110100110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(b2, 0b00010110101000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(b3, 0b00010110101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(c1, 0b00010110101101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(c2, 0b00010110101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(c3, 0b00010110110010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(d1, 0b00010110110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(d2, 0b00010110110111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(d3, 0b00010110111001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(e1, 0b00010110111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(e2, 0b00010110111111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(e3, 0b00010111000001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(e4, 0b00010111000100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f1, 0b00010111000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f2, 0b00010111001000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f3, 0b00010111001011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f4, 0b00010111001101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g1, 0b00010111001111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g2, 0b00010111010010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g3, 0b00010111010100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g4, 0b00010111010111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g5, 0b00010111011011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g6, 0b00010111011110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(g7, 0b00010111100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h1, 0b00010111100110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h2, 0b00010111101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h3, 0b00010111101011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h4, 0b00010111101110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h5, 0b00010111110001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h6, 0b00010111110101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(h7, 0b00010111111001001000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010111111100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00011000000101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit, 0b00011000000110001000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000017f30;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
