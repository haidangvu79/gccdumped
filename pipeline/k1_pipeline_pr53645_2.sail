// executing pipeline pr53645_2.c.out.dumped test 
val k1_pipeline_pr53645_2: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pipeline_pr53645_2() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let uq44444444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur44444444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq44444444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr44444444: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq1428166432128: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3082),        //srlw $r2 = $r2, 2 (0x2);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3042),        //srlw $r2 = $r2, 1 (0x1);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a30c2),        //srlw $r2 = $r2, 3 (0x3);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7b0231c0),        //srlw $r0 = $r0, 7 (0x7);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur1428166432128: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780800c2),        //andw $r2 = $r2, 3 (0x3);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x78080042),        //andw $r2 = $r2, 1 (0x1);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780801c2),        //andw $r2 = $r2, 7 (0x7);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x780803c2),        //andw $r2 = $r2, 15 (0xf);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x78080fc2),        //andw $r2 = $r2, 63 (0x3f);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x780807c2),        //andw $r2 = $r2, 31 (0x1f);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x60240000),        //make $r9 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq1428166432128: list_I = 
 [|
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0x28550a0c),        //so 40 (0x28)[$r12] = $r20r21r22r23;;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741120c),        //sd 72 (0x48)[$r12] = $r16;;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x2705140c),        //sd 80 (0x50)[$r12] = $r1;;
     _32(0x3800140c),        //ld $r0 = 80 (0x50)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x645ff002),        //zxhd $r23 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3082),        //srsw $r2 = $r2, 2 (0x2);;
     _32(0x645bf002),        //zxhd $r22 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3042),        //srsw $r2 = $r2, 1 (0x1);;
     _32(0x6457f002),        //zxhd $r21 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a30c2),        //srsw $r2 = $r2, 3 (0x3);;
     _32(0x6453f002),        //zxhd $r20 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3102),        //srsw $r2 = $r2, 4 (0x4);;
     _32(0x644ff002),        //zxhd $r19 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3182),        //srsw $r2 = $r2, 6 (0x6);;
     _32(0x644bf002),        //zxhd $r18 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x780a3142),        //srsw $r2 = $r2, 5 (0x5);;
     _32(0x643bf002),        //zxhd $r14 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x60040080),        //make $r1 = 128 (0x80);;
     _32(0x18001a2d),        //call 1d8b8 <__divdi3>;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f017),        //insf $r0 = $r23, 15 (0xf), 0 (0x0);;
     _32(0x6103f416),        //insf $r0 = $r22, 31 (0x1f), 16 (0x10);;
     _32(0x6203f815),        //insf $r0 = $r21, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc14),        //insf $r0 = $r20, 63 (0x3f), 48 (0x30);;
     _32(0x6007f013),        //insf $r1 = $r19, 15 (0xf), 0 (0x0);;
     _32(0x6107f412),        //insf $r1 = $r18, 31 (0x1f), 16 (0x10);;
     _32(0x6207f80e),        //insf $r1 = $r14, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x3c540a0c),        //lo $r20r21r22r23 = 40 (0x28)[$r12];;
     _32(0x3840120c),        //ld $r16 = 72 (0x48)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130180c),        //addd $r12 = $r12, 96 (0x60);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let sr1428166432128: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3782),        //srlw $r2 = $r2, 30 (0x1e);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c00c3),        //andw $r3 = $r3, 3 (0x3);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a37c2),        //srlw $r2 = $r2, 31 (0x1f);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0043),        //andw $r3 = $r3, 1 (0x1);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3742),        //srlw $r2 = $r2, 29 (0x1d);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c01c3),        //andw $r3 = $r3, 7 (0x7);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3702),        //srlw $r2 = $r2, 28 (0x1c);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c03c3),        //andw $r3 = $r3, 15 (0xf);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a3682),        //srlw $r2 = $r2, 26 (0x1a);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c0fc3),        //andw $r3 = $r3, 63 (0x3f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _32(0x7a0c0002),        //copyw $r3 = $r2;;
     _32(0x7a0a37c3),        //sraw $r2 = $r3, 31 (0x1f);;
     _32(0x7b0a36c2),        //srlw $r2 = $r2, 27 (0x1b);;
     _32(0x710d1083),        //addw $r3 = $r3, $r2;;
     _32(0x780c07c3),        //andw $r3 = $r3, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023640),        //srlw $r0 = $r0, 25 (0x19);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78041fc1),        //andw $r1 = $r1, 127 (0x7f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x60240000),        //make $r9 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq33333333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _96(0x0555555582aaaaaae004aac0),        //make $r1 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur33333333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6503f400),        //extfz $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6603f800),        //extfz $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703fc00),        //extfz $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6407f001),        //zxhd $r1 = $r1;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6503f401),        //extfz $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6603f801),        //extfz $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x593c1001),        //muludt $r14r15 = $r1, $r0;;
     _32(0x6a00000f),        //copyd $r0 = $r15;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq33333333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00155555e00c5580),        //make $r3 = 1431655766 (0x55555556);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr33333333: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq65656565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0666666683333333e00c3340),        //make $r3 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0666666683333333e00c3340),        //make $r3 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0666666683333333e00c3340),        //make $r3 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _96(0x0666666683333333e0043340),        //make $r1 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur65656565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6503f400),        //extfz $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6603f800),        //extfz $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703fc00),        //extfz $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6407f001),        //zxhd $r1 = $r1;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6503f401),        //extfz $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6603f801),        //extfz $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x593c1001),        //muludt $r14r15 = $r1, $r0;;
     _32(0x6a00000f),        //copyd $r0 = $r15;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq65656565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x000aaaaae00caac0),        //make $r3 = 715827883 (0x2aaaaaab);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf402),        //extfs $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00199999e00c99c0),        //make $r3 = 1717986919 (0x66666667);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0e3043),        //sraw $r3 = $r3, 1 (0x1);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf802),        //extfs $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x000aaaaae00caac0),        //make $r3 = 715827883 (0x2aaaaaab);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6b0bfc02),        //extfs $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00199999e00c99c0),        //make $r3 = 1717986919 (0x66666667);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0e3043),        //sraw $r3 = $r3, 1 (0x1);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x000aaaaae00caac0),        //make $r3 = 715827883 (0x2aaaaaab);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x690bf403),        //extfs $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x00199999e00c99c0),        //make $r3 = 1717986919 (0x66666667);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0e3043),        //sraw $r3 = $r3, 1 (0x1);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x6a0bf803),        //extfs $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x680bf002),        //sxhd $r2 = $r2;;
     _64(0x000aaaaae00caac0),        //make $r3 = 715827883 (0x2aaaaaab);;
     _32(0x580c30c2),        //mulwd $r3 = $r2, $r3;;
     _32(0x7b0e2803),        //srld $r3 = $r3, 32 (0x20);;
     _32(0x7a0a37c2),        //sraw $r2 = $r2, 31 (0x1f);;
     _32(0x750910c2),        //sbfw $r2 = $r2, $r3;;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00199999e00499c0),        //make $r1 = 1717986919 (0x66666667);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063041),        //sraw $r1 = $r1, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr65656565: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a123040),        //sraw $r4 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a123040),        //sraw $r4 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a123040),        //sraw $r4 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq14141461461414: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0555555582aaaaaae00caac0),        //make $r3 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _96(0x0249249282492492e00c4940),        //make $r3 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c10c2),        //muludt $r2r3 = $r2, $r3;;
     _32(0x6a080003),        //copyd $r2 = $r3;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0044940),        //make $r1 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur14141461461414: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141100),        //muludt $r4r5 = $r0, $r4;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6503f400),        //extfz $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141100),        //muludt $r4r5 = $r0, $r4;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6603f800),        //extfz $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141100),        //muludt $r4r5 = $r0, $r4;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703fc00),        //extfz $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6407f001),        //zxhd $r1 = $r1;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141100),        //muludt $r4r5 = $r0, $r4;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6503f401),        //extfz $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b122080),        //srld $r4 = $r0, 2 (0x2);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010100),        //addd $r0 = $r0, $r4;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6603f801),        //extfz $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0104940),        //make $r4 = 5270498306774157605 (0x4924924924924925);;
     _32(0x593c1100),        //muludt $r14r15 = $r0, $r4;;
     _32(0x6a00000f),        //copyd $r0 = $r15;;
     _32(0x7b122040),        //srld $r4 = $r0, 1 (0x1);;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sq14141461461414: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr14141461461414: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b122800),        //srld $r4 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011100),        //addw $r0 = $r0, $r4;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a1230c0),        //sraw $r4 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75111100),        //sbfw $r4 = $r0, $r4;;
     _32(0x7a000004),        //copyw $r0 = $r4;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011004),        //sbfw $r0 = $r4, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let uq77777777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x591410c2),        //muludt $r4r5 = $r2, $r3;;
     _32(0x6a0c0005),        //copyd $r3 = $r5;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6427f002),        //zxhd $r9 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf402),        //extfz $r2 = $r2, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x591410c2),        //muludt $r4r5 = $r2, $r3;;
     _32(0x6a0c0005),        //copyd $r3 = $r5;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6423f002),        //zxhd $r8 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf802),        //extfz $r2 = $r2, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x591410c2),        //muludt $r4r5 = $r2, $r3;;
     _32(0x6a0c0005),        //copyd $r3 = $r5;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x641ff002),        //zxhd $r7 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x670bfc02),        //extfz $r2 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x591410c2),        //muludt $r4r5 = $r2, $r3;;
     _32(0x6a0c0005),        //copyd $r3 = $r5;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x641bf002),        //zxhd $r6 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x640bf003),        //zxhd $r2 = $r3;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x591410c2),        //muludt $r4r5 = $r2, $r3;;
     _32(0x6a0c0005),        //copyd $r3 = $r5;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6417f002),        //zxhd $r5 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x650bf403),        //extfz $r2 = $r3, 31 (0x1f), 16 (0x10);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x592c10c2),        //muludt $r10r11 = $r2, $r3;;
     _32(0x6a0c000b),        //copyd $r3 = $r11;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x6413f002),        //zxhd $r4 = $r2;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x660bf803),        //extfz $r2 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x640bf002),        //zxhd $r2 = $r2;;
     _96(0x0124924981249249e00c24c0),        //make $r3 = 2635249153387078803 (0x2492492492492493);;
     _32(0x592c10c2),        //muludt $r10r11 = $r2, $r3;;
     _32(0x6a0c000b),        //copyd $r3 = $r11;;
     _32(0x75090083),        //sbfd $r2 = $r3, $r2;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71090083),        //addd $r2 = $r3, $r2;;
     _32(0x7b0a2082),        //srld $r2 = $r2, 2 (0x2);;
     _32(0x640ff002),        //zxhd $r3 = $r2;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x592c1040),        //muludt $r10r11 = $r0, $r1;;
     _32(0x6a04000b),        //copyd $r1 = $r11;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f009),        //insf $r0 = $r9, 15 (0xf), 0 (0x0);;
     _32(0x6103f408),        //insf $r0 = $r8, 31 (0x1f), 16 (0x10);;
     _32(0x6203f807),        //insf $r0 = $r7, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc06),        //insf $r0 = $r6, 63 (0x3f), 48 (0x30);;
     _32(0x6007f005),        //insf $r1 = $r5, 15 (0xf), 0 (0x0);;
     _32(0x6107f404),        //insf $r1 = $r4, 31 (0x1f), 16 (0x10);;
     _32(0x6207f803),        //insf $r1 = $r3, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let ur77777777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c100000),        //lq $r4r5 = 0 (0x0)[$r0];;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x75090040),        //sbfd $r2 = $r0, $r1;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x643bf000),        //zxhd $r14 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6503f400),        //extfz $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x642ff000),        //zxhd $r11 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6603f800),        //extfz $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6703fc00),        //extfz $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6407f001),        //zxhd $r1 = $r1;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6503f401),        //extfz $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6603f801),        //extfz $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000004),        //copyd $r0 = $r4;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x6703fc01),        //extfz $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00e),        //insf $r0 = $r14, 15 (0xf), 0 (0x0);;
     _32(0x6103f40b),        //insf $r0 = $r11, 31 (0x1f), 16 (0x10);;
     _32(0x6203f80a),        //insf $r0 = $r10, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc09),        //insf $r0 = $r9, 63 (0x3f), 48 (0x30);;
     _32(0x6007f008),        //insf $r1 = $r8, 15 (0xf), 0 (0x0);;
     _32(0x6107f407),        //insf $r1 = $r7, 31 (0x1f), 16 (0x10);;
     _32(0x6207f806),        //insf $r1 = $r6, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let sq77777777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let sr77777777: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x3c080000),        //lq $r2r3 = 0 (0x0)[$r0];;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x642bf000),        //zxhd $r10 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f400),        //extfs $r0 = $r0, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6427f000),        //zxhd $r9 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f800),        //extfs $r0 = $r0, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6423f000),        //zxhd $r8 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc00),        //extfs $r0 = $r0, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x641ff000),        //zxhd $r7 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6403f001),        //zxhd $r0 = $r1;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x641bf000),        //zxhd $r6 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6903f401),        //extfs $r0 = $r1, 31 (0x1f), 16 (0x10);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6417f000),        //zxhd $r5 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6a03f801),        //extfs $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a123081),        //sraw $r4 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75111101),        //sbfw $r4 = $r1, $r4;;
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051044),        //sbfw $r1 = $r4, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6413f000),        //zxhd $r4 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0x6b03fc01),        //extfs $r0 = $r1, 63 (0x3f), 48 (0x30);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x6003f00a),        //insf $r0 = $r10, 15 (0xf), 0 (0x0);;
     _32(0x6103f409),        //insf $r0 = $r9, 31 (0x1f), 16 (0x10);;
     _32(0x6203f808),        //insf $r0 = $r8, 47 (0x2f), 32 (0x20);;
     _32(0x6303fc07),        //insf $r0 = $r7, 63 (0x3f), 48 (0x30);;
     _32(0x6007f006),        //insf $r1 = $r6, 15 (0xf), 0 (0x0);;
     _32(0x6107f405),        //insf $r1 = $r5, 31 (0x1f), 16 (0x10);;
     _32(0x6207f804),        //insf $r1 = $r4, 47 (0x2f), 32 (0x20);;
     _32(0x6307fc02),        //insf $r1 = $r2, 63 (0x3f), 48 (0x30);;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x6a0c0001),        //copyd $r3 = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x28090000),        //sq 0 (0x0)[$r0] = $r2r3;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x10000781),        //goto 1b2ac <main+0x1e1c>;;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff4d7),        //call 16820 <uq44444444>;;
     _32(0x2804080c),        //lhz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 1952c <main+0x9c>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19530 <main+0xa0>;;
     _32(0x18001127),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 1959c <main+0x10c>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 195a0 <main+0x110>;;
     _32(0x1800110b),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 1960c <main+0x17c>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19610 <main+0x180>;;
     _32(0x180010ef),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 1967c <main+0x1ec>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19680 <main+0x1f0>;;
     _32(0x180010d3),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff4a3),        //call 16928 <ur44444444>;;
     _32(0x2804080c),        //lhz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19704 <main+0x274>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19708 <main+0x278>;;
     _32(0x180010b1),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19774 <main+0x2e4>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19778 <main+0x2e8>;;
     _32(0x18001095),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 197e4 <main+0x354>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 197e8 <main+0x358>;;
     _32(0x18001079),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19854 <main+0x3c4>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19858 <main+0x3c8>;;
     _32(0x1800105d),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff52b),        //call 16d20 <uq1428166432128>;;
     _32(0x2804080c),        //lhz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 198d4 <main+0x444>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b0230c0),        //srlw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 198d8 <main+0x448>;;
     _32(0x1800103d),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023040),        //srlw $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19944 <main+0x4b4>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19948 <main+0x4b8>;;
     _32(0x18001021),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023100),        //srlw $r0 = $r0, 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 199b4 <main+0x524>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b0231c0),        //srlw $r0 = $r0, 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 199b8 <main+0x528>;;
     _32(0x18001005),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023140),        //srlw $r0 = $r0, 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19a24 <main+0x594>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023180),        //srlw $r0 = $r0, 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19a28 <main+0x598>;;
     _32(0x18000fe9),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff4f7),        //call 16e20 <ur1428166432128>;;
     _32(0x2800080c),        //lhz $r0 = 32 (0x20)[$r12];;
     _32(0x08000380),        //cb.dnez $r0? 19a84 <main+0x5f4>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780001c0),        //andw $r0 = $r0, 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19a88 <main+0x5f8>;;
     _32(0x18000fd1),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19af4 <main+0x664>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19af8 <main+0x668>;;
     _32(0x18000fb5),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780003c0),        //andw $r0 = $r0, 15 (0xf);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19b64 <main+0x6d4>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19b68 <main+0x6d8>;;
     _32(0x18000f99),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000380),        //cb.wnez $r0? 19bd4 <main+0x744>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19bd8 <main+0x748>;;
     _32(0x18000f7d),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff585),        //call 17208 <uq33333333>;;
     _32(0x2804080c),        //lhz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 19c84 <main+0x7f4>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19c88 <main+0x7f8>;;
     _32(0x18000f51),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 19d1c <main+0x88c>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19d20 <main+0x890>;;
     _32(0x18000f2b),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 19db4 <main+0x924>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19db8 <main+0x928>;;
     _32(0x18000f05),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 19e4c <main+0x9bc>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19e50 <main+0x9c0>;;
     _32(0x18000edf),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff551),        //call 173b0 <ur33333333>;;
     _32(0x280c080c),        //lhz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 19f1c <main+0xa8c>;;
     _32(0x280c098c),        //lhz $r3 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19f20 <main+0xa90>;;
     _32(0x18000eab),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c090c),        //lhz $r3 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 19fd4 <main+0xb44>;;
     _32(0x280c088c),        //lhz $r3 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19fd8 <main+0xb48>;;
     _32(0x18000e7d),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c0a0c),        //lhz $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1a08c <main+0xbfc>;;
     _32(0x280c0b8c),        //lhz $r3 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a090 <main+0xc00>;;
     _32(0x18000e4f),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c0b0c),        //lhz $r3 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1a144 <main+0xcb4>;;
     _32(0x280c0a8c),        //lhz $r3 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a148 <main+0xcb8>;;
     _32(0x18000e21),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff62f),        //call 17a20 <uq65656565>;;
     _32(0x2804080c),        //lhz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1a1f4 <main+0xd64>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0083340),        //make $r2 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a1f8 <main+0xd68>;;
     _32(0x18000df5),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1a28c <main+0xdfc>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0083340),        //make $r2 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a290 <main+0xe00>;;
     _32(0x18000dcf),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1a324 <main+0xe94>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0083340),        //make $r2 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a328 <main+0xe98>;;
     _32(0x18000da9),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1a3bc <main+0xf2c>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0083340),        //make $r2 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a3c0 <main+0xf30>;;
     _32(0x18000d83),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff5fb),        //call 17bc8 <ur65656565>;;
     _32(0x280c080c),        //lhz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1a490 <main+0x1000>;;
     _32(0x280c098c),        //lhz $r3 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a494 <main+0x1004>;;
     _32(0x18000d4e),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c090c),        //lhz $r3 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1a54c <main+0x10bc>;;
     _32(0x280c088c),        //lhz $r3 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a550 <main+0x10c0>;;
     _32(0x18000d1f),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c0a0c),        //lhz $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1a608 <main+0x1178>;;
     _32(0x280c0b8c),        //lhz $r3 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a60c <main+0x117c>;;
     _32(0x18000cf0),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c0b0c),        //lhz $r3 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1a6c4 <main+0x1234>;;
     _32(0x280c0a8c),        //lhz $r3 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0666666683333333e0003340),        //make $r0 = 14757395258967641293 (0xcccccccccccccccd);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a6c8 <main+0x1238>;;
     _32(0x18000cc1),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff6e5),        //call 18278 <uq14141461461414>;;
     _32(0x2804080c),        //lhz $r1 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1a778 <main+0x12e8>;;
     _32(0x2804098c),        //lhz $r1 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a77c <main+0x12ec>;;
     _32(0x18000c94),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2804090c),        //lhz $r1 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 1a818 <main+0x1388>;;
     _32(0x2804088c),        //lhz $r1 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a81c <main+0x138c>;;
     _32(0x18000c6c),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040a0c),        //lhz $r1 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 1a8b8 <main+0x1428>;;
     _32(0x28040b8c),        //lhz $r1 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a8bc <main+0x142c>;;
     _32(0x18000c44),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28040b0c),        //lhz $r1 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1a954 <main+0x14c4>;;
     _32(0x28040a8c),        //lhz $r1 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0080400),        //make $r2 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010002),        //addd $r0 = $r2, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a958 <main+0x14c8>;;
     _32(0x18000c1d),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff6b1),        //call 18438 <ur14141461461414>;;
     _32(0x280c080c),        //lhz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1aa30 <main+0x15a0>;;
     _32(0x280c098c),        //lhz $r3 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1aa34 <main+0x15a4>;;
     _32(0x18000be6),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c090c),        //lhz $r3 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1aaf8 <main+0x1668>;;
     _32(0x280c088c),        //lhz $r3 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1aafc <main+0x166c>;;
     _32(0x18000bb4),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c0a0c),        //lhz $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1abc0 <main+0x1730>;;
     _32(0x280c0b8c),        //lhz $r3 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1abc4 <main+0x1734>;;
     _32(0x18000b82),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x280c0b0c),        //lhz $r3 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x7b022041),        //srld $r0 = $r1, 1 (0x1);;
     _96(0x0249249282492492e0084940),        //make $r2 = 5270498306774157605 (0x4924924924924925);;
     _32(0x59141080),        //muludt $r4r5 = $r0, $r2;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2040),        //srld $r2 = $r0, 1 (0x1);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1ac84 <main+0x17f4>;;
     _32(0x280c0a8c),        //lhz $r3 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0555555582aaaaaae000aac0),        //make $r0 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x79022040),        //slld $r0 = $r0, 1 (0x1);;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b003),        //compw.eq $r0 = $r3, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ac88 <main+0x17f8>;;
     _32(0x18000b51),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff7b1),        //call 18b68 <uq77777777>;;
     _32(0x2808080c),        //lhz $r2 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1ad4c <main+0x18bc>;;
     _32(0x2808098c),        //lhz $r2 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ad50 <main+0x18c0>;;
     _32(0x18000b1f),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2808090c),        //lhz $r2 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1adfc <main+0x196c>;;
     _32(0x2808088c),        //lhz $r2 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ae00 <main+0x1970>;;
     _32(0x18000af3),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28080a0c),        //lhz $r2 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1aeac <main+0x1a1c>;;
     _32(0x28080b8c),        //lhz $r2 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1aeb0 <main+0x1a20>;;
     _32(0x18000ac7),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28080b0c),        //lhz $r2 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b002),        //compw.ne $r0 = $r2, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1af5c <main+0x1acc>;;
     _32(0x28080a8c),        //lhz $r2 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00424c0),        //make $r1 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141040),        //muludt $r4r5 = $r0, $r1;;
     _32(0x6a040005),        //copyd $r1 = $r5;;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x7b022080),        //srld $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b002),        //compw.eq $r0 = $r2, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1af60 <main+0x1ad0>;;
     _32(0x18000a9b),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040400),        //addd $r1 = $r0, 282640 (0x45010);;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x1ffff77d),        //call 18d70 <ur77777777>;;
     _32(0x280c080c),        //lhz $r3 = 32 (0x20)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x59141001),        //muludt $r4r5 = $r1, $r0;;
     _32(0x6a000005),        //copyd $r0 = $r5;;
     _32(0x75090040),        //sbfd $r2 = $r0, $r1;;
     _32(0x7b0a2042),        //srld $r2 = $r2, 1 (0x1);;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b003),        //compw.ne $r0 = $r3, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b040 <main+0x1bb0>;;
     _32(0x2810098c),        //lhz $r4 = 38 (0x26)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b004),        //compw.eq $r0 = $r4, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b044 <main+0x1bb4>;;
     _32(0x18000a62),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x2810090c),        //lhz $r4 = 36 (0x24)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b004),        //compw.ne $r0 = $r4, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b108 <main+0x1c78>;;
     _32(0x2810088c),        //lhz $r4 = 34 (0x22)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b004),        //compw.eq $r0 = $r4, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b10c <main+0x1c7c>;;
     _32(0x18000a30),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28100a0c),        //lhz $r4 = 40 (0x28)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b004),        //compw.ne $r0 = $r4, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b1d0 <main+0x1d40>;;
     _32(0x28100b8c),        //lhz $r4 = 46 (0x2e)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b004),        //compw.eq $r0 = $r4, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b1d4 <main+0x1d44>;;
     _32(0x180009fe),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x28100b0c),        //lhz $r4 = 44 (0x2c)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b004),        //compw.ne $r0 = $r4, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b298 <main+0x1e08>;;
     _32(0x28100a8c),        //lhz $r4 = 42 (0x2a)[$r12];;
     _96(0x0000000080000114e0040400),        //make $r1 = 282640 (0x45010);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _96(0x0124924981249249e00024c0),        //make $r0 = 2635249153387078803 (0x2492492492492493);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x75010043),        //sbfd $r0 = $r3, $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0x7b0a2080),        //srld $r2 = $r0, 2 (0x2);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7101b004),        //compw.eq $r0 = $r4, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b29c <main+0x1e0c>;;
     _32(0x180009cc),        //call 1d9c8 <abort>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c7e1f40),        //cb.wnez $r0? 194ac <main+0x1c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000090d),        //goto 1d6f8 <main+0x4268>;;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffedd4),        //call 16a30 <sq44444444>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1b360 <main+0x1ed0>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b364 <main+0x1ed4>;;
     _32(0x1800099a),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1b3e8 <main+0x1f58>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b3ec <main+0x1f5c>;;
     _32(0x18000978),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1b470 <main+0x1fe0>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b474 <main+0x1fe4>;;
     _32(0x18000956),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1b4f8 <main+0x2068>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b4fc <main+0x206c>;;
     _32(0x18000934),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffed90),        //call 16b58 <sr44444444>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1b5c0 <main+0x2130>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b5c4 <main+0x2134>;;
     _32(0x18000902),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1b670 <main+0x21e0>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b674 <main+0x21e4>;;
     _32(0x180008d6),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1b720 <main+0x2290>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b724 <main+0x2294>;;
     _32(0x180008aa),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1b7d0 <main+0x2340>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b7d4 <main+0x2344>;;
     _32(0x1800087e),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffedca),        //call 16f18 <sq1428166432128>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1b864 <main+0x23d4>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x780230c0),        //srsw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b868 <main+0x23d8>;;
     _32(0x18000859),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023040),        //srsw $r0 = $r0, 1 (0x1);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1b8ec <main+0x245c>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023080),        //srsw $r0 = $r0, 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b8f0 <main+0x2460>;;
     _32(0x18000837),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023100),        //srsw $r0 = $r0, 4 (0x4);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0004c0),        //cb.wnez $r0? 1b97c <main+0x24ec>;;
     _32(0x2838078c),        //lhz $r14 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x60040080),        //make $r1 = 128 (0x80);;
     _32(0x180007d5),        //call 1d8b8 <__divdi3>;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f00e),        //sxhd $r1 = $r14;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b980 <main+0x24f0>;;
     _32(0x18000813),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023140),        //srsw $r0 = $r0, 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000440),        //cb.wnez $r0? 1ba04 <main+0x2574>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x78023180),        //srsw $r0 = $r0, 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ba08 <main+0x2578>;;
     _32(0x180007f1),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffed91),        //call 17068 <sr1428166432128>;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x08000580),        //cb.dnez $r0? 1ba84 <main+0x25f4>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023740),        //srlw $r0 = $r0, 29 (0x1d);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780401c1),        //andw $r1 = $r1, 7 (0x7);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ba88 <main+0x25f8>;;
     _32(0x180007d1),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78040041),        //andw $r1 = $r1, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1bb34 <main+0x26a4>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023780),        //srlw $r0 = $r0, 30 (0x1e);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780400c1),        //andw $r1 = $r1, 3 (0x3);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bb38 <main+0x26a8>;;
     _32(0x180007a5),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023700),        //srlw $r0 = $r0, 28 (0x1c);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780403c1),        //andw $r1 = $r1, 15 (0xf);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1bbe4 <main+0x2754>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023640),        //srlw $r0 = $r0, 25 (0x19);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78041fc1),        //andw $r1 = $r1, 127 (0x7f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bbe8 <main+0x2758>;;
     _32(0x18000779),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b0236c0),        //srlw $r0 = $r0, 27 (0x1b);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x780407c1),        //andw $r1 = $r1, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1bc94 <main+0x2804>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x7b023680),        //srlw $r0 = $r0, 26 (0x1a);;
     _32(0x71051001),        //addw $r1 = $r1, $r0;;
     _32(0x78040fc1),        //andw $r1 = $r1, 63 (0x3f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bc98 <main+0x2808>;;
     _32(0x1800074d),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffee4d),        //call 175e8 <sq33333333>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1bd5c <main+0x28cc>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bd60 <main+0x28d0>;;
     _32(0x1800071b),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1be0c <main+0x297c>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1be10 <main+0x2980>;;
     _32(0x180006ef),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1bebc <main+0x2a2c>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bec0 <main+0x2a30>;;
     _32(0x180006c3),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1bf6c <main+0x2adc>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bf70 <main+0x2ae0>;;
     _32(0x18000697),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffee09),        //call 177b0 <sr33333333>;;
     _32(0x280c040c),        //lhz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0006c0),        //cb.wnez $r0? 1c05c <main+0x2bcc>;;
     _32(0x280c058c),        //lhz $r3 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c060 <main+0x2bd0>;;
     _32(0x1800065b),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c050c),        //lhz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0006c0),        //cb.wnez $r0? 1c134 <main+0x2ca4>;;
     _32(0x280c048c),        //lhz $r3 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c138 <main+0x2ca8>;;
     _32(0x18000625),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c060c),        //lhz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0006c0),        //cb.wnez $r0? 1c20c <main+0x2d7c>;;
     _32(0x280c078c),        //lhz $r3 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c210 <main+0x2d80>;;
     _32(0x180005ef),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c070c),        //lhz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0006c0),        //cb.wnez $r0? 1c2e4 <main+0x2e54>;;
     _32(0x280c068c),        //lhz $r3 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00155555e0005580),        //make $r0 = 1431655766 (0x55555556);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c2e8 <main+0x2e58>;;
     _32(0x180005b9),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffeec3),        //call 17e10 <sq65656565>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1c3b0 <main+0x2f20>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00199999e00499c0),        //make $r1 = 1717986919 (0x66666667);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063041),        //sraw $r1 = $r1, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c3b4 <main+0x2f24>;;
     _32(0x18000586),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1c464 <main+0x2fd4>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00199999e00499c0),        //make $r1 = 1717986919 (0x66666667);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063041),        //sraw $r1 = $r1, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c468 <main+0x2fd8>;;
     _32(0x18000559),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1c518 <main+0x3088>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00199999e00499c0),        //make $r1 = 1717986919 (0x66666667);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063041),        //sraw $r1 = $r1, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c51c <main+0x308c>;;
     _32(0x1800052c),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0005c0),        //cb.wnez $r0? 1c5cc <main+0x313c>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x00199999e00499c0),        //make $r1 = 1717986919 (0x66666667);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063041),        //sraw $r1 = $r1, 1 (0x1);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c5d0 <main+0x3140>;;
     _32(0x180004ff),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffee7f),        //call 17fe8 <sr65656565>;;
     _32(0x280c040c),        //lhz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1c6c4 <main+0x3234>;;
     _32(0x280c058c),        //lhz $r3 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c6c8 <main+0x3238>;;
     _32(0x180004c1),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c050c),        //lhz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1c7a4 <main+0x3314>;;
     _32(0x280c048c),        //lhz $r3 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c7a8 <main+0x3318>;;
     _32(0x18000489),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c060c),        //lhz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1c884 <main+0x33f4>;;
     _32(0x280c078c),        //lhz $r3 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c888 <main+0x33f8>;;
     _32(0x18000451),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c070c),        //lhz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1c964 <main+0x34d4>;;
     _32(0x280c068c),        //lhz $r3 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x00199999e00099c0),        //make $r0 = 1717986919 (0x66666667);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a3040),        //sraw $r2 = $r0, 1 (0x1);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c968 <main+0x34d8>;;
     _32(0x18000419),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffef49),        //call 186a8 <sq14141461461414>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1ca34 <main+0x35a4>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ca38 <main+0x35a8>;;
     _32(0x180003e5),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1caf4 <main+0x3664>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1caf8 <main+0x3668>;;
     _32(0x180003b5),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1cbb4 <main+0x3724>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cbb8 <main+0x3728>;;
     _32(0x18000385),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1cc6c <main+0x37dc>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x000aaaaae004aac0),        //make $r1 = 715827883 (0x2aaaaaab);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cc70 <main+0x37e0>;;
     _32(0x18000357),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffef07),        //call 188a8 <sr14141461461414>;;
     _32(0x280c040c),        //lhz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1cd6c <main+0x38dc>;;
     _32(0x280c058c),        //lhz $r3 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cd70 <main+0x38e0>;;
     _32(0x18000317),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c050c),        //lhz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000780),        //cb.wnez $r0? 1ce5c <main+0x39cc>;;
     _32(0x280c048c),        //lhz $r3 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ce60 <main+0x39d0>;;
     _32(0x180002db),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c060c),        //lhz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000780),        //cb.wnez $r0? 1cf4c <main+0x3abc>;;
     _32(0x280c078c),        //lhz $r3 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cf50 <main+0x3ac0>;;
     _32(0x1800029f),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c070c),        //lhz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x07e49249e00024ff),        //make $r0 = -1840700269 (0xffffffff92492493);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x790230c0),        //sllw $r0 = $r0, 3 (0x3);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d034 <main+0x3ba4>;;
     _32(0x280c068c),        //lhz $r3 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x000aaaaae000aac0),        //make $r0 = 715827883 (0x2aaaaaab);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b0a2800),        //srld $r2 = $r0, 32 (0x20);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d038 <main+0x3ba8>;;
     _32(0x18000265),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffefe7),        //call 18ff0 <sq77777777>;;
     _32(0x2808040c),        //lhz $r2 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1d10c <main+0x3c7c>;;
     _32(0x2808058c),        //lhz $r2 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d110 <main+0x3c80>;;
     _32(0x1800022f),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808050c),        //lhz $r2 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1d1cc <main+0x3d3c>;;
     _32(0x2808048c),        //lhz $r2 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d1d0 <main+0x3d40>;;
     _32(0x180001ff),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808060c),        //lhz $r2 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1d28c <main+0x3dfc>;;
     _32(0x2808078c),        //lhz $r2 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d290 <main+0x3e00>;;
     _32(0x180001cf),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x2808070c),        //lhz $r2 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000600),        //cb.wnez $r0? 1d34c <main+0x3ebc>;;
     _32(0x2808068c),        //lhz $r2 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f002),        //sxhd $r1 = $r2;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d350 <main+0x3ec0>;;
     _32(0x1800019f),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _96(0x0000000080000114e1040c00),        //addd $r1 = $r0, 282672 (0x45030);;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x1fffefa5),        //call 19200 <sr77777777>;;
     _32(0x280c040c),        //lhz $r3 = 16 (0x10)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d444 <main+0x3fb4>;;
     _32(0x280c058c),        //lhz $r3 = 22 (0x16)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000180),        //addd $r0 = $r0, 6 (0x6);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d448 <main+0x3fb8>;;
     _32(0x18000161),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c050c),        //lhz $r3 = 20 (0x14)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000100),        //addd $r0 = $r0, 4 (0x4);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d524 <main+0x4094>;;
     _32(0x280c048c),        //lhz $r3 = 18 (0x12)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000080),        //addd $r0 = $r0, 2 (0x2);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d528 <main+0x4098>;;
     _32(0x18000129),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c060c),        //lhz $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000200),        //addd $r0 = $r0, 8 (0x8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d604 <main+0x4174>;;
     _32(0x280c078c),        //lhz $r3 = 30 (0x1e)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000380),        //addd $r0 = $r0, 14 (0xe);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d608 <main+0x4178>;;
     _32(0x180000f1),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x280c070c),        //lhz $r3 = 28 (0x1c)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d6e4 <main+0x4254>;;
     _32(0x280c068c),        //lhz $r3 = 26 (0x1a)[$r12];;
     _96(0x0000000080000114e0040c00),        //make $r1 = 282672 (0x45030);;
     _32(0x34000f0c),        //lws $r0 = 60 (0x3c)[$r12];;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x61000280),        //addd $r0 = $r0, 10 (0xa);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _64(0x07e49249e00424ff),        //make $r1 = -1840700269 (0xffffffff92492493);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a3081),        //sraw $r2 = $r1, 2 (0x2);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x790630c1),        //sllw $r1 = $r1, 3 (0x3);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6807f003),        //sxhd $r1 = $r3;;
     _32(0x6803f000),        //sxhd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d6e8 <main+0x4258>;;
     _32(0x180000b9),        //call 1d9c8 <abort>;;
     _32(0x6100040c),        //addd $r0 = $r12, 16 (0x10);;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c7dbc40),        //cb.wnez $r0? 1b2c8 <main+0x1e38>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let __udivdi3: list_I = 
 [|
     _32(0x88800641),        //cb.deqz $r1? 1d784 <__udivdi3+0x64>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000503),        //cb.dnez $r3? 1d780 <__udivdi3+0x60>;;
     _32(0xf00e2001),        //clzd $r3 = $r1
     _32(0x70122002),        //clzd $r4 = $r2;;
     _32(0x751110c4),        //sbfw $r4 = $r4, $r3;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0x760da042),        //compd.ltu $r3 = $r2, $r1;;
     _32(0x08000103),        //cb.dnez $r3? 1d758 <__udivdi3+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x75090081),        //sbfd $r2 = $r1, $r2;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x0e000284),        //cb.wlez $r4? 1d780 <__udivdi3+0x60>;;
     _32(0xe0140001),        //make $r5 = 1 (0x1)
     _32(0xfa0c0004),        //copyw $r3 = $r4
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x79126105),        //slld $r4 = $r5, $r4;;
     _32(0x6110ffc4),        //addd $r4 = $r4, -1 (0xffffffff);;
     _32(0x0f000083),        //loopdo $r3, 1d778 <__udivdi3+0x58>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x78090084),        //andd $r2 = $r4, $r2;;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a3e0000000f0041300),        //pcrel $r1 = 166988 (0x28c4c)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 1d780 <__udivdi3+0x60>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __umoddi3: list_I = 
 [|
     _32(0x888004c1),        //cb.deqz $r1? 1d7f4 <__umoddi3+0x4c>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x080003c3),        //cb.dnez $r3? 1d7f0 <__umoddi3+0x48>;;
     _32(0xf0022000),        //clzd $r0 = $r0
     _32(0x700e2001),        //clzd $r3 = $r1;;
     _32(0x750d10c0),        //sbfw $r3 = $r0, $r3;;
     _32(0x790660c1),        //slld $r1 = $r1, $r3;;
     _32(0xf611a042),        //compd.ltu $r4 = $r2, $r1
     _32(0xf5010081),        //sbfd $r0 = $r1, $r2
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x710a0004),        //cmoved.deqz $r4? $r2 = $r0;;
     _32(0x8e000183),        //cb.wlez $r3? 1d7f0 <__umoddi3+0x48>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x7a000003),        //copyw $r0 = $r3;;
     _32(0x0f000080),        //loopdo $r0, 1d7ec <__umoddi3+0x44>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x7b0260c2),        //srld $r0 = $r2, $r3;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a2e0000000f004f700),        //pcrel $r1 = 166876 (0x28bdc)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 1d7f0 <__umoddi3+0x48>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __udivmoddi4: list_I = 
 [|
     _32(0x88800801),        //cb.deqz $r1? 1d898 <__udivmoddi4+0x80>
     _32(0xf0162001),        //clzd $r5 = $r1
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0xf0122003),        //clzd $r4 = $r3
     _32(0x7601a040),        //compd.ltu $r0 = $r0, $r1;;
     _32(0x75111144),        //sbfw $r4 = $r4, $r5;;
     _32(0x88000580),        //cb.dnez $r0? 1d888 <__udivmoddi4+0x70>
     _32(0x79166101),        //slld $r5 = $r1, $r4;;
     _32(0xf605a143),        //compd.ltu $r1 = $r3, $r5
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000101),        //cb.dnez $r1? 1d850 <__udivmoddi4+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c5),        //sbfd $r3 = $r5, $r3;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x8e000304),        //cb.wlez $r4? 1d880 <__udivmoddi4+0x68>
     _32(0xe0180001),        //make $r6 = 1 (0x1)
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0xf91a6106),        //slld $r6 = $r6, $r4
     _32(0xfb162045),        //srld $r5 = $r5, 1 (0x1)
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000081),        //loopdo $r1, 1d874 <__udivmoddi4+0x5c>;;
     _32(0x700d00c5),        //stsud $r3 = $r5, $r3;;
     _32(0xf81500c6),        //andd $r5 = $r6, $r3
     _32(0x7b066103),        //srld $r1 = $r3, $r4;;
     _32(0x71010140),        //addd $r0 = $r0, $r5;;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _32(0xea040003),        //copyd $r1 = $r3
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _96(0x800000a2e0000000f00cce00),        //pcrel $r3 = 166712 (0x28b38)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd03),        //cb.dnez $r3? 1d880 <__udivmoddi4+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __divdi3: list_I = 
 [|
     _32(0x88800781),        //cb.deqz $r1? 1d930 <__divdi3+0x78>
     _32(0xe40c0000),        //absd $r3 = $r0
     _32(0xe4100001),        //absd $r4 = $r1
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xf01a2003),        //clzd $r6 = $r3
     _32(0xf615a103),        //compd.ltu $r5 = $r3, $r4
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x080004c5),        //cb.dnez $r5? 1d920 <__divdi3+0x68>;;
     _32(0x70162004),        //clzd $r5 = $r4;;
     _32(0x75191146),        //sbfw $r6 = $r6, $r5;;
     _32(0x79126184),        //slld $r4 = $r4, $r6;;
     _32(0x7615a103),        //compd.ltu $r5 = $r3, $r4;;
     _32(0x08000105),        //cb.dnez $r5? 1d8f8 <__divdi3+0x40>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c4),        //sbfd $r3 = $r4, $r3;;
     _32(0x79026180),        //slld $r0 = $r0, $r6;;
     _32(0x0e000286),        //cb.wlez $r6? 1d920 <__divdi3+0x68>;;
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xfa140006),        //copyw $r5 = $r6
     _32(0x7b122044),        //srld $r4 = $r4, 1 (0x1);;
     _32(0x791a6187),        //slld $r6 = $r7, $r6;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000085),        //loopdo $r5, 1d918 <__divdi3+0x60>;;
     _32(0x700d00c4),        //stsud $r3 = $r4, $r3;;
     _32(0x780d00c6),        //andd $r3 = $r6, $r3;;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0xfc090042),        //xord $r2 = $r2, $r1
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a2e0000000f00ca800),        //pcrel $r3 = 166560 (0x28aa0)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd83),        //cb.dnez $r3? 1d920 <__divdi3+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __moddi3: list_I = 
 [|
     _32(0x88800581),        //cb.deqz $r1? 1d9a8 <__moddi3+0x58>
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xe4000000),        //absd $r0 = $r0
     _32(0x64040001),        //absd $r1 = $r1;;
     _32(0xf0122001),        //clzd $r4 = $r1
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x08000343),        //cb.dnez $r3? 1d99c <__moddi3+0x4c>;;
     _32(0x700e2000),        //clzd $r3 = $r0;;
     _32(0x75111103),        //sbfw $r4 = $r3, $r4;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0xf615a040),        //compd.ltu $r5 = $r0, $r1
     _32(0xf50d0001),        //sbfd $r3 = $r1, $r0
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x8e000184),        //cb.wlez $r4? 1d99c <__moddi3+0x4c>
     _32(0x710200c5),        //cmoved.deqz $r5? $r0 = $r3;;
     _32(0x7a0c0004),        //copyw $r3 = $r4;;
     _32(0x0f000083),        //loopdo $r3, 1d998 <__moddi3+0x48>;;
     _32(0x70010001),        //stsud $r0 = $r1, $r0;;
     _32(0x7b026100),        //srld $r0 = $r0, $r4;;
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a2e0000000f0048a00),        //pcrel $r1 = 166440 (0x28a28)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffdc1),        //cb.dnez $r1? 1d99c <__moddi3+0x4c>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 1dda0 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 1f8d0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let __libc_fini_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x800000f4a749040ce0480000),        //make $r18 = 249856 (0x3d000)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _96(0x800000f4a739020ce5380012),        //sbfd $r14 = $r18, 249856 (0x3d000)
     _32(0x00000000),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa3a20ce),        //srad $r14 = $r14, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x0880014e),        //cb.deqz $r14? 1da2c <__libc_fini_array+0x44>;;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x3802f392),        //ld.xs $r0 = $r14[$r18];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x087fff4e),        //cb.dnez $r14? 1da1c <__libc_fini_array+0x34>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_init_array: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _96(0x800000f4a849020ce04c0000),        //make $r19 = 249856 (0x3d000)
     _32(0x00000000),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x880000f4a739000ce5480013),        //sbfd $r18 = $r19, 249856 (0x3d000)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xfa4a20d2),        //srad $r18 = $r18, 3 (0x3)
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x08800192),        //cb.deqz $r18? 1da94 <__libc_init_array+0x4c>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 1da80 <__libc_init_array+0x38>;;
     _32(0xe0380000),        //make $r14 = 0 (0x0)
     _96(0x08000000880000f4e04c0000),        //make $r19 = 249856 (0x3d000);;
     _96(0x00000000800000f4e5480013),        //sbfd $r18 = $r19, 249856 (0x3d000);;
     _32(0x7a4a20d2),        //srad $r18 = $r18, 3 (0x3);;
     _32(0x08800192),        //cb.deqz $r18? 1dacc <__libc_init_array+0x84>;;
     _32(0xe138004e),        //addd $r14 = $r14, 1 (0x1)
     _32(0x3802f393),        //ld.xs $r0 = $r14[$r19];;
     _32(0x0fdc0000),        //icall $r0;;
     _32(0x7001a392),        //compd.ne $r0 = $r18, $r14;;
     _32(0x087fff00),        //cb.dnez $r0? 1dab8 <__libc_init_array+0x70>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x00000000)        //errop ;;
 |];

let _init_signal_r_part_0: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040100),        //make $r1 = 256 (0x100);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x9800010f),        //call 1df38 <_malloc_r>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x888003c0),        //cb.deqz $r0? 1db40 <_init_signal_r.part.0+0x58>
     _64(0x18000001a701460e),        //sd 1304 (0x518)[$r14] = $r0;;
     _32(0xe0080000),        //make $r2 = 0 (0x0)
     _32(0xe00c0000),        //make $r3 = 0 (0x0)
     _32(0x60040020),        //make $r1 = 32 (0x20);;
     _32(0x0f0000c1),        //loopdo $r1, 1db28 <_init_signal_r.part.0+0x40>;;
     _32(0xe1080042),        //addd $r2 = $r2, 1 (0x1)
     _32(0x270ff080),        //sd.xs $r2[$r0] = $r3;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x97fffffb),        //goto 1db2c <_init_signal_r.part.0+0x44>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal_r: list_I = 
 [|
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 1db64 <_init_signal_r+0x14>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffffe1)        //goto 1dae8 <_init_signal_r.part.0>;;
 |];

let _signal_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f80db7c1),        //compw.leu $r3 = $r1, 31 (0x1f);;
     _32(0xea480002),        //copyd $r18 = $r2
     _32(0xf84cffc1),        //zxwd $r19 = $r1
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800383),        //cb.weqz $r3? 1dbc4 <_signal_r+0x5c>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088004c2),        //cb.deqz $r2? 1dbe8 <_signal_r+0x80>;;
     _32(0x6907f013),        //sxwd $r1 = $r19;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x274bf042),        //sd.xs $r1[$r2] = $r18;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffffc0),        //call 1dae8 <_init_signal_r.part.0>;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb81),        //cb.wnez $r1? 1dbac <_signal_r+0x44>;;
     _32(0x97ffffea),        //goto 1dba0 <_signal_r+0x38>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x7f03f000)        //nop ;;
 |];

let _raise_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe907f012),        //sxwd $r1 = $r18
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x8c800a82),        //cb.weqz $r2? 1dcd8 <_raise_r+0xd0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8004600),        //ld $r0 = 1304 (0x518)[$r0];;
     _32(0x08800440),        //cb.deqz $r0? 1dc84 <_raise_r+0x7c>;;
     _32(0x380ef040),        //ld.xs $r3 = $r1[$r0];;
     _32(0xe1110043),        //compd.eq $r4 = $r3, 1 (0x1)
     _32(0x6009ffc3),        //compd.ne $r2 = $r3, -1 (0xffffffff);;
     _32(0x08800343),        //cb.deqz $r3? 1dc84 <_raise_r+0x7c>;;
     _32(0x08000144),        //cb.dnez $r4? 1dc68 <_raise_r+0x60>;;
     _32(0x08800582),        //cb.deqz $r2? 1dcb0 <_raise_r+0xa8>;;
     _32(0x8fdc0003),        //icall $r3
     _32(0xfa000012),        //copyw $r0 = $r18
     _32(0x274ff040),        //sd.xs $r1[$r0] = $r19;;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x980000ab),        //call 1df30 <_getpid_r>
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0xfa080012),        //copyw $r2 = $r18
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0xea00000e),        //copyd $r0 = $r14
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x1000007f),        //goto 1dea8 <_kill_r>;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _32(0x604c0001),        //make $r19 = 1 (0x1);;
     _32(0xfa000013),        //copyw $r0 = $r19
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0000016),        //make $r0 = 22 (0x16)
     _64(0x083fffffe04cffc0),        //make $r19 = 4294967295 (0xffffffff);;
     _32(0x97ffffe1),        //goto 1dc68 <_raise_r+0x60>
     _32(0x2601000e),        //sw 0 (0x0)[$r14] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let __sigtramp_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _64(0x08000000f809b7c1),        //compw.leu $r2 = $r1, 31 (0x1f);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xf848ffc1),        //zxwd $r18 = $r1
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x8c800802),        //cb.weqz $r2? 1dd90 <__sigtramp_r+0xa0>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _64(0x18000001b8084600),        //ld $r2 = 1304 (0x518)[$r0];;
     _32(0x088005c2),        //cb.deqz $r2? 1dd7c <__sigtramp_r+0x8c>;;
     _32(0xe90ff012),        //sxwd $r3 = $r18
     _32(0xf4118092),        //addx8wd $r4 = $r18, $r2
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x380af0c2),        //ld.xs $r2 = $r3[$r2];;
     _32(0x6105ffc2),        //compd.eq $r1 = $r2, -1 (0xffffffff);;
     _32(0x088002c2),        //cb.deqz $r2? 1dd64 <__sigtramp_r+0x74>;;
     _32(0x88000281),        //cb.dnez $r1? 1dd64 <__sigtramp_r+0x74>
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0xe1050042),        //compd.eq $r1 = $r2, 1 (0x1)
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x08000181),        //cb.dnez $r1? 1dd64 <__sigtramp_r+0x74>;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x7a000012),        //copyw $r0 = $r18;;
     _32(0x8fdc0002),        //icall $r2
     _32(0x27050004),        //sd 0 (0x0)[$r4] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x1fffff5b),        //call 1dae8 <_init_signal_r.part.0>;;
     _32(0x0c000100),        //cb.wnez $r0? 1dd90 <__sigtramp_r+0xa0>;;
     _32(0x97ffffe8),        //goto 1dd24 <__sigtramp_r+0x34>
     _64(0x18000001b808460e),        //ld $r2 = 1304 (0x518)[$r14];;
     _32(0x97fffff5),        //goto 1dd64 <__sigtramp_r+0x74>
     _64(0x003fffffe000ffc0),        //make $r0 = 4294967295 (0xffffffff);;
     _32(0x7f03f000)        //nop ;;
 |];

let raise: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000114e0082000),        //make $r2 = 282752 (0x45080);;
     _32(0x97ffff96),        //goto 1dc08 <_raise_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let signal: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000114e00c2000),        //make $r3 = 282752 (0x45080);;
     _32(0xea380001),        //copyd $r14 = $r1
     _64(0xa739000cf809b7c0),        //compw.leu $r2 = $r0, 31 (0x1f)
     _32(0x08000000),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0xf848ffc0),        //zxwd $r18 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x8c800382),        //cb.weqz $r2? 1de20 <signal+0x68>
     _32(0x384c0003),        //ld $r19 = 0 (0x0)[$r3];;
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x088004c2),        //cb.deqz $r2? 1de44 <signal+0x8c>;;
     _32(0x6907f012),        //sxwd $r1 = $r18;;
     _32(0x3802f042),        //ld.xs $r0 = $r1[$r2];;
     _32(0x273bf042),        //sd.xs $r1[$r2] = $r14;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0xe0040016),        //make $r1 = 22 (0x16)
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x9fffff29),        //call 1dae8 <_init_signal_r.part.0>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xfa040000),        //copyw $r1 = $r0
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x0c7ffb41),        //cb.wnez $r1? 1de08 <signal+0x50>;;
     _32(0x97ffffe9),        //goto 1ddfc <signal+0x44>
     _64(0x18000001b8084613),        //ld $r2 = 1304 (0x518)[$r19];;
     _32(0x7f03f000)        //nop ;;
 |];

let _init_signal: list_I = 
 [|
     _96(0x0000000080000114e0002000),        //make $r0 = 282752 (0x45080);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _64(0x18000001b8044600),        //ld $r1 = 1304 (0x518)[$r0];;
     _32(0x088000c1),        //cb.deqz $r1? 1de8c <_init_signal+0x24>;;
     _32(0x8fd00000),        //ret 
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x17ffff17)        //goto 1dae8 <_init_signal_r.part.0>;;
 |];

let __sigtramp: list_I = 
 [|
     _32(0xfa040000),        //copyw $r1 = $r0
     _96(0x0800000088000114e0082000),        //make $r2 = 282752 (0x45080);;
     _32(0x97ffff94),        //goto 1dcf0 <__sigtramp_r>
     _32(0x38000002)        //ld $r0 = 0 (0x0)[$r2];;
 |];

let _kill_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x780cffc1),        //zxwd $r3 = $r1;;
     _32(0xe0100000),        //make $r4 = 0 (0x0)
     _32(0xfa040002),        //copyw $r1 = $r2
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xfa000003),        //copyw $r0 = $r3
     _96(0x88000133a749040ce0483200),        //make $r18 = 314568 (0x4ccc8)
     _32(0x08000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980006f5),        //call 1fab0 <_kill>
     _32(0x26110012),        //sw 0 (0x0)[$r18] = $r4;;
     _64(0x07fffffff005b7c0),        //compw.ne $r1 = $r0, 4294967295 (0xffffffff);;
     _32(0x0c8001c1),        //cb.weqz $r1? 1df08 <_kill_r+0x60>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 1def0 <_kill_r+0x48>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let _getpid_r: list_I = 
 [|
     _32(0x100006ec),        //goto 1fae0 <_getpid>;;
     _32(0x00000000)        //errop ;;
 |];

let _malloc_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0xe14805c1),        //addd $r18 = $r1, 23 (0x17)
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0xe9090b92),        //compd.gtu $r2 = $r18, 46 (0x2e)
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2855060c),        //so 24 (0x18)[$r12] = $r20r21r22r23;;
     _32(0x28650e0c),        //so 56 (0x38)[$r12] = $r24r25r26r27;;
     _32(0x88000982),        //cb.dnez $r2? 1dff4 <_malloc_r+0xbc>
     _32(0x2741160c),        //sd 88 (0x58)[$r12] = $r16;;
     _32(0xe9050801),        //compd.gtu $r1 = $r1, 32 (0x20)
     _32(0x60480020),        //make $r18 = 32 (0x20);;
     _32(0x08002ac1),        //cb.dnez $r1? 1e218 <_malloc_r+0x2e0>;;
     _32(0x18000258),        //call 1e8d0 <__malloc_lock>;;
     _32(0xe0000050),        //make $r0 = 80 (0x50)
     _32(0x60140004),        //make $r5 = 4 (0x4);;
     _96(0x80000116b8387600e1087400),        //addd $r2 = $r0, 285136 (0x459d0)
     _96(0x180000009800011680000000),        //ld $r14 = 285144 (0x459d8)[$r0];;
     _32(0x6104fc02),        //addd $r1 = $r2, -16 (0xfffffff0);;
     _32(0x7005a04e),        //compd.ne $r1 = $r14, $r1;;
     _32(0x08802a81),        //cb.deqz $r1? 1e244 <_malloc_r+0x30c>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x3808060e),        //ld $r2 = 24 (0x18)[$r14];;
     _32(0x380c040e),        //ld $r3 = 16 (0x10)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0x27090603),        //sd 24 (0x18)[$r3] = $r2;;
     _32(0x270d0402),        //sd 16 (0x10)[$r2] = $r3;;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x98000246),        //call 1e8e0 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x6848fc12),        //andd $r18 = $r18, -16 (0xfffffff0);;
     _32(0xf905a481),        //compd.gtu $r1 = $r1, $r18
     _64(0x081fffffe909ffd2),        //compd.gtu $r2 = $r18, 2147483647 (0x7fffffff);;
     _32(0x7a051042),        //orw $r1 = $r2, $r1;;
     _32(0x0c002101),        //cb.wnez $r1? 1e218 <_malloc_r+0x2e0>;;
     _32(0x18000231),        //call 1e8d0 <__malloc_lock>;;
     _32(0xe9017dd2),        //compd.gtu $r0 = $r18, 503 (0x1f7)
     _32(0xe0100400),        //make $r4 = 1024 (0x400)
     _32(0xe0140040),        //make $r5 = 64 (0x40)
     _32(0x6018003f),        //make $r6 = 63 (0x3f);;
     _32(0x088065c0),        //cb.deqz $r0? 1e67c <_malloc_r+0x744>;;
     _32(0x7b022252),        //srld $r0 = $r18, 9 (0x9);;
     _32(0x08004700),        //cb.dnez $r0? 1e498 <_malloc_r+0x560>;;
     _96(0x80000116b8387604e1107004),        //addd $r4 = $r4, 285120 (0x459c0)
     _96(0x180000009800011680000000),        //ld $r14 = 285144 (0x459d8)[$r4];;
     _32(0x7101a384),        //compd.eq $r0 = $r4, $r14;;
     _32(0x08800180),        //cb.deqz $r0? 1e060 <_malloc_r+0x128>;;
     _32(0x1000000b),        //goto 1e078 <_malloc_r+0x140>;;
     _32(0x09804e02),        //cb.dgez $r2? 1e530 <_malloc_r+0x5f8>;;
     _32(0x3838060e),        //ld $r14 = 24 (0x18)[$r14];;
     _32(0x7005a384),        //compd.ne $r1 = $r4, $r14;;
     _32(0x088001c1),        //cb.deqz $r1? 1e078 <_malloc_r+0x140>;;
     _32(0x3804020e),        //ld $r1 = 8 (0x8)[$r14];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x75090052),        //sbfd $r2 = $r18, $r1;;
     _32(0x650d07c2),        //compd.gt $r3 = $r2, 31 (0x1f);;
     _32(0x08fffe03),        //cb.deqz $r3? 1e050 <_malloc_r+0x118>;;
     _32(0x6a140006),        //copyd $r5 = $r6;;
     _96(0x0000000080000116e0507400),        //make $r20 = 285136 (0x459d0);;
     _32(0xe1040414),        //addd $r1 = $r20, 16 (0x10)
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x08801e80),        //cb.deqz $r0? 1e278 <_malloc_r+0x340>;;
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x750d0092),        //sbfd $r3 = $r18, $r2;;
     _32(0x640107c3),        //compd.le $r0 = $r3, 31 (0x1f);;
     _32(0x08805f40),        //cb.deqz $r0? 1e698 <_malloc_r+0x760>;;
     _32(0xe9017fc2),        //compd.gtu $r0 = $r2, 511 (0x1ff)
     _32(0x27050a14),        //sd 40 (0x28)[$r20] = $r1;;
     _32(0x89804103),        //cb.dgez $r3? 1e4c0 <_malloc_r+0x588>
     _32(0x27050814),        //sd 32 (0x20)[$r20] = $r1;;
     _32(0x08004c40),        //cb.dnez $r0? 1e57c <_malloc_r+0x644>;;
     _32(0xe60b20c2),        //extfz $r2 = $r2, 34 (0x22), 3 (0x3)
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x380c0214),        //ld $r3 = 8 (0x8)[$r20];;
     _32(0xf1040042),        //addw $r1 = $r2, 1 (0x1)
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0xf9063041),        //sllw $r1 = $r1, 1 (0x1)
     _32(0x790a6080),        //slld $r2 = $r0, $r2;;
     _32(0xe903f001),        //sxwd $r0 = $r1
     _32(0x7a0900c2),        //ord $r2 = $r2, $r3;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x27090214),        //sd 8 (0x8)[$r20] = $r2;;
     _96(0x80000116b8047400e10c7000),        //addd $r3 = $r0, 285120 (0x459c0)
     _96(0x180000009800011680000000),        //ld $r1 = 285136 (0x459d0)[$r0];;
     _32(0x270d060e),        //sd 24 (0x18)[$r14] = $r3;;
     _32(0x2705040e),        //sd 16 (0x10)[$r14] = $r1;;
     _96(0x1800000098000116a7397400),        //sd 285136 (0x459d0)[$r0] = $r14;;
     _32(0x27390601),        //sd 24 (0x18)[$r1] = $r14;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0x601c0001),        //make $r7 = 1 (0x1);;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08001680),        //cb.dnez $r0? 1e290 <_malloc_r+0x358>;;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x080002c0),        //cb.dnez $r0? 1e15c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x7814ff05),        //andw $r5 = $r5, -4 (0xfffffffc);;
     _32(0xf8010087),        //andd $r0 = $r7, $r2
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x08000140),        //cb.dnez $r0? 1e15c <_malloc_r+0x224>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71140105),        //addw $r5 = $r5, 4 (0x4);;
     _32(0x78010087),        //andd $r0 = $r7, $r2;;
     _32(0x08ffff40),        //cb.deqz $r0? 1e14c <_malloc_r+0x214>;;
     _96(0x0000000080000116e0287400),        //make $r10 = 285136 (0x459d0);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x6a240005),        //copyd $r9 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _64(0x07fffffff4018400),        //addx8wd $r0 = $r0, 4294967280 (0xfffffff0);;
     _96(0x0000000080000116e1007400),        //addd $r0 = $r0, 285136 (0x459d0);;
     _32(0x6a200000),        //copyd $r8 = $r0;;
     _32(0x38040608),        //ld $r1 = 24 (0x18)[$r8];;
     _32(0x7109a048),        //compd.eq $r2 = $r8, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 1e1a4 <_malloc_r+0x26c>;;
     _32(0x10000128),        //goto 1e638 <_malloc_r+0x700>;;
     _32(0x09804b43),        //cb.dgez $r3? 1e650 <_malloc_r+0x718>;;
     _32(0x08804986),        //cb.deqz $r6? 1e638 <_malloc_r+0x700>;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x38040601),        //ld $r1 = 24 (0x18)[$r1];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0xf50d0092),        //sbfd $r3 = $r18, $r2
     _32(0x7019a048),        //compd.ne $r6 = $r8, $r1;;
     _32(0x641107c3),        //compd.le $r4 = $r3, 31 (0x1f);;
     _32(0x087ffdc4),        //cb.dnez $r4? 1e19c <_malloc_r+0x264>;;
     _32(0xea000052),        //ord $r0 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _96(0x90000116b818040ee0107400),        //make $r4 = 285136 (0x459d0)
     _32(0x10000000),        //ld $r6 = 16 (0x10)[$r14];;
     _32(0xe1140404),        //addd $r5 = $r4, 16 (0x10)
     _32(0xea1c0043),        //ord $r7 = $r3, 1 (0x1)
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x2701020e),        //sd 8 (0x8)[$r14] = $r0;;
     _32(0x27050606),        //sd 24 (0x18)[$r6] = $r1;;
     _32(0x27190401),        //sd 16 (0x10)[$r1] = $r6;;
     _32(0x27490a04),        //sd 40 (0x28)[$r4] = $r18;;
     _32(0x27490804),        //sd 32 (0x20)[$r4] = $r18;;
     _32(0x27150612),        //sd 24 (0x18)[$r18] = $r5;;
     _32(0x27150412),        //sd 16 (0x10)[$r18] = $r5;;
     _32(0x271d0212),        //sd 8 (0x8)[$r18] = $r7;;
     _32(0x980001b6),        //call 1e8e0 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x90000005),        //goto 1e224 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xe004000c),        //make $r1 = 12 (0xc)
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26050013),        //sw 0 (0x0)[$r19] = $r1;;
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf1140085),        //addw $r5 = $r5, 2 (0x2)
     _96(0x88000116b8387a00e0507400),        //make $r20 = 285136 (0x459d0)
     _96(0x180000009800011688000000),        //ld $r14 = 285160 (0x459e8)[$r0];;
     _32(0x61040414),        //addd $r1 = $r20, 16 (0x10);;
     _32(0x7109a382),        //compd.eq $r2 = $r2, $r14;;
     _32(0x08ffd382),        //cb.deqz $r2? 1dfa0 <_malloc_r+0x68>;;
     _32(0x38380814),        //ld $r14 = 32 (0x20)[$r20];;
     _32(0x7001a04e),        //compd.ne $r0 = $r14, $r1;;
     _32(0x087fe200),        //cb.dnez $r0? 1e094 <_malloc_r+0x15c>;;
     _32(0xfa023085),        //sraw $r0 = $r5, 2 (0x2)
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0x38080214),        //ld $r2 = 8 (0x8)[$r20];;
     _32(0x791e6007),        //slld $r7 = $r7, $r0;;
     _32(0x7901a087),        //compd.gtu $r0 = $r7, $r2;;
     _32(0x08ffea00),        //cb.deqz $r0? 1e12c <_malloc_r+0x1f4>;;
     _96(0x80000116e06c7000e0647400),        //make $r25 = 285136 (0x459d0)
     _96(0x080000008800011680000000),        //make $r27 = 285120 (0x459c0);;
     _96(0x80000122b8380419e0688000),        //make $r26 = 297472 (0x48a00)
     _32(0x00000000),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x3858020e),        //ld $r22 = 8 (0x8)[$r14];;
     _32(0x6858ff16),        //andd $r22 = $r22, -4 (0xfffffffc);;
     _32(0xf5010592),        //sbfd $r0 = $r18, $r22
     _32(0xf909a592),        //compd.gtu $r2 = $r18, $r22
     _32(0x7161058e),        //addd $r24 = $r14, $r22;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a051081),        //orw $r1 = $r1, $r2;;
     _32(0x0c8020c1),        //cb.weqz $r1? 1e4e0 <_malloc_r+0x5a8>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _96(0x88000122b808001be0048e00),        //make $r1 = 297528 (0x48a38)
     _32(0x08000000),        //ld $r2 = 0 (0x0)[$r27];;
     _32(0x38540001),        //ld $r21 = 0 (0x0)[$r1];;
     _32(0x6009ffc2),        //compd.ne $r2 = $r2, -1 (0xffffffff);;
     _32(0x71550552),        //addd $r21 = $r18, $r21;;
     _32(0xe1540815),        //addd $r21 = $r21, 32 (0x20)
     _64(0x08000004e10407d5),        //addd $r1 = $r21, 4127 (0x101f);;
     _64(0x07fffffce8040001),        //andd $r1 = $r1, -4096 (0xfffffffffffff000);;
     _32(0x70560042),        //cmoved.dnez $r2? $r21 = $r1;;
     _32(0x980001d0),        //call 1ea50 <_sbrk_r>
     _32(0x6a040015),        //copyd $r1 = $r21;;
     _32(0xea5c0000),        //copyd $r23 = $r0
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x7905a5d8),        //compd.gtu $r1 = $r24, $r23;;
     _32(0x08804640),        //cb.deqz $r0? 1e788 <_malloc_r+0x850>;;
     _96(0x0000000080000116e0007400),        //make $r0 = 285136 (0x459d0);;
     _32(0x7001a00e),        //compd.ne $r0 = $r14, $r0;;
     _32(0xf8011040),        //andw $r0 = $r0, $r1
     _32(0x7005a5d8),        //compd.ne $r1 = $r24, $r23;;
     _32(0x0c004480),        //cb.wnez $r0? 1e788 <_malloc_r+0x850>;;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0xf1091540),        //addw $r2 = $r0, $r21
     _32(0x71011540),        //addw $r0 = $r0, $r21;;
     _32(0x88804101),        //cb.deqz $r1? 1e760 <_malloc_r+0x828>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x3800001b),        //ld $r0 = 0 (0x0)[$r27];;
     _32(0x6001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff);;
     _32(0x08804200),        //cb.deqz $r0? 1e780 <_malloc_r+0x848>;;
     _32(0x750105d8),        //sbfd $r0 = $r24, $r23;;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x2601001a),        //sw 0 (0x0)[$r26] = $r0;;
     _32(0xe80003d7),        //andd $r0 = $r23, 15 (0xf)
     _32(0x60601000),        //make $r24 = 4096 (0x1000);;
     _32(0x08800140),        //cb.deqz $r0? 1e38c <_malloc_r+0x454>;;
     _32(0xe5040400),        //sbfd $r1 = $r0, 16 (0x10)
     _64(0x08000004e5600400),        //sbfd $r24 = $r0, 4112 (0x1010);;
     _32(0x715d0057),        //addd $r23 = $r23, $r1;;
     _32(0xf1050557),        //addd $r1 = $r23, $r21
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x60540001),        //make $r21 = 1 (0x1);;
     _64(0x00000003e804ffc1),        //andd $r1 = $r1, 4095 (0xfff);;
     _32(0x75610601),        //sbfd $r24 = $r1, $r24;;
     _32(0x980001ab),        //call 1ea50 <_sbrk_r>
     _32(0x6a040018),        //copyd $r1 = $r24;;
     _32(0xe109ffc0),        //compd.eq $r2 = $r0, -1 (0xffffffff)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x08000142),        //cb.dnez $r2? 1e3c8 <_malloc_r+0x490>;;
     _32(0xf5090017),        //sbfd $r2 = $r23, $r0
     _32(0x7804ffd8),        //zxwd $r1 = $r24;;
     _32(0x71550602),        //addd $r21 = $r2, $r24;;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0xf151a50e),        //compd.eq $r20 = $r14, $r20
     _32(0xe0100009),        //make $r4 = 9 (0x9)
     _96(0x90000116b000001ae0607400),        //make $r24 = 285136 (0x459d0)
     _32(0x10000000),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x275d0418),        //sd 16 (0x10)[$r24] = $r23;;
     _32(0x27550217),        //sd 8 (0x8)[$r23] = $r21;;
     _32(0xf1091040),        //addw $r2 = $r0, $r1
     _32(0xf1011040),        //addw $r0 = $r0, $r1
     _32(0x690507d6),        //compd.gtu $r1 = $r22, 31 (0x1f);;
     _32(0x88004154),        //cb.dnez $r20? 1e808 <_malloc_r+0x8d0>
     _32(0x2609001a),        //sw 0 (0x0)[$r26] = $r2;;
     _32(0x08804141),        //cb.deqz $r1? 1e810 <_malloc_r+0x8d8>;;
     _32(0xe104fa16),        //addd $r1 = $r22, -24 (0xffffffe8)
     _32(0x3808020e),        //ld $r2 = 8 (0x8)[$r14];;
     _32(0x6804fc01),        //andd $r1 = $r1, -16 (0xfffffff0);;
     _32(0xf10d004e),        //addd $r3 = $r14, $r1
     _32(0x691507c1),        //compd.gtu $r5 = $r1, 31 (0x1f);;
     _32(0x68080042),        //andd $r2 = $r2, 1 (0x1);;
     _32(0x7a050042),        //ord $r1 = $r2, $r1;;
     _32(0x2705020e),        //sd 8 (0x8)[$r14] = $r1;;
     _32(0x27110203),        //sd 8 (0x8)[$r3] = $r4;;
     _32(0x88004545),        //cb.dnez $r5? 1e878 <_malloc_r+0x940>
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0xea380017),        //copyd $r14 = $r23
     _32(0x38540217),        //ld $r21 = 8 (0x8)[$r23];;
     _32(0xe903f000),        //sxwd $r0 = $r0
     _96(0x0800000088000122e0088c00),        //make $r2 = 297520 (0x48a30);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 1e454 <_malloc_r+0x51c>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _96(0x0000000080000122e0088a00),        //make $r2 = 297512 (0x48a28);;
     _32(0x38040002),        //ld $r1 = 0 (0x0)[$r2];;
     _32(0x7805a040),        //compd.leu $r1 = $r0, $r1;;
     _32(0x08000081),        //cb.dnez $r1? 1e470 <_malloc_r+0x538>;;
     _32(0x27010002),        //sd 0 (0x0)[$r2] = $r0;;
     _32(0x6854ff15),        //andd $r21 = $r21, -4 (0xfffffffc);;
     _32(0xf5010552),        //sbfd $r0 = $r18, $r21
     _32(0x7955a552),        //compd.gtu $r21 = $r18, $r21;;
     _32(0x640507c0),        //compd.le $r1 = $r0, 31 (0x1f);;
     _32(0x7a551055),        //orw $r21 = $r21, $r1;;
     _32(0x0c8005d5),        //cb.weqz $r21? 1e4e0 <_malloc_r+0x5a8>;;
     _32(0x98000116),        //call 1e8e0 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x97ffff65),        //goto 1e224 <_malloc_r+0x2ec>
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x69050100),        //compd.gtu $r1 = $r0, 4 (0x4);;
     _32(0x080016c1),        //cb.dnez $r1? 1e608 <_malloc_r+0x6d0>;;
     _32(0x66175192),        //extfz $r5 = $r18, 37 (0x25), 6 (0x6);;
     _32(0xf1100e45),        //addw $r4 = $r5, 57 (0x39)
     _32(0xf1180e05),        //addw $r6 = $r5, 56 (0x38)
     _32(0x71140e45),        //addw $r5 = $r5, 57 (0x39);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffedd),        //goto 1e02c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040202),        //ld $r1 = 8 (0x8)[$r2];;
     _32(0x6a040041),        //ord $r1 = $r1, 1 (0x1);;
     _32(0x98000104),        //call 1e8e0 <__malloc_unlock>
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x97ffff53),        //goto 1e224 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0xea0c0052),        //ord $r3 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea040040),        //ord $r1 = $r0, 1 (0x1)
     _96(0x1800000098000116e0087400),        //make $r2 = 285136 (0x459d0);;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x270d020e),        //sd 8 (0x8)[$r14] = $r3;;
     _32(0x27490402),        //sd 16 (0x10)[$r2] = $r18;;
     _32(0x980000f7),        //call 1e8e0 <__malloc_unlock>
     _32(0x27050212),        //sd 8 (0x8)[$r18] = $r1;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0xf105004e),        //addd $r1 = $r14, $r1
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x380c060e),        //ld $r3 = 24 (0x18)[$r14];;
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x270d0604),        //sd 24 (0x18)[$r4] = $r3;;
     _32(0x27110403),        //sd 16 (0x10)[$r3] = $r4;;
     _32(0x6a080042),        //ord $r2 = $r2, 1 (0x1);;
     _32(0x980000e4),        //call 1e8e0 <__malloc_unlock>
     _32(0x27090201),        //sd 8 (0x8)[$r1] = $r2;;
     _32(0xe100040e),        //addd $r0 = $r14, 16 (0x10)
     _32(0x3840160c),        //ld $r16 = 88 (0x58)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x3c54060c),        //lo $r20r21r22r23 = 24 (0x18)[$r12];;
     _32(0x8fd00000),        //ret 
     _32(0xe130180c),        //addd $r12 = $r12, 96 (0x60)
     _32(0x3c640e0c),        //lo $r24r25r26r27 = 56 (0x38)[$r12];;
     _32(0x7b062242),        //srld $r1 = $r2, 9 (0x9);;
     _32(0x69010101),        //compd.gtu $r0 = $r1, 4 (0x4);;
     _32(0x088014c0),        //cb.deqz $r0? 1e6d0 <_malloc_r+0x798>;;
     _32(0x69010501),        //compd.gtu $r0 = $r1, 20 (0x14);;
     _32(0x08002300),        //cb.dnez $r0? 1e7bc <_malloc_r+0x884>;;
     _32(0xf1001701),        //addw $r0 = $r1, 92 (0x5c)
     _32(0x710416c1),        //addw $r1 = $r1, 91 (0x5b);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _96(0x80000116b80c7400e1007000),        //addd $r0 = $r0, 285120 (0x459c0)
     _96(0x180000009800011680000000),        //ld $r3 = 285136 (0x459d0)[$r0];;
     _32(0x7011a0c0),        //compd.ne $r4 = $r0, $r3;;
     _32(0x08801d44),        //cb.deqz $r4? 1e794 <_malloc_r+0x85c>;;
     _32(0x38040203),        //ld $r1 = 8 (0x8)[$r3];;
     _32(0x6804ff01),        //andd $r1 = $r1, -4 (0xfffffffc);;
     _32(0x7905a081),        //compd.gtu $r1 = $r1, $r2;;
     _32(0x08800101),        //cb.deqz $r1? 1e5e0 <_malloc_r+0x6a8>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7105a0c0),        //compd.eq $r1 = $r0, $r3;;
     _32(0x08fffe81),        //cb.deqz $r1? 1e5c4 <_malloc_r+0x68c>;;
     _96(0x80000116b8000603e0047400),        //make $r1 = 285136 (0x459d0)
     _32(0x00000000),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0x38080201),        //ld $r2 = 8 (0x8)[$r1];;
     _32(0x2701060e),        //sd 24 (0x18)[$r14] = $r0;;
     _32(0x270d040e),        //sd 16 (0x10)[$r14] = $r3;;
     _32(0x27390400),        //sd 16 (0x10)[$r0] = $r14;;
     _32(0x97fffec6),        //goto 1e118 <_malloc_r+0x1e0>
     _32(0x27390603),        //sd 24 (0x18)[$r3] = $r14;;
     _32(0x69050500),        //compd.gtu $r1 = $r0, 20 (0x14);;
     _32(0x08800e01),        //cb.deqz $r1? 1e6ec <_malloc_r+0x7b4>;;
     _32(0x69051500),        //compd.gtu $r1 = $r0, 84 (0x54);;
     _32(0x08001cc1),        //cb.dnez $r1? 1e7e0 <_malloc_r+0x8a8>;;
     _32(0x6617b312),        //extfz $r5 = $r18, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc5),        //addw $r4 = $r5, 111 (0x6f)
     _32(0xf1181b85),        //addw $r6 = $r5, 110 (0x6e)
     _32(0x71141bc5),        //addw $r5 = $r5, 111 (0x6f);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe7f),        //goto 1e02c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xf1240049),        //addw $r9 = $r9, 1 (0x1)
     _32(0x61200408),        //addd $r8 = $r8, 16 (0x10);;
     _32(0xf80400c9),        //andw $r1 = $r9, 3 (0x3)
     _32(0x7824ffc9),        //zxwd $r9 = $r9;;
     _32(0x0c7fb441),        //cb.wnez $r1? 1e18c <_malloc_r+0x254>;;
     _32(0x10000032),        //goto 1e714 <_malloc_r+0x7dc>;;
     _32(0xf109008e),        //addd $r2 = $r14, $r2
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x3810040e),        //ld $r4 = 16 (0x10)[$r14];;
     _32(0x380c0202),        //ld $r3 = 8 (0x8)[$r2];;
     _32(0x6a0c0043),        //ord $r3 = $r3, 1 (0x1);;
     _32(0x270d0202),        //sd 8 (0x8)[$r2] = $r3;;
     _32(0x27050604),        //sd 24 (0x18)[$r4] = $r1;;
     _32(0x9800009d),        //call 1e8e0 <__malloc_unlock>
     _32(0x27110401),        //sd 16 (0x10)[$r1] = $r4;;
     _32(0x97fffeec),        //goto 1e224 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x7b1620d2),        //srld $r5 = $r18, 3 (0x3);;
     _32(0xf1000045),        //addw $r0 = $r5, 1 (0x1)
     _32(0x7814ffc5),        //zxwd $r5 = $r5;;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97fffe3b),        //goto 1df7c <_malloc_r+0x44>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xea140052),        //ord $r5 = $r18, 1 (0x1)
     _32(0xf149048e),        //addd $r18 = $r14, $r18
     _32(0xea100043),        //ord $r4 = $r3, 1 (0x1)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x2715020e),        //sd 8 (0x8)[$r14] = $r5;;
     _32(0x27490a14),        //sd 40 (0x28)[$r20] = $r18;;
     _32(0x27490814),        //sd 32 (0x20)[$r20] = $r18;;
     _32(0x27050612),        //sd 24 (0x18)[$r18] = $r1;;
     _32(0x27050412),        //sd 16 (0x10)[$r18] = $r1;;
     _32(0x27110212),        //sd 8 (0x8)[$r18] = $r4;;
     _32(0x98000088),        //call 1e8e0 <__malloc_unlock>
     _32(0x270fe08e),        //sd $r2[$r14] = $r3;;
     _32(0x97fffed7),        //goto 1e224 <_malloc_r+0x2ec>
     _32(0x6100040e),        //addd $r0 = $r14, 16 (0x10);;
     _32(0x66075182),        //extfz $r1 = $r2, 37 (0x25), 6 (0x6);;
     _32(0xf1000e41),        //addw $r0 = $r1, 57 (0x39)
     _32(0x71040e01),        //addw $r1 = $r1, 56 (0x38);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffffb0),        //goto 1e5a4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0xf11816c0),        //addw $r6 = $r0, 91 (0x5b)
     _32(0x71141700),        //addw $r5 = $r0, 92 (0x5c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe4b),        //goto 1e02c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x38040400),        //ld $r1 = 16 (0x10)[$r0];;
     _32(0x7105a001),        //compd.eq $r1 = $r1, $r0;;
     _32(0x08801b41),        //cb.deqz $r1? 1e8c4 <_malloc_r+0x98c>;;
     _32(0xf80400c5),        //andw $r1 = $r5, 3 (0x3)
     _32(0xe100fc00),        //addd $r0 = $r0, -16 (0xfffffff0)
     _32(0x7114ffc5),        //addw $r5 = $r5, -1 (0xffffffff);;
     _32(0x0c7ffe81),        //cb.wnez $r1? 1e708 <_malloc_r+0x7d0>;;
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x7e010007),        //andnd $r0 = $r7, $r0;;
     _32(0x2701020a),        //sd 8 (0x8)[$r10] = $r0;;
     _32(0x791e2047),        //slld $r7 = $r7, 1 (0x1);;
     _32(0xe0050007),        //compd.ne $r1 = $r7, 0 (0x0)
     _32(0x7809a007),        //compd.leu $r2 = $r7, $r0;;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 1e750 <_malloc_r+0x818>;;
     _32(0x17fffed3),        //goto 1e290 <_malloc_r+0x358>;;
     _32(0xf91e2047),        //slld $r7 = $r7, 1 (0x1)
     _32(0x71240109),        //addw $r9 = $r9, 4 (0x4);;
     _32(0x78050007),        //andd $r1 = $r7, $r0;;
     _32(0x08ffff41),        //cb.deqz $r1? 1e748 <_malloc_r+0x810>;;
     _32(0x97fffe84),        //goto 1e168 <_malloc_r+0x230>
     _32(0x6a140009),        //copyd $r5 = $r9;;
     _64(0x00000003e804ffd8),        //andd $r1 = $r24, 4095 (0xfff);;
     _32(0x087fbf01),        //cb.dnez $r1? 1e358 <_malloc_r+0x420>;;
     _32(0xf1550556),        //addd $r21 = $r22, $r21
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x6a540055),        //ord $r21 = $r21, 1 (0x1);;
     _32(0x97ffff2f),        //goto 1e434 <_malloc_r+0x4fc>
     _32(0x2755020e),        //sd 8 (0x8)[$r14] = $r21;;
     _32(0x97fffefc),        //goto 1e370 <_malloc_r+0x438>
     _32(0x275d001b),        //sd 0 (0x0)[$r27] = $r23;;
     _32(0x38380419),        //ld $r14 = 16 (0x10)[$r25];;
     _32(0x97ffff39),        //goto 1e470 <_malloc_r+0x538>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000116e0107400),        //make $r4 = 285136 (0x459d0);;
     _32(0xf90a6042),        //slld $r2 = $r2, $r1
     _32(0x38180204),        //ld $r6 = 8 (0x8)[$r4];;
     _32(0x7a090182),        //ord $r2 = $r2, $r6;;
     _32(0x97ffff90),        //goto 1e5f4 <_malloc_r+0x6bc>
     _32(0x27090204),        //sd 8 (0x8)[$r4] = $r2;;
     _32(0x69011501),        //compd.gtu $r0 = $r1, 84 (0x54);;
     _32(0x080005c0),        //cb.dnez $r0? 1e81c <_malloc_r+0x8e4>;;
     _32(0x6607b302),        //extfz $r1 = $r2, 43 (0x2b), 12 (0xc);;
     _32(0xf1001bc1),        //addw $r0 = $r1, 111 (0x6f)
     _32(0x71041b81),        //addw $r1 = $r1, 110 (0x6e);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff73),        //goto 1e5a4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x69055500),        //compd.gtu $r1 = $r0, 340 (0x154);;
     _32(0x080005c1),        //cb.dnez $r1? 1e840 <_malloc_r+0x908>;;
     _32(0x6617e3d2),        //extfz $r5 = $r18, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e05),        //addw $r4 = $r5, 120 (0x78)
     _32(0xf1181dc5),        //addw $r6 = $r5, 119 (0x77)
     _32(0x71141e05),        //addw $r5 = $r5, 120 (0x78);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffe0b),        //goto 1e02c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff0b),        //goto 1e434 <_malloc_r+0x4fc>
     _32(0x6a380017),        //copyd $r14 = $r23;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x97ffff1d),        //goto 1e488 <_malloc_r+0x550>
     _32(0x27010217),        //sd 8 (0x8)[$r23] = $r0;;
     _32(0x69015501),        //compd.gtu $r0 = $r1, 340 (0x154);;
     _32(0x08000740),        //cb.dnez $r0? 1e894 <_malloc_r+0x95c>;;
     _32(0x6607e3c2),        //extfz $r1 = $r2, 46 (0x2e), 15 (0xf);;
     _32(0xf1001e01),        //addw $r0 = $r1, 120 (0x78)
     _32(0x71041dc1),        //addw $r1 = $r1, 119 (0x77);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff5b),        //goto 1e5a4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe014007f),        //make $r5 = 127 (0x7f)
     _32(0xe018007e),        //make $r6 = 126 (0x7e)
     _64(0x18000001e9015500),        //compd.gtu $r0 = $r0, 1364 (0x554);;
     _32(0x087f7d80),        //cb.dnez $r0? 1e02c <_malloc_r+0xf4>;;
     _32(0x67171492),        //extfz $r5 = $r18, 49 (0x31), 18 (0x12);;
     _32(0xf1101f45),        //addw $r4 = $r5, 125 (0x7d)
     _32(0xf1181f05),        //addw $r6 = $r5, 124 (0x7c)
     _32(0x71141f45),        //addw $r5 = $r5, 125 (0x7d);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97fffdef),        //goto 1e02c <_malloc_r+0xf4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x980000ea),        //call 1ec20 <_free_r>
     _32(0xe104040e),        //addd $r1 = $r14, 16 (0x10)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38380418),        //ld $r14 = 16 (0x10)[$r24];;
     _32(0x3000001a),        //lwz $r0 = 0 (0x0)[$r26];;
     _32(0x97fffeea),        //goto 1e434 <_malloc_r+0x4fc>
     _32(0x3854020e),        //ld $r21 = 8 (0x8)[$r14];;
     _32(0xe00007f0),        //make $r0 = 2032 (0x7f0)
     _32(0xe004007e),        //make $r1 = 126 (0x7e)
     _64(0x10000001e90d5501),        //compd.gtu $r3 = $r1, 1364 (0x554);;
     _32(0x087fd003),        //cb.dnez $r3? 1e5a4 <_malloc_r+0x66c>;;
     _32(0x67071482),        //extfz $r1 = $r2, 49 (0x31), 18 (0x12);;
     _32(0xf1001f41),        //addw $r0 = $r1, 125 (0x7d)
     _32(0x71041f01),        //addw $r1 = $r1, 124 (0x7c);;
     _32(0x79023040),        //sllw $r0 = $r0, 1 (0x1);;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x97ffff3a),        //goto 1e5a4 <_malloc_r+0x66c>
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x97ffff9b),        //goto 1e730 <_malloc_r+0x7f8>
     _32(0x3800020a),        //ld $r0 = 8 (0x8)[$r10];;
     _32(0x00000000)        //errop ;;
 |];

let __malloc_lock: list_I = 
 [|
     _32(0x90000200),        //goto 1f0d0 <__libc_lock_acquire>
     _96(0x0000000080000122e0009000)        //make $r0 = 297536 (0x48a40);;
 |];

let __malloc_unlock: list_I = 
 [|
     _32(0x90000240),        //goto 1f1e0 <__libc_lock_release>
     _96(0x0000000080000122e0009000)        //make $r0 = 297536 (0x48a40);;
 |];

let cleanup_glue: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x08800081),        //cb.deqz $r1? 1e918 <cleanup_glue+0x28>;;
     _32(0x1ffffff7),        //call 1e8f0 <cleanup_glue>;;
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x100000bb)        //goto 1ec20 <_free_r>;;
 |];

let _reclaim_reent: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _96(0x0800000088000114e0042000),        //make $r1 = 282752 (0x45080);;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0xe04c0000),        //make $r19 = 0 (0x0)
     _32(0x2849020c),        //sq 8 (0x8)[$r12] = $r18r19;;
     _32(0x2739000c),        //sd 0 (0x0)[$r12] = $r14;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x7005a001),        //compd.ne $r1 = $r1, $r0;;
     _32(0x08800d01),        //cb.deqz $r1? 1ea38 <_reclaim_reent+0x100>;;
     _32(0x38041e00),        //ld $r1 = 120 (0x78)[$r0];;
     _32(0x088003c1),        //cb.deqz $r1? 1e9ac <_reclaim_reent+0x74>;;
     _32(0x383ae4c1),        //ld $r14 = $r19[$r1];;
     _32(0x088001ce),        //cb.deqz $r14? 1e994 <_reclaim_reent+0x5c>;;
     _32(0x980000a9),        //call 1ec20 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x087fff0e),        //cb.dnez $r14? 1e97c <_reclaim_reent+0x44>;;
     _32(0x38041e12),        //ld $r1 = 120 (0x78)[$r18];;
     _32(0x614c0213),        //addd $r19 = $r19, 8 (0x8);;
     _64(0x00000000e0018013),        //compd.ne $r0 = $r19, 512 (0x200);;
     _32(0x087ffd40),        //cb.dnez $r0? 1e974 <_reclaim_reent+0x3c>;;
     _32(0x9800009f),        //call 1ec20 <_free_r>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041812),        //ld $r1 = 96 (0x60)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 1e9bc <_reclaim_reent+0x84>;;
     _32(0x1800009a),        //call 1ec20 <_free_r>;;
     _64(0xb8387e12e14c8012),        //addd $r19 = $r18, 512 (0x200)
     _32(0x00000000),        //ld $r14 = 504 (0x1f8)[$r18];;
     _32(0x7101a4ce),        //compd.eq $r0 = $r14, $r19;;
     _32(0x0880020e),        //cb.deqz $r14? 1e9ec <_reclaim_reent+0xb4>;;
     _32(0x080001c0),        //cb.dnez $r0? 1e9ec <_reclaim_reent+0xb4>;;
     _32(0x98000093),        //call 1ec20 <_free_r>
     _32(0xea04000e),        //copyd $r1 = $r14
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3838000e),        //ld $r14 = 0 (0x0)[$r14];;
     _32(0x7001a393),        //compd.ne $r0 = $r19, $r14;;
     _32(0x087ffec0),        //cb.dnez $r0? 1e9d4 <_reclaim_reent+0x9c>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38042212),        //ld $r1 = 136 (0x88)[$r18];;
     _32(0x08800081),        //cb.deqz $r1? 1e9fc <_reclaim_reent+0xc4>;;
     _32(0x1800008a),        //call 1ec20 <_free_r>;;
     _32(0x30001412),        //lwz $r0 = 80 (0x50)[$r18];;
     _32(0x0c800380),        //cb.weqz $r0? 1ea38 <_reclaim_reent+0x100>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x38041612),        //ld $r1 = 88 (0x58)[$r18];;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0xea000012),        //copyd $r0 = $r18
     _64(0x18000001b8044812),        //ld $r1 = 1312 (0x520)[$r18];;
     _32(0x088001c1),        //cb.deqz $r1? 1ea38 <_reclaim_reent+0x100>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17ffffaf),        //goto 1e8f0 <cleanup_glue>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838000c),        //ld $r14 = 0 (0x0)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3c48020c),        //lq $r18r19 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _sbrk_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0xea380000),        //copyd $r14 = $r0
     _32(0xea000001),        //copyd $r0 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _96(0x80000133a749040ce0483200),        //make $r18 = 314568 (0x4ccc8)
     _32(0x00000000),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000399),        //call 1f8e0 <_sbrk>
     _32(0x26090012),        //sw 0 (0x0)[$r18] = $r2;;
     _32(0x6005ffc0),        //compd.ne $r1 = $r0, -1 (0xffffffff);;
     _32(0x088001c1),        //cb.deqz $r1? 1eaa4 <_sbrk_r+0x54>;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x30040012),        //lwz $r1 = 0 (0x0)[$r18];;
     _32(0x08fffe41),        //cb.deqz $r1? 1ea8c <_sbrk_r+0x3c>;;
     _32(0x2605000e),        //sw 0 (0x0)[$r14] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000)        //ret ;;
 |];

let _malloc_trim_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0xea4c0000),        //copyd $r19 = $r0
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _64(0xa7410e0ce538f7ce),        //sbfd $r14 = $r14, 4063 (0xfdf)
     _32(0x00000003),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x9fffff79),        //call 1e8d0 <__malloc_lock>
     _96(0x80000116a7510c0ce0507400),        //make $r20 = 285136 (0x459d0)
     _32(0x00000000),        //sd 48 (0x30)[$r12] = $r20;;
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x38000414),        //ld $r0 = 16 (0x10)[$r20];;
     _32(0x38480200),        //ld $r18 = 8 (0x8)[$r0];;
     _32(0x6848ff12),        //andd $r18 = $r18, -4 (0xfffffffc);;
     _32(0x7139048e),        //addd $r14 = $r14, $r18;;
     _32(0x7b3a230e),        //srld $r14 = $r14, 12 (0xc);;
     _32(0x6138ffce),        //addd $r14 = $r14, -1 (0xffffffff);;
     _32(0x793a230e),        //slld $r14 = $r14, 12 (0xc);;
     _64(0x00000003e501ffce),        //compd.gt $r0 = $r14, 4095 (0xfff);;
     _32(0x088001c0),        //cb.deqz $r0? 1eb44 <_malloc_trim_r+0x7c>;;
     _32(0x9fffffc9),        //call 1ea50 <_sbrk_r>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38040414),        //ld $r1 = 16 (0x10)[$r20];;
     _32(0x71050481),        //addd $r1 = $r1, $r18;;
     _32(0x7001a040),        //compd.ne $r0 = $r0, $r1;;
     _32(0x088002c0),        //cb.deqz $r0? 1eb6c <_malloc_trim_r+0xa4>;;
     _32(0x9fffff67),        //call 1e8e0 <__malloc_unlock>
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe0000000),        //make $r0 = 0 (0x0)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffb9),        //call 1ea50 <_sbrk_r>
     _32(0xe504000e),        //negd $r1 = $r14
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0xe001ffc0),        //compd.ne $r0 = $r0, -1 (0xffffffff)
     _32(0xf549048e),        //sbfd $r18 = $r14, $r18
     _96(0x1000000090000122e0088000),        //make $r2 = 297472 (0x48a00);;
     _32(0x6a480052),        //ord $r18 = $r18, 1 (0x1);;
     _32(0x08800400),        //cb.deqz $r0? 1ebd0 <_malloc_trim_r+0x108>;;
     _32(0xea000013),        //copyd $r0 = $r19
     _32(0x30040002),        //lwz $r1 = 0 (0x0)[$r2];;
     _32(0x380c0414),        //ld $r3 = 16 (0x10)[$r20];;
     _32(0xf539104e),        //sbfw $r14 = $r14, $r1
     _32(0x27490203),        //sd 8 (0x8)[$r3] = $r18;;
     _32(0x9fffff4e),        //call 1e8e0 <__malloc_unlock>
     _32(0x26390002),        //sw 0 (0x0)[$r2] = $r14;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x38400e0c),        //ld $r16 = 56 (0x38)[$r12];;
     _32(0x3838060c),        //ld $r14 = 24 (0x18)[$r12];;
     _32(0x3c48080c),        //lq $r18r19 = 32 (0x20)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500c0c),        //ld $r20 = 48 (0x30)[$r12];;
     _32(0x9fffffa0),        //call 1ea50 <_sbrk_r>
     _32(0xe0040000),        //make $r1 = 0 (0x0)
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x38080414),        //ld $r2 = 16 (0x10)[$r20];;
     _32(0x75050002),        //sbfd $r1 = $r2, $r0;;
     _32(0x640d07c1),        //compd.le $r3 = $r1, 31 (0x1f);;
     _32(0x087ff5c3),        //cb.dnez $r3? 1eb44 <_malloc_trim_r+0x7c>;;
     _32(0xea040041),        //ord $r1 = $r1, 1 (0x1)
     _96(0x88000116e00c8000e0107000),        //make $r4 = 285120 (0x459c0)
     _96(0x100000009000012288000000),        //make $r3 = 297472 (0x48a00);;
     _32(0x38100004),        //ld $r4 = 0 (0x0)[$r4];;
     _32(0x27050202),        //sd 8 (0x8)[$r2] = $r1;;
     _32(0x75010004),        //sbfd $r0 = $r4, $r0;;
     _32(0x97ffffcc),        //goto 1eb44 <_malloc_trim_r+0x7c>
     _32(0x26010003),        //sw 0 (0x0)[$r3] = $r0;;
     _32(0x7f03f000)        //nop ;;
 |];

let _free_r: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0xea380001),        //copyd $r14 = $r1
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2749040c),        //sd 16 (0x10)[$r12] = $r18;;
     _32(0x888014c1),        //cb.deqz $r1? 1ed84 <_free_r+0x164>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffff24),        //call 1e8d0 <__malloc_lock>;;
     _32(0xe11cfc0e),        //addd $r7 = $r14, -16 (0xfffffff0)
     _96(0x88000116b818fe0ee0147400),        //make $r5 = 285136 (0x459d0)
     _32(0x08000000),        //ld $r6 = -8 (0xfffffff8)[$r14];;
     _32(0x38100405),        //ld $r4 = 16 (0x10)[$r5];;
     _32(0x6804ff86),        //andd $r1 = $r6, -2 (0xfffffffe);;
     _32(0x710d0047),        //addd $r3 = $r7, $r1;;
     _32(0xf011a0c4),        //compd.ne $r4 = $r4, $r3
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x88802144),        //cb.deqz $r4? 1ee80 <_free_r+0x260>
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x8b000d86),        //cb.odd $r6? 1ed4c <_free_r+0x12c>
     _32(0xf1010083),        //addd $r0 = $r3, $r2
     _32(0x27090203),        //sd 8 (0x8)[$r3] = $r2;;
     _32(0xe1140405),        //addd $r5 = $r5, 16 (0x10)
     _32(0x3810fc0e),        //ld $r4 = -16 (0xfffffff0)[$r14];;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0xf51d01c4),        //sbfd $r7 = $r4, $r7
     _32(0x71050101),        //addd $r1 = $r1, $r4;;
     _32(0xe8000040),        //andd $r0 = $r0, 1 (0x1)
     _32(0x38100407),        //ld $r4 = 16 (0x10)[$r7];;
     _32(0x7119a144),        //compd.eq $r6 = $r4, $r5;;
     _32(0x08001a06),        //cb.dnez $r6? 1ee40 <_free_r+0x220>;;
     _32(0x38180607),        //ld $r6 = 24 (0x18)[$r7];;
     _32(0x27190604),        //sd 24 (0x18)[$r4] = $r6;;
     _32(0x88802700),        //cb.deqz $r0? 1ef1c <_free_r+0x2fc>
     _32(0x27110406),        //sd 16 (0x10)[$r6] = $r4;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x69017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff);;
     _32(0x08000ec0),        //cb.dnez $r0? 1edb0 <_free_r+0x190>;;
     _32(0xe60720c1),        //extfz $r1 = $r1, 34 (0x22), 3 (0x3)
     _32(0xe0080001),        //make $r2 = 1 (0x1)
     _96(0x1000000090000116e00c7400),        //make $r3 = 285136 (0x459d0);;
     _32(0xf1000041),        //addw $r0 = $r1, 1 (0x1)
     _32(0xfa063081),        //sraw $r1 = $r1, 2 (0x2)
     _32(0x38100203),        //ld $r4 = 8 (0x8)[$r3];;
     _32(0xf9023040),        //sllw $r0 = $r0, 1 (0x1)
     _32(0x79066042),        //slld $r1 = $r2, $r1;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0xf90220c0),        //slld $r0 = $r0, 3 (0x3)
     _32(0x7a050101),        //ord $r1 = $r1, $r4;;
     _96(0x80000116b8087400e1107000),        //addd $r4 = $r0, 285120 (0x459c0)
     _96(0x180000009800011680000000),        //ld $r2 = 285136 (0x459d0)[$r0];;
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x27050203),        //sd 8 (0x8)[$r3] = $r1;;
     _32(0x27090407),        //sd 16 (0x10)[$r7] = $r2;;
     _96(0x1800000098000116a71d7400),        //sd 285136 (0x459d0)[$r0] = $r7;;
     _32(0x271d0602),        //sd 24 (0x18)[$r2] = $r7;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffee6),        //goto 1e8e0 <__malloc_unlock>;;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x0b0004c0),        //cb.odd $r0? 1ed9c <_free_r+0x17c>;;
     _32(0xf1050081),        //addd $r1 = $r1, $r2
     _32(0x61140405),        //addd $r5 = $r5, 16 (0x10);;
     _32(0xea100041),        //ord $r4 = $r1, 1 (0x1)
     _32(0x38000403),        //ld $r0 = 16 (0x10)[$r3];;
     _32(0x7009a140),        //compd.ne $r2 = $r0, $r5;;
     _32(0x08801d42),        //cb.deqz $r2? 1ef3c <_free_r+0x31c>;;
     _32(0x38080603),        //ld $r2 = 24 (0x18)[$r3];;
     _32(0x27090600),        //sd 24 (0x18)[$r0] = $r2;;
     _32(0x27010402),        //sd 16 (0x10)[$r2] = $r0;;
     _32(0x27110207),        //sd 8 (0x8)[$r7] = $r4;;
     _32(0x97ffffd1),        //goto 1ecc0 <_free_r+0xa0>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0xe9017fc1),        //compd.gtu $r0 = $r1, 511 (0x1ff)
     _32(0x2701fe0e),        //sd -8 (0xfffffff8)[$r14] = $r0;;
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x08fff1c0),        //cb.deqz $r0? 1ecc8 <_free_r+0xa8>;;
     _32(0x7b022241),        //srld $r0 = $r1, 9 (0x9);;
     _32(0x69090100),        //compd.gtu $r2 = $r0, 4 (0x4);;
     _32(0x08001382),        //cb.dnez $r2? 1eef0 <_free_r+0x2d0>;;
     _32(0x66035181),        //extfz $r0 = $r1, 37 (0x25), 6 (0x6);;
     _32(0xf1100e40),        //addw $r4 = $r0, 57 (0x39)
     _32(0x71000e00),        //addw $r0 = $r0, 56 (0x38);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x80000116b80c7404e1107004),        //addd $r4 = $r4, 285120 (0x459c0)
     _96(0x180000009800011680000000),        //ld $r3 = 285136 (0x459d0)[$r4];;
     _32(0x7009a0c4),        //compd.ne $r2 = $r4, $r3;;
     _32(0x08801702),        //cb.deqz $r2? 1ef60 <_free_r+0x340>;;
     _32(0x38080203),        //ld $r2 = 8 (0x8)[$r3];;
     _32(0x6808ff02),        //andd $r2 = $r2, -4 (0xfffffffc);;
     _32(0x7909a042),        //compd.gtu $r2 = $r2, $r1;;
     _32(0x08800102),        //cb.deqz $r2? 1ee10 <_free_r+0x1f0>;;
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x7101a0c4),        //compd.eq $r0 = $r4, $r3;;
     _32(0x08fffe80),        //cb.deqz $r0? 1edf4 <_free_r+0x1d4>;;
     _32(0x38100603),        //ld $r4 = 24 (0x18)[$r3];;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x27110607),        //sd 24 (0x18)[$r7] = $r4;;
     _32(0x270d0407),        //sd 16 (0x10)[$r7] = $r3;;
     _32(0x271d0404),        //sd 16 (0x10)[$r4] = $r7;;
     _32(0x271d0603),        //sd 24 (0x18)[$r3] = $r7;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffea9),        //goto 1e8e0 <__malloc_unlock>;;
     _32(0x080019c0),        //cb.dnez $r0? 1efdc <_free_r+0x3bc>;;
     _32(0xf1050042),        //addd $r1 = $r2, $r1
     _32(0x38000603),        //ld $r0 = 24 (0x18)[$r3];;
     _32(0xea080041),        //ord $r2 = $r1, 1 (0x1)
     _32(0x380c0403),        //ld $r3 = 16 (0x10)[$r3];;
     _32(0x27010603),        //sd 24 (0x18)[$r3] = $r0;;
     _32(0xea000012),        //copyd $r0 = $r18
     _32(0x270d0400),        //sd 16 (0x10)[$r0] = $r3;;
     _32(0x27090207),        //sd 8 (0x8)[$r7] = $r2;;
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x3838020c),        //ld $r14 = 8 (0x8)[$r12];;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3848040c),        //ld $r18 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x17fffe99),        //goto 1e8e0 <__malloc_unlock>;;
     _32(0x8b000246),        //cb.odd $r6? 1eea4 <_free_r+0x284>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0x3800fc0e),        //ld $r0 = -16 (0xfffffff0)[$r14];;
     _32(0xf51d01c0),        //sbfd $r7 = $r0, $r7
     _32(0x71050001),        //addd $r1 = $r1, $r0;;
     _32(0x38080407),        //ld $r2 = 16 (0x10)[$r7];;
     _32(0x38000607),        //ld $r0 = 24 (0x18)[$r7];;
     _32(0x27010602),        //sd 24 (0x18)[$r2] = $r0;;
     _32(0x27090400),        //sd 16 (0x10)[$r0] = $r2;;
     _32(0xea0c0041),        //ord $r3 = $r1, 1 (0x1)
     _96(0x88000116e0007400e0087200),        //make $r2 = 285128 (0x459c8)
     _96(0x100000009000011688000000),        //make $r0 = 285136 (0x459d0);;
     _32(0x38080002),        //ld $r2 = 0 (0x0)[$r2];;
     _32(0x270d0207),        //sd 8 (0x8)[$r7] = $r3;;
     _32(0x271d0400),        //sd 16 (0x10)[$r0] = $r7;;
     _32(0x7905a042),        //compd.gtu $r1 = $r2, $r1;;
     _32(0x087fe601),        //cb.dnez $r1? 1ed30 <_free_r+0x110>;;
     _32(0xea000012),        //copyd $r0 = $r18
     _96(0x0800000088000122e0048e00),        //make $r1 = 297528 (0x48a38);;
     _32(0x9ffffef9),        //call 1eac8 <_malloc_trim_r>
     _32(0x38040001),        //ld $r1 = 0 (0x0)[$r1];;
     _32(0x17ffff91),        //goto 1ed30 <_free_r+0x110>;;
     _32(0x69090500),        //compd.gtu $r2 = $r0, 20 (0x14);;
     _32(0x08800302),        //cb.deqz $r2? 1ef24 <_free_r+0x304>;;
     _32(0x69091500),        //compd.gtu $r2 = $r0, 84 (0x54);;
     _32(0x080008c2),        //cb.dnez $r2? 1ef88 <_free_r+0x368>;;
     _32(0x6603b301),        //extfz $r0 = $r1, 43 (0x2b), 12 (0xc);;
     _32(0xf1101bc0),        //addw $r4 = $r0, 111 (0x6f)
     _32(0x71001b80),        //addw $r0 = $r0, 110 (0x6e);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffb0),        //goto 1edd4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x97ffff90),        //goto 1ed5c <_free_r+0x13c>
     _32(0x71050081),        //addd $r1 = $r1, $r2;;
     _32(0xf1101700),        //addw $r4 = $r0, 92 (0x5c)
     _32(0x710016c0),        //addw $r0 = $r0, 91 (0x5b);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffffa8),        //goto 1edd4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _96(0x0000000080000116e0007400),        //make $r0 = 285136 (0x459d0);;
     _32(0x271d0a00),        //sd 40 (0x28)[$r0] = $r7;;
     _32(0x271d0800),        //sd 32 (0x20)[$r0] = $r7;;
     _32(0x27150607),        //sd 24 (0x18)[$r7] = $r5;;
     _32(0x28110207),        //sq 8 (0x8)[$r7] = $r4r5;;
     _32(0x97ffff76),        //goto 1ed30 <_free_r+0x110>
     _32(0x2707e047),        //sd $r1[$r7] = $r1;;
     _32(0xe0040001),        //make $r1 = 1 (0x1)
     _32(0xfa023080),        //sraw $r0 = $r0, 2 (0x2)
     _96(0x1000000090000116e0087400),        //make $r2 = 285136 (0x459d0);;
     _32(0xf9026001),        //slld $r0 = $r1, $r0
     _32(0x38140202),        //ld $r5 = 8 (0x8)[$r2];;
     _32(0x7a010140),        //ord $r0 = $r0, $r5;;
     _32(0x97ffffa5),        //goto 1ee14 <_free_r+0x1f4>
     _32(0x27010202),        //sd 8 (0x8)[$r2] = $r0;;
     _32(0x69095500),        //compd.gtu $r2 = $r0, 340 (0x154);;
     _32(0x08000202),        //cb.dnez $r2? 1efac <_free_r+0x38c>;;
     _32(0x6603e3c1),        //extfz $r0 = $r1, 46 (0x2e), 15 (0xf);;
     _32(0xf1101e00),        //addw $r4 = $r0, 120 (0x78)
     _32(0x71001dc0),        //addw $r0 = $r0, 119 (0x77);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff8c),        //goto 1edd4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0xe01007f0),        //make $r4 = 2032 (0x7f0)
     _32(0xe000007e),        //make $r0 = 126 (0x7e)
     _64(0x10000001e9095500),        //compd.gtu $r2 = $r0, 1364 (0x554);;
     _32(0x087fe182),        //cb.dnez $r2? 1edd4 <_free_r+0x1b4>;;
     _32(0x67031481),        //extfz $r0 = $r1, 49 (0x31), 18 (0x12);;
     _32(0xf1101f40),        //addw $r4 = $r0, 125 (0x7d)
     _32(0x71001f00),        //addw $r0 = $r0, 124 (0x7c);;
     _32(0x79123044),        //sllw $r4 = $r4, 1 (0x1);;
     _32(0x6913f004),        //sxwd $r4 = $r4;;
     _32(0x97ffff80),        //goto 1edd4 <_free_r+0x1b4>
     _32(0x791220c4),        //slld $r4 = $r4, 3 (0x3);;
     _32(0x6a000041),        //ord $r0 = $r1, 1 (0x1);;
     _32(0x27010207),        //sd 8 (0x8)[$r7] = $r0;;
     _32(0x97ffff53),        //goto 1ed30 <_free_r+0x110>
     _32(0x27050003),        //sd 0 (0x0)[$r3] = $r1;;
     _32(0x00000000)        //errop ;;
 |];

let __libc_lock_init: list_I = 
 [|
     _32(0x08800080),        //cb.deqz $r0? 1eff8 <__libc_lock_init+0x8>;;
     _32(0x10003e63),        //goto 2e980 <__cos_recursive_initlock_base>;;
     _32(0x00000000),        //errop ;;
     _32(0x10003e61)        //goto 2e980 <__cos_recursive_initlock_base>;;
 |];

let __libc_lock_close: list_I = 
 [|
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_try_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0xf0055081),        //addx2w $r1 = $r1, $r2
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x98003e59),        //call 2e990 <__cos_recursive_trylock_base>
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _64(0x00000000f005b040),        //compw.ne $r1 = $r0, 1 (0x1);;
     _32(0x0c8001c1),        //cb.weqz $r1? 1f058 <__libc_lock_try_acquire+0x50>;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x0000000080000000e0040000),        //make $r1 = 0 (0x0);;
     _32(0x08000201),        //cb.dnez $r1? 1f084 <__libc_lock_try_acquire+0x7c>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _64(0xb840040cf101b000),        //compw.eq $r0 = $r0, 0 (0x0)
     _32(0x08000000),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x0fd00000),        //ret ;;
     _96(0x80000000e0080000e0040040),        //make $r1 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r2 = 0 (0x0);;
     _32(0xe0090002),        //compd.ne $r2 = $r2, 0 (0x0)
     _64(0x08000000f505b041),        //compw.gt $r1 = $r1, 1 (0x1);;
     _32(0x78051081),        //andw $r1 = $r1, $r2;;
     _32(0x0c000101),        //cb.wnez $r1? 1f0bc <__libc_lock_try_acquire+0xb4>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x97ffffee),        //goto 1f06c <__libc_lock_try_acquire+0x64>
     _32(0x3fcd0000),        //fence ;;
     _32(0x98003c61),        //call 2e240 <mppa_cos_l2_wb_inval>
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x97fffffb),        //goto 1f0b4 <__libc_lock_try_acquire+0xac>
     _32(0x3f8d0000)        //dinval ;;
 |];

let __libc_lock_acquire: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0xe407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8)
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0x78383fc2),        //zxbd $r14 = $r2;;
     _32(0xf0395381),        //addx2w $r14 = $r1, $r14
     _32(0xea480000),        //copyd $r18 = $r0
     _32(0x2849060c),        //sq 24 (0x18)[$r12] = $r18r19;;
     _32(0xf14c004e),        //addw $r19 = $r14, 1 (0x1)
     _32(0xe0500000),        //make $r20 = 0 (0x0)
     _32(0xf138004e),        //addw $r14 = $r14, 1 (0x1)
     _32(0x27510a0c),        //sd 40 (0x28)[$r12] = $r20;;
     _32(0x27410c0c),        //sd 48 (0x30)[$r12] = $r16;;
     _32(0x9fffffbe),        //call 1f008 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c800380),        //cb.weqz $r0? 1f150 <__libc_lock_acquire+0x80>;;
     _32(0x26510e0c),        //sw 56 (0x38)[$r12] = $r20;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7705b4c1),        //compw.geu $r1 = $r1, $r19;;
     _32(0x0c7ffe81),        //cb.wnez $r1? 1f110 <__libc_lock_acquire+0x40>;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x71040041),        //addw $r1 = $r1, 1 (0x1);;
     _32(0x26050e0c),        //sw 56 (0x38)[$r12] = $r1;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x7605b381),        //compw.ltu $r1 = $r1, $r14;;
     _32(0x0c7ffec1),        //cb.wnez $r1? 1f12c <__libc_lock_acquire+0x5c>;;
     _32(0x9fffffb1),        //call 1f008 <__libc_lock_try_acquire>
     _32(0x6a000012),        //copyd $r0 = $r18;;
     _32(0x0c7ffd00),        //cb.wnez $r0? 1f11c <__libc_lock_acquire+0x4c>;;
     _96(0x0000000080000000e0000000),        //make $r0 = 0 (0x0);;
     _32(0x08000240),        //cb.dnez $r0? 1f180 <__libc_lock_acquire+0xb0>;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _96(0x80000000e0040000e0000040),        //make $r0 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r1 = 0 (0x0);;
     _32(0xe0050001),        //compd.ne $r1 = $r1, 0 (0x0)
     _64(0x08000000f501b040),        //compw.gt $r0 = $r0, 1 (0x1);;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x0c000280),        //cb.wnez $r0? 1f1d0 <__libc_lock_acquire+0x100>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0x38400c0c),        //ld $r16 = 48 (0x30)[$r12];;
     _32(0x3838040c),        //ld $r14 = 16 (0x10)[$r12];;
     _32(0x3c48060c),        //lq $r18r19 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x8fd00000),        //ret 
     _32(0xe130100c),        //addd $r12 = $r12, 64 (0x40)
     _32(0x38500a0c),        //ld $r20 = 40 (0x28)[$r12];;
     _32(0x18003c1c),        //call 2e240 <mppa_cos_l2_wb_inval>;;
     _32(0x97fffff7),        //goto 1f1b0 <__libc_lock_acquire+0xe0>
     _32(0x3f8d0000),        //dinval ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __libc_lock_release: list_I = 
 [|
     _32(0x8fc40081),        //get $r1 = $pcr
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x8fc40082),        //get $r2 = $pcr
     _32(0x6407f201),        //extfz $r1 = $r1, 15 (0xf), 8 (0x8);;
     _32(0xf4055041),        //addx8w $r1 = $r1, $r1
     _32(0xf80c3fc2),        //zxbd $r3 = $r2
     _96(0x1000000090000000e0080000),        //make $r2 = 0 (0x0);;
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0x700550c1),        //addx2w $r1 = $r1, $r3;;
     _32(0xf1040041),        //addw $r1 = $r1, 1 (0x1)
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x880001c2),        //cb.dnez $r2? 1f230 <__libc_lock_release+0x50>
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10003e2b),        //goto 2ead8 <__cos_recursive_unlock_base>;;
     _96(0x80000000e00c0000e0080040),        //make $r2 = 1 (0x1)
     _96(0x080000008800000080000000),        //make $r3 = 0 (0x0);;
     _32(0xe00d0003),        //compd.ne $r3 = $r3, 0 (0x0)
     _64(0x08000000f509b042),        //compw.gt $r2 = $r2, 1 (0x1);;
     _32(0x780910c2),        //andw $r2 = $r2, $r3;;
     _32(0x0c0001c2),        //cb.wnez $r2? 1f274 <__libc_lock_release+0x94>;;
     _32(0x3f8d0000),        //dinval ;;
     _32(0x3fcd0000),        //fence ;;
     _32(0xe130080c),        //addd $r12 = $r12, 32 (0x20)
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x10003e1a),        //goto 2ead8 <__cos_recursive_unlock_base>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x98003bf2),        //call 2e240 <mppa_cos_l2_wb_inval>
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x97fffff6),        //goto 1f260 <__libc_lock_release+0x80>
     _32(0x3f8d0000)        //dinval ;;
 |];

let adr_start:bits(addr_bits) = 0b00011001010010010000; //0x19490
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq44444444, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur44444444, 0b00010110100100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq44444444, 0b00010110101000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr44444444, 0b00010110101101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq1428166432128, 0b00010110110100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur1428166432128, 0b00010110111000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq1428166432128, 0b00010110111100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr1428166432128, 0b00010111000001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq33333333, 0b00010111001000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur33333333, 0b00010111001110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq33333333, 0b00010111010111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr33333333, 0b00010111011110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq65656565, 0b00010111101000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur65656565, 0b00010111101111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq65656565, 0b00010111111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr65656565, 0b00010111111111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq14141461461414, 0b00011000001001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur14141461461414, 0b00011000010000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq14141461461414, 0b00011000011010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr14141461461414, 0b00011000100010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(uq77777777, 0b00011000101101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ur77777777, 0b00011000110101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sq77777777, 0b00011000111111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(sr77777777, 0b00011001001000000000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00011001010010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivdi3, 0b00011101011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__umoddi3, 0b00011101011110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivmoddi4, 0b00011101100000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__divdi3, 0b00011101100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__moddi3, 0b00011101100101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00011101100111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_fini_array, 0b00011101100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_init_array, 0b00011101101001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r_part_0, 0b00011101101011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal_r, 0b00011101101101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_signal_r, 0b00011101101101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_raise_r, 0b00011101110000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp_r, 0b00011101110011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(raise, 0b00011101110110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(signal, 0b00011101110110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_init_signal, 0b00011101111001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__sigtramp, 0b00011101111010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_kill_r, 0b00011101111010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_getpid_r, 0b00011101111100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_r, 0b00011101111100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_lock, 0b00011110100011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__malloc_unlock, 0b00011110100011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(cleanup_glue, 0b00011110100011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_reclaim_reent, 0b00011110100100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_sbrk_r, 0b00011110101001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_malloc_trim_r, 0b00011110101011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(_free_r, 0b00011110110000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_init, 0b00011110111111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_close, 0b00011111000000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_try_acquire, 0b00011111000000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_acquire, 0b00011111000011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__libc_lock_release, 0b00011111000111100000, num_instr, mI);
adr_end_main = adr_end_main - 4;
//print_list_instr(mI);
//create and initialize the VLIW pipeline
k1pipeline:vliw_k1_pipeline = create_vliw_k1_pipeline();
//initialize VLIW counters and data structures (PFB, bundles, syllables, etc.)
(bdl:bundle, nb_syllables:int, nb_bundles:int)=initialize_vliw();
//set PC to the first address of the program
PC = 0x0000000000019490;
cycles:int=0;
bdl_formed:bool=false;
//execute vliw pipeline
(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed) = execute_vliw_pipeline(k1pipeline, mI, mD, bdl, nb_bundles, cycles, icount, bdl_formed, num_instr, adr_end_main);
print_list_data(mD);
}
