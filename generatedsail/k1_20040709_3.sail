// executing 20040709_3 test 
val k1_20040709_3: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_20040709_3() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let myrnd: list_I = 
 [|
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x120e3273db003340),        //mulw $r0 = $r0, 1103515245 (0x41c64e6d);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x0000000cf1000e40),        //addw $r0 = $r0, 12345 (0x3039);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000124e0000200),        //make $r0 = 299016 (0x49008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7b023400),        //srlw $r0 = $r0, 16 (0x10);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeA: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe2),        //call 168a0 <retmeA>;;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitA: list_I = 
 [|
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3A: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 16a08 <retitA>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testA: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 16af0 <testA+0x50>;;
     _32(0x1fffff56),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b040),        //compw.leu $r0 = $r0, 1 (0x1);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 16ac8 <testA+0x28>;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x600807ff),        //make $r2 = 2047 (0x7ff);;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffff3a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffff38),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 168b8 <fn1A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16c68 <testA+0x1c8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16c6c <testA+0x1cc>;;
     _32(0x18002a24),        //call 214f8 <abort>;;
     _32(0x1ffffeed),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffeeb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 16940 <fn2A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000e80),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 16dd4 <testA+0x334>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16dd8 <testA+0x338>;;
     _32(0x180029c9),        //call 214f8 <abort>;;
     _32(0x1ffffe92),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffe90),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0044c00),        //make $r1 = 331056 (0x50d30);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff00),        //call 16a28 <fn3A>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034080),        //extfz $r0 = $r0, 4 (0x4), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004c00),        //make $r0 = 331056 (0x50d30);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 16f04 <testA+0x464>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16f08 <testA+0x468>;;
     _32(0x1800297d),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeB: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2800050c),        //lhz $r0 = 20 (0x14)[$r12];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2804070c),        //lhz $r1 = 28 (0x1c)[$r12];;
     _32(0x6203f801),        //insf $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffd8),        //call 16f20 <retmeB>;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x2405060c),        //sb 24 (0x18)[$r12] = $r1;;
     _32(0x6407f200),        //extfz $r1 = $r0, 15 (0xf), 8 (0x8);;
     _32(0x2405064c),        //sb 25 (0x19)[$r12] = $r1;;
     _32(0x65077400),        //extfz $r1 = $r0, 23 (0x17), 16 (0x10);;
     _32(0x2405068c),        //sb 26 (0x1a)[$r12] = $r1;;
     _32(0x6507f600),        //extfz $r1 = $r0, 31 (0x1f), 24 (0x18);;
     _32(0x240506cc),        //sb 27 (0x1b)[$r12] = $r1;;
     _32(0x66077800),        //extfz $r1 = $r0, 39 (0x27), 32 (0x20);;
     _32(0x2405070c),        //sb 28 (0x1c)[$r12] = $r1;;
     _32(0x6603fa00),        //extfz $r0 = $r0, 47 (0x2f), 40 (0x28);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitB: list_I = 
 [|
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3B: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 170e8 <retitB>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testB: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 171d0 <testB+0x50>;;
     _32(0x1ffffd9e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b140),        //compw.leu $r0 = $r0, 5 (0x5);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 171a8 <testB+0x28>;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x600807ff),        //make $r2 = 2047 (0x7ff);;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffd82),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd80),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3a),        //call 16f58 <fn1B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x3004068c),        //lwz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30000080),        //lwz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17340 <testB+0x1c0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17344 <testB+0x1c4>;;
     _32(0x1800286e),        //call 214f8 <abort>;;
     _32(0x1ffffd37),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffd35),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1f),        //call 17018 <fn2B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x3004068c),        //lwz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30000080),        //lwz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 174a4 <testB+0x324>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 174a8 <testB+0x328>;;
     _32(0x18002815),        //call 214f8 <abort>;;
     _32(0x1ffffcde),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffcdc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042800),        //make $r1 = 330912 (0x50ca0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff02),        //call 17108 <fn3B>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _32(0x3004068c),        //lwz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0002800),        //make $r0 = 330912 (0x50ca0);;
     _32(0x30000080),        //lwz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 175cc <testB+0x44c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 175d0 <testB+0x450>;;
     _32(0x180027cb),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeC: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x2800050c),        //lhz $r0 = 20 (0x14)[$r12];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2804070c),        //lhz $r1 = 28 (0x1c)[$r12];;
     _32(0x6203f801),        //insf $r0 = $r1, 47 (0x2f), 32 (0x20);;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800070c),        //lhz $r0 = 28 (0x1c)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffd8),        //call 175e8 <retmeC>;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _32(0x2405060c),        //sb 24 (0x18)[$r12] = $r1;;
     _32(0x6407f200),        //extfz $r1 = $r0, 15 (0xf), 8 (0x8);;
     _32(0x2405064c),        //sb 25 (0x19)[$r12] = $r1;;
     _32(0x65077400),        //extfz $r1 = $r0, 23 (0x17), 16 (0x10);;
     _32(0x2405068c),        //sb 26 (0x1a)[$r12] = $r1;;
     _32(0x6507f600),        //extfz $r1 = $r0, 31 (0x1f), 24 (0x18);;
     _32(0x240506cc),        //sb 27 (0x1b)[$r12] = $r1;;
     _32(0x66077800),        //extfz $r1 = $r0, 39 (0x27), 32 (0x20);;
     _32(0x2405070c),        //sb 28 (0x1c)[$r12] = $r1;;
     _32(0x6603fa00),        //extfz $r0 = $r0, 47 (0x2f), 40 (0x28);;
     _32(0x2401074c),        //sb 29 (0x1d)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800070c),        //lhz $r0 = 28 (0x1c)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800070c),        //lhz $r0 = 28 (0x1c)[$r12];;
     _32(0x6003f141),        //insf $r0 = $r1, 15 (0xf), 5 (0x5);;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitC: list_I = 
 [|
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3C: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 177b0 <retitC>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testC: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17898 <testC+0x50>;;
     _32(0x1ffffbec),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b140),        //compw.leu $r0 = $r0, 5 (0x5);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17870 <testC+0x28>;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x600807ff),        //make $r2 = 2047 (0x7ff);;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffbd0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffbce),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3a),        //call 17620 <fn1C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17a08 <testC+0x1c0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17a0c <testC+0x1c4>;;
     _32(0x180026bc),        //call 214f8 <abort>;;
     _32(0x1ffffb85),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffb83),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1f),        //call 176e0 <fn2C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 17b6c <testC+0x324>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17b70 <testC+0x328>;;
     _32(0x18002663),        //call 214f8 <abort>;;
     _32(0x1ffffb2c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffb2a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042600),        //make $r1 = 330904 (0x50c98);;
     _32(0x28000101),        //lhz $r0 = 4 (0x4)[$r1];;
     _32(0x6003f142),        //insf $r0 = $r2, 15 (0xf), 5 (0x5);;
     _32(0x25010101),        //sh 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _32(0x2605060c),        //sw 24 (0x18)[$r12] = $r1;;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x2501070c),        //sh 28 (0x1c)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff02),        //call 177d0 <fn3C>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64033000),        //extfz $r0 = $r0, 3 (0x3), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64034100),        //extfz $r0 = $r0, 4 (0x4), 4 (0x4);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x28000100),        //lhz $r0 = 4 (0x4)[$r0];;
     _32(0x6403f140),        //extfz $r0 = $r0, 15 (0xf), 5 (0x5);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0002600),        //make $r0 = 330904 (0x50c98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 17c94 <testC+0x44c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17c98 <testC+0x450>;;
     _32(0x18002619),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeD: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 17cb0 <retmeD>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitD: list_I = 
 [|
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3D: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 17e08 <retitD>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testD: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 17ef0 <testD+0x50>;;
     _32(0x1ffffa56),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 17ec8 <testD+0x28>;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffffa39),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffffa37),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 17cc8 <fn1D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000dc0),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 18098 <testD+0x1f8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1809c <testD+0x1fc>;;
     _32(0x18002518),        //call 214f8 <abort>;;
     _32(0x1ffff9e1),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff9df),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff17),        //call 17d48 <fn2D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001140),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 18230 <testD+0x390>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18234 <testD+0x394>;;
     _32(0x180024b2),        //call 214f8 <abort>;;
     _32(0x1ffff97b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff979),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044a00),        //make $r1 = 331048 (0x50d28);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffee9),        //call 17e28 <fn3D>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000580),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004a00),        //make $r0 = 331048 (0x50d28);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1838c <testD+0x4ec>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18390 <testD+0x4f0>;;
     _32(0x1800245b),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeE: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 183a8 <retmeE>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitE: list_I = 
 [|
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3E: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 18500 <retitE>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testE: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 185e8 <testE+0x50>;;
     _32(0x1ffff898),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 185c0 <testE+0x28>;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff87b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff879),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 183c0 <fn1E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 18780 <testE+0x1e8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 18780 <testE+0x1e8>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 18780 <testE+0x1e8>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18780 <testE+0x1e8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18784 <testE+0x1ec>;;
     _32(0x1800235e),        //call 214f8 <abort>;;
     _32(0x1ffff827),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff825),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1b),        //call 18440 <fn2E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 18908 <testE+0x370>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18908 <testE+0x370>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18908 <testE+0x370>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18908 <testE+0x370>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1890c <testE+0x374>;;
     _32(0x180022fc),        //call 214f8 <abort>;;
     _32(0x1ffff7c5),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff7c3),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0045e00),        //make $r1 = 331128 (0x50d78);;
     _32(0x30000301),        //lwz $r0 = 12 (0xc)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010301),        //sw 12 (0xc)[$r1] = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 18520 <fn3E>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 18a54 <testE+0x4bc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 18a54 <testE+0x4bc>;;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 18a54 <testE+0x4bc>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0005e00),        //make $r0 = 331128 (0x50d78);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18a54 <testE+0x4bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18a58 <testE+0x4c0>;;
     _32(0x180022a9),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeF: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe3),        //call 18a70 <retmeF>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6103f0c1),        //insf $r0 = $r1, 31 (0x1f), 3 (0x3);;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitF: list_I = 
 [|
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3F: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 18bc8 <retitF>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testF: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 18cb0 <testF+0x50>;;
     _32(0x1ffff6e6),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 18c88 <testF+0x28>;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _64(0x0007ffffe008ffc0),        //make $r2 = 536870911 (0x1fffffff);;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff6c9),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff6c7),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 18a88 <fn1F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 18e48 <testF+0x1e8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18e4c <testF+0x1ec>;;
     _32(0x180021ac),        //call 214f8 <abort>;;
     _32(0x1ffff675),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff673),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1b),        //call 18b08 <fn2F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 18fd0 <testF+0x370>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 18fd0 <testF+0x370>;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 18fd0 <testF+0x370>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 18fd0 <testF+0x370>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 18fd4 <testF+0x374>;;
     _32(0x1800214a),        //call 214f8 <abort>;;
     _32(0x1ffff613),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff611),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x0007fffff800ffc0),        //andw $r0 = $r0, 536870911 (0x1fffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000143e0044e00),        //make $r1 = 331064 (0x50d38);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6103f0c2),        //insf $r0 = $r2, 31 (0x1f), 3 (0x3);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 18be8 <fn3F>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1911c <testF+0x4bc>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1911c <testF+0x4bc>;;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7001b040),        //compw.ne $r0 = $r0, $r1;;
     _32(0x0c000480),        //cb.wnez $r0? 1911c <testF+0x4bc>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0004e00),        //make $r0 = 331064 (0x50d38);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1911c <testF+0x4bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19120 <testF+0x4c0>;;
     _32(0x180020f7),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeG: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x20000a0c),        //lbz $r0 = 40 (0x28)[$r12];;
     _32(0x24010e0c),        //sb 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x20040e0c),        //lbz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x60037081),        //insf $r0 = $r1, 7 (0x7), 2 (0x2);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 19138 <retmeG>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2000060c),        //lbz $r0 = 24 (0x18)[$r12];;
     _32(0x60037001),        //insf $r0 = $r1, 7 (0x7), 0 (0x0);;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x60037081),        //insf $r0 = $r1, 7 (0x7), 2 (0x2);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x60037081),        //insf $r0 = $r1, 7 (0x7), 2 (0x2);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitG: list_I = 
 [|
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3G: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 192d0 <retitG>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testG: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 193b8 <testG+0x50>;;
     _32(0x1ffff524),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b200),        //compw.leu $r0 = $r0, 8 (0x8);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19390 <testG+0x28>;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff508),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff506),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 19168 <fn1G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 19524 <testG+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 19524 <testG+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19524 <testG+0x1bc>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19524 <testG+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19528 <testG+0x1c0>;;
     _32(0x18001ff5),        //call 214f8 <abort>;;
     _32(0x1ffff4be),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff4bc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 19208 <fn2G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 19684 <testG+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 19684 <testG+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 19684 <testG+0x31c>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 19684 <testG+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19688 <testG+0x320>;;
     _32(0x18001f9d),        //call 214f8 <abort>;;
     _32(0x1ffff466),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff464),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045a00),        //make $r1 = 331112 (0x50d68);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60037082),        //insf $r0 = $r2, 7 (0x7), 2 (0x2);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 192f0 <fn3G>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 197a8 <testG+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031040),        //extfz $r0 = $r0, 1 (0x1), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 197a8 <testG+0x440>;;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037080),        //extfz $r0 = $r0, 7 (0x7), 2 (0x2);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 197a8 <testG+0x440>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0005a00),        //make $r0 = 331112 (0x50d68);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 197a8 <testG+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 197ac <testG+0x444>;;
     _32(0x18001f54),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeH: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x2401044c),        //sb 17 (0x11)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffe1),        //call 197c0 <retmeH>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2000044c),        //lbz $r0 = 17 (0x11)[$r12];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x2401044c),        //sb 17 (0x11)[$r12] = $r0;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x2401044c),        //sb 17 (0x11)[$r12] = $r0;;
     _32(0x2000044c),        //lbz $r0 = 17 (0x11)[$r12];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitH: list_I = 
 [|
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3H: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20040040),        //lbz $r1 = 1 (0x1)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _32(0x1fffffea),        //call 198e8 <retitH>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testH: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 199a8 <testH+0x50>;;
     _32(0x1ffff3a8),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19980 <testH+0x28>;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff390),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff38e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff72),        //call 197f0 <fn1H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 19ae8 <testH+0x190>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 19ae8 <testH+0x190>;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19ae8 <testH+0x190>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19ae8 <testH+0x190>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19aec <testH+0x194>;;
     _32(0x18001e84),        //call 214f8 <abort>;;
     _32(0x1ffff34d),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff34b),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4d),        //call 19868 <fn2H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x2004044c),        //lbz $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 19c2c <testH+0x2d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19c30 <testH+0x2d8>;;
     _32(0x18001e33),        //call 214f8 <abort>;;
     _32(0x1ffff2fc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff2fa),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x24050040),        //sb 1 (0x1)[$r0] = $r1;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff22),        //call 19900 <fn3H>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000940),        //cb.wnez $r0? 19d3c <testH+0x3e4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64037180),        //extfz $r0 = $r0, 7 (0x7), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000680),        //cb.wnez $r0? 19d3c <testH+0x3e4>;;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x20000040),        //lbz $r0 = 1 (0x1)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 19d3c <testH+0x3e4>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0002a00),        //make $r0 = 330920 (0x50ca8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 19d3c <testH+0x3e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 19d40 <testH+0x3e8>;;
     _32(0x18001def),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeI: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x20000a0c),        //lbz $r0 = 40 (0x28)[$r12];;
     _32(0x24010e0c),        //sb 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x20040e0c),        //lbz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x600371c1),        //insf $r0 = $r1, 7 (0x7), 7 (0x7);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 19d58 <retmeI>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2000060c),        //lbz $r0 = 24 (0x18)[$r12];;
     _32(0x60037001),        //insf $r0 = $r1, 7 (0x7), 0 (0x0);;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x600371c1),        //insf $r0 = $r1, 7 (0x7), 7 (0x7);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2000040c),        //lbz $r0 = 16 (0x10)[$r12];;
     _32(0x600371c1),        //insf $r0 = $r1, 7 (0x7), 7 (0x7);;
     _32(0x2401040c),        //sb 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitI: list_I = 
 [|
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3I: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 19ef0 <retitI>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testI: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 19fd8 <testI+0x50>;;
     _32(0x1ffff21c),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b200),        //compw.leu $r0 = $r0, 8 (0x8);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 19fb0 <testI+0x28>;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff200),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff1fe),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 19d88 <fn1I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1a144 <testI+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a148 <testI+0x1c0>;;
     _32(0x18001ced),        //call 214f8 <abort>;;
     _32(0x1ffff1b6),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff1b4),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 19e28 <fn2I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1a2a4 <testI+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a2a8 <testI+0x320>;;
     _32(0x18001c95),        //call 214f8 <abort>;;
     _32(0x1ffff15e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff15c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044200),        //make $r1 = 331016 (0x50d08);;
     _32(0x20000001),        //lbz $r0 = 0 (0x0)[$r1];;
     _32(0x600371c2),        //insf $r0 = $r2, 7 (0x7), 7 (0x7);;
     _32(0x24010001),        //sb 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x20000200),        //lbz $r0 = 8 (0x8)[$r0];;
     _32(0x2401060c),        //sb 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 19f10 <fn3I>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1a3c8 <testI+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1a3c8 <testI+0x440>;;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x640371c0),        //extfz $r0 = $r0, 7 (0x7), 7 (0x7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a3c8 <testI+0x440>;;
     _32(0x3804044c),        //ld $r1 = 17 (0x11)[$r12];;
     _96(0x0000000080000143e0004200),        //make $r0 = 331016 (0x50d08);;
     _32(0x38000040),        //ld $r0 = 1 (0x1)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1a3c8 <testI+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a3cc <testI+0x444>;;
     _32(0x18001c4c),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeJ: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1a3e0 <retmeJ>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f241),        //insf $r0 = $r1, 15 (0xf), 9 (0x9);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitJ: list_I = 
 [|
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3J: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1a540 <retitJ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testJ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1a628 <testJ+0x50>;;
     _32(0x1ffff088),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1a600 <testJ+0x28>;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6008007f),        //make $r2 = 127 (0x7f);;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1ffff06c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff06a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1a3f8 <fn1J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1a78c <testJ+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a790 <testJ+0x1b8>;;
     _32(0x18001b5b),        //call 214f8 <abort>;;
     _32(0x1ffff024),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1ffff022),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1a480 <fn2J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1a8e4 <testJ+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1a8e8 <testJ+0x310>;;
     _32(0x18001b05),        //call 214f8 <abort>;;
     _32(0x1fffefce),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffefcc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78001fc0),        //andw $r0 = $r0, 127 (0x7f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046200),        //make $r1 = 331144 (0x50d88);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003f242),        //insf $r0 = $r2, 15 (0xf), 9 (0x9);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1a560 <fn3J>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006200),        //make $r0 = 331144 (0x50d88);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1aa00 <testJ+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1aa04 <testJ+0x42c>;;
     _32(0x18001abe),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeK: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1aa18 <retmeK>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitK: list_I = 
 [|
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3K: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1ab78 <retitK>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testK: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ac60 <testK+0x50>;;
     _32(0x1fffeefa),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1ac38 <testK+0x28>;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffeede),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeedc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1aa30 <fn1K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d00),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a31c2),        //srlw $r2 = $r2, 7 (0x7);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2043),        //slld $r3 = $r3, 1 (0x1);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022240),        //slld $r0 = $r0, 9 (0x9);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1adf4 <testK+0x1e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1adf8 <testK+0x1e8>;;
     _32(0x180019c1),        //call 214f8 <abort>;;
     _32(0x1fffee8a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffee88),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1d),        //call 1aab8 <fn2K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001080),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a31c2),        //srlw $r2 = $r2, 7 (0x7);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2043),        //slld $r3 = $r3, 1 (0x1);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022240),        //slld $r0 = $r0, 9 (0x9);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1af7c <testK+0x36c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1af80 <testK+0x370>;;
     _32(0x1800195f),        //call 214f8 <abort>;;
     _32(0x1fffee28),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffee26),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045200),        //make $r1 = 331080 (0x50d48);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef3),        //call 1ab98 <fn3K>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x650301c0),        //extfz $r0 = $r0, 16 (0x10), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a31c2),        //srlw $r2 = $r2, 7 (0x7);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2043),        //slld $r3 = $r3, 1 (0x1);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022240),        //slld $r0 = $r0, 9 (0x9);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005200),        //make $r0 = 331080 (0x50d48);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b0c8 <testK+0x4b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b0cc <testK+0x4bc>;;
     _32(0x1800190c),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeL: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1b0e0 <retmeL>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitL: list_I = 
 [|
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3L: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1b240 <retitL>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testL: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b328 <testL+0x50>;;
     _32(0x1fffed48),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b300 <testL+0x28>;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffed2c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffed2a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1b0f8 <fn1L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c00),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b4ac <testL+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b4b0 <testL+0x1d8>;;
     _32(0x18001813),        //call 214f8 <abort>;;
     _32(0x1fffecdc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffecda),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 1b180 <fn2L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000f80),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1b624 <testL+0x34c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b628 <testL+0x350>;;
     _32(0x180017b5),        //call 214f8 <abort>;;
     _32(0x1fffec7e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffec7c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043600),        //make $r1 = 330968 (0x50cd8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 1b260 <fn3L>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20080000),        //lbz $r2 = 0 (0x0)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0040),        //lbz $r3 = 1 (0x1)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _96(0x0000000080000143e0003600),        //make $r0 = 330968 (0x50cd8);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1b760 <testL+0x488>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1b764 <testL+0x48c>;;
     _32(0x18001766),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeM: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1b778 <retmeM>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x60035001),        //insf $r0 = $r1, 5 (0x5), 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitM: list_I = 
 [|
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3M: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1b8d8 <retitM>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testM: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1b9c0 <testM+0x50>;;
     _32(0x1fffeba2),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1b998 <testM+0x28>;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffeb86),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeb84),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1b790 <fn1M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c00),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20080100),        //lbz $r2 = 4 (0x4)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0140),        //lbz $r3 = 5 (0x5)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000180),        //lbz $r0 = 6 (0x6)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1bb44 <testM+0x1d4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bb48 <testM+0x1d8>;;
     _32(0x1800166d),        //call 214f8 <abort>;;
     _32(0x1fffeb36),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffeb34),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff21),        //call 1b818 <fn2M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000f80),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20080100),        //lbz $r2 = 4 (0x4)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0140),        //lbz $r3 = 5 (0x5)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000180),        //lbz $r0 = 6 (0x6)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1bcbc <testM+0x34c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bcc0 <testM+0x350>;;
     _32(0x1800160f),        //call 214f8 <abort>;;
     _32(0x1fffead8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffead6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043c00),        //make $r1 = 330992 (0x50cf0);;
     _32(0x30000101),        //lwz $r0 = 4 (0x4)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010101),        //sw 4 (0x4)[$r1] = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 1b8f8 <fn3M>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20080100),        //lbz $r2 = 4 (0x4)[$r0];;
     _32(0x7b0a3182),        //srlw $r2 = $r2, 6 (0x6);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0140),        //lbz $r3 = 5 (0x5)[$r0];;
     _32(0x790e2083),        //slld $r3 = $r3, 2 (0x2);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000180),        //lbz $r0 = 6 (0x6)[$r0];;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x79022280),        //slld $r0 = $r0, 10 (0xa);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0003c00),        //make $r0 = 330992 (0x50cf0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1bdf8 <testM+0x488>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1bdfc <testM+0x48c>;;
     _32(0x180015c0),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeN: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1be10 <retmeN>;;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b181),        //insf $r0 = $r1, 11 (0xb), 6 (0x6);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitN: list_I = 
 [|
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3N: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1bf70 <retitN>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testN: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c058 <testN+0x50>;;
     _32(0x1fffe9fc),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b1c0),        //compw.leu $r0 = $r0, 7 (0x7);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c030 <testN+0x28>;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008003f),        //make $r2 = 63 (0x3f);;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe9e0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe9de),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1be28 <fn1N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000dc0),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000840),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1c1f8 <testN+0x1f0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c1fc <testN+0x1f4>;;
     _32(0x180014c0),        //call 214f8 <abort>;;
     _32(0x1fffe989),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe987),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1a),        //call 1beb0 <fn2N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001140),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000bc0),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1c38c <testN+0x384>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c390 <testN+0x388>;;
     _32(0x1800145b),        //call 214f8 <abort>;;
     _32(0x1fffe924),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe922),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0045800),        //make $r1 = 331104 (0x50d60);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b182),        //insf $r0 = $r2, 11 (0xb), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffeed),        //call 1bf90 <fn3N>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b180),        //extfz $r0 = $r0, 11 (0xb), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000580),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0005800),        //make $r0 = 331104 (0x50d60);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1c4e4 <testN+0x4dc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c4e8 <testN+0x4e0>;;
     _32(0x18001405),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeO: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1c500 <retmeO>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitO: list_I = 
 [|
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3O: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1c668 <retitO>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testO: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1c750 <testO+0x50>;;
     _32(0x1fffe83e),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1c728 <testO+0x28>;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe822),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe820),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1c518 <fn1O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1c8e4 <testO+0x1e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1c8e8 <testO+0x1e8>;;
     _32(0x18001305),        //call 214f8 <abort>;;
     _32(0x1fffe7ce),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe7cc),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1a),        //call 1c5a0 <fn2O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1ca6c <testO+0x36c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ca70 <testO+0x370>;;
     _32(0x180012a3),        //call 214f8 <abort>;;
     _32(0x1fffe76c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe76a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046c00),        //make $r1 = 331184 (0x50db0);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef2),        //call 1c688 <fn3O>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x30000300),        //lwz $r0 = 12 (0xc)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1cbb8 <testO+0x4b8>;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0280),        //lbz $r3 = 10 (0xa)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c02c0),        //lbz $r3 = 11 (0xb)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000300),        //lbz $r0 = 12 (0xc)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1cbb8 <testO+0x4b8>;;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cbb8 <testO+0x4b8>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006c00),        //make $r0 = 331184 (0x50db0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cbb8 <testO+0x4b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cbbc <testO+0x4bc>;;
     _32(0x18001250),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeP: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3c00040c),        //lq $r0r1 = 16 (0x10)[$r12];;
     _32(0x1fffffe2),        //call 1cbd0 <retmeP>;;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitP: list_I = 
 [|
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3P: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1cd38 <retitP>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testP: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ce20 <testP+0x50>;;
     _32(0x1fffe68a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b3c0),        //compw.leu $r0 = $r0, 15 (0xf);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1cdf8 <testP+0x28>;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe66e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe66c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4c),        //call 1cbe8 <fn1P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000cc0),        //cb.wnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1cfb4 <testP+0x1e4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1cfb8 <testP+0x1e8>;;
     _32(0x18001151),        //call 214f8 <abort>;;
     _32(0x1fffe61a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe618),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1a),        //call 1cc70 <fn2P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c001040),        //cb.wnez $r0? 1d13c <testP+0x36c>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d13c <testP+0x36c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d13c <testP+0x36c>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d13c <testP+0x36c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d140 <testP+0x370>;;
     _32(0x180010ef),        //call 214f8 <abort>;;
     _32(0x1fffe5b8),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe5b6),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0045400),        //make $r1 = 331088 (0x50d50);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x3c000000),        //lq $r0r1 = 0 (0x0)[$r0];;
     _32(0x2801040c),        //sq 16 (0x10)[$r12] = $r0r1;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef2),        //call 1cd58 <fn3P>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x30000100),        //lwz $r0 = 4 (0x4)[$r0];;
     _32(0x6503f0c0),        //extfz $r0 = $r0, 31 (0x1f), 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1d288 <testP+0x4b8>;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x66032300),        //extfz $r0 = $r0, 34 (0x22), 12 (0xc);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x200c0080),        //lbz $r3 = 2 (0x2)[$r0];;
     _32(0x790e2103),        //slld $r3 = $r3, 4 (0x4);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x200c00c0),        //lbz $r3 = 3 (0x3)[$r0];;
     _32(0x790e2303),        //slld $r3 = $r3, 12 (0xc);;
     _32(0x7a090083),        //ord $r2 = $r3, $r2;;
     _32(0x20000100),        //lbz $r0 = 4 (0x4)[$r0];;
     _32(0x680001c0),        //andd $r0 = $r0, 7 (0x7);;
     _32(0x79022500),        //slld $r0 = $r0, 20 (0x14);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d288 <testP+0x4b8>;;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d288 <testP+0x4b8>;;
     _32(0x3804060c),        //ld $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0005400),        //make $r0 = 331088 (0x50d50);;
     _32(0x38000200),        //ld $r0 = 8 (0x8)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d288 <testP+0x4b8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d28c <testP+0x4bc>;;
     _32(0x1800109c),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeQ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 1d2a0 <retmeQ>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitQ: list_I = 
 [|
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Q: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1d440 <retitQ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testQ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1d528 <testQ+0x50>;;
     _32(0x1fffe4c8),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1d500 <testQ+0x28>;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe4ac),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe4aa),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff42),        //call 1d2d0 <fn1Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d698 <testQ+0x1c0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d69c <testQ+0x1c4>;;
     _32(0x18000f98),        //call 214f8 <abort>;;
     _32(0x1fffe461),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe45f),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff1f),        //call 1d370 <fn2Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1d7fc <testQ+0x324>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d800 <testQ+0x328>;;
     _32(0x18000f3f),        //call 214f8 <abort>;;
     _32(0x1fffe408),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe406),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0047000),        //make $r1 = 331200 (0x50dc0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff02),        //call 1d460 <fn3Q>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1d924 <testQ+0x44c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c300),        //extfz $r0 = $r0, 12 (0xc), 12 (0xc);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1d924 <testQ+0x44c>;;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1d924 <testQ+0x44c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0007000),        //make $r0 = 331200 (0x50dc0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1d924 <testQ+0x44c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1d928 <testQ+0x450>;;
     _32(0x18000ef5),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeR: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60031001),        //insf $r0 = $r1, 1 (0x1), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 1d940 <retmeR>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60031001),        //insf $r0 = $r1, 1 (0x1), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60031001),        //insf $r0 = $r1, 1 (0x1), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitR: list_I = 
 [|
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3R: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1dad8 <retitR>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testR: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1dbc0 <testR+0x50>;;
     _32(0x1fffe322),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1db98 <testR+0x28>;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080003),        //make $r2 = 3 (0x3);;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe306),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe304),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1d970 <fn1R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1dd2c <testR+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1dd30 <testR+0x1c0>;;
     _32(0x18000df3),        //call 214f8 <abort>;;
     _32(0x1fffe2bc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe2ba),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 1da10 <fn2R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1de8c <testR+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1de8c <testR+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1de8c <testR+0x31c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1de8c <testR+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1de90 <testR+0x320>;;
     _32(0x18000d9b),        //call 214f8 <abort>;;
     _32(0x1fffe264),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe262),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x780000c0),        //andw $r0 = $r0, 3 (0x3);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043800),        //make $r1 = 330976 (0x50ce0);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60031002),        //insf $r0 = $r2, 1 (0x1), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 1daf8 <fn3R>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f340),        //extfz $r0 = $r0, 15 (0xf), 13 (0xd);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1dfb0 <testR+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403c080),        //extfz $r0 = $r0, 12 (0xc), 2 (0x2);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1dfb0 <testR+0x440>;;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64031000),        //extfz $r0 = $r0, 1 (0x1), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1dfb0 <testR+0x440>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003800),        //make $r0 = 330976 (0x50ce0);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1dfb0 <testR+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1dfb4 <testR+0x444>;;
     _32(0x18000d52),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeS: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 1dfc8 <retmeS>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitS: list_I = 
 [|
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3S: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e160 <retitS>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testS: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e248 <testS+0x50>;;
     _32(0x1fffe180),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e220 <testS+0x28>;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffe164),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe162),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1dff8 <fn1S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1e3b4 <testS+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e3b8 <testS+0x1c0>;;
     _32(0x18000c51),        //call 214f8 <abort>;;
     _32(0x1fffe11a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe118),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 1e098 <fn2S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1e514 <testS+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1e514 <testS+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1e514 <testS+0x31c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1e514 <testS+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e518 <testS+0x320>;;
     _32(0x18000bf9),        //call 214f8 <abort>;;
     _32(0x1fffe0c2),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffe0c0),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0043200),        //make $r1 = 330952 (0x50cc8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 1e180 <fn3S>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1e638 <testS+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036040),        //extfz $r0 = $r0, 6 (0x6), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1e638 <testS+0x440>;;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e638 <testS+0x440>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0003200),        //make $r0 = 330952 (0x50cc8);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1e638 <testS+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1e63c <testS+0x444>;;
     _32(0x18000bb0),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeT: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1e650 <retmeT>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60030001),        //insf $r0 = $r1, 0 (0x0), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitT: list_I = 
 [|
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3T: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1e7b0 <retitT>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testT: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1e898 <testT+0x50>;;
     _32(0x1fffdfec),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1e870 <testT+0x28>;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdfd0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdfce),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1e668 <fn1T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1e9fc <testT+0x1b4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ea00 <testT+0x1b8>;;
     _32(0x18000abf),        //call 214f8 <abort>;;
     _32(0x1fffdf88),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf86),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff29),        //call 1e6f0 <fn2T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1eb54 <testT+0x30c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1eb58 <testT+0x310>;;
     _32(0x18000a69),        //call 214f8 <abort>;;
     _32(0x1fffdf32),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdf30),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046a00),        //make $r1 = 331176 (0x50da8);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60030002),        //insf $r0 = $r2, 0 (0x0), 0 (0x0);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff0b),        //call 1e7d0 <fn3T>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038040),        //extfz $r0 = $r0, 8 (0x8), 1 (0x1);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64030000),        //extfz $r0 = $r0, 0 (0x0), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006a00),        //make $r0 = 331176 (0x50da8);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1ec70 <testT+0x428>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ec74 <testT+0x42c>;;
     _32(0x18000a22),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeU: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x28000a0c),        //lhz $r0 = 40 (0x28)[$r12];;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x28040e0c),        //lhz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffda),        //call 1ec88 <retmeU>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x6003f001),        //insf $r0 = $r1, 15 (0xf), 0 (0x0);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800040c),        //lhz $r0 = 16 (0x10)[$r12];;
     _32(0x60036181),        //insf $r0 = $r1, 6 (0x6), 6 (0x6);;
     _32(0x2501040c),        //sh 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitU: list_I = 
 [|
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3U: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1ee20 <retitU>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testU: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1ef08 <testU+0x50>;;
     _32(0x1fffde50),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1eee0 <testU+0x28>;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffde34),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffde32),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff45),        //call 1ecb8 <fn1U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f074 <testU+0x1bc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f078 <testU+0x1c0>;;
     _32(0x18000921),        //call 214f8 <abort>;;
     _32(0x1fffddea),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdde8),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff23),        //call 1ed58 <fn2U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1f1d4 <testU+0x31c>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f1d8 <testU+0x320>;;
     _32(0x180008c9),        //call 214f8 <abort>;;
     _32(0x1fffdd92),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdd90),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0044600),        //make $r1 = 331032 (0x50d18);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60036182),        //insf $r0 = $r2, 6 (0x6), 6 (0x6);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff05),        //call 1ee40 <fn3U>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f1c0),        //extfz $r0 = $r0, 15 (0xf), 7 (0x7);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1f2f8 <testU+0x440>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f2f8 <testU+0x440>;;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x64036180),        //extfz $r0 = $r0, 6 (0x6), 6 (0x6);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f2f8 <testU+0x440>;;
     _32(0x3804048c),        //ld $r1 = 18 (0x12)[$r12];;
     _96(0x0000000080000143e0004600),        //make $r0 = 331032 (0x50d18);;
     _32(0x38000080),        //ld $r0 = 2 (0x2)[$r0];;
     _32(0x7001a001),        //compd.ne $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1f2f8 <testU+0x440>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f2fc <testU+0x444>;;
     _32(0x18000880),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeV: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x1fffffe3),        //call 1f310 <retmeV>;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _32(0x2800060c),        //lhz $r0 = 24 (0x18)[$r12];;
     _32(0x60038201),        //insf $r0 = $r1, 8 (0x8), 8 (0x8);;
     _32(0x2501060c),        //sh 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitV: list_I = 
 [|
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3V: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe1),        //call 1f470 <retitV>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let testV: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1f558 <testV+0x50>;;
     _32(0x1fffdcbc),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b0c0),        //compw.leu $r0 = $r0, 3 (0x3);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1f530 <testV+0x28>;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdca0),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc9e),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff4f),        //call 1f328 <fn1V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000900),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f6ac <testV+0x1a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f6b0 <testV+0x1a8>;;
     _32(0x18000793),        //call 214f8 <abort>;;
     _32(0x1fffdc5c),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc5a),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff2d),        //call 1f3b0 <fn2V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000c80),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000640),        //cb.wnez $r0? 1f7f4 <testV+0x2ec>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f7f8 <testV+0x2f0>;;
     _32(0x18000741),        //call 214f8 <abort>;;
     _32(0x1fffdc0a),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdc08),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000143e0046400),        //make $r1 = 331152 (0x50d90);;
     _32(0x28000001),        //lhz $r0 = 0 (0x0)[$r1];;
     _32(0x60038202),        //insf $r0 = $r2, 8 (0x8), 8 (0x8);;
     _32(0x25010001),        //sh 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 1f490 <fn3V>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403f240),        //extfz $r0 = $r0, 15 (0xf), 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0008c0),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _32(0x2004060c),        //lbz $r1 = 24 (0x18)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x20000000),        //lbz $r0 = 0 (0x0)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x64038200),        //extfz $r0 = $r0, 8 (0x8), 8 (0x8);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _32(0x2804068c),        //lhz $r1 = 26 (0x1a)[$r12];;
     _96(0x0000000080000143e0006400),        //make $r0 = 331152 (0x50d90);;
     _32(0x28000080),        //lhz $r0 = 2 (0x2)[$r0];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0002c0),        //cb.wnez $r0? 1f900 <testV+0x3f8>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1f904 <testV+0x3fc>;;
     _32(0x180006fe),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeW: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 1f918 <retmeW>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitW: list_I = 
 [|
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3W: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 1fab8 <retitW>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testW: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1fba0 <testW+0x50>;;
     _32(0x1fffdb2a),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 1fb78 <testW+0x28>;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffdb07),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdb05),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 1f948 <fn1W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1fd2c <testW+0x1dc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fd30 <testW+0x1e0>;;
     _32(0x180005f3),        //call 214f8 <abort>;;
     _32(0x1fffdabc),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffdaba),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff18),        //call 1f9e8 <fn2W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 1fe90 <testW+0x340>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 1fe90 <testW+0x340>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 1fe90 <testW+0x340>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 1fe90 <testW+0x340>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1fe94 <testW+0x344>;;
     _32(0x1800059a),        //call 214f8 <abort>;;
     _32(0x1fffda63),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffda61),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0043e00),        //make $r1 = 331000 (0x50cf8);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 1fad8 <fn3W>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 1ffb8 <testW+0x468>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 1ffb8 <testW+0x468>;;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 1ffb8 <testW+0x468>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0003e00),        //make $r0 = 331000 (0x50cf8);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 1ffb8 <testW+0x468>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1ffbc <testW+0x46c>;;
     _32(0x18000550),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeX: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 1ffd0 <retmeX>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitX: list_I = 
 [|
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3X: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20170 <retitX>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testX: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 20258 <testX+0x50>;;
     _32(0x1fffd97c),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 20230 <testX+0x28>;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050100),        //sd 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd959),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd957),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 20000 <fn1X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 203e4 <testX+0x1dc>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 203e8 <testX+0x1e0>;;
     _32(0x18000445),        //call 214f8 <abort>;;
     _32(0x1fffd90e),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd90c),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff18),        //call 200a0 <fn2X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 20548 <testX+0x340>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 20548 <testX+0x340>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 20548 <testX+0x340>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 20548 <testX+0x340>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 2054c <testX+0x344>;;
     _32(0x180003ec),        //call 214f8 <abort>;;
     _32(0x1fffd8b5),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd8b3),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042200),        //make $r1 = 330888 (0x50c88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffefb),        //call 20190 <fn3X>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f640),        //extfz $r0 = $r0, 31 (0x1f), 25 (0x19);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 20670 <testX+0x468>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65038300),        //extfz $r0 = $r0, 24 (0x18), 12 (0xc);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 20670 <testX+0x468>;;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20670 <testX+0x468>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002200),        //make $r0 = 330888 (0x50c88);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20670 <testX+0x468>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20674 <testX+0x46c>;;
     _32(0x180003a2),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let retmeY: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 20688 <retmeY>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6003b001),        //insf $r0 = $r1, 11 (0xb), 0 (0x0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitY: list_I = 
 [|
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Y: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20828 <retitY>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testY: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 20910 <testY+0x50>;;
     _32(0x1fffd7ce),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 208e8 <testY+0x28>;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050100),        //sd 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd7ab),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd7a9),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 206b8 <fn1Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b40),        //cb.wnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68001fc0),        //andd $r0 = $r0, 127 (0x7f);;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20ab0 <testY+0x1f0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20ab4 <testY+0x1f4>;;
     _32(0x18000292),        //call 214f8 <abort>;;
     _32(0x1fffd75b),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd759),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 20758 <fn2Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ec0),        //cb.wnez $r0? 20c28 <testY+0x368>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68001fc0),        //andd $r0 = $r0, 127 (0x7f);;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 20c28 <testY+0x368>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 20c28 <testY+0x368>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 20c28 <testY+0x368>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20c2c <testY+0x36c>;;
     _32(0x18000234),        //call 214f8 <abort>;;
     _32(0x1fffd6fd),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd6fb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0042e00),        //make $r1 = 330936 (0x50cb8);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6003b002),        //insf $r0 = $r2, 11 (0xb), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 20848 <fn3Y>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f5c0),        //extfz $r0 = $r0, 31 (0x1f), 23 (0x17);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000b00),        //cb.wnez $r0? 20d64 <testY+0x4a4>;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x65036300),        //extfz $r0 = $r0, 22 (0x16), 12 (0xc);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x20080040),        //lbz $r2 = 1 (0x1)[$r0];;
     _32(0x7b0a3102),        //srlw $r2 = $r2, 4 (0x4);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x68001fc0),        //andd $r0 = $r0, 127 (0x7f);;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 20d64 <testY+0x4a4>;;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x6403b000),        //extfz $r0 = $r0, 11 (0xb), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 20d64 <testY+0x4a4>;;
     _32(0x3804050c),        //ld $r1 = 20 (0x14)[$r12];;
     _96(0x0000000080000143e0002e00),        //make $r0 = 330936 (0x50cb8);;
     _32(0x38000100),        //ld $r0 = 4 (0x4)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 20d64 <testY+0x4a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 20d68 <testY+0x4a8>;;
     _32(0x180001e5),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let retmeZ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x6108100c),        //addd $r2 = $r12, 64 (0x40);;
     _32(0x2801f802),        //sq -32 (0xffffffe0)[$r2] = $r0r1;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741000c),        //sd 0 (0x0)[$r12] = $r16;;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x3c00fc00),        //lq $r0r1 = -16 (0xfffffff0)[$r0];;
     _32(0x1fffffd9),        //call 20d80 <retmeZ>;;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f001),        //insf $r0 = $r1, 31 (0x1f), 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840000c),        //ld $r16 = 0 (0x0)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601020c),        //sw 8 (0x8)[$r12] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000020c),        //lwz $r0 = 8 (0x8)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x07e22222e004227f),        //make $r1 = -2004318071 (0xffffffff88888889);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x71051040),        //addw $r1 = $r0, $r1;;
     _32(0x7a0a30c1),        //sraw $r2 = $r1, 3 (0x3);;
     _32(0x7a0637c0),        //sraw $r1 = $r0, 31 (0x1f);;
     _32(0x75091081),        //sbfw $r2 = $r1, $r2;;
     _32(0x7a040002),        //copyw $r1 = $r2;;
     _32(0x79063101),        //sllw $r1 = $r1, 4 (0x4);;
     _32(0x75051042),        //sbfw $r1 = $r2, $r1;;
     _32(0x75011001),        //sbfw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6103f501),        //insf $r0 = $r1, 31 (0x1f), 20 (0x14);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let retitZ: list_I = 
 [|
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3Z: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _32(0x1fffffe0),        //call 20f20 <retitZ>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let testZ: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 21008 <testZ+0x50>;;
     _32(0x1fffd610),        //call 16820 <myrnd>;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61040040),        //addd $r1 = $r0, 1 (0x1);;
     _32(0x27050c0c),        //sd 48 (0x30)[$r12] = $r1;;
     _32(0x78043fc2),        //zxbd $r1 = $r2;;
     _32(0x24050000),        //sb 0 (0x0)[$r0] = $r1;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _64(0x00000000f801b2c0),        //compw.leu $r0 = $r0, 11 (0xb);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 20fe0 <testZ+0x28>;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _96(0x0200a80080000000e0040000),        //make $r1 = 4617596992938311680 (0x4015000000000000);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x60080fff),        //make $r2 = 4095 (0xfff);;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x1fffd5ed),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd5eb),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff3b),        //call 20db0 <fn1Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000280),        //lbz $r0 = 10 (0xa)[$r0];;
     _32(0x680003c0),        //andd $r0 = $r0, 15 (0xf);;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000a00),        //cb.wnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000740),        //cb.wnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 211a8 <testZ+0x1f0>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 211ac <testZ+0x1f4>;;
     _32(0x180000d4),        //call 214f8 <abort>;;
     _32(0x1fffd59d),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd59b),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1fffff13),        //call 20e50 <fn2Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000280),        //lbz $r0 = 10 (0xa)[$r0];;
     _32(0x680003c0),        //andd $r0 = $r0, 15 (0xf);;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000d80),        //cb.wnez $r0? 21320 <testZ+0x368>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000ac0),        //cb.wnez $r0? 21320 <testZ+0x368>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000800),        //cb.wnez $r0? 21320 <testZ+0x368>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x08000640),        //cb.dnez $r0? 21320 <testZ+0x368>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0444444482222222e0002240),        //make $r0 = 9838263505978427529 (0x8888888888888889);;
     _32(0x590c1001),        //muludt $r2r3 = $r1, $r0;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b0a20c0),        //srld $r2 = $r0, 3 (0x3);;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x79022100),        //slld $r0 = $r0, 4 (0x4);;
     _32(0x75010002),        //sbfd $r0 = $r2, $r0;;
     _32(0x75010040),        //sbfd $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 21324 <testZ+0x36c>;;
     _32(0x18000076),        //call 214f8 <abort>;;
     _32(0x1fffd53f),        //call 16820 <myrnd>;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x1fffd53d),        //call 16820 <myrnd>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _64(0x00000003f800ffc0),        //andw $r0 = $r0, 4095 (0xfff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000143e0046600),        //make $r1 = 331160 (0x50d98);;
     _32(0x30000201),        //lwz $r0 = 8 (0x8)[$r1];;
     _32(0x6103f502),        //insf $r0 = $r2, 31 (0x1f), 20 (0x14);;
     _32(0x26010201),        //sw 8 (0x8)[$r1] = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _32(0x2705040c),        //sd 16 (0x10)[$r12] = $r1;;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x1ffffef1),        //call 20f40 <fn3Z>;;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x65033340),        //extfz $r0 = $r0, 19 (0x13), 13 (0xd);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x20080240),        //lbz $r2 = 9 (0x9)[$r0];;
     _32(0x7b0a3142),        //srlw $r2 = $r2, 5 (0x5);;
     _32(0x78083fc2),        //zxbd $r2 = $r2;;
     _32(0x20000280),        //lbz $r0 = 10 (0xa)[$r0];;
     _32(0x680003c0),        //andd $r0 = $r0, 15 (0xf);;
     _32(0x790220c0),        //slld $r0 = $r0, 3 (0x3);;
     _32(0x7a010080),        //ord $r0 = $r0, $r2;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c0009c0),        //cb.wnez $r0? 2145c <testZ+0x4a4>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x28000200),        //lhz $r0 = 8 (0x8)[$r0];;
     _32(0x6403c000),        //extfz $r0 = $r0, 12 (0xc), 0 (0x0);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000700),        //cb.wnez $r0? 2145c <testZ+0x4a4>;;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x30000200),        //lwz $r0 = 8 (0x8)[$r0];;
     _32(0x6503f500),        //extfz $r0 = $r0, 31 (0x1f), 20 (0x14);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000480),        //cb.wnez $r0? 2145c <testZ+0x4a4>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _96(0x0000000080000143e0006600),        //make $r0 = 331160 (0x50d98);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7b030001),        //fcompd.une $r0 = $r1, $r0;;
     _32(0x080002c0),        //cb.dnez $r0? 2145c <testZ+0x4a4>;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040b0c),        //lwz $r1 = 44 (0x2c)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 21460 <testZ+0x4a8>;;
     _32(0x18000027),        //call 214f8 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1fffd587),        //call 16aa0 <testA>;;
     _32(0x1fffd73e),        //call 17180 <testB>;;
     _32(0x1fffd8ef),        //call 17848 <testC>;;
     _32(0x1fffda84),        //call 17ea0 <testD>;;
     _32(0x1fffdc41),        //call 18598 <testE>;;
     _32(0x1fffddf2),        //call 18c60 <testF>;;
     _32(0x1fffdfb3),        //call 19368 <testG>;;
     _32(0x1fffe12e),        //call 19958 <testH>;;
     _32(0x1fffe2b9),        //call 19f88 <testI>;;
     _32(0x1fffe44c),        //call 1a5d8 <testJ>;;
     _32(0x1fffe5d9),        //call 1ac10 <testK>;;
     _32(0x1fffe78a),        //call 1b2d8 <testL>;;
     _32(0x1fffe92f),        //call 1b970 <testM>;;
     _32(0x1fffead4),        //call 1c008 <testN>;;
     _32(0x1fffec91),        //call 1c700 <testO>;;
     _32(0x1fffee44),        //call 1cdd0 <testP>;;
     _32(0x1ffff005),        //call 1d4d8 <testQ>;;
     _32(0x1ffff1aa),        //call 1db70 <testR>;;
     _32(0x1ffff34b),        //call 1e1f8 <testS>;;
     _32(0x1ffff4de),        //call 1e848 <testT>;;
     _32(0x1ffff679),        //call 1eeb8 <testU>;;
     _32(0x1ffff80c),        //call 1f508 <testV>;;
     _32(0x1ffff99d),        //call 1fb50 <testW>;;
     _32(0x1ffffb4a),        //call 20208 <testX>;;
     _32(0x1ffffcf7),        //call 208c0 <testY>;;
     _32(0x1ffffeb4),        //call 20fb8 <testZ>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1800000a),        //call 21518 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 21918 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 235f0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit_: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 21ab0 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000128e000f000),        //make $r0 = 304064 (0x4a3c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 21554 <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 235f0 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00100001010001111000; //0x21478
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(myrnd, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeA, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1A, 0b00010110100010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2A, 0b00010110100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitA, 0b00010110101000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3A, 0b00010110101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testA, 0b00010110101010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeB, 0b00010110111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1B, 0b00010110111101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2B, 0b00010111000000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitB, 0b00010111000011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3B, 0b00010111000100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testB, 0b00010111000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeC, 0b00010111010111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1C, 0b00010111011000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2C, 0b00010111011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitC, 0b00010111011110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3C, 0b00010111011111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testC, 0b00010111100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeD, 0b00010111110010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1D, 0b00010111110011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2D, 0b00010111110101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitD, 0b00010111111000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3D, 0b00010111111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testD, 0b00010111111010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeE, 0b00011000001110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1E, 0b00011000001111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2E, 0b00011000010001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitE, 0b00011000010100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3E, 0b00011000010100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testE, 0b00011000010110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeF, 0b00011000101001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1F, 0b00011000101010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2F, 0b00011000101100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitF, 0b00011000101111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3F, 0b00011000101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testF, 0b00011000110001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeG, 0b00011001000100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1G, 0b00011001000101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2G, 0b00011001001000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitG, 0b00011001001011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3G, 0b00011001001011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testG, 0b00011001001101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeH, 0b00011001011111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1H, 0b00011001011111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2H, 0b00011001100001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitH, 0b00011001100011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3H, 0b00011001100100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testH, 0b00011001100101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeI, 0b00011001110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1I, 0b00011001110110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2I, 0b00011001111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitI, 0b00011001111011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3I, 0b00011001111100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testI, 0b00011001111110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeJ, 0b00011010001111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1J, 0b00011010001111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2J, 0b00011010010010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitJ, 0b00011010010101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3J, 0b00011010010101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testJ, 0b00011010010111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeK, 0b00011010101000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1K, 0b00011010101000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2K, 0b00011010101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitK, 0b00011010101101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3K, 0b00011010101110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testK, 0b00011010110000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeL, 0b00011011000011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1L, 0b00011011000011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2L, 0b00011011000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitL, 0b00011011001001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3L, 0b00011011001001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testL, 0b00011011001011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeM, 0b00011011011101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1M, 0b00011011011110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2M, 0b00011011100000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitM, 0b00011011100011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3M, 0b00011011100011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testM, 0b00011011100101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeN, 0b00011011111000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1N, 0b00011011111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2N, 0b00011011111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitN, 0b00011011111101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3N, 0b00011011111110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testN, 0b00011100000000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeO, 0b00011100010100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1O, 0b00011100010100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2O, 0b00011100010110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitO, 0b00011100011001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3O, 0b00011100011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testO, 0b00011100011100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeP, 0b00011100101111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1P, 0b00011100101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2P, 0b00011100110001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitP, 0b00011100110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3P, 0b00011100110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testP, 0b00011100110111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeQ, 0b00011101001010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Q, 0b00011101001011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Q, 0b00011101001101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitQ, 0b00011101010001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Q, 0b00011101010001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testQ, 0b00011101010011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeR, 0b00011101100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1R, 0b00011101100101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2R, 0b00011101101000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitR, 0b00011101101011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3R, 0b00011101101011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testR, 0b00011101101101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeS, 0b00011101111111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1S, 0b00011101111111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2S, 0b00011110000010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitS, 0b00011110000101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3S, 0b00011110000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testS, 0b00011110000111111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeT, 0b00011110011001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1T, 0b00011110011001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2T, 0b00011110011011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitT, 0b00011110011110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3T, 0b00011110011111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testT, 0b00011110100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeU, 0b00011110110010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1U, 0b00011110110010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2U, 0b00011110110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitU, 0b00011110111000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3U, 0b00011110111001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testU, 0b00011110111010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeV, 0b00011111001100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1V, 0b00011111001100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2V, 0b00011111001110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitV, 0b00011111010001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3V, 0b00011111010010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testV, 0b00011111010100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeW, 0b00011111100100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1W, 0b00011111100101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2W, 0b00011111100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitW, 0b00011111101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3W, 0b00011111101011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testW, 0b00011111101101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeX, 0b00011111111111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1X, 0b00100000000000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2X, 0b00100000000010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitX, 0b00100000000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3X, 0b00100000000110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testX, 0b00100000001000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeY, 0b00100000011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Y, 0b00100000011010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Y, 0b00100000011101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitY, 0b00100000100000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Y, 0b00100000100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testY, 0b00100000100011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retmeZ, 0b00100000110110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1Z, 0b00100000110110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2Z, 0b00100000111001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(retitZ, 0b00100000111100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3Z, 0b00100000111101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(testZ, 0b00100000111110111000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00100001010001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00100001010011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit_, 0b00100001010100011000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
