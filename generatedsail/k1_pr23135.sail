// executing pr23135 test 
val k1_pr23135: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pr23135() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let verify: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x26050c0c),        //sw 48 (0x30)[$r12] = $r1;;
     _32(0x26090a0c),        //sw 40 (0x28)[$r12] = $r2;;
     _32(0x260d080c),        //sw 32 (0x20)[$r12] = $r3;;
     _32(0x30040e0c),        //lwz $r1 = 56 (0x38)[$r12];;
     _32(0x30000a0c),        //lwz $r0 = 40 (0x28)[$r12];;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000140),        //cb.wnez $r0? 1685c <verify+0x3c>;;
     _32(0x30040c0c),        //lwz $r1 = 48 (0x30)[$r12];;
     _32(0x3000080c),        //lwz $r0 = 32 (0x20)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 16860 <verify+0x40>;;
     _32(0x180002dd),        //call 173d0 <abort>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _64(0x07fffeffe130e00c),        //addd $r12 = $r12, -262272 (0xfffffffffffbff80);;
     _32(0x2739060c),        //sd 24 (0x18)[$r12] = $r14;;
     _32(0x2849080c),        //sq 32 (0x20)[$r12] = $r18r19;;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x27410e0c),        //sd 56 (0x38)[$r12] = $r16;;
     _32(0x27510c0c),        //sd 48 (0x30)[$r12] = $r20;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x71012001),        //addwp $r0 = $r1, $r0;;
     _64(0x18000100a7011e0c),        //sd 262264 (0x40078)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b8001e0c),        //ld $r0 = 262264 (0x40078)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30380000),        //lwz $r14 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30480100),        //lwz $r18 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x1800030d),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0071),        //make $r3 = 113 (0x71);;
     _32(0x600800a0),        //make $r2 = 160 (0xa0);;
     _32(0x7a040012),        //copyw $r1 = $r18;;
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x1fffffbe),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x55001001),        //mulwp $r0 = $r1, $r0;;
     _64(0x18000100a7011c0c),        //sd 262256 (0x40070)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b8001c0c),        //ld $r0 = 262256 (0x40070)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30380000),        //lwz $r14 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30480100),        //lwz $r18 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x180002e7),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0514),        //make $r3 = 1300 (0x514);;
     _32(0x600805dc),        //make $r2 = 1500 (0x5dc);;
     _32(0x7a040012),        //copyw $r1 = $r18;;
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x1fffff98),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x384c0000),        //ld $r19 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x38380000),        //ld $r14 = 0 (0x0)[$r0];;
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a04000e),        //copyd $r1 = $r14;;
     _32(0x7804ffc1),        //zxwd $r1 = $r1;;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000231),        //call 172c0 <__divdi3>;;
     _32(0x7848ffc0),        //zxwd $r18 = $r0;;
     _32(0x6a000013),        //copyd $r0 = $r19;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _32(0x6a00000e),        //copyd $r0 = $r14;;
     _32(0x6b03f800),        //extfs $r0 = $r0, 63 (0x3f), 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x6903f002),        //sxwd $r0 = $r2;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000227),        //call 172c0 <__divdi3>;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x6103f012),        //insf $r0 = $r18, 31 (0x1f), 0 (0x0);;
     _32(0x6303f80e),        //insf $r0 = $r14, 63 (0x3f), 32 (0x20);;
     _64(0x18000100a7011a0c),        //sd 262248 (0x40068)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b8001a0c),        //ld $r0 = 262248 (0x40068)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x180002ad),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0007),        //make $r3 = 7 (0x7);;
     _32(0x6008000f),        //make $r2 = 15 (0xf);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1fffff5e),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x78010001),        //andd $r0 = $r1, $r0;;
     _64(0x18000100a701180c),        //sd 262240 (0x40060)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b800180c),        //ld $r0 = 262240 (0x40060)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x18000287),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0004),        //make $r3 = 4 (0x4);;
     _32(0x60080002),        //make $r2 = 2 (0x2);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1fffff38),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7a010001),        //ord $r0 = $r1, $r0;;
     _64(0x18000100a701160c),        //sd 262232 (0x40058)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b800160c),        //ld $r0 = 262232 (0x40058)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x18000261),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c006d),        //make $r3 = 109 (0x6d);;
     _32(0x6008009e),        //make $r2 = 158 (0x9e);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1fffff12),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38040000),        //ld $r1 = 0 (0x0)[$r0];;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x7c010001),        //xord $r0 = $r1, $r0;;
     _64(0x18000100a701140c),        //sd 262224 (0x40050)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b800140c),        //ld $r0 = 262224 (0x40050)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x1800023b),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0069),        //make $r3 = 105 (0x69);;
     _32(0x6008009c),        //make $r2 = 156 (0x9c);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1ffffeec),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _64(0x00000000f5012000),        //negwp $r0 = $r0;;
     _64(0x18000100a701120c),        //sd 262216 (0x40048)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b800120c),        //ld $r0 = 262216 (0x40048)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x18000218),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600cff9c),        //make $r3 = -100 (0xffffff9c);;
     _32(0x6008ff6a),        //make $r2 = -150 (0xffffff6a);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1ffffec9),        //call 16820 <verify>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x6c00ffc0),        //notd $r0 = $r0;;
     _64(0x18000100a701100c),        //sd 262208 (0x40040)[$r12] = $r0;;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _64(0x18000100b800100c),        //ld $r0 = 262208 (0x40040)[$r12];;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x180001f6),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600cff9b),        //make $r3 = -101 (0xffffff9b);;
     _32(0x6008ff69),        //make $r2 = -151 (0xffffff69);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1ffffea7),        //call 16820 <verify>;;
     _64(0x18000100b8041e0c),        //ld $r1 = 262264 (0x40078)[$r12];;
     _64(0x18000100b8001c0c),        //ld $r0 = 262256 (0x40070)[$r12];;
     _32(0x71052001),        //addwp $r1 = $r1, $r0;;
     _64(0x18000100b800180c),        //ld $r0 = 262240 (0x40060)[$r12];;
     _32(0x71052001),        //addwp $r1 = $r1, $r0;;
     _64(0x18000100b800160c),        //ld $r0 = 262232 (0x40058)[$r12];;
     _32(0x71052001),        //addwp $r1 = $r1, $r0;;
     _64(0x18000100b800140c),        //ld $r0 = 262224 (0x40050)[$r12];;
     _32(0x71052001),        //addwp $r1 = $r1, $r0;;
     _64(0x18000100b800120c),        //ld $r0 = 262216 (0x40048)[$r12];;
     _32(0x71052001),        //addwp $r1 = $r1, $r0;;
     _64(0x18000100b800100c),        //ld $r0 = 262208 (0x40040)[$r12];;
     _32(0x71012001),        //addwp $r0 = $r1, $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002200),        //make $r0 = 289928 (0x46c88);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x180001c1),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0596),        //make $r3 = 1430 (0x596);;
     _32(0x6008068b),        //make $r2 = 1675 (0x68b);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1ffffe72),        //call 16820 <verify>;;
     _64(0x18000100b8041e0c),        //ld $r1 = 262264 (0x40078)[$r12];;
     _64(0x18000100b8001c0c),        //ld $r0 = 262256 (0x40070)[$r12];;
     _32(0x55041001),        //mulwp $r1 = $r1, $r0;;
     _64(0x18000100b800180c),        //ld $r0 = 262240 (0x40060)[$r12];;
     _32(0x55041001),        //mulwp $r1 = $r1, $r0;;
     _64(0x18000100b800160c),        //ld $r0 = 262232 (0x40058)[$r12];;
     _32(0x55041001),        //mulwp $r1 = $r1, $r0;;
     _64(0x18000100b800140c),        //ld $r0 = 262224 (0x40050)[$r12];;
     _32(0x55041001),        //mulwp $r1 = $r1, $r0;;
     _64(0x18000100b800120c),        //ld $r0 = 262216 (0x40048)[$r12];;
     _32(0x55041001),        //mulwp $r1 = $r1, $r0;;
     _64(0x18000100b800100c),        //ld $r0 = 262208 (0x40040)[$r12];;
     _32(0x55001001),        //mulwp $r0 = $r1, $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002200),        //make $r0 = 289928 (0x46c88);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x304c0000),        //lwz $r19 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30500100),        //lwz $r20 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x1800018c),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _64(0x07e8765be00c503f),        //make $r3 = -1579586240 (0xffffffffa1d96d40);;
     _64(0x0015b3fce0080000),        //make $r2 = 1456467968 (0x56cff000);;
     _32(0x7a040014),        //copyw $r1 = $r20;;
     _32(0x7a000013),        //copyw $r0 = $r19;;
     _32(0x1ffffe3b),        //call 16820 <verify>;;
     _64(0x18000100b0001e0c),        //lwz $r0 = 262264 (0x40078)[$r12];;
     _64(0x18000100b0041c0c),        //lwz $r1 = 262256 (0x40070)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000dc),        //call 172c0 <__divdi3>;;
     _32(0x784cffc0),        //zxwd $r19 = $r0;;
     _64(0x18000100b0001f0c),        //lwz $r0 = 262268 (0x4007c)[$r12];;
     _64(0x18000100b0041d0c),        //lwz $r1 = 262260 (0x40074)[$r12];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000d4),        //call 172c0 <__divdi3>;;
     _32(0x7850ffc0),        //zxwd $r20 = $r0;;
     _32(0x6903f013),        //sxwd $r0 = $r19;;
     _32(0x6907f012),        //sxwd $r1 = $r18;;
     _32(0x180000d0),        //call 172c0 <__divdi3>;;
     _32(0x784cffc0),        //zxwd $r19 = $r0;;
     _32(0x6903f014),        //sxwd $r0 = $r20;;
     _32(0x6907f00e),        //sxwd $r1 = $r14;;
     _32(0x180000cc),        //call 172c0 <__divdi3>;;
     _32(0x7848ffc0),        //zxwd $r18 = $r0;;
     _64(0x18000100b004180c),        //lwz $r1 = 262240 (0x40060)[$r12];;
     _32(0x6903f013),        //sxwd $r0 = $r19;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000c6),        //call 172c0 <__divdi3>;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _64(0x18000100b004190c),        //lwz $r1 = 262244 (0x40064)[$r12];;
     _32(0x6903f012),        //sxwd $r0 = $r18;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000c0),        //call 172c0 <__divdi3>;;
     _32(0x7848ffc0),        //zxwd $r18 = $r0;;
     _64(0x18000100b004160c),        //lwz $r1 = 262232 (0x40058)[$r12];;
     _32(0x6903f00e),        //sxwd $r0 = $r14;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000ba),        //call 172c0 <__divdi3>;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _64(0x18000100b004170c),        //lwz $r1 = 262236 (0x4005c)[$r12];;
     _32(0x6903f012),        //sxwd $r0 = $r18;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000b4),        //call 172c0 <__divdi3>;;
     _32(0x7848ffc0),        //zxwd $r18 = $r0;;
     _64(0x18000100b004140c),        //lwz $r1 = 262224 (0x40050)[$r12];;
     _32(0x6903f00e),        //sxwd $r0 = $r14;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000ae),        //call 172c0 <__divdi3>;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _64(0x18000100b004150c),        //lwz $r1 = 262228 (0x40054)[$r12];;
     _32(0x6903f012),        //sxwd $r0 = $r18;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000a8),        //call 172c0 <__divdi3>;;
     _32(0x7848ffc0),        //zxwd $r18 = $r0;;
     _64(0x18000100b004120c),        //lwz $r1 = 262216 (0x40048)[$r12];;
     _32(0x6903f00e),        //sxwd $r0 = $r14;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x180000a2),        //call 172c0 <__divdi3>;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _64(0x18000100b004130c),        //lwz $r1 = 262220 (0x4004c)[$r12];;
     _32(0x6903f012),        //sxwd $r0 = $r18;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x1800009c),        //call 172c0 <__divdi3>;;
     _32(0x7848ffc0),        //zxwd $r18 = $r0;;
     _64(0x18000100b004100c),        //lwz $r1 = 262208 (0x40040)[$r12];;
     _32(0x6903f00e),        //sxwd $r0 = $r14;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000096),        //call 172c0 <__divdi3>;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _64(0x18000100b004110c),        //lwz $r1 = 262212 (0x40044)[$r12];;
     _32(0x6903f012),        //sxwd $r0 = $r18;;
     _32(0x6907f001),        //sxwd $r1 = $r1;;
     _32(0x18000090),        //call 172c0 <__divdi3>;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x6103f00e),        //insf $r0 = $r14, 31 (0x1f), 0 (0x0);;
     _32(0x6303f801),        //insf $r0 = $r1, 63 (0x3f), 32 (0x20);;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _96(0x000000008000011be0002200),        //make $r0 = 289928 (0x46c88);;
     _32(0x27050000),        //sd 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0002200),        //make $r0 = 289928 (0x46c88);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0042400),        //make $r1 = 289936 (0x46c90);;
     _32(0x27010001),        //sd 0 (0x0)[$r1] = $r0;;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30380000),        //lwz $r14 = 0 (0x0)[$r0];;
     _96(0x000000008000011be0002400),        //make $r0 = 289936 (0x46c90);;
     _32(0x30480100),        //lwz $r18 = 4 (0x4)[$r0];;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _64(0x00000080e104100c),        //addd $r1 = $r12, 131136 (0x20040);;
     _64(0x00000080e0080000),        //make $r2 = 131072 (0x20000);;
     _32(0x18000111),        //call 17540 <memcpy>;;
     _32(0x6100100c),        //addd $r0 = $r12, 64 (0x40);;
     _32(0x6a100000),        //copyd $r4 = $r0;;
     _32(0x600c0000),        //make $r3 = 0 (0x0);;
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _32(0x7a040012),        //copyw $r1 = $r18;;
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x1ffffdc2),        //call 16820 <verify>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x180000b4),        //call 173f0 <exit>;;
     _32(0x00000000)        //errop ;;
 |];

let __udivdi3: list_I = 
 [|
     _32(0x88800641),        //cb.deqz $r1? 1718c <__udivdi3+0x64>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000503),        //cb.dnez $r3? 17188 <__udivdi3+0x60>;;
     _32(0xf00e2001),        //clzd $r3 = $r1
     _32(0x70122002),        //clzd $r4 = $r2;;
     _32(0x751110c4),        //sbfw $r4 = $r4, $r3;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0x760da042),        //compd.ltu $r3 = $r2, $r1;;
     _32(0x08000103),        //cb.dnez $r3? 17160 <__udivdi3+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x75090081),        //sbfd $r2 = $r1, $r2;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x0e000284),        //cb.wlez $r4? 17188 <__udivdi3+0x60>;;
     _32(0xe0140001),        //make $r5 = 1 (0x1)
     _32(0xfa0c0004),        //copyw $r3 = $r4
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x79126105),        //slld $r4 = $r5, $r4;;
     _32(0x6110ffc4),        //addd $r4 = $r4, -1 (0xffffffff);;
     _32(0x0f000083),        //loopdo $r3, 17180 <__udivdi3+0x58>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x78090084),        //andd $r2 = $r4, $r2;;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a4e0000000f0048100),        //pcrel $r1 = 168452 (0x29204)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 17188 <__udivdi3+0x60>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __umoddi3: list_I = 
 [|
     _32(0x888004c1),        //cb.deqz $r1? 171fc <__umoddi3+0x4c>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x080003c3),        //cb.dnez $r3? 171f8 <__umoddi3+0x48>;;
     _32(0xf0022000),        //clzd $r0 = $r0
     _32(0x700e2001),        //clzd $r3 = $r1;;
     _32(0x750d10c0),        //sbfw $r3 = $r0, $r3;;
     _32(0x790660c1),        //slld $r1 = $r1, $r3;;
     _32(0xf611a042),        //compd.ltu $r4 = $r2, $r1
     _32(0xf5010081),        //sbfd $r0 = $r1, $r2
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x710a0004),        //cmoved.deqz $r4? $r2 = $r0;;
     _32(0x8e000183),        //cb.wlez $r3? 171f8 <__umoddi3+0x48>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x7a000003),        //copyw $r0 = $r3;;
     _32(0x0f000080),        //loopdo $r0, 171f4 <__umoddi3+0x44>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x7b0260c2),        //srld $r0 = $r2, $r3;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a4e0000000f0046500),        //pcrel $r1 = 168340 (0x29194)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 171f8 <__umoddi3+0x48>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __udivmoddi4: list_I = 
 [|
     _32(0x88800801),        //cb.deqz $r1? 172a0 <__udivmoddi4+0x80>
     _32(0xf0162001),        //clzd $r5 = $r1
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0xf0122003),        //clzd $r4 = $r3
     _32(0x7601a040),        //compd.ltu $r0 = $r0, $r1;;
     _32(0x75111144),        //sbfw $r4 = $r4, $r5;;
     _32(0x88000580),        //cb.dnez $r0? 17290 <__udivmoddi4+0x70>
     _32(0x79166101),        //slld $r5 = $r1, $r4;;
     _32(0xf605a143),        //compd.ltu $r1 = $r3, $r5
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000101),        //cb.dnez $r1? 17258 <__udivmoddi4+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c5),        //sbfd $r3 = $r5, $r3;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x8e000304),        //cb.wlez $r4? 17288 <__udivmoddi4+0x68>
     _32(0xe0180001),        //make $r6 = 1 (0x1)
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0xf91a6106),        //slld $r6 = $r6, $r4
     _32(0xfb162045),        //srld $r5 = $r5, 1 (0x1)
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000081),        //loopdo $r1, 1727c <__udivmoddi4+0x5c>;;
     _32(0x700d00c5),        //stsud $r3 = $r5, $r3;;
     _32(0xf81500c6),        //andd $r5 = $r6, $r3
     _32(0x7b066103),        //srld $r1 = $r3, $r4;;
     _32(0x71010140),        //addd $r0 = $r0, $r5;;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _32(0xea040003),        //copyd $r1 = $r3
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _96(0x800000a4e0000000f00c3c00),        //pcrel $r3 = 168176 (0x290f0)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd03),        //cb.dnez $r3? 17288 <__udivmoddi4+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __divdi3: list_I = 
 [|
     _32(0x88800781),        //cb.deqz $r1? 17338 <__divdi3+0x78>
     _32(0xe40c0000),        //absd $r3 = $r0
     _32(0xe4100001),        //absd $r4 = $r1
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xf01a2003),        //clzd $r6 = $r3
     _32(0xf615a103),        //compd.ltu $r5 = $r3, $r4
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x080004c5),        //cb.dnez $r5? 17328 <__divdi3+0x68>;;
     _32(0x70162004),        //clzd $r5 = $r4;;
     _32(0x75191146),        //sbfw $r6 = $r6, $r5;;
     _32(0x79126184),        //slld $r4 = $r4, $r6;;
     _32(0x7615a103),        //compd.ltu $r5 = $r3, $r4;;
     _32(0x08000105),        //cb.dnez $r5? 17300 <__divdi3+0x40>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c4),        //sbfd $r3 = $r4, $r3;;
     _32(0x79026180),        //slld $r0 = $r0, $r6;;
     _32(0x0e000286),        //cb.wlez $r6? 17328 <__divdi3+0x68>;;
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xfa140006),        //copyw $r5 = $r6
     _32(0x7b122044),        //srld $r4 = $r4, 1 (0x1);;
     _32(0x791a6187),        //slld $r6 = $r7, $r6;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000085),        //loopdo $r5, 17320 <__divdi3+0x60>;;
     _32(0x700d00c4),        //stsud $r3 = $r4, $r3;;
     _32(0x780d00c6),        //andd $r3 = $r6, $r3;;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0xfc090042),        //xord $r2 = $r2, $r1
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a4e0000000f00c1600),        //pcrel $r3 = 168024 (0x29058)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd83),        //cb.dnez $r3? 17328 <__divdi3+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __moddi3: list_I = 
 [|
     _32(0x88800581),        //cb.deqz $r1? 173b0 <__moddi3+0x58>
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xe4000000),        //absd $r0 = $r0
     _32(0x64040001),        //absd $r1 = $r1;;
     _32(0xf0122001),        //clzd $r4 = $r1
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x08000343),        //cb.dnez $r3? 173a4 <__moddi3+0x4c>;;
     _32(0x700e2000),        //clzd $r3 = $r0;;
     _32(0x75111103),        //sbfw $r4 = $r3, $r4;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0xf615a040),        //compd.ltu $r5 = $r0, $r1
     _32(0xf50d0001),        //sbfd $r3 = $r1, $r0
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x8e000184),        //cb.wlez $r4? 173a4 <__moddi3+0x4c>
     _32(0x710200c5),        //cmoved.deqz $r5? $r0 = $r3;;
     _32(0x7a0c0004),        //copyw $r3 = $r4;;
     _32(0x0f000083),        //loopdo $r3, 173a0 <__moddi3+0x48>;;
     _32(0x70010001),        //stsud $r0 = $r1, $r0;;
     _32(0x7b026100),        //srld $r0 = $r0, $r4;;
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a3e0000000f004f800),        //pcrel $r1 = 167904 (0x28fe0)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffdc1),        //cb.dnez $r1? 173a4 <__moddi3+0x4c>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x9800017b),        //call 179c8 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980008af),        //call 196a0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit_: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x980001d7),        //call 17b60 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 1742c <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x9800089d),        //call 196a0 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110100001111000; //0x16878
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(verify, 0b00010110100000100000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110100001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivdi3, 0b00010111000100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__umoddi3, 0b00010111000110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivmoddi4, 0b00010111001000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__divdi3, 0b00010111001011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__moddi3, 0b00010111001101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111001111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit_, 0b00010111001111110000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
