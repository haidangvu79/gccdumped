// executing postmod_1.c.out.dumped test 
val k1_postmod_1.: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_postmod_1.() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let foo: list_I = 
 [|
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000117e1002600),        //addd $r0 = $r0, 285848 (0x45c98);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000117e1005600),        //addd $r0 = $r0, 286040 (0x45d58);;
     _32(0x2701140c),        //sd 80 (0x50)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000117e1003600),        //addd $r0 = $r0, 285912 (0x45cd8);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000117e1007800),        //addd $r0 = $r0, 286176 (0x45de0);;
     _32(0x2701100c),        //sd 64 (0x40)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000117e1004600),        //addd $r0 = $r0, 285976 (0x45d18);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _96(0x0000000080000117e1006800),        //addd $r0 = $r0, 286112 (0x45da0);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007000),        //make $r0 = 268736 (0x419c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047000),        //make $r1 = 268736 (0x419c0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800140c),        //ld $r0 = 80 (0x50)[$r12];;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007200),        //make $r0 = 268744 (0x419c8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047200),        //make $r1 = 268744 (0x419c8);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3800140c),        //ld $r0 = 80 (0x50)[$r12];;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x2701140c),        //sd 80 (0x50)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007400),        //make $r0 = 268752 (0x419d0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047400),        //make $r1 = 268752 (0x419d0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800100c),        //ld $r0 = 64 (0x40)[$r12];;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007600),        //make $r0 = 268760 (0x419d8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047600),        //make $r1 = 268760 (0x419d8);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3800100c),        //ld $r0 = 64 (0x40)[$r12];;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x2701100c),        //sd 64 (0x40)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007800),        //make $r0 = 268768 (0x419e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047800),        //make $r1 = 268768 (0x419e0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007a00),        //make $r0 = 268776 (0x419e8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047a00),        //make $r1 = 268776 (0x419e8);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x61000300),        //addd $r0 = $r0, 12 (0xc);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x3804160c),        //ld $r1 = 88 (0x58)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007000),        //make $r0 = 268736 (0x419c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047000),        //make $r1 = 268736 (0x419c0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x3804140c),        //ld $r1 = 80 (0x50)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007200),        //make $r0 = 268744 (0x419c8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047200),        //make $r1 = 268744 (0x419c8);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x3804120c),        //ld $r1 = 72 (0x48)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007400),        //make $r0 = 268752 (0x419d0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047400),        //make $r1 = 268752 (0x419d0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x3804100c),        //ld $r1 = 64 (0x40)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007600),        //make $r0 = 268760 (0x419d8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047600),        //make $r1 = 268760 (0x419d8);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x38040e0c),        //ld $r1 = 56 (0x38)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007800),        //make $r0 = 268768 (0x419e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047800),        //make $r1 = 268768 (0x419e0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x3400040c),        //lws $r0 = 16 (0x10)[$r12];;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x38040c0c),        //ld $r1 = 48 (0x30)[$r12];;
     _32(0x71010001),        //addd $r0 = $r1, $r0;;
     _32(0x30040000),        //lwz $r1 = 0 (0x0)[$r0];;
     _96(0x0000000080000106e0007a00),        //make $r0 = 268776 (0x419e8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x5c027001),        //faddw $r0 = $r1, $r0;;
     _96(0x0000000080000106e0047a00),        //make $r1 = 268776 (0x419e8);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601080c),        //sw 32 (0x20)[$r12] = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x10000040),        //goto 16cc4 <foo+0x4a4>;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x30040a0c),        //lwz $r1 = 40 (0x28)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004090c),        //lwz $r1 = 36 (0x24)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004080c),        //lwz $r1 = 32 (0x20)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x0000000080000117e0006600),        //make $r0 = 286104 (0x45d98);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x30000b0c),        //lwz $r0 = 44 (0x2c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x26010b0c),        //sw 44 (0x2c)[$r12] = $r0;;
     _32(0x30000b0c),        //lwz $r0 = 44 (0x2c)[$r12];;
     _64(0x00000000f401b240),        //compw.le $r0 = $r0, 9 (0x9);;
     _32(0x0c7fef80),        //cb.wnez $r0? 16bc8 <foo+0x3a8>;;
     _96(0x00000000800000f8e0000200),        //make $r0 = 253960 (0x3e008);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08ffbd00),        //cb.deqz $r0? 168b8 <foo+0x98>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130180c),        //addd $r12 = $r12, 96 (0x60);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000117e0002600),        //make $r0 = 285848 (0x45c98);;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000117e0002600),        //make $r0 = 285848 (0x45c98);;
     _64(0x00100000e0040000),        //make $r1 = 1073741824 (0x40000000);;
     _32(0x26050500),        //sw 20 (0x14)[$r0] = $r1;;
     _96(0x0000000080000117e0005600),        //make $r0 = 286040 (0x45d58);;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000117e0005600),        //make $r0 = 286040 (0x45d58);;
     _64(0x00100000e0040000),        //make $r1 = 1073741824 (0x40000000);;
     _32(0x26050500),        //sw 20 (0x14)[$r0] = $r1;;
     _96(0x0000000080000117e0003600),        //make $r0 = 285912 (0x45cd8);;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000117e0003600),        //make $r0 = 285912 (0x45cd8);;
     _64(0x00100000e0040000),        //make $r1 = 1073741824 (0x40000000);;
     _32(0x26050500),        //sw 20 (0x14)[$r0] = $r1;;
     _96(0x0000000080000117e0007800),        //make $r0 = 286176 (0x45de0);;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000117e0007800),        //make $r0 = 286176 (0x45de0);;
     _64(0x00100000e0040000),        //make $r1 = 1073741824 (0x40000000);;
     _32(0x26050500),        //sw 20 (0x14)[$r0] = $r1;;
     _96(0x0000000080000117e0004600),        //make $r0 = 285976 (0x45d18);;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000117e0004600),        //make $r0 = 285976 (0x45d18);;
     _64(0x00100000e0040000),        //make $r1 = 1073741824 (0x40000000);;
     _32(0x26050500),        //sw 20 (0x14)[$r0] = $r1;;
     _96(0x0000000080000117e0006800),        //make $r0 = 286112 (0x45da0);;
     _64(0x000fe000e0040000),        //make $r1 = 1065353216 (0x3f800000);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x0000000080000117e0006800),        //make $r0 = 286112 (0x45da0);;
     _64(0x00100000e0040000),        //make $r1 = 1073741824 (0x40000000);;
     _32(0x26050500),        //sw 20 (0x14)[$r0] = $r1;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffe7a),        //call 16820 <foo>;;
     _96(0x0000000080000106e0007000),        //make $r0 = 268736 (0x419c0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00101000e0040000),        //make $r1 = 1077936128 (0x40400000);;
     _32(0x73030040),        //fcompw.une $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000106e0007200),        //make $r0 = 268744 (0x419c8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00101000e0040000),        //make $r1 = 1077936128 (0x40400000);;
     _32(0x73030040),        //fcompw.une $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000106e0007400),        //make $r0 = 268752 (0x419d0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00101000e0040000),        //make $r1 = 1077936128 (0x40400000);;
     _32(0x73030040),        //fcompw.une $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000106e0007600),        //make $r0 = 268760 (0x419d8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00101000e0040000),        //make $r1 = 1077936128 (0x40400000);;
     _32(0x73030040),        //fcompw.une $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000106e0007800),        //make $r0 = 268768 (0x419e0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00101000e0040000),        //make $r1 = 1077936128 (0x40400000);;
     _32(0x73030040),        //fcompw.une $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _96(0x0000000080000106e0007a00),        //make $r0 = 268776 (0x419e8);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _64(0x00101000e0040000),        //make $r1 = 1077936128 (0x40400000);;
     _32(0x73030040),        //fcompw.une $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004070c),        //lwz $r1 = 28 (0x1c)[$r12];;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110110100000000; //0x16d00
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(foo, 0b00010110100000100000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110110100000000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
