// executing pr51581_1 test 
val k1_pr51581_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_pr51581_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let f1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000015),        //goto 16880 <f1+0x60>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x00155555e0045580),        //make $r1 = 1431655766 (0x55555556);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 16830 <f1+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000015),        //goto 16900 <f2+0x60>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x0555555582aaaaaae004aac0),        //make $r1 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 168b0 <f2+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000016),        //goto 16984 <f3+0x64>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x000e38e3e0048e40),        //make $r1 = 954437177 (0x38e38e39);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a063081),        //sraw $r1 = $r1, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa00),        //cb.wnez $r0? 16930 <f3+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000015),        //goto 16a08 <f4+0x60>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x071c71c780e38e38e004e3c0),        //make $r1 = 16397105843297379215 (0xe38e38e38e38e38f);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 169b8 <f4+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000016),        //goto 16a8c <f5+0x64>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x001af286e004bcc0),        //make $r1 = 1808407283 (0x6bca1af3);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa00),        //cb.wnez $r0? 16a38 <f5+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000015),        //goto 16b10 <f6+0x60>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _96(0x06bca1af81435e50e004d7c0),        //make $r1 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa40),        //cb.wnez $r0? 16ac0 <f6+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let f7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000001e),        //goto 16bb4 <f7+0x84>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _64(0x10155555c4005580),        //muld $r0 = $r0, 1431655766 (0x55555556);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff800),        //cb.wnez $r0? 16b40 <f7+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000014),        //goto 16c34 <f8+0x5c>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x102aaaaac400aac0),        //muld $r0 = $r0, 2863311531 (0xaaaaaaab);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023040),        //srlw $r0 = $r0, 1 (0x1);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa80),        //cb.wnez $r0? 16be8 <f8+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000020),        //goto 16ce4 <f9+0x8c>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _64(0x100e38e3c4008e40),        //muld $r0 = $r0, 954437177 (0x38e38e39);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a023080),        //sraw $r0 = $r0, 2 (0x2);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff780),        //cb.wnez $r0? 16c68 <f9+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f10: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000014),        //goto 16d64 <f10+0x5c>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x100e38e3c4008e40),        //muld $r0 = $r0, 954437177 (0x38e38e39);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023080),        //srlw $r0 = $r0, 2 (0x2);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffa80),        //cb.wnez $r0? 16d18 <f10+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f11: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000020),        //goto 16e14 <f11+0x8c>;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x6903f000),        //sxwd $r0 = $r0;;
     _64(0x101af286c400bcc0),        //muld $r0 = $r0, 1808407283 (0x6bca1af3);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a0230c0),        //sraw $r0 = $r0, 3 (0x3);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff780),        //cb.wnez $r0? 16d98 <f11+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let f12: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000021),        //goto 16ec8 <f12+0x90>;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _64(0x102bca1ac400f2c0),        //muld $r0 = $r0, 2938661835 (0xaf286bcb);;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023040),        //srlw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7b023100),        //srlw $r0 = $r0, 4 (0x4);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff740),        //cb.wnez $r0? 16e48 <f12+0x10>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000013),        //goto 16f48 <main+0x60>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x07fffffef1000000),        //addw $r0 = $r0, -2048 (0xfffffffffffff800);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x000000008000014be0042200),        //make $r1 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3008070c),        //lwz $r2 = 28 (0x1c)[$r12];;
     _96(0x000000008000011be0042200),        //make $r1 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x260bf001),        //sw.xs $r0[$r1] = $r2;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ffac0),        //cb.wnez $r0? 16f00 <main+0x18>;;
     _96(0x000000008000014be0002200),        //make $r0 = 339080 (0x52c88);;
     _64(0x07e00000e004003f),        //make $r1 = -2147483648 (0xffffffff80000000);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000014be0002200),        //make $r0 = 339080 (0x52c88);;
     _64(0x07e00000e004007f),        //make $r1 = -2147483647 (0xffffffff80000001);;
     _32(0x26050100),        //sw 4 (0x4)[$r0] = $r1;;
     _96(0x000000008000014be0002200),        //make $r0 = 339080 (0x52c88);;
     _64(0x001fffffe004ffc0),        //make $r1 = 2147483647 (0x7fffffff);;
     _64(0x1800000fa605ff00),        //sw 16380 (0x3ffc)[$r0] = $r1;;
     _96(0x000000008000011be0002200),        //make $r0 = 289928 (0x46c88);;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _64(0x1800000fa605ff00),        //sw 16380 (0x3ffc)[$r0] = $r1;;
     _32(0x1ffffe19),        //call 16820 <f1>;;
     _32(0x1ffffe38),        //call 168a0 <f2>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002b),        //goto 17078 <main+0x190>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _64(0x00155555e0085580),        //make $r2 = 1431655766 (0x55555556);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 17068 <main+0x180>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0082200),        //make $r2 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1706c <main+0x184>;;
     _32(0x18000110),        //call 174a8 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff4c0),        //cb.wnez $r0? 16fd0 <main+0xe8>;;
     _32(0x1ffffe26),        //call 16920 <f3>;;
     _32(0x1ffffe47),        //call 169a8 <f4>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002c),        //goto 17148 <main+0x260>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _64(0x000e38e3e0088e40),        //make $r2 = 954437177 (0x38e38e39);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 17138 <main+0x250>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0082200),        //make $r2 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _96(0x071c71c780e38e38e008e3c0),        //make $r2 = 16397105843297379215 (0xe38e38e38e38e38f);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1713c <main+0x254>;;
     _32(0x180000dc),        //call 174a8 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff480),        //cb.wnez $r0? 1709c <main+0x1b4>;;
     _32(0x1ffffe34),        //call 16a28 <f5>;;
     _32(0x1ffffe55),        //call 16ab0 <f6>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002c),        //goto 17218 <main+0x330>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _64(0x001af286e008bcc0),        //make $r2 = 1808407283 (0x6bca1af3);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0a30c2),        //sraw $r2 = $r2, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 17208 <main+0x320>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0082200),        //make $r2 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _96(0x06bca1af81435e50e008d7c0),        //make $r2 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1720c <main+0x324>;;
     _32(0x180000a8),        //call 174a8 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff480),        //cb.wnez $r0? 1716c <main+0x284>;;
     _32(0x1ffffe42),        //call 16b30 <f7>;;
     _32(0x1ffffe6b),        //call 16bd8 <f8>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002b),        //goto 172e4 <main+0x3fc>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _64(0x00155555e0085580),        //make $r2 = 1431655766 (0x55555556);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 172d4 <main+0x3ec>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0082200),        //make $r2 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _96(0x0555555582aaaaaae008aac0),        //make $r2 = 12297829382473034411 (0xaaaaaaaaaaaaaaab);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022040),        //srld $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 172d8 <main+0x3f0>;;
     _32(0x18000075),        //call 174a8 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff4c0),        //cb.wnez $r0? 1723c <main+0x354>;;
     _32(0x1ffffe59),        //call 16c58 <f9>;;
     _32(0x1ffffe84),        //call 16d08 <f10>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002c),        //goto 173b4 <main+0x4cc>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _64(0x000e38e3e0088e40),        //make $r2 = 954437177 (0x38e38e39);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0a3082),        //sraw $r2 = $r2, 2 (0x2);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 173a4 <main+0x4bc>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0082200),        //make $r2 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _96(0x071c71c780e38e38e008e3c0),        //make $r2 = 16397105843297379215 (0xe38e38e38e38e38f);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 173a8 <main+0x4c0>;;
     _32(0x18000041),        //call 174a8 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff480),        //cb.wnez $r0? 17308 <main+0x420>;;
     _32(0x1ffffe71),        //call 16d88 <f11>;;
     _32(0x1ffffe9c),        //call 16e38 <f12>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000002c),        //goto 17484 <main+0x59c>;;
     _96(0x000000008000012be0042200),        //make $r1 = 306312 (0x4ac88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000014be0082200),        //make $r2 = 339080 (0x52c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _64(0x001af286e008bcc0),        //make $r2 = 1808407283 (0x6bca1af3);;
     _32(0x58083080),        //mulwd $r2 = $r0, $r2;;
     _32(0x7b0a2802),        //srld $r2 = $r2, 32 (0x20);;
     _32(0x7a0a30c2),        //sraw $r2 = $r2, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011080),        //sbfw $r0 = $r0, $r2;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7001b001),        //compw.ne $r0 = $r1, $r0;;
     _32(0x0c000500),        //cb.wnez $r0? 17474 <main+0x58c>;;
     _96(0x000000008000013be0042200),        //make $r1 = 322696 (0x4ec88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3006f001),        //lwz.xs $r1 = $r0[$r1];;
     _96(0x000000008000011be0082200),        //make $r2 = 289928 (0x46c88);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f002),        //lwz.xs $r0 = $r0[$r2];;
     _96(0x06bca1af81435e50e008d7c0),        //make $r2 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x590c1080),        //muludt $r2r3 = $r0, $r2;;
     _32(0x6a000003),        //copyd $r0 = $r3;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17478 <main+0x590>;;
     _32(0x1800000d),        //call 174a8 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x0000007ff401b7c0),        //compw.le $r0 = $r0, 4095 (0xfff);;
     _32(0x0c7ff480),        //cb.wnez $r0? 173d8 <main+0x4f0>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 17880 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 193b0 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110111011101000; //0x16ee8
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f1, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f2, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f3, 0b00010110100100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f4, 0b00010110100110101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f5, 0b00010110101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f6, 0b00010110101010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f7, 0b00010110101100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f8, 0b00010110101111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f9, 0b00010110110001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f10, 0b00010110110100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f11, 0b00010110110110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(f12, 0b00010110111000111000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110111011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111010010101000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
