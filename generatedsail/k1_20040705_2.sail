// executing 20040705_2 test 
val k1_20040705_2: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_20040705_2() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let ret1: list_I = 
 [|
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret2: list_I = 
 [|
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret3: list_I = 
 [|
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret4: list_I = 
 [|
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret5: list_I = 
 [|
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret6: list_I = 
 [|
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let ret7: list_I = 
 [|
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret8: list_I = 
 [|
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let ret9: list_I = 
 [|
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x0fd00000)        //ret ;;
 |];

let fn1_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71011040),        //addw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20040080),        //lbz $r1 = 2 (0x2)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200400c0),        //lbz $r1 = 3 (0x3)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71011001),        //addw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20040080),        //lbz $r1 = 2 (0x2)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200400c0),        //lbz $r1 = 3 (0x3)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000fc0),        //addw $r0 = $r0, 63 (0x3f);;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f100ffc0),        //addw $r0 = $r0, 2047 (0x7ff);;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff100ffc0),        //addw $r0 = $r0, 32767 (0x7fff);;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x710007c0),        //addw $r0 = $r0, 31 (0x1f);;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff100ffc0),        //addw $r0 = $r0, 67108863 (0x3ffffff);;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000fc0),        //addw $r0 = $r0, 63 (0x3f);;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f100ffc0),        //addw $r0 = $r0, 2047 (0x7ff);;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff100ffc0),        //addw $r0 = $r0, 32767 (0x7fff);;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x710007c0),        //addw $r0 = $r0, 31 (0x1f);;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff100ffc0),        //addw $r0 = $r0, 67108863 (0x3ffffff);;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78011040),        //andw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20040080),        //lbz $r1 = 2 (0x2)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200400c0),        //lbz $r1 = 3 (0x3)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7a011040),        //orw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20040080),        //lbz $r1 = 2 (0x2)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200400c0),        //lbz $r1 = 3 (0x3)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a011001),        //orw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7c011040),        //xorw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28040000),        //lhz $r1 = 0 (0x0)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20040080),        //lbz $r1 = 2 (0x2)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200400c0),        //lbz $r1 = 3 (0x3)[$r0];;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c011001),        //xorw $r0 = $r1, $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001474),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001458),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x1800143c),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001420),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001404),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn6_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x180013e6),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x180013cc),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn8_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x180013b6),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn9_a: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x180013a0),        //call 1d5d0 <__udivdi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn1_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x180013aa),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x1800138e),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001372),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001356),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x1800133a),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn6_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x1800131c),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x18001302),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn8_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x180012ec),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn9_b: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x180012d6),        //call 1d658 <__umoddi3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840040c),        //ld $r16 = 16 (0x10)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn1_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn6_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_c: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x710000c0),        //addw $r0 = $r0, 3 (0x3);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn6_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_d: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7100fe40),        //addw $r0 = $r0, -7 (0xfffffff9);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn6_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_e: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x78000540),        //andw $r0 = $r0, 21 (0x15);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_f: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7a0004c0),        //orw $r0 = $r0, 19 (0x13);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn8_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn9_g: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _32(0x7c000940),        //xorw $r0 = $r0, 37 (0x25);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn1_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x001e1e1ee0041e40),        //make $r1 = 2021161081 (0x78787879);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn2_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x001e1e1ee0041e40),        //make $r1 = 2021161081 (0x78787879);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn3_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x001e1e1ee0041e40),        //make $r1 = 2021161081 (0x78787879);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn4_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x001e1e1ee0041e40),        //make $r1 = 2021161081 (0x78787879);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn5_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x001e1e1ee0041e40),        //make $r1 = 2021161081 (0x78787879);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn6_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x001e1e1ee0041e40),        //make $r1 = 2021161081 (0x78787879);;
     _32(0x58043040),        //mulwd $r1 = $r0, $r1;;
     _32(0x7b062801),        //srld $r1 = $r1, 32 (0x20);;
     _32(0x7a0630c1),        //sraw $r1 = $r1, 3 (0x3);;
     _32(0x7a0237c0),        //sraw $r0 = $r0, 31 (0x1f);;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn7_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28000000),        //lhz $r0 = 0 (0x0)[$r0];;
     _96(0x07878787843c3c3ce0043c40),        //make $r1 = 17361641481138401521 (0xf0f0f0f0f0f0f0f1);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn8_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20000080),        //lbz $r0 = 2 (0x2)[$r0];;
     _96(0x07878787843c3c3ce0043c40),        //make $r1 = 17361641481138401521 (0xf0f0f0f0f0f0f0f1);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn9_h: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200000c0),        //lbz $r0 = 3 (0x3)[$r0];;
     _96(0x07878787843c3c3ce0043c40),        //make $r1 = 17361641481138401521 (0xf0f0f0f0f0f0f0f1);;
     _32(0x59041040),        //muludt $r0r1 = $r0, $r1;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b022100),        //srld $r0 = $r0, 4 (0x4);;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn1_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035000),        //extfz $r0 = $r0, 5 (0x5), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000fc0),        //andw $r0 = $r0, 63 (0x3f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn2_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x65030180),        //extfz $r0 = $r0, 16 (0x10), 6 (0x6);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f800ffc0),        //andw $r0 = $r0, 2047 (0x7ff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn3_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002200),        //make $r0 = 314504 (0x4cc88);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f440),        //extfz $r0 = $r0, 31 (0x1f), 17 (0x11);;
     _32(0x6403f000),        //zxhd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001ff800ffc0),        //andw $r0 = $r0, 32767 (0x7fff);;
     _32(0x640bf000),        //zxhd $r2 = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn4_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64034000),        //extfz $r0 = $r0, 4 (0x4), 0 (0x0);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x780007c0),        //andw $r0 = $r0, 31 (0x1f);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn5_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x64035140),        //extfz $r0 = $r0, 5 (0x5), 5 (0x5);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x78083fc0),        //zxbd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let fn6_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002600),        //make $r0 = 314520 (0x4cc98);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x6503f180),        //extfz $r0 = $r0, 31 (0x1f), 6 (0x6);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7a040000),        //copyw $r1 = $r0;;
     _64(0x001af286e000bcc0),        //make $r0 = 1808407283 (0x6bca1af3);;
     _32(0x58003001),        //mulwd $r0 = $r1, $r0;;
     _32(0x7b022800),        //srld $r0 = $r0, 32 (0x20);;
     _32(0x7a0a30c0),        //sraw $r2 = $r0, 3 (0x3);;
     _32(0x7a0237c1),        //sraw $r0 = $r1, 31 (0x1f);;
     _32(0x75091080),        //sbfw $r2 = $r0, $r2;;
     _32(0x7a000002),        //copyw $r0 = $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x71011080),        //addw $r0 = $r0, $r2;;
     _32(0x79023080),        //sllw $r0 = $r0, 2 (0x2);;
     _32(0x75011002),        //sbfw $r0 = $r2, $r0;;
     _32(0x75011040),        //sbfw $r0 = $r0, $r1;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000fffff800ffc0),        //andw $r0 = $r0, 67108863 (0x3ffffff);;
     _32(0x7808ffc0),        //zxwd $r2 = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn7_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x28080000),        //lhz $r2 = 0 (0x0)[$r0];;
     _96(0x06bca1af81435e50e000d7c0),        //make $r0 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b062100),        //srld $r1 = $r0, 4 (0x4);;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x75010080),        //sbfd $r0 = $r0, $r2;;
     _32(0x6407f000),        //zxhd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn8_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x20080080),        //lbz $r2 = 2 (0x2)[$r0];;
     _96(0x06bca1af81435e50e000d7c0),        //make $r0 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b062100),        //srld $r1 = $r0, 4 (0x4);;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x75010080),        //sbfd $r0 = $r0, $r2;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let fn9_i: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x200800c0),        //lbz $r2 = 3 (0x3)[$r0];;
     _96(0x06bca1af81435e50e000d7c0),        //make $r0 = 15534100272597517151 (0xd79435e50d79435f);;
     _32(0x59041002),        //muludt $r0r1 = $r2, $r0;;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x7b062100),        //srld $r1 = $r0, 4 (0x4);;
     _32(0x6a000001),        //copyd $r0 = $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x71010040),        //addd $r0 = $r0, $r1;;
     _32(0x79022080),        //slld $r0 = $r0, 2 (0x2);;
     _32(0x75010001),        //sbfd $r0 = $r1, $r0;;
     _32(0x75010080),        //sbfd $r0 = $r0, $r2;;
     _32(0x78043fc0),        //zxbd $r1 = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1c8),        //call 16928 <fn1_1>;;
     _32(0x1ffff185),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b580),        //compw.eq $r0 = $r0, 54 (0x36);;
     _32(0x0c000080),        //cb.wnez $r0? 1a224 <main+0x114>;;
     _32(0x18000d96),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1d1),        //call 16988 <fn2_1>;;
     _32(0x1ffff17e),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000001bf101b5c0),        //compw.eq $r0 = $r0, 887 (0x377);;
     _32(0x0c000080),        //cb.wnez $r0? 1a260 <main+0x150>;;
     _32(0x18000d87),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1dc),        //call 169f0 <fn3_1>;;
     _32(0x1ffff177),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000170f101b340),        //compw.eq $r0 = $r0, 11789 (0x2e0d);;
     _32(0x0c000080),        //cb.wnez $r0? 1a29c <main+0x18c>;;
     _32(0x18000d78),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1e7),        //call 16a58 <fn4_1>;;
     _32(0x1ffff170),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b340),        //compw.eq $r0 = $r0, 13 (0xd);;
     _32(0x0c000080),        //cb.wnez $r0? 1a2d8 <main+0x1c8>;;
     _32(0x18000d69),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1f0),        //call 16ab8 <fn5_1>;;
     _32(0x1ffff169),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1a30c <main+0x1fc>;;
     _32(0x18000d5c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1fa),        //call 16b18 <fn6_1>;;
     _32(0x1ffff163),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0010203ef101b5c0),        //compw.eq $r0 = $r0, 33818583 (0x20407d7);;
     _32(0x0c000080),        //cb.wnez $r0? 1a34c <main+0x23c>;;
     _32(0x18000d4c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff202),        //call 16b78 <fn7_1>;;
     _32(0x1ffff15b),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000035cf101b140),        //compw.eq $r0 = $r0, 27525 (0x6b85);;
     _32(0x0c000080),        //cb.wnez $r0? 1a38c <main+0x27c>;;
     _32(0x18000d3c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff207),        //call 16bc0 <fn8_1>;;
     _32(0x1ffff154),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b340),        //compw.eq $r0 = $r0, 173 (0xad);;
     _32(0x0c000080),        //cb.wnez $r0? 1a3c0 <main+0x2b0>;;
     _32(0x18000d2f),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff20c),        //call 16c08 <fn9_1>;;
     _32(0x1ffff14d),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b080),        //compw.eq $r0 = $r0, 130 (0x82);;
     _32(0x0c000080),        //cb.wnez $r0? 1a3f4 <main+0x2e4>;;
     _32(0x18000d22),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1d7),        //call 16c50 <fn1_2>;;
     _32(0x1ffff0ca),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b500),        //compw.eq $r0 = $r0, 52 (0x34);;
     _32(0x0c000080),        //cb.wnez $r0? 1a510 <main+0x400>;;
     _32(0x18000cdb),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1dc),        //call 16ca0 <fn2_2>;;
     _32(0x1ffff0c3),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b740),        //compw.eq $r0 = $r0, 637 (0x27d);;
     _32(0x0c000080),        //cb.wnez $r0? 1a54c <main+0x43c>;;
     _32(0x18000ccc),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1e3),        //call 16cf8 <fn3_2>;;
     _32(0x1ffff0bc),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b3c0),        //compw.eq $r0 = $r0, 31279 (0x7a2f);;
     _32(0x0c000080),        //cb.wnez $r0? 1a588 <main+0x478>;;
     _32(0x18000cbd),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1ea),        //call 16d50 <fn4_2>;;
     _32(0x1ffff0b5),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b580),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x0c000080),        //cb.wnez $r0? 1a5c4 <main+0x4b4>;;
     _32(0x18000cae),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1ef),        //call 16da0 <fn5_2>;;
     _32(0x1ffff0ae),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1a5f8 <main+0x4e8>;;
     _32(0x18000ca1),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1f5),        //call 16df0 <fn6_2>;;
     _32(0x1ffff0a8),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00100000f101b040),        //compw.eq $r0 = $r0, 33554433 (0x2000001);;
     _32(0x0c000080),        //cb.wnez $r0? 1a638 <main+0x528>;;
     _32(0x18000c91),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1fb),        //call 16e48 <fn7_2>;;
     _32(0x1ffff0a0),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b740),        //compw.eq $r0 = $r0, 26813 (0x68bd);;
     _32(0x0c000080),        //cb.wnez $r0? 1a678 <main+0x568>;;
     _32(0x18000c81),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1fe),        //call 16e88 <fn8_2>;;
     _32(0x1ffff099),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b740),        //compw.eq $r0 = $r0, 157 (0x9d);;
     _32(0x0c000080),        //cb.wnez $r0? 1a6ac <main+0x59c>;;
     _32(0x18000c74),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff201),        //call 16ec8 <fn9_2>;;
     _32(0x1ffff092),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b700),        //compw.eq $r0 = $r0, 188 (0xbc);;
     _32(0x0c000080),        //cb.wnez $r0? 1a6e0 <main+0x5d0>;;
     _32(0x18000c67),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1ca),        //call 16f08 <fn1_3>;;
     _32(0x1ffff00f),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b500),        //compw.eq $r0 = $r0, 52 (0x34);;
     _32(0x0c000080),        //cb.wnez $r0? 1a7fc <main+0x6ec>;;
     _32(0x18000c20),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1cf),        //call 16f58 <fn2_3>;;
     _32(0x1ffff008),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b740),        //compw.eq $r0 = $r0, 637 (0x27d);;
     _32(0x0c000080),        //cb.wnez $r0? 1a838 <main+0x728>;;
     _32(0x18000c11),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1d6),        //call 16fb0 <fn3_3>;;
     _32(0x1ffff001),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b3c0),        //compw.eq $r0 = $r0, 31279 (0x7a2f);;
     _32(0x0c000080),        //cb.wnez $r0? 1a874 <main+0x764>;;
     _32(0x18000c02),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1dd),        //call 17008 <fn4_3>;;
     _32(0x1fffeffa),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b580),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x0c000080),        //cb.wnez $r0? 1a8b0 <main+0x7a0>;;
     _32(0x18000bf3),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1e2),        //call 17058 <fn5_3>;;
     _32(0x1fffeff3),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1a8e4 <main+0x7d4>;;
     _32(0x18000be6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1e8),        //call 170a8 <fn6_3>;;
     _32(0x1fffefed),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00100000f101b040),        //compw.eq $r0 = $r0, 33554433 (0x2000001);;
     _32(0x0c000080),        //cb.wnez $r0? 1a924 <main+0x814>;;
     _32(0x18000bd6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1ee),        //call 17100 <fn7_3>;;
     _32(0x1fffefe5),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b740),        //compw.eq $r0 = $r0, 26813 (0x68bd);;
     _32(0x0c000080),        //cb.wnez $r0? 1a964 <main+0x854>;;
     _32(0x18000bc6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1f1),        //call 17140 <fn8_3>;;
     _32(0x1fffefde),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b740),        //compw.eq $r0 = $r0, 157 (0x9d);;
     _32(0x0c000080),        //cb.wnez $r0? 1a998 <main+0x888>;;
     _32(0x18000bb9),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff1f4),        //call 17180 <fn9_3>;;
     _32(0x1fffefd7),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b700),        //compw.eq $r0 = $r0, 188 (0xbc);;
     _32(0x0c000080),        //cb.wnez $r0? 1a9cc <main+0x8bc>;;
     _32(0x18000bac),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1bd),        //call 171c0 <fn1_4>;;
     _32(0x1fffef54),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b400),        //compw.eq $r0 = $r0, 48 (0x30);;
     _32(0x0c000080),        //cb.wnez $r0? 1aae8 <main+0x9d8>;;
     _32(0x18000b65),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1c6),        //call 17220 <fn2_4>;;
     _32(0x1fffef4d),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000cf101b040),        //compw.eq $r0 = $r0, 385 (0x181);;
     _32(0x0c000080),        //cb.wnez $r0? 1ab24 <main+0xa14>;;
     _32(0x18000b56),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1d1),        //call 17288 <fn3_4>;;
     _32(0x1fffef46),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000232f101b3c0),        //compw.eq $r0 = $r0, 17999 (0x464f);;
     _32(0x0c000080),        //cb.wnez $r0? 1ab60 <main+0xa50>;;
     _32(0x18000b47),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1dc),        //call 172f0 <fn4_4>;;
     _32(0x1fffef3f),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b740),        //compw.eq $r0 = $r0, 29 (0x1d);;
     _32(0x0c000080),        //cb.wnez $r0? 1ab9c <main+0xa8c>;;
     _32(0x18000b38),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1e5),        //call 17350 <fn5_4>;;
     _32(0x1fffef38),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1abd0 <main+0xac0>;;
     _32(0x18000b2b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1ef),        //call 173b0 <fn6_4>;;
     _32(0x1fffef32),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000fdfc1f101b240),        //compw.eq $r0 = $r0, 33290281 (0x1fbf829);;
     _32(0x0c000080),        //cb.wnez $r0? 1ac10 <main+0xb00>;;
     _32(0x18000b1b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1f7),        //call 17410 <fn7_4>;;
     _32(0x1fffef2a),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000032ff101b4c0),        //compw.eq $r0 = $r0, 26099 (0x65f3);;
     _32(0x0c000080),        //cb.wnez $r0? 1ac50 <main+0xb40>;;
     _32(0x18000b0b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1fc),        //call 17458 <fn8_4>;;
     _32(0x1fffef23),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b2c0),        //compw.eq $r0 = $r0, 139 (0x8b);;
     _32(0x0c000080),        //cb.wnez $r0? 1ac84 <main+0xb74>;;
     _32(0x18000afe),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff201),        //call 174a0 <fn9_4>;;
     _32(0x1fffef1c),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000007f101b500),        //compw.eq $r0 = $r0, 244 (0xf4);;
     _32(0x0c000080),        //cb.wnez $r0? 1acb8 <main+0xba8>;;
     _32(0x18000af1),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1cc),        //call 174e8 <fn1_5>;;
     _32(0x1fffee99),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b480),        //compw.eq $r0 = $r0, 50 (0x32);;
     _32(0x0c000080),        //cb.wnez $r0? 1add4 <main+0xcc4>;;
     _32(0x18000aaa),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1d1),        //call 17538 <fn2_5>;;
     _32(0x1fffee92),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b6c0),        //compw.eq $r0 = $r0, 635 (0x27b);;
     _32(0x0c000080),        //cb.wnez $r0? 1ae10 <main+0xd00>;;
     _32(0x18000a9b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1d8),        //call 17590 <fn3_5>;;
     _32(0x1fffee8b),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b340),        //compw.eq $r0 = $r0, 31277 (0x7a2d);;
     _32(0x0c000080),        //cb.wnez $r0? 1ae4c <main+0xd3c>;;
     _32(0x18000a8c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1df),        //call 175e8 <fn4_5>;;
     _32(0x1fffee84),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b500),        //compw.eq $r0 = $r0, 20 (0x14);;
     _32(0x0c000080),        //cb.wnez $r0? 1ae88 <main+0xd78>;;
     _32(0x18000a7d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1e4),        //call 17638 <fn5_5>;;
     _32(0x1fffee7d),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1aebc <main+0xdac>;;
     _32(0x18000a70),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1ea),        //call 17688 <fn6_5>;;
     _32(0x1fffee77),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000ffffff101b7c0),        //compw.eq $r0 = $r0, 33554431 (0x1ffffff);;
     _32(0x0c000080),        //cb.wnez $r0? 1aefc <main+0xdec>;;
     _32(0x18000a60),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1f0),        //call 176e0 <fn7_5>;;
     _32(0x1fffee6f),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b6c0),        //compw.eq $r0 = $r0, 26811 (0x68bb);;
     _32(0x0c000080),        //cb.wnez $r0? 1af3c <main+0xe2c>;;
     _32(0x18000a50),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1f3),        //call 17720 <fn8_5>;;
     _32(0x1fffee68),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b6c0),        //compw.eq $r0 = $r0, 155 (0x9b);;
     _32(0x0c000080),        //cb.wnez $r0? 1af70 <main+0xe60>;;
     _32(0x18000a43),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff1f6),        //call 17760 <fn9_5>;;
     _32(0x1fffee61),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b680),        //compw.eq $r0 = $r0, 186 (0xba);;
     _32(0x0c000080),        //cb.wnez $r0? 1afa4 <main+0xe94>;;
     _32(0x18000a36),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1bf),        //call 177a0 <fn1_6>;;
     _32(0x1fffedde),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b480),        //compw.eq $r0 = $r0, 50 (0x32);;
     _32(0x0c000080),        //cb.wnez $r0? 1b0c0 <main+0xfb0>;;
     _32(0x180009ef),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1c4),        //call 177f0 <fn2_6>;;
     _32(0x1fffedd7),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b6c0),        //compw.eq $r0 = $r0, 635 (0x27b);;
     _32(0x0c000080),        //cb.wnez $r0? 1b0fc <main+0xfec>;;
     _32(0x180009e0),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1cb),        //call 17848 <fn3_6>;;
     _32(0x1fffedd0),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b340),        //compw.eq $r0 = $r0, 31277 (0x7a2d);;
     _32(0x0c000080),        //cb.wnez $r0? 1b138 <main+0x1028>;;
     _32(0x180009d1),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1d2),        //call 178a0 <fn4_6>;;
     _32(0x1fffedc9),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b500),        //compw.eq $r0 = $r0, 20 (0x14);;
     _32(0x0c000080),        //cb.wnez $r0? 1b174 <main+0x1064>;;
     _32(0x180009c2),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1d7),        //call 178f0 <fn5_6>;;
     _32(0x1fffedc2),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1b1a8 <main+0x1098>;;
     _32(0x180009b5),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1dd),        //call 17940 <fn6_6>;;
     _32(0x1fffedbc),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000ffffff101b7c0),        //compw.eq $r0 = $r0, 33554431 (0x1ffffff);;
     _32(0x0c000080),        //cb.wnez $r0? 1b1e8 <main+0x10d8>;;
     _32(0x180009a5),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1e3),        //call 17998 <fn7_6>;;
     _32(0x1fffedb4),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b6c0),        //compw.eq $r0 = $r0, 26811 (0x68bb);;
     _32(0x0c000080),        //cb.wnez $r0? 1b228 <main+0x1118>;;
     _32(0x18000995),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1e6),        //call 179d8 <fn8_6>;;
     _32(0x1fffedad),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b6c0),        //compw.eq $r0 = $r0, 155 (0x9b);;
     _32(0x0c000080),        //cb.wnez $r0? 1b25c <main+0x114c>;;
     _32(0x18000988),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff1e9),        //call 17a18 <fn9_6>;;
     _32(0x1fffeda6),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b680),        //compw.eq $r0 = $r0, 186 (0xba);;
     _32(0x0c000080),        //cb.wnez $r0? 1b290 <main+0x1180>;;
     _32(0x1800097b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1b2),        //call 17a58 <fn1_7>;;
     _32(0x1fffed23),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000080),        //cb.wnez $r0? 1b3ac <main+0x129c>;;
     _32(0x18000934),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1bb),        //call 17ab8 <fn2_7>;;
     _32(0x1fffed1c),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f101b600),        //compw.eq $r0 = $r0, 120 (0x78);;
     _32(0x0c000080),        //cb.wnez $r0? 1b3e8 <main+0x12d8>;;
     _32(0x18000925),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1c6),        //call 17b20 <fn3_7>;;
     _32(0x1fffed15),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000190f101b380),        //compw.eq $r0 = $r0, 12814 (0x320e);;
     _32(0x0c000080),        //cb.wnez $r0? 1b424 <main+0x1314>;;
     _32(0x18000916),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1d1),        //call 17b88 <fn4_7>;;
     _32(0x1fffed0e),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 1b460 <main+0x1350>;;
     _32(0x18000907),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1da),        //call 17be8 <fn5_7>;;
     _32(0x1fffed07),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1b49c <main+0x138c>;;
     _32(0x180008f8),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1e2),        //call 17c48 <fn6_7>;;
     _32(0x1fffecff),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1b4d4 <main+0x13c4>;;
     _32(0x180008ea),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1ec),        //call 17ca8 <fn7_7>;;
     _32(0x1fffecf9),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b200),        //compw.eq $r0 = $r0, 136 (0x88);;
     _32(0x0c000080),        //cb.wnez $r0? 1b514 <main+0x1404>;;
     _32(0x180008da),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1f1),        //call 17cf0 <fn8_7>;;
     _32(0x1fffecf2),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 1b548 <main+0x1438>;;
     _32(0x180008cd),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff1f6),        //call 17d38 <fn9_7>;;
     _32(0x1fffeceb),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b0c0),        //compw.eq $r0 = $r0, 131 (0x83);;
     _32(0x0c000080),        //cb.wnez $r0? 1b57c <main+0x146c>;;
     _32(0x180008c0),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1c1),        //call 17d80 <fn1_8>;;
     _32(0x1fffec68),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b4c0),        //compw.eq $r0 = $r0, 51 (0x33);;
     _32(0x0c000080),        //cb.wnez $r0? 1b698 <main+0x1588>;;
     _32(0x18000879),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1ca),        //call 17de0 <fn2_8>;;
     _32(0x1fffec61),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000017f101b7c0),        //compw.eq $r0 = $r0, 767 (0x2ff);;
     _32(0x0c000080),        //cb.wnez $r0? 1b6d4 <main+0x15c4>;;
     _32(0x1800086a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1d5),        //call 17e48 <fn3_8>;;
     _32(0x1fffec5a),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003dff101b7c0),        //compw.eq $r0 = $r0, 31743 (0x7bff);;
     _32(0x0c000080),        //cb.wnez $r0? 1b710 <main+0x1600>;;
     _32(0x1800085b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1e0),        //call 17eb0 <fn4_8>;;
     _32(0x1fffec53),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b740),        //compw.eq $r0 = $r0, 29 (0x1d);;
     _32(0x0c000080),        //cb.wnez $r0? 1b74c <main+0x163c>;;
     _32(0x1800084c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1e9),        //call 17f10 <fn5_8>;;
     _32(0x1fffec4c),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1b788 <main+0x1678>;;
     _32(0x1800083d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff1f1),        //call 17f70 <fn6_8>;;
     _32(0x1fffec44),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0010203ef101b5c0),        //compw.eq $r0 = $r0, 33818583 (0x20407d7);;
     _32(0x0c000080),        //cb.wnez $r0? 1b7c8 <main+0x16b8>;;
     _32(0x1800082d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff1f9),        //call 17fd0 <fn7_8>;;
     _32(0x1fffec3c),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000357f101b740),        //compw.eq $r0 = $r0, 27389 (0x6afd);;
     _32(0x0c000080),        //cb.wnez $r0? 1b808 <main+0x16f8>;;
     _32(0x1800081d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff1fe),        //call 18018 <fn8_8>;;
     _32(0x1fffec35),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b740),        //compw.eq $r0 = $r0, 157 (0x9d);;
     _32(0x0c000080),        //cb.wnez $r0? 1b83c <main+0x172c>;;
     _32(0x18000810),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff203),        //call 18060 <fn9_8>;;
     _32(0x1fffec2e),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000007f101b7c0),        //compw.eq $r0 = $r0, 255 (0xff);;
     _32(0x0c000080),        //cb.wnez $r0? 1b870 <main+0x1760>;;
     _32(0x18000803),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1ce),        //call 180a8 <fn1_9>;;
     _32(0x1fffebab),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b400),        //compw.eq $r0 = $r0, 48 (0x30);;
     _32(0x0c000080),        //cb.wnez $r0? 1b98c <main+0x187c>;;
     _32(0x180007bc),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1d7),        //call 18108 <fn2_9>;;
     _32(0x1fffeba4),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000014f101b1c0),        //compw.eq $r0 = $r0, 647 (0x287);;
     _32(0x0c000080),        //cb.wnez $r0? 1b9c8 <main+0x18b8>;;
     _32(0x180007ad),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1e2),        //call 18170 <fn3_9>;;
     _32(0x1fffeb9d),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000024ff101b440),        //compw.eq $r0 = $r0, 18929 (0x49f1);;
     _32(0x0c000080),        //cb.wnez $r0? 1ba04 <main+0x18f4>;;
     _32(0x1800079e),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff1ed),        //call 181d8 <fn4_9>;;
     _32(0x1fffeb96),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b340),        //compw.eq $r0 = $r0, 13 (0xd);;
     _32(0x0c000080),        //cb.wnez $r0? 1ba40 <main+0x1930>;;
     _32(0x1800078f),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff1f6),        //call 18238 <fn5_9>;;
     _32(0x1fffeb8f),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1ba74 <main+0x1964>;;
     _32(0x18000782),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff200),        //call 18298 <fn6_9>;;
     _32(0x1fffeb89),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0010203ef101b5c0),        //compw.eq $r0 = $r0, 33818583 (0x20407d7);;
     _32(0x0c000080),        //cb.wnez $r0? 1bab4 <main+0x19a4>;;
     _32(0x18000772),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff208),        //call 182f8 <fn7_9>;;
     _32(0x1fffeb81),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000353f101b540),        //compw.eq $r0 = $r0, 27253 (0x6a75);;
     _32(0x0c000080),        //cb.wnez $r0? 1baf4 <main+0x19e4>;;
     _32(0x18000762),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff20d),        //call 18340 <fn8_9>;;
     _32(0x1fffeb7a),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b340),        //compw.eq $r0 = $r0, 141 (0x8d);;
     _32(0x0c000080),        //cb.wnez $r0? 1bb28 <main+0x1a18>;;
     _32(0x18000755),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff212),        //call 18388 <fn9_9>;;
     _32(0x1fffeb73),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f101b700),        //compw.eq $r0 = $r0, 124 (0x7c);;
     _32(0x0c000080),        //cb.wnez $r0? 1bb5c <main+0x1a4c>;;
     _32(0x18000748),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff1dd),        //call 183d0 <fn1_a>;;
     _32(0x1fffeaf0),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b440),        //compw.eq $r0 = $r0, 17 (0x11);;
     _32(0x0c000080),        //cb.wnez $r0? 1bc78 <main+0x1b68>;;
     _32(0x18000701),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff1ea),        //call 18440 <fn2_a>;;
     _32(0x1fffeae9),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 1bcb4 <main+0x1ba4>;;
     _32(0x180006f2),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff1f7),        //call 184b0 <fn3_a>;;
     _32(0x1fffeae2),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 1bcf0 <main+0x1be0>;;
     _32(0x180006e3),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff204),        //call 18520 <fn4_a>;;
     _32(0x1fffeadb),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1bd24 <main+0x1c14>;;
     _32(0x180006d6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff213),        //call 18590 <fn5_a>;;
     _32(0x1fffead6),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1bd60 <main+0x1c50>;;
     _32(0x180006c7),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff21f),        //call 18600 <fn6_a>;;
     _32(0x1fffeace),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000003f101b7c0),        //compw.eq $r0 = $r0, 127 (0x7f);;
     _32(0x0c000080),        //cb.wnez $r0? 1bda0 <main+0x1c90>;;
     _32(0x180006b7),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff22d),        //call 18678 <fn7_a>;;
     _32(0x1fffeac6),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b140),        //compw.eq $r0 = $r0, 37 (0x25);;
     _32(0x0c000080),        //cb.wnez $r0? 1bde0 <main+0x1cd0>;;
     _32(0x180006a7),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff236),        //call 186d0 <fn8_a>;;
     _32(0x1fffeabf),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000080),        //cb.wnez $r0? 1be14 <main+0x1d04>;;
     _32(0x1800069a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff23f),        //call 18728 <fn9_a>;;
     _32(0x1fffeab8),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1be40 <main+0x1d30>;;
     _32(0x1800068f),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff210),        //call 18780 <fn1_b>;;
     _32(0x1fffea37),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1bf54 <main+0x1e44>;;
     _32(0x1800064a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff21f),        //call 187f0 <fn2_b>;;
     _32(0x1fffea32),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b180),        //compw.eq $r0 = $r0, 134 (0x86);;
     _32(0x0c000080),        //cb.wnez $r0? 1bf90 <main+0x1e80>;;
     _32(0x1800063b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff22c),        //call 18860 <fn3_b>;;
     _32(0x1fffea2b),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000093f101b400),        //compw.eq $r0 = $r0, 4720 (0x1270);;
     _32(0x0c000080),        //cb.wnez $r0? 1bfcc <main+0x1ebc>;;
     _32(0x1800062c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff239),        //call 188d0 <fn4_b>;;
     _32(0x1fffea24),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b540),        //compw.eq $r0 = $r0, 21 (0x15);;
     _32(0x0c000080),        //cb.wnez $r0? 1c008 <main+0x1ef8>;;
     _32(0x1800061d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff246),        //call 18940 <fn5_b>;;
     _32(0x1fffea1d),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1c03c <main+0x1f2c>;;
     _32(0x18000610),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff254),        //call 189b0 <fn6_b>;;
     _32(0x1fffea17),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000000e2f101b5c0),        //compw.eq $r0 = $r0, 7255 (0x1c57);;
     _32(0x0c000080),        //cb.wnez $r0? 1c07c <main+0x1f6c>;;
     _32(0x18000600),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff262),        //call 18a28 <fn7_b>;;
     _32(0x1fffea0f),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000000df101b3c0),        //compw.eq $r0 = $r0, 431 (0x1af);;
     _32(0x0c000080),        //cb.wnez $r0? 1c0bc <main+0x1fac>;;
     _32(0x180005f0),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff26b),        //call 18a80 <fn8_b>;;
     _32(0x1fffea08),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000080),        //cb.wnez $r0? 1c0f0 <main+0x1fe0>;;
     _32(0x180005e3),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff274),        //call 18ad8 <fn9_b>;;
     _32(0x1fffea01),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b6c0),        //compw.eq $r0 = $r0, 187 (0xbb);;
     _32(0x0c000080),        //cb.wnez $r0? 1c124 <main+0x2014>;;
     _32(0x180005d6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff243),        //call 18b30 <fn1_c>;;
     _32(0x1fffe97e),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b580),        //compw.eq $r0 = $r0, 54 (0x36);;
     _32(0x0c000080),        //cb.wnez $r0? 1c240 <main+0x2130>;;
     _32(0x1800058f),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff24a),        //call 18b88 <fn2_c>;;
     _32(0x1fffe977),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b7c0),        //compw.eq $r0 = $r0, 639 (0x27f);;
     _32(0x0c000080),        //cb.wnez $r0? 1c27c <main+0x216c>;;
     _32(0x18000580),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff251),        //call 18be0 <fn3_c>;;
     _32(0x1fffe970),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b440),        //compw.eq $r0 = $r0, 31281 (0x7a31);;
     _32(0x0c000080),        //cb.wnez $r0? 1c2b8 <main+0x21a8>;;
     _32(0x18000571),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff258),        //call 18c38 <fn4_c>;;
     _32(0x1fffe969),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b600),        //compw.eq $r0 = $r0, 24 (0x18);;
     _32(0x0c000080),        //cb.wnez $r0? 1c2f4 <main+0x21e4>;;
     _32(0x18000562),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff25f),        //call 18c90 <fn5_c>;;
     _32(0x1fffe962),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1c328 <main+0x2218>;;
     _32(0x18000555),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff267),        //call 18ce8 <fn6_c>;;
     _32(0x1fffe95c),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00100000f101b0c0),        //compw.eq $r0 = $r0, 33554435 (0x2000003);;
     _32(0x0c000080),        //cb.wnez $r0? 1c368 <main+0x2258>;;
     _32(0x18000545),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff26f),        //call 18d48 <fn7_c>;;
     _32(0x1fffe954),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b7c0),        //compw.eq $r0 = $r0, 26815 (0x68bf);;
     _32(0x0c000080),        //cb.wnez $r0? 1c3a8 <main+0x2298>;;
     _32(0x18000535),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff272),        //call 18d88 <fn8_c>;;
     _32(0x1fffe94d),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b7c0),        //compw.eq $r0 = $r0, 159 (0x9f);;
     _32(0x0c000080),        //cb.wnez $r0? 1c3dc <main+0x22cc>;;
     _32(0x18000528),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff275),        //call 18dc8 <fn9_c>;;
     _32(0x1fffe946),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b780),        //compw.eq $r0 = $r0, 190 (0xbe);;
     _32(0x0c000080),        //cb.wnez $r0? 1c410 <main+0x2300>;;
     _32(0x1800051b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff23e),        //call 18e08 <fn1_d>;;
     _32(0x1fffe8c3),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b300),        //compw.eq $r0 = $r0, 44 (0x2c);;
     _32(0x0c000080),        //cb.wnez $r0? 1c52c <main+0x241c>;;
     _32(0x180004d4),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff245),        //call 18e60 <fn2_d>;;
     _32(0x1fffe8bc),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b540),        //compw.eq $r0 = $r0, 629 (0x275);;
     _32(0x0c000080),        //cb.wnez $r0? 1c568 <main+0x2458>;;
     _32(0x180004c5),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff24c),        //call 18eb8 <fn3_d>;;
     _32(0x1fffe8b5),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b1c0),        //compw.eq $r0 = $r0, 31271 (0x7a27);;
     _32(0x0c000080),        //cb.wnez $r0? 1c5a4 <main+0x2494>;;
     _32(0x180004b6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff253),        //call 18f10 <fn4_d>;;
     _32(0x1fffe8ae),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b380),        //compw.eq $r0 = $r0, 14 (0xe);;
     _32(0x0c000080),        //cb.wnez $r0? 1c5e0 <main+0x24d0>;;
     _32(0x180004a7),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff25a),        //call 18f68 <fn5_d>;;
     _32(0x1fffe8a7),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1c614 <main+0x2504>;;
     _32(0x1800049a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff262),        //call 18fc0 <fn6_d>;;
     _32(0x1fffe8a1),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000ffffff101b640),        //compw.eq $r0 = $r0, 33554425 (0x1fffff9);;
     _32(0x0c000080),        //cb.wnez $r0? 1c654 <main+0x2544>;;
     _32(0x1800048a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff26a),        //call 19020 <fn7_d>;;
     _32(0x1fffe899),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b540),        //compw.eq $r0 = $r0, 26805 (0x68b5);;
     _32(0x0c000080),        //cb.wnez $r0? 1c694 <main+0x2584>;;
     _32(0x1800047a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff26d),        //call 19060 <fn8_d>;;
     _32(0x1fffe892),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b540),        //compw.eq $r0 = $r0, 149 (0x95);;
     _32(0x0c000080),        //cb.wnez $r0? 1c6c8 <main+0x25b8>;;
     _32(0x1800046d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff270),        //call 190a0 <fn9_d>;;
     _32(0x1fffe88b),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b500),        //compw.eq $r0 = $r0, 180 (0xb4);;
     _32(0x0c000080),        //cb.wnez $r0? 1c6fc <main+0x25ec>;;
     _32(0x18000460),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff239),        //call 190e0 <fn1_e>;;
     _32(0x1fffe808),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b440),        //compw.eq $r0 = $r0, 17 (0x11);;
     _32(0x0c000080),        //cb.wnez $r0? 1c818 <main+0x2708>;;
     _32(0x18000419),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff23e),        //call 19130 <fn2_e>;;
     _32(0x1fffe801),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b500),        //compw.eq $r0 = $r0, 20 (0x14);;
     _32(0x0c000080),        //cb.wnez $r0? 1c854 <main+0x2744>;;
     _32(0x1800040a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff243),        //call 19180 <fn3_e>;;
     _32(0x1fffe7fa),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000080),        //cb.wnez $r0? 1c890 <main+0x2780>;;
     _32(0x180003fb),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff248),        //call 191d0 <fn4_e>;;
     _32(0x1fffe7f3),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b540),        //compw.eq $r0 = $r0, 21 (0x15);;
     _32(0x0c000080),        //cb.wnez $r0? 1c8cc <main+0x27bc>;;
     _32(0x180003ec),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff24d),        //call 19220 <fn5_e>;;
     _32(0x1fffe7ec),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1c908 <main+0x27f8>;;
     _32(0x180003dd),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff24f),        //call 19268 <fn6_e>;;
     _32(0x1fffe7e4),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1c940 <main+0x2830>;;
     _32(0x180003cf),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff255),        //call 192b8 <fn7_e>;;
     _32(0x1fffe7de),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b500),        //compw.eq $r0 = $r0, 20 (0x14);;
     _32(0x0c000080),        //cb.wnez $r0? 1c980 <main+0x2870>;;
     _32(0x180003bf),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff258),        //call 192f8 <fn8_e>;;
     _32(0x1fffe7d7),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b500),        //compw.eq $r0 = $r0, 20 (0x14);;
     _32(0x0c000080),        //cb.wnez $r0? 1c9b4 <main+0x28a4>;;
     _32(0x180003b2),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff25b),        //call 19338 <fn9_e>;;
     _32(0x1fffe7d0),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b440),        //compw.eq $r0 = $r0, 17 (0x11);;
     _32(0x0c000080),        //cb.wnez $r0? 1c9e8 <main+0x28d8>;;
     _32(0x180003a5),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff224),        //call 19378 <fn1_f>;;
     _32(0x1fffe74d),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b4c0),        //compw.eq $r0 = $r0, 51 (0x33);;
     _32(0x0c000080),        //cb.wnez $r0? 1cb04 <main+0x29f4>;;
     _32(0x1800035e),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff229),        //call 193c8 <fn2_f>;;
     _32(0x1fffe746),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000013f101b7c0),        //compw.eq $r0 = $r0, 639 (0x27f);;
     _32(0x0c000080),        //cb.wnez $r0? 1cb40 <main+0x2a30>;;
     _32(0x1800034f),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff22e),        //call 19418 <fn3_f>;;
     _32(0x1fffe73f),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d1f101b7c0),        //compw.eq $r0 = $r0, 31295 (0x7a3f);;
     _32(0x0c000080),        //cb.wnez $r0? 1cb7c <main+0x2a6c>;;
     _32(0x18000340),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff233),        //call 19468 <fn4_f>;;
     _32(0x1fffe738),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b5c0),        //compw.eq $r0 = $r0, 23 (0x17);;
     _32(0x0c000080),        //cb.wnez $r0? 1cbb8 <main+0x2aa8>;;
     _32(0x18000331),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff238),        //call 194b8 <fn5_f>;;
     _32(0x1fffe731),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1cbf4 <main+0x2ae4>;;
     _32(0x18000322),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff23e),        //call 19510 <fn6_f>;;
     _32(0x1fffe729),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00100000f101b4c0),        //compw.eq $r0 = $r0, 33554451 (0x2000013);;
     _32(0x0c000080),        //cb.wnez $r0? 1cc34 <main+0x2b24>;;
     _32(0x18000312),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff242),        //call 19560 <fn7_f>;;
     _32(0x1fffe721),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000345f101b7c0),        //compw.eq $r0 = $r0, 26815 (0x68bf);;
     _32(0x0c000080),        //cb.wnez $r0? 1cc74 <main+0x2b64>;;
     _32(0x18000302),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff245),        //call 195a0 <fn8_f>;;
     _32(0x1fffe71a),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b7c0),        //compw.eq $r0 = $r0, 159 (0x9f);;
     _32(0x0c000080),        //cb.wnez $r0? 1cca8 <main+0x2b98>;;
     _32(0x180002f5),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff248),        //call 195e0 <fn9_f>;;
     _32(0x1fffe713),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b6c0),        //compw.eq $r0 = $r0, 187 (0xbb);;
     _32(0x0c000080),        //cb.wnez $r0? 1ccdc <main+0x2bcc>;;
     _32(0x180002e8),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff211),        //call 19620 <fn1_g>;;
     _32(0x1fffe690),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b580),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x0c000080),        //cb.wnez $r0? 1cdf8 <main+0x2ce8>;;
     _32(0x180002a1),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff216),        //call 19670 <fn2_g>;;
     _32(0x1fffe689),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000012f101b640),        //compw.eq $r0 = $r0, 601 (0x259);;
     _32(0x0c000080),        //cb.wnez $r0? 1ce34 <main+0x2d24>;;
     _32(0x18000292),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff21b),        //call 196c0 <fn3_g>;;
     _32(0x1fffe682),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x000003d0f101b2c0),        //compw.eq $r0 = $r0, 31243 (0x7a0b);;
     _32(0x0c000080),        //cb.wnez $r0? 1ce70 <main+0x2d60>;;
     _32(0x18000283),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff220),        //call 19710 <fn4_g>;;
     _32(0x1fffe67b),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 1ceac <main+0x2d9c>;;
     _32(0x18000274),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff227),        //call 19768 <fn5_g>;;
     _32(0x1fffe674),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1cee0 <main+0x2dd0>;;
     _32(0x18000267),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff22f),        //call 197c0 <fn6_g>;;
     _32(0x1fffe66e),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00100001f101b140),        //compw.eq $r0 = $r0, 33554469 (0x2000025);;
     _32(0x0c000080),        //cb.wnez $r0? 1cf20 <main+0x2e10>;;
     _32(0x18000257),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff233),        //call 19810 <fn7_g>;;
     _32(0x1fffe666),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000344f101b640),        //compw.eq $r0 = $r0, 26777 (0x6899);;
     _32(0x0c000080),        //cb.wnez $r0? 1cf60 <main+0x2e50>;;
     _32(0x18000247),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff236),        //call 19850 <fn8_g>;;
     _32(0x1fffe65f),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000005f101b640),        //compw.eq $r0 = $r0, 185 (0xb9);;
     _32(0x0c000080),        //cb.wnez $r0? 1cf94 <main+0x2e84>;;
     _32(0x1800023a),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff239),        //call 19890 <fn9_g>;;
     _32(0x1fffe658),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000004f101b780),        //compw.eq $r0 = $r0, 158 (0x9e);;
     _32(0x0c000080),        //cb.wnez $r0? 1cfc8 <main+0x2eb8>;;
     _32(0x1800022d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff202),        //call 198d0 <fn1_h>;;
     _32(0x1fffe5d5),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000080),        //cb.wnez $r0? 1d0e4 <main+0x2fd4>;;
     _32(0x180001e6),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff20f),        //call 19940 <fn2_h>;;
     _32(0x1fffe5ce),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b140),        //compw.eq $r0 = $r0, 37 (0x25);;
     _32(0x0c000080),        //cb.wnez $r0? 1d120 <main+0x3010>;;
     _32(0x180001d7),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff21e),        //call 199b8 <fn3_h>;;
     _32(0x1fffe5c7),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000039f101b3c0),        //compw.eq $r0 = $r0, 1839 (0x72f);;
     _32(0x0c000080),        //cb.wnez $r0? 1d15c <main+0x304c>;;
     _32(0x180001c8),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff22d),        //call 19a30 <fn4_h>;;
     _32(0x1fffe5c0),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1d198 <main+0x3088>;;
     _32(0x180001b9),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff23a),        //call 19aa0 <fn5_h>;;
     _32(0x1fffe5b9),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1d1cc <main+0x30bc>;;
     _32(0x180001ac),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff248),        //call 19b10 <fn6_h>;;
     _32(0x1fffe5b3),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x0000f0f0f101b780),        //compw.eq $r0 = $r0, 1973790 (0x1e1e1e);;
     _32(0x0c000080),        //cb.wnez $r0? 1d20c <main+0x30fc>;;
     _32(0x1800019c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff256),        //call 19b88 <fn7_h>;;
     _32(0x1fffe5ab),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000031f101b240),        //compw.eq $r0 = $r0, 1577 (0x629);;
     _32(0x0c000080),        //cb.wnez $r0? 1d24c <main+0x313c>;;
     _32(0x1800018c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff25d),        //call 19bd8 <fn8_h>;;
     _32(0x1fffe5a4),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000080),        //cb.wnez $r0? 1d280 <main+0x3170>;;
     _32(0x1800017f),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff264),        //call 19c28 <fn9_h>;;
     _32(0x1fffe59d),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b2c0),        //compw.eq $r0 = $r0, 11 (0xb);;
     _32(0x0c000080),        //cb.wnez $r0? 1d2b4 <main+0x31a4>;;
     _32(0x18000172),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60087a2e),        //make $r2 = 31278 (0x7a2e);;
     _32(0x6103f442),        //insf $r0 = $r2, 31 (0x1f), 17 (0x11);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000003),        //make $r0 = 3 (0x3);;
     _32(0x1ffff231),        //call 19c78 <fn1_i>;;
     _32(0x1fffe51a),        //call 16820 <ret1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b340),        //compw.eq $r0 = $r0, 13 (0xd);;
     _32(0x0c000080),        //cb.wnez $r0? 1d3d0 <main+0x32c0>;;
     _32(0x1800012b),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080033),        //make $r2 = 51 (0x33);;
     _32(0x60035002),        //insf $r0 = $r2, 5 (0x5), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600000fb),        //make $r0 = 251 (0xfb);;
     _32(0x1ffff246),        //call 19d08 <fn2_i>;;
     _32(0x1fffe513),        //call 16840 <ret2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000080),        //cb.wnez $r0? 1d40c <main+0x32fc>;;
     _32(0x1800011c),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008027c),        //make $r2 = 636 (0x27c);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600033df),        //make $r0 = 13279 (0x33df);;
     _32(0x1ffff25b),        //call 19d98 <fn3_i>;;
     _32(0x1fffe50c),        //call 16860 <ret3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000080),        //cb.wnez $r0? 1d448 <main+0x3338>;;
     _32(0x1800010d),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042200),        //make $r1 = 314504 (0x4cc88);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x6008022e),        //make $r2 = 558 (0x22e);;
     _32(0x61030182),        //insf $r0 = $r2, 16 (0x10), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000018),        //make $r0 = 24 (0x18);;
     _32(0x1ffff270),        //call 19e28 <fn4_i>;;
     _32(0x1fffe505),        //call 16880 <ret4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 1d484 <main+0x3374>;;
     _32(0x180000fe),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080015),        //make $r2 = 21 (0x15);;
     _32(0x60034002),        //insf $r0 = $r2, 4 (0x4), 0 (0x0);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffff285),        //call 19eb8 <fn5_i>;;
     _32(0x1fffe4fe),        //call 168a0 <ret5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1d4c0 <main+0x33b0>;;
     _32(0x180000ef),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _32(0x60080001),        //make $r2 = 1 (0x1);;
     _32(0x60035142),        //insf $r0 = $r2, 5 (0x5), 5 (0x5);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _64(0x00000101e000f5c0),        //make $r0 = 264151 (0x407d7);;
     _32(0x1ffff299),        //call 19f48 <fn6_i>;;
     _32(0x1fffe4f6),        //call 168c0 <ret6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b380),        //compw.eq $r0 = $r0, 14 (0xe);;
     _32(0x0c000080),        //cb.wnez $r0? 1d500 <main+0x33f0>;;
     _32(0x180000df),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0042600),        //make $r1 = 314520 (0x4cc98);;
     _32(0x30000001),        //lwz $r0 = 0 (0x0)[$r1];;
     _64(0x00008000e0080000),        //make $r2 = 33554432 (0x2000000);;
     _32(0x6103f182),        //insf $r0 = $r2, 31 (0x1f), 6 (0x6);;
     _32(0x26010001),        //sw 0 (0x0)[$r1] = $r0;;
     _32(0x600002c9),        //make $r0 = 713 (0x2c9);;
     _32(0x1ffff2ad),        //call 19fd8 <fn7_i>;;
     _32(0x1fffe4ee),        //call 168e0 <ret7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000080),        //cb.wnez $r0? 1d540 <main+0x3430>;;
     _32(0x180000cf),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x600468bc),        //make $r1 = 26812 (0x68bc);;
     _32(0x25050000),        //sh 0 (0x0)[$r0] = $r1;;
     _32(0x60000011),        //make $r0 = 17 (0x11);;
     _32(0x1ffff2ba),        //call 1a040 <fn8_i>;;
     _32(0x1fffe4e7),        //call 168f8 <ret8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000080),        //cb.wnez $r0? 1d574 <main+0x3464>;;
     _32(0x180000c2),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ff9c),        //make $r1 = -100 (0xffffff9c);;
     _32(0x24050080),        //sb 2 (0x2)[$r0] = $r1;;
     _32(0x600000c7),        //make $r0 = 199 (0xc7);;
     _32(0x1ffff2c7),        //call 1a0a8 <fn9_i>;;
     _32(0x1fffe4e0),        //call 16910 <ret9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 1d5a8 <main+0x3498>;;
     _32(0x180000b5),        //call 1d878 <abort>;;
     _96(0x0000000080000133e0002a00),        //make $r0 = 314536 (0x4cca8);;
     _32(0x6004ffbb),        //make $r1 = -69 (0xffffffbb);;
     _32(0x240500c0),        //sb 3 (0x3)[$r0] = $r1;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let __udivdi3: list_I = 
 [|
     _32(0x88800641),        //cb.deqz $r1? 1d634 <__udivdi3+0x64>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0xea080000),        //copyd $r2 = $r0
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000503),        //cb.dnez $r3? 1d630 <__udivdi3+0x60>;;
     _32(0xf00e2001),        //clzd $r3 = $r1
     _32(0x70122002),        //clzd $r4 = $r2;;
     _32(0x751110c4),        //sbfw $r4 = $r4, $r3;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0x760da042),        //compd.ltu $r3 = $r2, $r1;;
     _32(0x08000103),        //cb.dnez $r3? 1d608 <__udivdi3+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x75090081),        //sbfd $r2 = $r1, $r2;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x0e000284),        //cb.wlez $r4? 1d630 <__udivdi3+0x60>;;
     _32(0xe0140001),        //make $r5 = 1 (0x1)
     _32(0xfa0c0004),        //copyw $r3 = $r4
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x79126105),        //slld $r4 = $r5, $r4;;
     _32(0x6110ffc4),        //addd $r4 = $r4, -1 (0xffffffff);;
     _32(0x0f000083),        //loopdo $r3, 1d628 <__udivdi3+0x58>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x78090084),        //andd $r2 = $r4, $r2;;
     _32(0x71010080),        //addd $r0 = $r0, $r2;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a3e0000000f0045700),        //pcrel $r1 = 167260 (0x28d5c)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 1d630 <__udivdi3+0x60>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __umoddi3: list_I = 
 [|
     _32(0x888004c1),        //cb.deqz $r1? 1d6a4 <__umoddi3+0x4c>
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0x080003c3),        //cb.dnez $r3? 1d6a0 <__umoddi3+0x48>;;
     _32(0xf0022000),        //clzd $r0 = $r0
     _32(0x700e2001),        //clzd $r3 = $r1;;
     _32(0x750d10c0),        //sbfw $r3 = $r0, $r3;;
     _32(0x790660c1),        //slld $r1 = $r1, $r3;;
     _32(0xf611a042),        //compd.ltu $r4 = $r2, $r1
     _32(0xf5010081),        //sbfd $r0 = $r1, $r2
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x710a0004),        //cmoved.deqz $r4? $r2 = $r0;;
     _32(0x8e000183),        //cb.wlez $r3? 1d6a0 <__umoddi3+0x48>
     _32(0x6a000002),        //copyd $r0 = $r2;;
     _32(0x7a000003),        //copyw $r0 = $r3;;
     _32(0x0f000080),        //loopdo $r0, 1d69c <__umoddi3+0x44>;;
     _32(0x70090081),        //stsud $r2 = $r1, $r2;;
     _32(0x7b0260c2),        //srld $r0 = $r2, $r3;;
     _32(0x0fd00000),        //ret ;;
     _96(0x800000a3e0000000f0043b00),        //pcrel $r1 = 167148 (0x28cec)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffe41),        //cb.dnez $r1? 1d6a0 <__umoddi3+0x48>;;
     _32(0x00000000),        //errop ;;
     _32(0x7f03f000)        //nop ;;
 |];

let __udivmoddi4: list_I = 
 [|
     _32(0x88800801),        //cb.deqz $r1? 1d748 <__udivmoddi4+0x80>
     _32(0xf0162001),        //clzd $r5 = $r1
     _32(0x6a0c0000),        //copyd $r3 = $r0;;
     _32(0xf0122003),        //clzd $r4 = $r3
     _32(0x7601a040),        //compd.ltu $r0 = $r0, $r1;;
     _32(0x75111144),        //sbfw $r4 = $r4, $r5;;
     _32(0x88000580),        //cb.dnez $r0? 1d738 <__udivmoddi4+0x70>
     _32(0x79166101),        //slld $r5 = $r1, $r4;;
     _32(0xf605a143),        //compd.ltu $r1 = $r3, $r5
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x08000101),        //cb.dnez $r1? 1d700 <__udivmoddi4+0x38>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c5),        //sbfd $r3 = $r5, $r3;;
     _32(0x79026100),        //slld $r0 = $r0, $r4;;
     _32(0x8e000304),        //cb.wlez $r4? 1d730 <__udivmoddi4+0x68>
     _32(0xe0180001),        //make $r6 = 1 (0x1)
     _32(0x6a040003),        //copyd $r1 = $r3;;
     _32(0xf91a6106),        //slld $r6 = $r6, $r4
     _32(0xfb162045),        //srld $r5 = $r5, 1 (0x1)
     _32(0x7a040004),        //copyw $r1 = $r4;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000081),        //loopdo $r1, 1d724 <__udivmoddi4+0x5c>;;
     _32(0x700d00c5),        //stsud $r3 = $r5, $r3;;
     _32(0xf81500c6),        //andd $r5 = $r6, $r3
     _32(0x7b066103),        //srld $r1 = $r3, $r4;;
     _32(0x71010140),        //addd $r0 = $r0, $r5;;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _32(0xea040003),        //copyd $r1 = $r3
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x8fd00000),        //ret 
     _32(0x27050002),        //sd 0 (0x0)[$r2] = $r1;;
     _96(0x800000a3e0000000f00c1200),        //pcrel $r3 = 166984 (0x28c48)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd03),        //cb.dnez $r3? 1d730 <__udivmoddi4+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __divdi3: list_I = 
 [|
     _32(0x88800781),        //cb.deqz $r1? 1d7e0 <__divdi3+0x78>
     _32(0xe40c0000),        //absd $r3 = $r0
     _32(0xe4100001),        //absd $r4 = $r1
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xf01a2003),        //clzd $r6 = $r3
     _32(0xf615a103),        //compd.ltu $r5 = $r3, $r4
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x080004c5),        //cb.dnez $r5? 1d7d0 <__divdi3+0x68>;;
     _32(0x70162004),        //clzd $r5 = $r4;;
     _32(0x75191146),        //sbfw $r6 = $r6, $r5;;
     _32(0x79126184),        //slld $r4 = $r4, $r6;;
     _32(0x7615a103),        //compd.ltu $r5 = $r3, $r4;;
     _32(0x08000105),        //cb.dnez $r5? 1d7a8 <__divdi3+0x40>;;
     _32(0xe0000001),        //make $r0 = 1 (0x1)
     _32(0x750d00c4),        //sbfd $r3 = $r4, $r3;;
     _32(0x79026180),        //slld $r0 = $r0, $r6;;
     _32(0x0e000286),        //cb.wlez $r6? 1d7d0 <__divdi3+0x68>;;
     _32(0xe01c0001),        //make $r7 = 1 (0x1)
     _32(0xfa140006),        //copyw $r5 = $r6
     _32(0x7b122044),        //srld $r4 = $r4, 1 (0x1);;
     _32(0x791a6187),        //slld $r6 = $r7, $r6;;
     _32(0x6118ffc6),        //addd $r6 = $r6, -1 (0xffffffff);;
     _32(0x0f000085),        //loopdo $r5, 1d7c8 <__divdi3+0x60>;;
     _32(0x700d00c4),        //stsud $r3 = $r4, $r3;;
     _32(0x780d00c6),        //andd $r3 = $r6, $r3;;
     _32(0x710100c0),        //addd $r0 = $r0, $r3;;
     _32(0xfc090042),        //xord $r2 = $r2, $r1
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a2e0000000f00cec00),        //pcrel $r3 = 166832 (0x28bb0)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b80c0203),        //ld $r3 = 8 (0x8)[$r3];;
     _32(0x087ffd83),        //cb.dnez $r3? 1d7d0 <__divdi3+0x68>;;
     _32(0x00000000)        //errop ;;
 |];

let __moddi3: list_I = 
 [|
     _32(0x88800581),        //cb.deqz $r1? 1d858 <__moddi3+0x58>
     _32(0x6a080000),        //copyd $r2 = $r0;;
     _32(0xe4000000),        //absd $r0 = $r0
     _32(0x64040001),        //absd $r1 = $r1;;
     _32(0xf0122001),        //clzd $r4 = $r1
     _32(0x760da040),        //compd.ltu $r3 = $r0, $r1;;
     _32(0x08000343),        //cb.dnez $r3? 1d84c <__moddi3+0x4c>;;
     _32(0x700e2000),        //clzd $r3 = $r0;;
     _32(0x75111103),        //sbfw $r4 = $r3, $r4;;
     _32(0x79066101),        //slld $r1 = $r1, $r4;;
     _32(0xf615a040),        //compd.ltu $r5 = $r0, $r1
     _32(0xf50d0001),        //sbfd $r3 = $r1, $r0
     _32(0x7b062041),        //srld $r1 = $r1, 1 (0x1);;
     _32(0x8e000184),        //cb.wlez $r4? 1d84c <__moddi3+0x4c>
     _32(0x710200c5),        //cmoved.deqz $r5? $r0 = $r3;;
     _32(0x7a0c0004),        //copyw $r3 = $r4;;
     _32(0x0f000083),        //loopdo $r3, 1d848 <__moddi3+0x48>;;
     _32(0x70010001),        //stsud $r0 = $r1, $r0;;
     _32(0x7b026100),        //srld $r0 = $r0, $r4;;
     _32(0x65040000),        //negd $r1 = $r0;;
     _32(0x8fd00000),        //ret 
     _32(0x72020042),        //cmoved.dltz $r2? $r0 = $r1;;
     _96(0x800000a2e0000000f004ce00),        //pcrel $r1 = 166712 (0x28b38)
     _32(0x00000000),        //make $r0 = 0 (0x0);;
     _64(0x18000000b8040201),        //ld $r1 = 8 (0x8)[$r1];;
     _32(0x087ffdc1),        //cb.dnez $r1? 1d84c <__moddi3+0x4c>;;
     _32(0x00000000)        //errop ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 1dc50 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 1f780 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00011010000100010000; //0x1a110
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret1, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret2, 0b00010110100001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret3, 0b00010110100001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret4, 0b00010110100010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret5, 0b00010110100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret6, 0b00010110100011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret7, 0b00010110100011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret8, 0b00010110100011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(ret9, 0b00010110100100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_1, 0b00010110100100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_1, 0b00010110100110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_1, 0b00010110100111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_1, 0b00010110101001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_1, 0b00010110101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_1, 0b00010110101100011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_1, 0b00010110101101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_1, 0b00010110101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_1, 0b00010110110000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_2, 0b00010110110001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_2, 0b00010110110010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_2, 0b00010110110011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_2, 0b00010110110101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_2, 0b00010110110110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_2, 0b00010110110111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_2, 0b00010110111001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_2, 0b00010110111010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_2, 0b00010110111011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_3, 0b00010110111100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_3, 0b00010110111101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_3, 0b00010110111110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_3, 0b00010111000000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_3, 0b00010111000001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_3, 0b00010111000010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_3, 0b00010111000100000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_3, 0b00010111000101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_3, 0b00010111000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_4, 0b00010111000111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_4, 0b00010111001000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_4, 0b00010111001010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_4, 0b00010111001011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_4, 0b00010111001101010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_4, 0b00010111001110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_4, 0b00010111010000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_4, 0b00010111010001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_4, 0b00010111010010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_5, 0b00010111010011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_5, 0b00010111010100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_5, 0b00010111010110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_5, 0b00010111010111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_5, 0b00010111011000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_5, 0b00010111011010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_5, 0b00010111011011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_5, 0b00010111011100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_5, 0b00010111011101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_6, 0b00010111011110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_6, 0b00010111011111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_6, 0b00010111100001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_6, 0b00010111100010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_6, 0b00010111100011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_6, 0b00010111100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_6, 0b00010111100110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_6, 0b00010111100111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_6, 0b00010111101000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_7, 0b00010111101001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_7, 0b00010111101010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_7, 0b00010111101100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_7, 0b00010111101110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_7, 0b00010111101111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_7, 0b00010111110001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_7, 0b00010111110010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_7, 0b00010111110011110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_7, 0b00010111110100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_8, 0b00010111110110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_8, 0b00010111110111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_8, 0b00010111111001001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_8, 0b00010111111010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_8, 0b00010111111100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_8, 0b00010111111101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_8, 0b00010111111111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_8, 0b00011000000000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_8, 0b00011000000001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_9, 0b00011000000010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_9, 0b00011000000100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_9, 0b00011000000101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_9, 0b00011000000111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_9, 0b00011000001000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_9, 0b00011000001010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_9, 0b00011000001011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_9, 0b00011000001101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_9, 0b00011000001110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_a, 0b00011000001111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_a, 0b00011000010001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_a, 0b00011000010010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_a, 0b00011000010100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_a, 0b00011000010110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_a, 0b00011000011000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_a, 0b00011000011001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_a, 0b00011000011011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_a, 0b00011000011100101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_b, 0b00011000011110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_b, 0b00011000011111110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_b, 0b00011000100001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_b, 0b00011000100011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_b, 0b00011000100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_b, 0b00011000100110110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_b, 0b00011000101000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_b, 0b00011000101010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_b, 0b00011000101011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_c, 0b00011000101100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_c, 0b00011000101110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_c, 0b00011000101111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_c, 0b00011000110000111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_c, 0b00011000110010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_c, 0b00011000110011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_c, 0b00011000110101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_c, 0b00011000110110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_c, 0b00011000110111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_d, 0b00011000111000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_d, 0b00011000111001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_d, 0b00011000111010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_d, 0b00011000111100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_d, 0b00011000111101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_d, 0b00011000111111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_d, 0b00011001000000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_d, 0b00011001000001100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_d, 0b00011001000010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_e, 0b00011001000011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_e, 0b00011001000100110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_e, 0b00011001000110000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_e, 0b00011001000111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_e, 0b00011001001000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_e, 0b00011001001001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_e, 0b00011001001010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_e, 0b00011001001011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_e, 0b00011001001100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_f, 0b00011001001101111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_f, 0b00011001001111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_f, 0b00011001010000011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_f, 0b00011001010001101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_f, 0b00011001010010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_f, 0b00011001010100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_f, 0b00011001010101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_f, 0b00011001010110100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_f, 0b00011001010111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_g, 0b00011001011000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_g, 0b00011001011001110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_g, 0b00011001011011000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_g, 0b00011001011100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_g, 0b00011001011101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_g, 0b00011001011111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_g, 0b00011001100000010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_g, 0b00011001100001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_g, 0b00011001100010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_h, 0b00011001100011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_h, 0b00011001100101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_h, 0b00011001100110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_h, 0b00011001101000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_h, 0b00011001101010100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_h, 0b00011001101100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_h, 0b00011001101110001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_h, 0b00011001101111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_h, 0b00011001110000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn1_i, 0b00011001110001111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn2_i, 0b00011001110100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn3_i, 0b00011001110110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn4_i, 0b00011001111000101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn5_i, 0b00011001111010111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn6_i, 0b00011001111101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn7_i, 0b00011001111111011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn8_i, 0b00011010000001000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(fn9_i, 0b00011010000010101000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00011010000100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivdi3, 0b00011101010111010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__umoddi3, 0b00011101011001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__udivmoddi4, 0b00011101011011001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__divdi3, 0b00011101011101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__moddi3, 0b00011101100000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00011101100001111000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
