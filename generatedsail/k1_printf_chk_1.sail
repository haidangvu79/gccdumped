// executing printf_chk_1 test 
val k1_printf_chk_1: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_printf_chk_1() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let __printf_chk: list_I = 
 [|
     _32(0x6130d80c),        //addd $r12 = $r12, -160 (0xffffff60);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x2809140c),        //sq 80 (0x50)[$r12] = $r2r3;;
     _32(0x2811180c),        //sq 96 (0x60)[$r12] = $r4r5;;
     _32(0x28191c0c),        //sq 112 (0x70)[$r12] = $r6r7;;
     _32(0x2821200c),        //sq 128 (0x80)[$r12] = $r8r9;;
     _32(0x2829240c),        //sq 144 (0x90)[$r12] = $r10r11;;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x2705080c),        //sd 32 (0x20)[$r12] = $r1;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x6100140c),        //addd $r0 = $r12, 80 (0x50);;
     _32(0x27010c0c),        //sd 48 (0x30)[$r12] = $r0;;
     _32(0x38000c0c),        //ld $r0 = 48 (0x30)[$r12];;
     _32(0x6a040000),        //copyd $r1 = $r0;;
     _32(0x3800080c),        //ld $r0 = 32 (0x20)[$r12];;
     _32(0x18000424),        //call 17900 <vprintf>;;
     _32(0x26010f0c),        //sw 60 (0x3c)[$r12] = $r0;;
     _32(0x30000f0c),        //lwz $r0 = 60 (0x3c)[$r12];;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130280c),        //addd $r12 = $r12, 160 (0xa0);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e004f000),        //make $r1 = 263104 (0x403c0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffffd8),        //call 16820 <__printf_chk>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 168e0 <main+0x50>;;
     _32(0x1800019d),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e004f000),        //make $r1 = 263104 (0x403c0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffffc7),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000080),        //cb.wnez $r0? 1691c <main+0x8c>;;
     _32(0x1800018e),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16938 <main+0xa8>;;
     _32(0x18000187),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x180002aa),        //call 17400 <puts>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16978 <main+0xe8>;;
     _32(0x18000177),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e004f200),        //make $r1 = 263112 (0x403c8);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffffa1),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000080),        //cb.wnez $r0? 169b4 <main+0x124>;;
     _32(0x18000168),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 169d0 <main+0x140>;;
     _32(0x18000161),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000061),        //make $r0 = 97 (0x61);;
     _32(0x180001a4),        //call 17078 <putchar>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16a08 <main+0x178>;;
     _32(0x18000153),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e004f400),        //make $r1 = 263120 (0x403d0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffff7d),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16a44 <main+0x1b4>;;
     _32(0x18000144),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16a60 <main+0x1d0>;;
     _32(0x1800013d),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16a90 <main+0x200>;;
     _32(0x18000131),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e004f600),        //make $r1 = 263128 (0x403d8);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffff5b),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16ac4 <main+0x234>;;
     _32(0x18000124),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16ae0 <main+0x250>;;
     _32(0x1800011d),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e008f000),        //make $r2 = 263104 (0x403c0);;
     _96(0x0000000080000100e004f800),        //make $r1 = 263136 (0x403e0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffff44),        //call 16820 <__printf_chk>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16b30 <main+0x2a0>;;
     _32(0x18000109),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e008f000),        //make $r2 = 263104 (0x403c0);;
     _96(0x0000000080000100e004f800),        //make $r1 = 263136 (0x403e0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffff30),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000080),        //cb.wnez $r0? 16b78 <main+0x2e8>;;
     _32(0x180000f7),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16b94 <main+0x304>;;
     _32(0x180000f0),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x18000213),        //call 17400 <puts>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16bd4 <main+0x344>;;
     _32(0x180000e0),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e008f200),        //make $r2 = 263112 (0x403c8);;
     _96(0x0000000080000100e004f800),        //make $r1 = 263136 (0x403e0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1fffff07),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000080),        //cb.wnez $r0? 16c1c <main+0x38c>;;
     _32(0x180000ce),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16c38 <main+0x3a8>;;
     _32(0x180000c7),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000061),        //make $r0 = 97 (0x61);;
     _32(0x1800010a),        //call 17078 <putchar>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16c70 <main+0x3e0>;;
     _32(0x180000b9),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e008f400),        //make $r2 = 263120 (0x403d0);;
     _96(0x0000000080000100e004f800),        //make $r1 = 263136 (0x403e0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffee0),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16cb8 <main+0x428>;;
     _32(0x180000a7),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16cd4 <main+0x444>;;
     _32(0x180000a0),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16d04 <main+0x474>;;
     _32(0x18000094),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e008f600),        //make $r2 = 263128 (0x403d8);;
     _96(0x0000000080000100e004f800),        //make $r1 = 263136 (0x403e0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffebb),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16d44 <main+0x4b4>;;
     _32(0x18000084),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16d60 <main+0x4d0>;;
     _32(0x1800007d),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60000078),        //make $r0 = 120 (0x78);;
     _32(0x180000c0),        //call 17078 <putchar>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16d98 <main+0x508>;;
     _32(0x1800006f),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60080078),        //make $r2 = 120 (0x78);;
     _96(0x0000000080000100e004fa00),        //make $r1 = 263144 (0x403e8);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffe98),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16dd8 <main+0x548>;;
     _32(0x1800005f),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16df4 <main+0x564>;;
     _32(0x18000058),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040001),        //make $r1 = 1 (0x1);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e000f200),        //make $r0 = 263112 (0x403c8);;
     _32(0x1800017b),        //call 17400 <puts>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16e34 <main+0x5a4>;;
     _32(0x18000048),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x0000000080000100e008f200),        //make $r2 = 263112 (0x403c8);;
     _96(0x0000000080000100e004fc00),        //make $r1 = 263152 (0x403f0);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffe6f),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b1c0),        //compw.eq $r0 = $r0, 7 (0x7);;
     _32(0x0c000080),        //cb.wnez $r0? 16e7c <main+0x5ec>;;
     _32(0x18000036),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16e98 <main+0x608>;;
     _32(0x1800002f),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _96(0x0000000080000100e004fe00),        //make $r1 = 263160 (0x403f8);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffe58),        //call 16820 <__printf_chk>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16ee0 <main+0x650>;;
     _32(0x1800001d),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x60080000),        //make $r2 = 0 (0x0);;
     _96(0x0000000080000100e004fe00),        //make $r1 = 263160 (0x403f8);;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffe46),        //call 16820 <__printf_chk>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 16f20 <main+0x690>;;
     _32(0x1800000d),        //call 16f50 <abort>;;
     _96(0x000000008000011be0003000),        //make $r0 = 289984 (0x46cc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 16f3c <main+0x6ac>;;
     _32(0x18000006),        //call 16f50 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980001dd),        //call 176d0 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98002c99),        //call 221c8 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110100010010000; //0x16890
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(__printf_chk, 0b00010110100000100000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110100010010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010110111101010000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
