// executing divcmp_1.c.out.dumped test 
val k1_divcmp_1.: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_divcmp_1.() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let test1: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7100fb00),        //addw $r0 = $r0, -20 (0xffffffec);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test1u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7100fb00),        //addw $r0 = $r0, -20 (0xffffffec);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test2: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000240),        //addw $r0 = $r0, 9 (0x9);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f801b480),        //compw.leu $r0 = $r0, 18 (0x12);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test2u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test3: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7100fb00),        //addw $r0 = $r0, -20 (0xffffffec);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f901b240),        //compw.gtu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test3u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7100fb00),        //addw $r0 = $r0, -20 (0xffffffec);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f901b240),        //compw.gtu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test4: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000240),        //addw $r0 = $r0, 9 (0x9);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f901b480),        //compw.gtu $r0 = $r0, 18 (0x12);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test4u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f901b240),        //compw.gtu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test5: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f401b4c0),        //compw.le $r0 = $r0, 19 (0x13);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test5u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f801b4c0),        //compw.leu $r0 = $r0, 19 (0x13);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test6: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x07fffffff201b5c0),        //compw.lt $r0 = $r0, 4294967287 (0xfffffff7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test7: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f401b740),        //compw.le $r0 = $r0, 29 (0x1d);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test7u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f801b740),        //compw.leu $r0 = $r0, 29 (0x1d);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test8: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f401b240),        //compw.le $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test8u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f801b240),        //compw.leu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test9: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f501b740),        //compw.gt $r0 = $r0, 29 (0x1d);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test9u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f901b740),        //compw.gtu $r0 = $r0, 29 (0x1d);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test10: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f501b240),        //compw.gt $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test10u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f901b240),        //compw.gtu $r0 = $r0, 9 (0x9);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test11: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f501b4c0),        //compw.gt $r0 = $r0, 19 (0x13);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test11u: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x00000000f901b4c0),        //compw.gtu $r0 = $r0, 19 (0x13);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let test12: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _64(0x07fffffff301b5c0),        //compw.ge $r0 = $r0, 4294967287 (0xfffffff7);;
     _32(0x78003fc0),        //zxbd $r0 = $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1fffff14),        //call 16820 <test1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16be0 <main+0x20>;;
     _32(0x18000289),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1fffff0f),        //call 16820 <test1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16bfc <main+0x3c>;;
     _32(0x18000282),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1fffff08),        //call 16820 <test1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16c18 <main+0x58>;;
     _32(0x1800027b),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1fffff01),        //call 16820 <test1>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16c2c <main+0x6c>;;
     _32(0x18000276),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1fffff08),        //call 16850 <test1u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16c40 <main+0x80>;;
     _32(0x18000271),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1fffff03),        //call 16850 <test1u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16c5c <main+0x9c>;;
     _32(0x1800026a),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffefc),        //call 16850 <test1u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16c78 <main+0xb8>;;
     _32(0x18000263),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffef5),        //call 16850 <test1u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16c8c <main+0xcc>;;
     _32(0x1800025e),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffefc),        //call 16880 <test2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16ca8 <main+0xe8>;;
     _32(0x18000257),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffef5),        //call 16880 <test2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16cc4 <main+0x104>;;
     _32(0x18000250),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffeee),        //call 16880 <test2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16cd8 <main+0x118>;;
     _32(0x1800024b),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffee9),        //call 16880 <test2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16cf4 <main+0x134>;;
     _32(0x18000244),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffee2),        //call 16880 <test2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16d10 <main+0x150>;;
     _32(0x1800023d),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffedb),        //call 16880 <test2>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16d24 <main+0x164>;;
     _32(0x18000238),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffee2),        //call 168b0 <test2u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16d40 <main+0x180>;;
     _32(0x18000231),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffedb),        //call 168b0 <test2u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16d5c <main+0x19c>;;
     _32(0x1800022a),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffed4),        //call 168b0 <test2u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16d70 <main+0x1b0>;;
     _32(0x18000225),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffecf),        //call 168b0 <test2u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16d84 <main+0x1c4>;;
     _32(0x18000220),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffeca),        //call 168b0 <test2u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16d98 <main+0x1d8>;;
     _32(0x1800021b),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffec5),        //call 168b0 <test2u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16dac <main+0x1ec>;;
     _32(0x18000216),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffeca),        //call 168d8 <test3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16dc8 <main+0x208>;;
     _32(0x1800020f),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffec3),        //call 168d8 <test3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16ddc <main+0x21c>;;
     _32(0x1800020a),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffebe),        //call 168d8 <test3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16df0 <main+0x230>;;
     _32(0x18000205),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffeb9),        //call 168d8 <test3>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16e0c <main+0x24c>;;
     _32(0x180001fe),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffebe),        //call 16908 <test3u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16e28 <main+0x268>;;
     _32(0x180001f7),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffeb7),        //call 16908 <test3u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16e3c <main+0x27c>;;
     _32(0x180001f2),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffeb2),        //call 16908 <test3u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16e50 <main+0x290>;;
     _32(0x180001ed),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffead),        //call 16908 <test3u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16e6c <main+0x2ac>;;
     _32(0x180001e6),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffeb2),        //call 16938 <test4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16e80 <main+0x2c0>;;
     _32(0x180001e1),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffead),        //call 16938 <test4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16e94 <main+0x2d4>;;
     _32(0x180001dc),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffea8),        //call 16938 <test4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16eb0 <main+0x2f0>;;
     _32(0x180001d5),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffea1),        //call 16938 <test4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16ec4 <main+0x304>;;
     _32(0x180001d0),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffe9c),        //call 16938 <test4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16ed8 <main+0x318>;;
     _32(0x180001cb),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffe97),        //call 16938 <test4>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16ef4 <main+0x334>;;
     _32(0x180001c4),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe9c),        //call 16968 <test4u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16f08 <main+0x348>;;
     _32(0x180001bf),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffe97),        //call 16968 <test4u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16f1c <main+0x35c>;;
     _32(0x180001ba),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffe92),        //call 16968 <test4u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16f38 <main+0x378>;;
     _32(0x180001b3),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffe8b),        //call 16968 <test4u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16f54 <main+0x394>;;
     _32(0x180001ac),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffe84),        //call 16968 <test4u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16f70 <main+0x3b0>;;
     _32(0x180001a5),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffe7d),        //call 16968 <test4u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16f8c <main+0x3cc>;;
     _32(0x1800019e),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffe80),        //call 16990 <test5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 16fa8 <main+0x3e8>;;
     _32(0x18000197),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffe79),        //call 16990 <test5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16fbc <main+0x3fc>;;
     _32(0x18000192),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffe74),        //call 16990 <test5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16fd0 <main+0x410>;;
     _32(0x1800018d),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffe6f),        //call 16990 <test5>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 16fe4 <main+0x424>;;
     _32(0x18000188),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffe74),        //call 169b8 <test5u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17000 <main+0x440>;;
     _32(0x18000181),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffe6d),        //call 169b8 <test5u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17014 <main+0x454>;;
     _32(0x1800017c),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffe68),        //call 169b8 <test5u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17028 <main+0x468>;;
     _32(0x18000177),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffe63),        //call 169b8 <test5u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1703c <main+0x47c>;;
     _32(0x18000172),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe68),        //call 169e0 <test6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17050 <main+0x490>;;
     _32(0x1800016d),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffe63),        //call 169e0 <test6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17064 <main+0x4a4>;;
     _32(0x18000168),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffe5e),        //call 169e0 <test6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17078 <main+0x4b8>;;
     _32(0x18000163),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffe59),        //call 169e0 <test6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1708c <main+0x4cc>;;
     _32(0x1800015e),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffe54),        //call 169e0 <test6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 170a0 <main+0x4e0>;;
     _32(0x18000159),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffe4f),        //call 169e0 <test6>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 170bc <main+0x4fc>;;
     _32(0x18000152),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffe52),        //call 16a08 <test7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 170d8 <main+0x518>;;
     _32(0x1800014b),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffe4b),        //call 16a08 <test7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 170f4 <main+0x534>;;
     _32(0x18000144),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffe44),        //call 16a08 <test7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17110 <main+0x550>;;
     _32(0x1800013d),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffe3d),        //call 16a08 <test7>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17124 <main+0x564>;;
     _32(0x18000138),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffe42),        //call 16a30 <test7u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17140 <main+0x580>;;
     _32(0x18000131),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffe3b),        //call 16a30 <test7u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1715c <main+0x59c>;;
     _32(0x1800012a),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffe34),        //call 16a30 <test7u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17178 <main+0x5b8>;;
     _32(0x18000123),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffe2d),        //call 16a30 <test7u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1718c <main+0x5cc>;;
     _32(0x1800011e),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe32),        //call 16a58 <test8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 171a8 <main+0x5e8>;;
     _32(0x18000117),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffe2b),        //call 16a58 <test8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 171c4 <main+0x604>;;
     _32(0x18000110),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffe24),        //call 16a58 <test8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 171d8 <main+0x618>;;
     _32(0x1800010b),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffe1f),        //call 16a58 <test8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 171f4 <main+0x634>;;
     _32(0x18000104),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffe18),        //call 16a58 <test8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17210 <main+0x650>;;
     _32(0x180000fd),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffe11),        //call 16a58 <test8>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1722c <main+0x66c>;;
     _32(0x180000f6),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffe14),        //call 16a80 <test8u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17248 <main+0x688>;;
     _32(0x180000ef),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffe0d),        //call 16a80 <test8u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17264 <main+0x6a4>;;
     _32(0x180000e8),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffe06),        //call 16a80 <test8u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17278 <main+0x6b8>;;
     _32(0x180000e3),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffe01),        //call 16a80 <test8u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1728c <main+0x6cc>;;
     _32(0x180000de),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffdfc),        //call 16a80 <test8u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 172a0 <main+0x6e0>;;
     _32(0x180000d9),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffdf7),        //call 16a80 <test8u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 172b4 <main+0x6f4>;;
     _32(0x180000d4),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffdfc),        //call 16aa8 <test9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 172c8 <main+0x708>;;
     _32(0x180000cf),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffdf7),        //call 16aa8 <test9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 172dc <main+0x71c>;;
     _32(0x180000ca),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffdf2),        //call 16aa8 <test9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 172f0 <main+0x730>;;
     _32(0x180000c5),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffded),        //call 16aa8 <test9>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1730c <main+0x74c>;;
     _32(0x180000be),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffdf0),        //call 16ad0 <test9u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17320 <main+0x760>;;
     _32(0x180000b9),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffdeb),        //call 16ad0 <test9u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17334 <main+0x774>;;
     _32(0x180000b4),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffde6),        //call 16ad0 <test9u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17348 <main+0x788>;;
     _32(0x180000af),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffde1),        //call 16ad0 <test9u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17364 <main+0x7a4>;;
     _32(0x180000a8),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffde4),        //call 16af8 <test10>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17378 <main+0x7b8>;;
     _32(0x180000a3),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffddf),        //call 16af8 <test10>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1738c <main+0x7cc>;;
     _32(0x1800009e),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffdda),        //call 16af8 <test10>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 173a8 <main+0x7e8>;;
     _32(0x18000097),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffdd3),        //call 16af8 <test10>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 173bc <main+0x7fc>;;
     _32(0x18000092),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffdce),        //call 16af8 <test10>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 173d0 <main+0x810>;;
     _32(0x1800008d),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffdc9),        //call 16af8 <test10>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 173e4 <main+0x824>;;
     _32(0x18000088),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffdce),        //call 16b20 <test10u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 173f8 <main+0x838>;;
     _32(0x18000083),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffdc9),        //call 16b20 <test10u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1740c <main+0x84c>;;
     _32(0x1800007e),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffdc4),        //call 16b20 <test10u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17428 <main+0x868>;;
     _32(0x18000077),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffdbd),        //call 16b20 <test10u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17444 <main+0x884>;;
     _32(0x18000070),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffdb6),        //call 16b20 <test10u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17460 <main+0x8a0>;;
     _32(0x18000069),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffdaf),        //call 16b20 <test10u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1747c <main+0x8bc>;;
     _32(0x18000062),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffdb2),        //call 16b48 <test11>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17490 <main+0x8d0>;;
     _32(0x1800005d),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffdad),        //call 16b48 <test11>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 174ac <main+0x8ec>;;
     _32(0x18000056),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffda6),        //call 16b48 <test11>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 174c8 <main+0x908>;;
     _32(0x1800004f),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffd9f),        //call 16b48 <test11>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 174e4 <main+0x924>;;
     _32(0x18000048),        //call 17600 <abort>;;
     _32(0x60000013),        //make $r0 = 19 (0x13);;
     _32(0x1ffffda2),        //call 16b70 <test11u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 174f8 <main+0x938>;;
     _32(0x18000043),        //call 17600 <abort>;;
     _32(0x60000014),        //make $r0 = 20 (0x14);;
     _32(0x1ffffd9d),        //call 16b70 <test11u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17514 <main+0x954>;;
     _32(0x1800003c),        //call 17600 <abort>;;
     _32(0x6000001d),        //make $r0 = 29 (0x1d);;
     _32(0x1ffffd96),        //call 16b70 <test11u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17530 <main+0x970>;;
     _32(0x18000035),        //call 17600 <abort>;;
     _32(0x6000001e),        //make $r0 = 30 (0x1e);;
     _32(0x1ffffd8f),        //call 16b70 <test11u>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1754c <main+0x98c>;;
     _32(0x1800002e),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffd92),        //call 16b98 <test12>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17568 <main+0x9a8>;;
     _32(0x18000027),        //call 17600 <abort>;;
     _32(0x60000009),        //make $r0 = 9 (0x9);;
     _32(0x1ffffd8b),        //call 16b98 <test12>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17584 <main+0x9c4>;;
     _32(0x18000020),        //call 17600 <abort>;;
     _32(0x6000000a),        //make $r0 = 10 (0xa);;
     _32(0x1ffffd84),        //call 16b98 <test12>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 175a0 <main+0x9e0>;;
     _32(0x18000019),        //call 17600 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffd7d),        //call 16b98 <test12>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 175bc <main+0x9fc>;;
     _32(0x18000012),        //call 17600 <abort>;;
     _32(0x6000fff7),        //make $r0 = -9 (0xfffffff7);;
     _32(0x1ffffd76),        //call 16b98 <test12>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 175d8 <main+0xa18>;;
     _32(0x1800000b),        //call 17600 <abort>;;
     _32(0x6000fff6),        //make $r0 = -10 (0xfffffff6);;
     _32(0x1ffffd6f),        //call 16b98 <test12>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 175ec <main+0xa2c>;;
     _32(0x18000006),        //call 17600 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x980000f3),        //call 179d8 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x980007bd),        //call 19508 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110101111000000; //0x16bc0
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test1, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test1u, 0b00010110100001010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test2, 0b00010110100010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test2u, 0b00010110100010110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test3, 0b00010110100011011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test3u, 0b00010110100100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test4, 0b00010110100100111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test4u, 0b00010110100101101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test5, 0b00010110100110010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test5u, 0b00010110100110111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test6, 0b00010110100111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test7, 0b00010110101000001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test7u, 0b00010110101000110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test8, 0b00010110101001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test8u, 0b00010110101010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test9, 0b00010110101010101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test9u, 0b00010110101011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test10, 0b00010110101011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test10u, 0b00010110101100100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test11, 0b00010110101101001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test11u, 0b00010110101101110000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test12, 0b00010110101110011000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110101111000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111011000000000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
