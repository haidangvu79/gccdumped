// executing strlen_6.c.out.dumped test 
val k1_strlen_6.: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_strlen_6.() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let test_binary_cond_expr_global: list_I = 
 [|
     _32(0x6130d80c),        //addd $r12 = $r12, -160 (0xffffff60);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 16854 <test_binary_cond_expr_global+0x34>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x10000004),        //goto 16860 <test_binary_cond_expr_global+0x40>;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x18000592),        //call 17eb0 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 168d0 <test_binary_cond_expr_global+0xb0>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x0000000080000100e008f800),        //make $r2 = 263136 (0x403e0);;
     _32(0x60040023),        //make $r1 = 35 (0x23);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000459),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 168f8 <test_binary_cond_expr_global+0xd8>;;
     _96(0x0000000080000100e000f000),        //make $r0 = 263104 (0x403c0);;
     _32(0x10000004),        //goto 16904 <test_binary_cond_expr_global+0xe4>;;
     _96(0x0000000080000101e0000a00),        //make $r0 = 263208 (0x40428);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x18000569),        //call 17eb0 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 16974 <test_binary_cond_expr_global+0x154>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x0000000080000101e0080c00),        //make $r2 = 263216 (0x40430);;
     _32(0x60040024),        //make $r1 = 36 (0x24);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000430),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 1699c <test_binary_cond_expr_global+0x17c>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x10000004),        //goto 169a8 <test_binary_cond_expr_global+0x188>;;
     _96(0x0000000080000100e000f200),        //make $r0 = 263112 (0x403c8);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18000540),        //call 17eb0 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 16a18 <test_binary_cond_expr_global+0x1f8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x0000000080000101e0081200),        //make $r2 = 263240 (0x40448);;
     _32(0x6004002b),        //make $r1 = 43 (0x2b);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000407),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 16a40 <test_binary_cond_expr_global+0x220>;;
     _96(0x0000000080000100e000f200),        //make $r0 = 263112 (0x403c8);;
     _32(0x10000004),        //goto 16a4c <test_binary_cond_expr_global+0x22c>;;
     _96(0x0000000080000101e0001800),        //make $r0 = 263264 (0x40460);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18000517),        //call 17eb0 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 16abc <test_binary_cond_expr_global+0x29c>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x0000000080000101e0081a00),        //make $r2 = 263272 (0x40468);;
     _32(0x6004002c),        //make $r1 = 44 (0x2c);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180003de),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 16ae4 <test_binary_cond_expr_global+0x2c4>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x10000004),        //goto 16af0 <test_binary_cond_expr_global+0x2d0>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x180004ee),        //call 17eb0 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 16b60 <test_binary_cond_expr_global+0x340>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x0000000080000101e0082000),        //make $r2 = 263296 (0x40480);;
     _32(0x6004002e),        //make $r1 = 46 (0x2e);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180003b5),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 16b88 <test_binary_cond_expr_global+0x368>;;
     _96(0x00000000800000fce0000200),        //make $r0 = 258056 (0x3f008);;
     _32(0x10000004),        //goto 16b94 <test_binary_cond_expr_global+0x374>;;
     _96(0x0000000080000101e0002600),        //make $r0 = 263320 (0x40498);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x180004c5),        //call 17eb0 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 16c04 <test_binary_cond_expr_global+0x3e4>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x0000000080000101e0082800),        //make $r2 = 263328 (0x404a0);;
     _32(0x6004002f),        //make $r1 = 47 (0x2f);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x1800038c),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 16c2c <test_binary_cond_expr_global+0x40c>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x10000004),        //goto 16c38 <test_binary_cond_expr_global+0x418>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x1800049c),        //call 17eb0 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 16ca8 <test_binary_cond_expr_global+0x488>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x0000000080000101e0082e00),        //make $r2 = 263352 (0x404b8);;
     _32(0x60040031),        //make $r1 = 49 (0x31);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000363),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800140),        //cb.deqz $r0? 16cd0 <test_binary_cond_expr_global+0x4b0>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x10000004),        //goto 16cdc <test_binary_cond_expr_global+0x4bc>;;
     _96(0x0000000080000101e0001800),        //make $r0 = 263264 (0x40460);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x18000473),        //call 17eb0 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 16d4c <test_binary_cond_expr_global+0x52c>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000101e0083400),        //make $r2 = 263376 (0x404d0);;
     _32(0x60040032),        //make $r1 = 50 (0x32);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x1800033a),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130280c),        //addd $r12 = $r12, 160 (0xa0);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_binary_cond_expr_local: list_I = 
 [|
     _32(0x6130d00c),        //addd $r12 = $r12, -192 (0xffffff40);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010e0c),        //sw 56 (0x38)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x25010f0c),        //sh 60 (0x3c)[$r12] = $r0;;
     _32(0x60003231),        //make $r0 = 12849 (0x3231);;
     _32(0x25010e0c),        //sh 56 (0x38)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x24010e8c),        //sb 58 (0x3a)[$r12] = $r0;;
     _32(0x60003231),        //make $r0 = 12849 (0x3231);;
     _32(0x25010c0c),        //sh 48 (0x30)[$r12] = $r0;;
     _32(0x60000033),        //make $r0 = 51 (0x33);;
     _32(0x24010c8c),        //sb 50 (0x32)[$r12] = $r0;;
     _32(0x60000034),        //make $r0 = 52 (0x34);;
     _32(0x25010ccc),        //sh 51 (0x33)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x24010d4c),        //sb 53 (0x35)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x26010a0c),        //sw 40 (0x28)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x25010b0c),        //sh 44 (0x2c)[$r12] = $r0;;
     _32(0x60003231),        //make $r0 = 12849 (0x3231);;
     _32(0x25010a0c),        //sh 40 (0x28)[$r12] = $r0;;
     _32(0x60000033),        //make $r0 = 51 (0x33);;
     _32(0x24010a8c),        //sb 42 (0x2a)[$r12] = $r0;;
     _32(0x60003231),        //make $r0 = 12849 (0x3231);;
     _32(0x2501080c),        //sh 32 (0x20)[$r12] = $r0;;
     _32(0x60000033),        //make $r0 = 51 (0x33);;
     _32(0x2401088c),        //sb 34 (0x22)[$r12] = $r0;;
     _32(0x60003534),        //make $r0 = 13620 (0x3534);;
     _32(0x250108cc),        //sh 35 (0x23)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2401094c),        //sb 37 (0x25)[$r12] = $r0;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x080000c0),        //cb.dnez $r0? 16e0c <test_binary_cond_expr_local+0xac>;;
     _32(0x61000e0c),        //addd $r0 = $r12, 56 (0x38);;
     _32(0x10000004),        //goto 16e18 <test_binary_cond_expr_local+0xb8>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x27012e0c),        //sd 184 (0xb8)[$r12] = $r0;;
     _32(0x38002e0c),        //ld $r0 = 184 (0xb8)[$r12];;
     _32(0x18000424),        //call 17eb0 <strlen>;;
     _32(0x26012d0c),        //sw 180 (0xb4)[$r12] = $r0;;
     _32(0x30002d0c),        //lwz $r0 = 180 (0xb4)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 16e88 <test_binary_cond_expr_local+0x128>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c2e0c),        //ld $r3 = 184 (0xb8)[$r12];;
     _96(0x0000000080000101e0083a00),        //make $r2 = 263400 (0x404e8);;
     _32(0x6004003f),        //make $r1 = 63 (0x3f);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180002eb),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16ea8 <test_binary_cond_expr_local+0x148>;;
     _32(0x61000e0c),        //addd $r0 = $r12, 56 (0x38);;
     _32(0x10000004),        //goto 16eb4 <test_binary_cond_expr_local+0x154>;;
     _96(0x0000000080000101e0000a00),        //make $r0 = 263208 (0x40428);;
     _32(0x27012a0c),        //sd 168 (0xa8)[$r12] = $r0;;
     _32(0x38002a0c),        //ld $r0 = 168 (0xa8)[$r12];;
     _32(0x180003fd),        //call 17eb0 <strlen>;;
     _32(0x2601290c),        //sw 164 (0xa4)[$r12] = $r0;;
     _32(0x3000290c),        //lwz $r0 = 164 (0xa4)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 16f24 <test_binary_cond_expr_local+0x1c4>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c2a0c),        //ld $r3 = 168 (0xa8)[$r12];;
     _96(0x0000000080000101e0084000),        //make $r2 = 263424 (0x40500);;
     _32(0x60040040),        //make $r1 = 64 (0x40);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180002c4),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x080000c0),        //cb.dnez $r0? 16f44 <test_binary_cond_expr_local+0x1e4>;;
     _32(0x61000c0c),        //addd $r0 = $r12, 48 (0x30);;
     _32(0x10000004),        //goto 16f50 <test_binary_cond_expr_local+0x1f0>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x2701260c),        //sd 152 (0x98)[$r12] = $r0;;
     _32(0x3800260c),        //ld $r0 = 152 (0x98)[$r12];;
     _32(0x180003d6),        //call 17eb0 <strlen>;;
     _32(0x2601250c),        //sw 148 (0x94)[$r12] = $r0;;
     _32(0x3000250c),        //lwz $r0 = 148 (0x94)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 16fc0 <test_binary_cond_expr_local+0x260>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c260c),        //ld $r3 = 152 (0x98)[$r12];;
     _96(0x0000000080000101e0084600),        //make $r2 = 263448 (0x40518);;
     _32(0x60040042),        //make $r1 = 66 (0x42);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x1800029d),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 16fe0 <test_binary_cond_expr_local+0x280>;;
     _32(0x61000c0c),        //addd $r0 = $r12, 48 (0x30);;
     _32(0x10000004),        //goto 16fec <test_binary_cond_expr_local+0x28c>;;
     _96(0x0000000080000101e0001800),        //make $r0 = 263264 (0x40460);;
     _32(0x2701220c),        //sd 136 (0x88)[$r12] = $r0;;
     _32(0x3800220c),        //ld $r0 = 136 (0x88)[$r12];;
     _32(0x180003af),        //call 17eb0 <strlen>;;
     _32(0x2601210c),        //sw 132 (0x84)[$r12] = $r0;;
     _32(0x3000210c),        //lwz $r0 = 132 (0x84)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 1705c <test_binary_cond_expr_local+0x2fc>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c220c),        //ld $r3 = 136 (0x88)[$r12];;
     _96(0x0000000080000101e0084c00),        //make $r2 = 263472 (0x40530);;
     _32(0x60040043),        //make $r1 = 67 (0x43);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000276),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x080000c0),        //cb.dnez $r0? 1707c <test_binary_cond_expr_local+0x31c>;;
     _32(0x61000a0c),        //addd $r0 = $r12, 40 (0x28);;
     _32(0x10000004),        //goto 17088 <test_binary_cond_expr_local+0x328>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x27011e0c),        //sd 120 (0x78)[$r12] = $r0;;
     _32(0x38001e0c),        //ld $r0 = 120 (0x78)[$r12];;
     _32(0x18000388),        //call 17eb0 <strlen>;;
     _32(0x26011d0c),        //sw 116 (0x74)[$r12] = $r0;;
     _32(0x30001d0c),        //lwz $r0 = 116 (0x74)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 170f8 <test_binary_cond_expr_local+0x398>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c1e0c),        //ld $r3 = 120 (0x78)[$r12];;
     _96(0x0000000080000101e0085200),        //make $r2 = 263496 (0x40548);;
     _32(0x60040045),        //make $r1 = 69 (0x45);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x1800024f),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 17118 <test_binary_cond_expr_local+0x3b8>;;
     _32(0x61000a0c),        //addd $r0 = $r12, 40 (0x28);;
     _32(0x10000004),        //goto 17124 <test_binary_cond_expr_local+0x3c4>;;
     _96(0x0000000080000101e0002600),        //make $r0 = 263320 (0x40498);;
     _32(0x27011a0c),        //sd 104 (0x68)[$r12] = $r0;;
     _32(0x38001a0c),        //ld $r0 = 104 (0x68)[$r12];;
     _32(0x18000361),        //call 17eb0 <strlen>;;
     _32(0x2601190c),        //sw 100 (0x64)[$r12] = $r0;;
     _32(0x3000190c),        //lwz $r0 = 100 (0x64)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 17194 <test_binary_cond_expr_local+0x434>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c1a0c),        //ld $r3 = 104 (0x68)[$r12];;
     _96(0x0000000080000101e0085800),        //make $r2 = 263520 (0x40560);;
     _32(0x60040046),        //make $r1 = 70 (0x46);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000228),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x080000c0),        //cb.dnez $r0? 171b4 <test_binary_cond_expr_local+0x454>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x10000004),        //goto 171c0 <test_binary_cond_expr_local+0x460>;;
     _96(0x0000000080000100e000f600),        //make $r0 = 263128 (0x403d8);;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x1800033a),        //call 17eb0 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 17230 <test_binary_cond_expr_local+0x4d0>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x0000000080000101e0085e00),        //make $r2 = 263544 (0x40578);;
     _32(0x60040048),        //make $r1 = 72 (0x48);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000201),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x088000c0),        //cb.deqz $r0? 17250 <test_binary_cond_expr_local+0x4f0>;;
     _32(0x6100080c),        //addd $r0 = $r12, 32 (0x20);;
     _32(0x10000004),        //goto 1725c <test_binary_cond_expr_local+0x4fc>;;
     _96(0x0000000080000101e0001800),        //make $r0 = 263264 (0x40460);;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x18000313),        //call 17eb0 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 172cc <test_binary_cond_expr_local+0x56c>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x0000000080000101e0086400),        //make $r2 = 263568 (0x40590);;
     _32(0x60040049),        //make $r1 = 73 (0x49);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180001da),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130300c),        //addd $r12 = $r12, 192 (0xc0);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_ternary_cond_expr: list_I = 
 [|
     _32(0x6130f00c),        //addd $r12 = $r12, -64 (0xffffffc0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741020c),        //sd 8 (0x8)[$r12] = $r16;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800440),        //cb.deqz $r0? 17344 <test_ternary_cond_expr+0x64>;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f001b040),        //compw.ne $r0 = $r0, 1 (0x1);;
     _32(0x0c000140),        //cb.wnez $r0? 17334 <test_ternary_cond_expr+0x54>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x10000009),        //goto 17354 <test_ternary_cond_expr+0x74>;;
     _96(0x0000000080000101e0000a00),        //make $r0 = 263208 (0x40428);;
     _32(0x10000005),        //goto 17354 <test_ternary_cond_expr+0x74>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x180002d5),        //call 17eb0 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b180),        //compw.eq $r0 = $r0, 6 (0x6);;
     _32(0x0c000540),        //cb.wnez $r0? 173c4 <test_ternary_cond_expr+0xe4>;;
     _32(0x60100006),        //make $r4 = 6 (0x6);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x0000000080000101e0086a00),        //make $r2 = 263592 (0x405a8);;
     _32(0x60040050),        //make $r1 = 80 (0x50);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x1800019c),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800480),        //cb.deqz $r0? 17420 <test_ternary_cond_expr+0x140>;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f001b040),        //compw.ne $r0 = $r0, 1 (0x1);;
     _32(0x0c000180),        //cb.wnez $r0? 17410 <test_ternary_cond_expr+0x130>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x10000008),        //goto 1742c <test_ternary_cond_expr+0x14c>;;
     _96(0x0000000080000101e0000a00),        //make $r0 = 263208 (0x40428);;
     _32(0x10000004),        //goto 1742c <test_ternary_cond_expr+0x14c>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x1800029f),        //call 17eb0 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 1749c <test_ternary_cond_expr+0x1bc>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000101e0087400),        //make $r2 = 263632 (0x405d0);;
     _32(0x60040051),        //make $r1 = 81 (0x51);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000166),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800480),        //cb.deqz $r0? 174f8 <test_ternary_cond_expr+0x218>;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f001b040),        //compw.ne $r0 = $r0, 1 (0x1);;
     _32(0x0c000180),        //cb.wnez $r0? 174e8 <test_ternary_cond_expr+0x208>;;
     _96(0x00000000800000fce0000600),        //make $r0 = 258072 (0x3f018);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x10000008),        //goto 17504 <test_ternary_cond_expr+0x224>;;
     _96(0x00000000800000fce0000400),        //make $r0 = 258064 (0x3f010);;
     _32(0x10000004),        //goto 17504 <test_ternary_cond_expr+0x224>;;
     _96(0x0000000080000101e0000a00),        //make $r0 = 263208 (0x40428);;
     _32(0x2701060c),        //sd 24 (0x18)[$r12] = $r0;;
     _32(0x3800060c),        //ld $r0 = 24 (0x18)[$r12];;
     _32(0x18000269),        //call 17eb0 <strlen>;;
     _32(0x2601050c),        //sw 20 (0x14)[$r12] = $r0;;
     _32(0x3000050c),        //lwz $r0 = 20 (0x14)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17574 <test_ternary_cond_expr+0x294>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c060c),        //ld $r3 = 24 (0x18)[$r12];;
     _96(0x0000000080000101e0087e00),        //make $r2 = 263672 (0x405f8);;
     _32(0x60040052),        //make $r1 = 82 (0x52);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x18000130),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840020c),        //ld $r16 = 8 (0x8)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130100c),        //addd $r12 = $r12, 64 (0x40);;
     _32(0x0fd00000)        //ret ;;
 |];

let test_binary_cond_expr_arrayptr: list_I = 
 [|
     _32(0x6130e80c),        //addd $r12 = $r12, -96 (0xffffffa0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800180),        //cb.deqz $r0? 175c0 <test_binary_cond_expr_arrayptr+0x38>;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x10000005),        //goto 175d0 <test_binary_cond_expr_arrayptr+0x48>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701160c),        //sd 88 (0x58)[$r12] = $r0;;
     _32(0x3800160c),        //ld $r0 = 88 (0x58)[$r12];;
     _32(0x18000236),        //call 17eb0 <strlen>;;
     _32(0x2601150c),        //sw 84 (0x54)[$r12] = $r0;;
     _32(0x3000150c),        //lwz $r0 = 84 (0x54)[$r12];;
     _64(0x00000000f101b100),        //compw.eq $r0 = $r0, 4 (0x4);;
     _32(0x0c000540),        //cb.wnez $r0? 17640 <test_binary_cond_expr_arrayptr+0xb8>;;
     _32(0x60100004),        //make $r4 = 4 (0x4);;
     _32(0x380c160c),        //ld $r3 = 88 (0x58)[$r12];;
     _96(0x0000000080000101e0088800),        //make $r2 = 263712 (0x40620);;
     _32(0x6004005f),        //make $r1 = 95 (0x5f);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180000fd),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800180),        //cb.deqz $r0? 1766c <test_binary_cond_expr_arrayptr+0xe4>;;
     _96(0x00000000800000fce0000a00),        //make $r0 = 258088 (0x3f028);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x10000005),        //goto 1767c <test_binary_cond_expr_arrayptr+0xf4>;;
     _96(0x00000000800000fce0000800),        //make $r0 = 258080 (0x3f020);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x2701120c),        //sd 72 (0x48)[$r12] = $r0;;
     _32(0x3800120c),        //ld $r0 = 72 (0x48)[$r12];;
     _32(0x1800020b),        //call 17eb0 <strlen>;;
     _32(0x2601110c),        //sw 68 (0x44)[$r12] = $r0;;
     _32(0x3000110c),        //lwz $r0 = 68 (0x44)[$r12];;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000540),        //cb.wnez $r0? 176ec <test_binary_cond_expr_arrayptr+0x164>;;
     _32(0x60100002),        //make $r4 = 2 (0x2);;
     _32(0x380c120c),        //ld $r3 = 72 (0x48)[$r12];;
     _96(0x0000000080000101e0088e00),        //make $r2 = 263736 (0x40638);;
     _32(0x60040060),        //make $r1 = 96 (0x60);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180000d2),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800180),        //cb.deqz $r0? 17718 <test_binary_cond_expr_arrayptr+0x190>;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x10000005),        //goto 17728 <test_binary_cond_expr_arrayptr+0x1a0>;;
     _96(0x00000000800000fce0000e00),        //make $r0 = 258104 (0x3f038);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x27010e0c),        //sd 56 (0x38)[$r12] = $r0;;
     _32(0x38000e0c),        //ld $r0 = 56 (0x38)[$r12];;
     _32(0x180001e0),        //call 17eb0 <strlen>;;
     _32(0x26010d0c),        //sw 52 (0x34)[$r12] = $r0;;
     _32(0x30000d0c),        //lwz $r0 = 52 (0x34)[$r12];;
     _64(0x00000000f101b140),        //compw.eq $r0 = $r0, 5 (0x5);;
     _32(0x0c000540),        //cb.wnez $r0? 17798 <test_binary_cond_expr_arrayptr+0x210>;;
     _32(0x60100005),        //make $r4 = 5 (0x5);;
     _32(0x380c0e0c),        //ld $r3 = 56 (0x38)[$r12];;
     _96(0x0000000080000101e0089400),        //make $r2 = 263760 (0x40650);;
     _32(0x60040062),        //make $r1 = 98 (0x62);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x180000a7),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _96(0x000000008000010be0002000),        //make $r0 = 273536 (0x42c80);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800180),        //cb.deqz $r0? 177c4 <test_binary_cond_expr_arrayptr+0x23c>;;
     _96(0x00000000800000fce0000e00),        //make $r0 = 258104 (0x3f038);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x10000005),        //goto 177d4 <test_binary_cond_expr_arrayptr+0x24c>;;
     _96(0x00000000800000fce0000c00),        //make $r0 = 258096 (0x3f030);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x27010a0c),        //sd 40 (0x28)[$r12] = $r0;;
     _32(0x38000a0c),        //ld $r0 = 40 (0x28)[$r12];;
     _32(0x180001b5),        //call 17eb0 <strlen>;;
     _32(0x2601090c),        //sw 36 (0x24)[$r12] = $r0;;
     _32(0x3000090c),        //lwz $r0 = 36 (0x24)[$r12];;
     _64(0x00000000f101b0c0),        //compw.eq $r0 = $r0, 3 (0x3);;
     _32(0x0c000540),        //cb.wnez $r0? 17844 <test_binary_cond_expr_arrayptr+0x2bc>;;
     _32(0x60100003),        //make $r4 = 3 (0x3);;
     _32(0x380c0a0c),        //ld $r3 = 40 (0x28)[$r12];;
     _96(0x0000000080000101e0089a00),        //make $r2 = 263784 (0x40668);;
     _32(0x60040063),        //make $r1 = 99 (0x63);;
     _96(0x0000000080000100e000fe00),        //make $r0 = 263160 (0x403f8);;
     _32(0x1800007c),        //call 17a08 <printf>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x26050000),        //sw 0 (0x0)[$r0] = $r1;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130180c),        //addd $r12 = $r12, 96 (0x60);;
     _32(0x0fd00000)        //ret ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x1ffffbef),        //call 16820 <test_binary_cond_expr_global>;;
     _32(0x1ffffd3e),        //call 16d60 <test_binary_cond_expr_local>;;
     _32(0x1ffffe9d),        //call 172e0 <test_ternary_cond_expr>;;
     _32(0x1fffff46),        //call 17588 <test_binary_cond_expr_arrayptr>;;
     _96(0x000000008000011be000f000),        //make $r0 = 290752 (0x46fc0);;
     _32(0x30000000),        //lwz $r0 = 0 (0x0)[$r0];;
     _32(0x08800080),        //cb.deqz $r0? 1788c <main+0x34>;;
     _32(0x18000006),        //call 178a0 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x3840060c),        //ld $r16 = 24 (0x18)[$r12];;
     _32(0x0fc000d0),        //set $ra = $r16;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x9800011b),        //call 17d18 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98002bc9),        //call 227d8 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010111100001011000; //0x17858
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_binary_cond_expr_global, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_binary_cond_expr_local, 0b00010110110101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_ternary_cond_expr, 0b00010111001011100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(test_binary_cond_expr_arrayptr, 0b00010111010110001000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010111100001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00010111100010100000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
