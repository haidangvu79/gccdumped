// executing builtin_bitops_1.c.out.dumped test 
val k1_builtin_bitops_1.: unit -> unit effect {barr, eamem, escape, exmem, rmem, rmemt, rreg, undef, wmv, wmvt, wreg,wmem}
function k1_builtin_bitops_1.() = {
mI:mem_I = [||];
mD:mem_D = [||];
icount:int = 0;
rcount:int = 0;
wcount:int = 0;
//initialize platform
(mI,mD,icount,rcount,wcount) = init_k1_model();
let my_ffs: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x0c0000c0),        //cb.wnez $r0? 16838 <my_ffs+0x18>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x10000017),        //goto 16890 <my_ffs+0x70>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 1686c <my_ffs+0x4c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b027001),        //srlw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000240),        //cb.dnez $r0? 16880 <my_ffs+0x60>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b7c0),        //compw.leu $r0 = $r0, 31 (0x1f);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 16844 <my_ffs+0x24>;;
     _32(0x10000002),        //goto 16884 <my_ffs+0x64>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_ctz: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000b),        //goto 168d4 <my_ctz+0x3c>;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b027001),        //srlw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000240),        //cb.dnez $r0? 168e8 <my_ctz+0x50>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b7c0),        //compw.leu $r0 = $r0, 31 (0x1f);;
     _32(0x0c7ffcc0),        //cb.wnez $r0? 168ac <my_ctz+0x14>;;
     _32(0x10000002),        //goto 168ec <my_ctz+0x54>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_clz: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000d),        //goto 1693c <my_clz+0x44>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x07e00000e004003f),        //make $r1 = -2147483648 (0xffffffff80000000);;
     _32(0x7b027001),        //srlw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004060c),        //lwz $r1 = 24 (0x18)[$r12];;
     _32(0x78011001),        //andw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08000240),        //cb.dnez $r0? 16950 <my_clz+0x58>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b7c0),        //compw.leu $r0 = $r0, 31 (0x1f);;
     _32(0x0c7ffc40),        //cb.wnez $r0? 1690c <my_clz+0x14>;;
     _32(0x10000002),        //goto 16954 <my_clz+0x5c>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_clrsb: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x3000040c),        //lwz $r0 = 16 (0x10)[$r12];;
     _32(0x7b0237c0),        //srlw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000f),        //goto 169bc <my_clrsb+0x5c>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x750007c0),        //sbfw $r0 = $r0, 31 (0x1f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _32(0x7b027001),        //srlw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7804ffc0),        //zxwd $r1 = $r0;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x7101b001),        //compw.eq $r0 = $r1, $r0;;
     _32(0x0c800240),        //cb.weqz $r0? 169d0 <my_clrsb+0x70>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b7c0),        //compw.leu $r0 = $r0, 31 (0x1f);;
     _32(0x0c7ffbc0),        //cb.wnez $r0? 16984 <my_clrsb+0x24>;;
     _32(0x10000002),        //goto 169d4 <my_clrsb+0x74>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_popcount: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000e),        //goto 16a38 <my_popcount+0x50>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b027001),        //srlw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800100),        //cb.deqz $r0? 16a2c <my_popcount+0x44>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b7c0),        //compw.leu $r0 = $r0, 31 (0x1f);;
     _32(0x0c7ffc00),        //cb.wnez $r0? 16a04 <my_popcount+0x1c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_parity: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2601040c),        //sw 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000e),        //goto 16aa8 <my_parity+0x50>;;
     _32(0x3004040c),        //lwz $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b027001),        //srlw $r0 = $r1, $r0;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800100),        //cb.deqz $r0? 16a9c <my_parity+0x44>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b7c0),        //compw.leu $r0 = $r0, 31 (0x1f);;
     _32(0x0c7ffc00),        //cb.wnez $r0? 16a74 <my_parity+0x1c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_ffsl: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x080000c0),        //cb.dnez $r0? 16ae8 <my_ffsl+0x18>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x10000015),        //goto 16b38 <my_ffsl+0x68>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000009),        //goto 16b14 <my_ffsl+0x44>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08000240),        //cb.dnez $r0? 16b28 <my_ffsl+0x58>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffd40),        //cb.wnez $r0? 16af4 <my_ffsl+0x24>;;
     _32(0x10000002),        //goto 16b2c <my_ffsl+0x5c>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_ctzl: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000009),        //goto 16b74 <my_ctzl+0x34>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08000240),        //cb.dnez $r0? 16b88 <my_ctzl+0x48>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffd40),        //cb.wnez $r0? 16b54 <my_ctzl+0x14>;;
     _32(0x10000002),        //goto 16b8c <my_ctzl+0x4c>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_clzl: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000c),        //goto 16bd8 <my_clzl+0x40>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _96(0x0400000080000000e0040000),        //make $r1 = 9223372036854775808 (0x8000000000000000);;
     _32(0x7b066001),        //srld $r1 = $r1, $r0;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x78010001),        //andd $r0 = $r1, $r0;;
     _32(0x08000240),        //cb.dnez $r0? 16bec <my_clzl+0x54>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc80),        //cb.wnez $r0? 16bac <my_clzl+0x14>;;
     _32(0x10000002),        //goto 16bf0 <my_clzl+0x58>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_clrsbl: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x7b022fc0),        //srld $r0 = $r0, 63 (0x3f);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000d),        //goto 16c50 <my_clrsbl+0x50>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x75000fc0),        //sbfw $r0 = $r0, 63 (0x3f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68040040),        //andd $r1 = $r0, 1 (0x1);;
     _32(0x3400060c),        //lws $r0 = 24 (0x18)[$r12];;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08800240),        //cb.deqz $r0? 16c64 <my_clrsbl+0x64>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc40),        //cb.wnez $r0? 16c20 <my_clrsbl+0x20>;;
     _32(0x10000002),        //goto 16c68 <my_clrsbl+0x68>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_popcountl: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000c),        //goto 16cc8 <my_popcountl+0x48>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08800100),        //cb.deqz $r0? 16cbc <my_popcountl+0x3c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc80),        //cb.wnez $r0? 16c9c <my_popcountl+0x1c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_parityl: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000c),        //goto 16d30 <my_parityl+0x48>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08800100),        //cb.deqz $r0? 16d24 <my_parityl+0x3c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc80),        //cb.wnez $r0? 16d04 <my_parityl+0x1c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_ffsll: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x080000c0),        //cb.dnez $r0? 16d70 <my_ffsll+0x18>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x10000015),        //goto 16dc0 <my_ffsll+0x68>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000009),        //goto 16d9c <my_ffsll+0x44>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08000240),        //cb.dnez $r0? 16db0 <my_ffsll+0x58>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffd40),        //cb.wnez $r0? 16d7c <my_ffsll+0x24>;;
     _32(0x10000002),        //goto 16db4 <my_ffsll+0x5c>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_ctzll: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x10000009),        //goto 16dfc <my_ctzll+0x34>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08000240),        //cb.dnez $r0? 16e10 <my_ctzll+0x48>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffd40),        //cb.wnez $r0? 16ddc <my_ctzll+0x14>;;
     _32(0x10000002),        //goto 16e14 <my_ctzll+0x4c>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000)        //ret ;;
 |];

let my_clzll: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000c),        //goto 16e60 <my_clzll+0x40>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _96(0x0400000080000000e0040000),        //make $r1 = 9223372036854775808 (0x8000000000000000);;
     _32(0x7b066001),        //srld $r1 = $r1, $r0;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x78010001),        //andd $r0 = $r1, $r0;;
     _32(0x08000240),        //cb.dnez $r0? 16e74 <my_clzll+0x54>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc80),        //cb.wnez $r0? 16e34 <my_clzll+0x14>;;
     _32(0x10000002),        //goto 16e78 <my_clzll+0x58>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_clrsbll: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x3800040c),        //ld $r0 = 16 (0x10)[$r12];;
     _32(0x7b022fc0),        //srld $r0 = $r0, 63 (0x3f);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000d),        //goto 16ed8 <my_clrsbll+0x50>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x75000fc0),        //sbfw $r0 = $r0, 63 (0x3f);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68040040),        //andd $r1 = $r0, 1 (0x1);;
     _32(0x3400060c),        //lws $r0 = 24 (0x18)[$r12];;
     _32(0x7101a001),        //compd.eq $r0 = $r1, $r0;;
     _32(0x08800240),        //cb.deqz $r0? 16eec <my_clrsbll+0x64>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc40),        //cb.wnez $r0? 16ea8 <my_clrsbll+0x20>;;
     _32(0x10000002),        //goto 16ef0 <my_clrsbll+0x68>;;
     _32(0x7f03f000),        //nop ;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7100ffc0),        //addw $r0 = $r0, -1 (0xffffffff);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_popcountll: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000c),        //goto 16f50 <my_popcountll+0x48>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08800100),        //cb.deqz $r0? 16f44 <my_popcountll+0x3c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc80),        //cb.wnez $r0? 16f24 <my_popcountll+0x1c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let my_parityll: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x2701040c),        //sd 16 (0x10)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000000c),        //goto 16fb8 <my_parityll+0x48>;;
     _32(0x3804040c),        //ld $r1 = 16 (0x10)[$r12];;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x7b026001),        //srld $r0 = $r1, $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x08800100),        //cb.deqz $r0? 16fac <my_parityll+0x3c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601060c),        //sw 24 (0x18)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000001f801b7c0),        //compw.leu $r0 = $r0, 63 (0x3f);;
     _32(0x0c7ffc80),        //cb.wnez $r0? 16f8c <my_parityll+0x1c>;;
     _32(0x3000060c),        //lwz $r0 = 24 (0x18)[$r12];;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x6130080c),        //addd $r12 = $r12, 32 (0x20);;
     _32(0x0fd00000),        //ret ;;
     _32(0x7f03f000)        //nop ;;
 |];

let main: list_I = 
 [|
     _32(0x6130f80c),        //addd $r12 = $r12, -32 (0xffffffe0);;
     _32(0x0fc400d0),        //get $r16 = $ra;;
     _32(0x2741040c),        //sd 16 (0x10)[$r12] = $r16;;
     _32(0x2739020c),        //sd 8 (0x8)[$r12] = $r14;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000007c),        //goto 171e8 <main+0x208>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x73063000),        //ctzw $r1 = $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17020 <main+0x40>;;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _32(0x71000041),        //addw $r0 = $r1, 1 (0x1);;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x1ffffdf9),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17050 <main+0x70>;;
     _32(0x180005b1),        //call 18710 <abort>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x08800480),        //cb.deqz $r0? 170ac <main+0xcc>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x70023000),        //clzw $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x1ffffe18),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 170ac <main+0xcc>;;
     _32(0x1800059a),        //call 18710 <abort>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x08800480),        //cb.deqz $r0? 17108 <main+0x128>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x73023000),        //ctzw $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x1ffffde9),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17108 <main+0x128>;;
     _32(0x18000583),        //call 18710 <abort>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x71023000),        //clsw $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x1ffffe09),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17150 <main+0x170>;;
     _32(0x18000571),        //call 18710 <abort>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x72023000),        //cbsw $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x1ffffe1a),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17194 <main+0x1b4>;;
     _32(0x18000560),        //call 18710 <abort>;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x72023000),        //cbsw $r0 = $r0;;
     _32(0x78000040),        //andw $r0 = $r0, 1 (0x1);;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0040200),        //make $r1 = 262152 (0x40008);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3002f001),        //lwz.xs $r0 = $r0[$r1];;
     _32(0x1ffffe24),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 171dc <main+0x1fc>;;
     _32(0x1800054e),        //call 18710 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b300),        //compw.leu $r0 = $r0, 12 (0xc);;
     _32(0x0c7fe080),        //cb.wnez $r0? 16ffc <main+0x1c>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000007a),        //goto 173e8 <main+0x408>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x73062000),        //ctzd $r1 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17224 <main+0x244>;;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _32(0x61000041),        //addd $r0 = $r1, 1 (0x1);;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe24),        //call 16ad0 <my_ffsl>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17254 <main+0x274>;;
     _32(0x18000530),        //call 18710 <abort>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x08800480),        //cb.deqz $r0? 172b0 <main+0x2d0>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x70022000),        //clzd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe3f),        //call 16b98 <my_clzl>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 172b0 <main+0x2d0>;;
     _32(0x18000519),        //call 18710 <abort>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x08800480),        //cb.deqz $r0? 1730c <main+0x32c>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x73022000),        //ctzd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe12),        //call 16b40 <my_ctzl>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1730c <main+0x32c>;;
     _32(0x18000502),        //call 18710 <abort>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x71022000),        //clsd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe31),        //call 16c00 <my_clrsbl>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17350 <main+0x370>;;
     _32(0x180004f1),        //call 18710 <abort>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x72022000),        //cbsd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe40),        //call 16c80 <my_popcountl>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17394 <main+0x3b4>;;
     _32(0x180004e0),        //call 18710 <abort>;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x72022000),        //cbsd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0041000),        //make $r1 = 262208 (0x40040);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe48),        //call 16ce8 <my_parityl>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 173dc <main+0x3fc>;;
     _32(0x180004ce),        //call 18710 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b300),        //compw.leu $r0 = $r0, 12 (0xc);;
     _32(0x0c7fe100),        //cb.wnez $r0? 17204 <main+0x224>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x1000007a),        //goto 175e8 <main+0x608>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x73062000),        //ctzd $r1 = $r0;;
     _32(0x08000080),        //cb.dnez $r0? 17424 <main+0x444>;;
     _32(0x6004ffff),        //make $r1 = -1 (0xffffffff);;
     _32(0x61000041),        //addd $r0 = $r1, 1 (0x1);;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe46),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17454 <main+0x474>;;
     _32(0x180004b0),        //call 18710 <abort>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x08800480),        //cb.deqz $r0? 174b0 <main+0x4d0>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x70022000),        //clzd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe61),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 174b0 <main+0x4d0>;;
     _32(0x18000499),        //call 18710 <abort>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x08800480),        //cb.deqz $r0? 1750c <main+0x52c>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x73022000),        //ctzd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe34),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 1750c <main+0x52c>;;
     _32(0x18000482),        //call 18710 <abort>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x71022000),        //clsd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe53),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17550 <main+0x570>;;
     _32(0x18000471),        //call 18710 <abort>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x72022000),        //cbsd $r0 = $r0;;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe62),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 17594 <main+0x5b4>;;
     _32(0x18000460),        //call 18710 <abort>;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x72022000),        //cbsd $r0 = $r0;;
     _32(0x68000040),        //andd $r0 = $r0, 1 (0x1);;
     _32(0x7838ffc0),        //zxwd $r14 = $r0;;
     _96(0x0000000080000100e0042a00),        //make $r1 = 262312 (0x400a8);;
     _32(0x3400070c),        //lws $r0 = 28 (0x1c)[$r12];;
     _32(0x3802f001),        //ld.xs $r0 = $r0[$r1];;
     _32(0x1ffffe6a),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x7101b00e),        //compw.eq $r0 = $r14, $r0;;
     _32(0x0c000080),        //cb.wnez $r0? 175dc <main+0x5fc>;;
     _32(0x1800044e),        //call 18710 <abort>;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _32(0x71000040),        //addw $r0 = $r0, 1 (0x1);;
     _32(0x2601070c),        //sw 28 (0x1c)[$r12] = $r0;;
     _32(0x3000070c),        //lwz $r0 = 28 (0x1c)[$r12];;
     _64(0x00000000f801b300),        //compw.leu $r0 = $r0, 12 (0xc);;
     _32(0x0c7fe100),        //cb.wnez $r0? 17404 <main+0x424>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffc89),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1760c <main+0x62c>;;
     _32(0x18000442),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffcd4),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 17628 <main+0x648>;;
     _32(0x1800043b),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffcef),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1763c <main+0x65c>;;
     _32(0x18000436),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffd06),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17650 <main+0x670>;;
     _32(0x18000431),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffc73),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1766c <main+0x68c>;;
     _32(0x1800042a),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffca2),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 17688 <main+0x6a8>;;
     _32(0x18000423),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffc83),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 1769c <main+0x6bc>;;
     _32(0x1800041e),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffcb0),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b780),        //compw.eq $r0 = $r0, 30 (0x1e);;
     _32(0x0c000080),        //cb.wnez $r0? 176b8 <main+0x6d8>;;
     _32(0x18000417),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffccb),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 176d4 <main+0x6f4>;;
     _32(0x18000410),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffce0),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 176f0 <main+0x710>;;
     _32(0x18000409),        //call 18710 <abort>;;
     _64(0x07e00000e000003f),        //make $r0 = -2147483648 (0xffffffff80000000);;
     _32(0x1ffffc4a),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 17710 <main+0x730>;;
     _32(0x18000401),        //call 18710 <abort>;;
     _64(0x07e00000e000003f),        //make $r0 = -2147483648 (0xffffffff80000000);;
     _32(0x1ffffc78),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17728 <main+0x748>;;
     _32(0x180003fb),        //call 18710 <abort>;;
     _64(0x07e00000e000003f),        //make $r0 = -2147483648 (0xffffffff80000000);;
     _32(0x1ffffc5a),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 17748 <main+0x768>;;
     _32(0x180003f3),        //call 18710 <abort>;;
     _64(0x07e00000e000003f),        //make $r0 = -2147483648 (0xffffffff80000000);;
     _32(0x1ffffc84),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17760 <main+0x780>;;
     _32(0x180003ed),        //call 18710 <abort>;;
     _64(0x07e00000e000003f),        //make $r0 = -2147483648 (0xffffffff80000000);;
     _32(0x1ffffca0),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17780 <main+0x7a0>;;
     _32(0x180003e5),        //call 18710 <abort>;;
     _64(0x07e00000e000003f),        //make $r0 = -2147483648 (0xffffffff80000000);;
     _32(0x1ffffcb4),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 177a0 <main+0x7c0>;;
     _32(0x180003dd),        //call 18710 <abort>;;
     _64(0x00100000e0000000),        //make $r0 = 1073741824 (0x40000000);;
     _32(0x1ffffc1e),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 177c0 <main+0x7e0>;;
     _32(0x180003d5),        //call 18710 <abort>;;
     _64(0x00100000e0000000),        //make $r0 = 1073741824 (0x40000000);;
     _32(0x1ffffc4c),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 177e0 <main+0x800>;;
     _32(0x180003cd),        //call 18710 <abort>;;
     _64(0x00100000e0000000),        //make $r0 = 1073741824 (0x40000000);;
     _32(0x1ffffc2c),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b780),        //compw.eq $r0 = $r0, 30 (0x1e);;
     _32(0x0c000080),        //cb.wnez $r0? 17800 <main+0x820>;;
     _32(0x180003c5),        //call 18710 <abort>;;
     _64(0x00100000e0000000),        //make $r0 = 1073741824 (0x40000000);;
     _32(0x1ffffc56),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17818 <main+0x838>;;
     _32(0x180003bf),        //call 18710 <abort>;;
     _64(0x00100000e0000000),        //make $r0 = 1073741824 (0x40000000);;
     _32(0x1ffffc72),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17838 <main+0x858>;;
     _32(0x180003b7),        //call 18710 <abort>;;
     _64(0x00100000e0000000),        //make $r0 = 1073741824 (0x40000000);;
     _32(0x1ffffc86),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17858 <main+0x878>;;
     _32(0x180003af),        //call 18710 <abort>;;
     _64(0x00000040e0000000),        //make $r0 = 65536 (0x10000);;
     _32(0x1ffffbf0),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b440),        //compw.eq $r0 = $r0, 17 (0x11);;
     _32(0x0c000080),        //cb.wnez $r0? 17878 <main+0x898>;;
     _32(0x180003a7),        //call 18710 <abort>;;
     _64(0x00000040e0000000),        //make $r0 = 65536 (0x10000);;
     _32(0x1ffffc1e),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b3c0),        //compw.eq $r0 = $r0, 15 (0xf);;
     _32(0x0c000080),        //cb.wnez $r0? 17898 <main+0x8b8>;;
     _32(0x1800039f),        //call 18710 <abort>;;
     _64(0x00000040e0000000),        //make $r0 = 65536 (0x10000);;
     _32(0x1ffffbfe),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 178b8 <main+0x8d8>;;
     _32(0x18000397),        //call 18710 <abort>;;
     _64(0x00000040e0000000),        //make $r0 = 65536 (0x10000);;
     _32(0x1ffffc28),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b380),        //compw.eq $r0 = $r0, 14 (0xe);;
     _32(0x0c000080),        //cb.wnez $r0? 178d8 <main+0x8f8>;;
     _32(0x1800038f),        //call 18710 <abort>;;
     _64(0x00000040e0000000),        //make $r0 = 65536 (0x10000);;
     _32(0x1ffffc42),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 178f8 <main+0x918>;;
     _32(0x18000387),        //call 18710 <abort>;;
     _64(0x00000040e0000000),        //make $r0 = 65536 (0x10000);;
     _32(0x1ffffc56),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17918 <main+0x938>;;
     _32(0x1800037f),        //call 18710 <abort>;;
     _64(0x00000020e0000000),        //make $r0 = 32768 (0x8000);;
     _32(0x1ffffbc0),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 17938 <main+0x958>;;
     _32(0x18000377),        //call 18710 <abort>;;
     _64(0x00000020e0000000),        //make $r0 = 32768 (0x8000);;
     _32(0x1ffffbee),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 17958 <main+0x978>;;
     _32(0x1800036f),        //call 18710 <abort>;;
     _64(0x00000020e0000000),        //make $r0 = 32768 (0x8000);;
     _32(0x1ffffbce),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b3c0),        //compw.eq $r0 = $r0, 15 (0xf);;
     _32(0x0c000080),        //cb.wnez $r0? 17978 <main+0x998>;;
     _32(0x18000367),        //call 18710 <abort>;;
     _64(0x00000020e0000000),        //make $r0 = 32768 (0x8000);;
     _32(0x1ffffbf8),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b3c0),        //compw.eq $r0 = $r0, 15 (0xf);;
     _32(0x0c000080),        //cb.wnez $r0? 17998 <main+0x9b8>;;
     _32(0x1800035f),        //call 18710 <abort>;;
     _64(0x00000020e0000000),        //make $r0 = 32768 (0x8000);;
     _32(0x1ffffc12),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 179b8 <main+0x9d8>;;
     _32(0x18000357),        //call 18710 <abort>;;
     _64(0x00000020e0000000),        //make $r0 = 32768 (0x8000);;
     _32(0x1ffffc26),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 179d8 <main+0x9f8>;;
     _32(0x1800034f),        //call 18710 <abort>;;
     _64(0x07e96969e000697f),        //make $r0 = -1515870811 (0xffffffffa5a5a5a5);;
     _32(0x1ffffb90),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 179f8 <main+0xa18>;;
     _32(0x18000347),        //call 18710 <abort>;;
     _64(0x07e96969e000697f),        //make $r0 = -1515870811 (0xffffffffa5a5a5a5);;
     _32(0x1ffffbbe),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17a10 <main+0xa30>;;
     _32(0x18000341),        //call 18710 <abort>;;
     _64(0x07e96969e000697f),        //make $r0 = -1515870811 (0xffffffffa5a5a5a5);;
     _32(0x1ffffba0),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17a28 <main+0xa48>;;
     _32(0x1800033b),        //call 18710 <abort>;;
     _64(0x07e96969e000697f),        //make $r0 = -1515870811 (0xffffffffa5a5a5a5);;
     _32(0x1ffffbcc),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17a40 <main+0xa60>;;
     _32(0x18000335),        //call 18710 <abort>;;
     _64(0x07e96969e000697f),        //make $r0 = -1515870811 (0xffffffffa5a5a5a5);;
     _32(0x1ffffbe8),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 17a60 <main+0xa80>;;
     _32(0x1800032d),        //call 18710 <abort>;;
     _64(0x07e96969e000697f),        //make $r0 = -1515870811 (0xffffffffa5a5a5a5);;
     _32(0x1ffffbfc),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17a78 <main+0xa98>;;
     _32(0x18000327),        //call 18710 <abort>;;
     _64(0x00169696e0009680),        //make $r0 = 1515870810 (0x5a5a5a5a);;
     _32(0x1ffffb68),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 17a98 <main+0xab8>;;
     _32(0x1800031f),        //call 18710 <abort>;;
     _64(0x00169696e0009680),        //make $r0 = 1515870810 (0x5a5a5a5a);;
     _32(0x1ffffb96),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17ab8 <main+0xad8>;;
     _32(0x18000317),        //call 18710 <abort>;;
     _64(0x00169696e0009680),        //make $r0 = 1515870810 (0x5a5a5a5a);;
     _32(0x1ffffb76),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17ad8 <main+0xaf8>;;
     _32(0x1800030f),        //call 18710 <abort>;;
     _64(0x00169696e0009680),        //make $r0 = 1515870810 (0x5a5a5a5a);;
     _32(0x1ffffba0),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17af0 <main+0xb10>;;
     _32(0x18000309),        //call 18710 <abort>;;
     _64(0x00169696e0009680),        //make $r0 = 1515870810 (0x5a5a5a5a);;
     _32(0x1ffffbbc),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 17b10 <main+0xb30>;;
     _32(0x18000301),        //call 18710 <abort>;;
     _64(0x00169696e0009680),        //make $r0 = 1515870810 (0x5a5a5a5a);;
     _32(0x1ffffbd0),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17b28 <main+0xb48>;;
     _32(0x180002fb),        //call 18710 <abort>;;
     _64(0x07f2bf80e000003f),        //make $r0 = -889323520 (0xffffffffcafe0000);;
     _32(0x1ffffb3c),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b480),        //compw.eq $r0 = $r0, 18 (0x12);;
     _32(0x0c000080),        //cb.wnez $r0? 17b48 <main+0xb68>;;
     _32(0x180002f3),        //call 18710 <abort>;;
     _64(0x07f2bf80e000003f),        //make $r0 = -889323520 (0xffffffffcafe0000);;
     _32(0x1ffffb6a),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17b60 <main+0xb80>;;
     _32(0x180002ed),        //call 18710 <abort>;;
     _64(0x07f2bf80e000003f),        //make $r0 = -889323520 (0xffffffffcafe0000);;
     _32(0x1ffffb4c),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b440),        //compw.eq $r0 = $r0, 17 (0x11);;
     _32(0x0c000080),        //cb.wnez $r0? 17b80 <main+0xba0>;;
     _32(0x180002e5),        //call 18710 <abort>;;
     _64(0x07f2bf80e000003f),        //make $r0 = -889323520 (0xffffffffcafe0000);;
     _32(0x1ffffb76),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17ba0 <main+0xbc0>;;
     _32(0x180002dd),        //call 18710 <abort>;;
     _64(0x07f2bf80e000003f),        //make $r0 = -889323520 (0xffffffffcafe0000);;
     _32(0x1ffffb90),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b2c0),        //compw.eq $r0 = $r0, 11 (0xb);;
     _32(0x0c000080),        //cb.wnez $r0? 17bc0 <main+0xbe0>;;
     _32(0x180002d5),        //call 18710 <abort>;;
     _64(0x07f2bf80e000003f),        //make $r0 = -889323520 (0xffffffffcafe0000);;
     _32(0x1ffffba4),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17be0 <main+0xc00>;;
     _32(0x180002cd),        //call 18710 <abort>;;
     _64(0x000032bfe0008000),        //make $r0 = 13303296 (0xcafe00);;
     _32(0x1ffffb0e),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b280),        //compw.eq $r0 = $r0, 10 (0xa);;
     _32(0x0c000080),        //cb.wnez $r0? 17c00 <main+0xc20>;;
     _32(0x180002c5),        //call 18710 <abort>;;
     _64(0x000032bfe0008000),        //make $r0 = 13303296 (0xcafe00);;
     _32(0x1ffffb3c),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b200),        //compw.eq $r0 = $r0, 8 (0x8);;
     _32(0x0c000080),        //cb.wnez $r0? 17c20 <main+0xc40>;;
     _32(0x180002bd),        //call 18710 <abort>;;
     _64(0x000032bfe0008000),        //make $r0 = 13303296 (0xcafe00);;
     _32(0x1ffffb1c),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b240),        //compw.eq $r0 = $r0, 9 (0x9);;
     _32(0x0c000080),        //cb.wnez $r0? 17c40 <main+0xc60>;;
     _32(0x180002b5),        //call 18710 <abort>;;
     _64(0x000032bfe0008000),        //make $r0 = 13303296 (0xcafe00);;
     _32(0x1ffffb46),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b1c0),        //compw.eq $r0 = $r0, 7 (0x7);;
     _32(0x0c000080),        //cb.wnez $r0? 17c60 <main+0xc80>;;
     _32(0x180002ad),        //call 18710 <abort>;;
     _64(0x000032bfe0008000),        //make $r0 = 13303296 (0xcafe00);;
     _32(0x1ffffb60),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b2c0),        //compw.eq $r0 = $r0, 11 (0xb);;
     _32(0x0c000080),        //cb.wnez $r0? 17c80 <main+0xca0>;;
     _32(0x180002a5),        //call 18710 <abort>;;
     _64(0x000032bfe0008000),        //make $r0 = 13303296 (0xcafe00);;
     _32(0x1ffffb74),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17ca0 <main+0xcc0>;;
     _32(0x1800029d),        //call 18710 <abort>;;
     _64(0x00000032e000bf80),        //make $r0 = 51966 (0xcafe);;
     _32(0x1ffffade),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 17cc0 <main+0xce0>;;
     _32(0x18000295),        //call 18710 <abort>;;
     _64(0x00000032e000bf80),        //make $r0 = 51966 (0xcafe);;
     _32(0x1ffffb0c),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 17ce0 <main+0xd00>;;
     _32(0x1800028d),        //call 18710 <abort>;;
     _64(0x00000032e000bf80),        //make $r0 = 51966 (0xcafe);;
     _32(0x1ffffaec),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17d00 <main+0xd20>;;
     _32(0x18000285),        //call 18710 <abort>;;
     _64(0x00000032e000bf80),        //make $r0 = 51966 (0xcafe);;
     _32(0x1ffffb16),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b3c0),        //compw.eq $r0 = $r0, 15 (0xf);;
     _32(0x0c000080),        //cb.wnez $r0? 17d20 <main+0xd40>;;
     _32(0x1800027d),        //call 18710 <abort>;;
     _64(0x00000032e000bf80),        //make $r0 = 51966 (0xcafe);;
     _32(0x1ffffb30),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b2c0),        //compw.eq $r0 = $r0, 11 (0xb);;
     _32(0x0c000080),        //cb.wnez $r0? 17d40 <main+0xd60>;;
     _32(0x18000275),        //call 18710 <abort>;;
     _64(0x00000032e000bf80),        //make $r0 = 51966 (0xcafe);;
     _32(0x1ffffb44),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17d60 <main+0xd80>;;
     _32(0x1800026d),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffaaf),        //call 16820 <my_ffs>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17d7c <main+0xd9c>;;
     _32(0x18000266),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffade),        //call 168f8 <my_clz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17d90 <main+0xdb0>;;
     _32(0x18000261),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffac1),        //call 16898 <my_ctz>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17da4 <main+0xdc4>;;
     _32(0x1800025c),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffaee),        //call 16960 <my_clrsb>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 17dc0 <main+0xde0>;;
     _32(0x18000255),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffb09),        //call 169e8 <my_popcount>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 17ddc <main+0xdfc>;;
     _32(0x1800024e),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffb1e),        //call 16a58 <my_parity>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17df0 <main+0xe10>;;
     _32(0x18000249),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffbd9),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17e04 <main+0xe24>;;
     _32(0x18000244),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffc20),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b7c0),        //compw.eq $r0 = $r0, 63 (0x3f);;
     _32(0x0c000080),        //cb.wnez $r0? 17e20 <main+0xe40>;;
     _32(0x1800023d),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffc39),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17e34 <main+0xe54>;;
     _32(0x18000238),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x1ffffc4e),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17e48 <main+0xe68>;;
     _32(0x18000233),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffbc3),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17e64 <main+0xe84>;;
     _32(0x1800022c),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffbee),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b7c0),        //compw.eq $r0 = $r0, 63 (0x3f);;
     _32(0x0c000080),        //cb.wnez $r0? 17e80 <main+0xea0>;;
     _32(0x18000225),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffbd1),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17e94 <main+0xeb4>;;
     _32(0x18000220),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffbfc),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b780),        //compw.eq $r0 = $r0, 62 (0x3e);;
     _32(0x0c000080),        //cb.wnez $r0? 17eb0 <main+0xed0>;;
     _32(0x18000219),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffc15),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17ecc <main+0xeec>;;
     _32(0x18000212),        //call 18710 <abort>;;
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x1ffffc28),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17ee8 <main+0xf08>;;
     _32(0x1800020b),        //call 18710 <abort>;;
     _96(0x0400000080000000e0000000),        //make $r0 = 9223372036854775808 (0x8000000000000000);;
     _32(0x1ffffb99),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000002f101b000),        //compw.eq $r0 = $r0, 64 (0x40);;
     _32(0x0c000080),        //cb.wnez $r0? 17f0c <main+0xf2c>;;
     _32(0x18000202),        //call 18710 <abort>;;
     _96(0x0400000080000000e0000000),        //make $r0 = 9223372036854775808 (0x8000000000000000);;
     _32(0x1ffffbc2),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17f28 <main+0xf48>;;
     _32(0x180001fb),        //call 18710 <abort>;;
     _96(0x0400000080000000e0000000),        //make $r0 = 9223372036854775808 (0x8000000000000000);;
     _32(0x1ffffba5),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b7c0),        //compw.eq $r0 = $r0, 63 (0x3f);;
     _32(0x0c000080),        //cb.wnez $r0? 17f4c <main+0xf6c>;;
     _32(0x180001f2),        //call 18710 <abort>;;
     _96(0x0400000080000000e0000000),        //make $r0 = 9223372036854775808 (0x8000000000000000);;
     _32(0x1ffffbcc),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 17f68 <main+0xf88>;;
     _32(0x180001eb),        //call 18710 <abort>;;
     _96(0x0400000080000000e0000000),        //make $r0 = 9223372036854775808 (0x8000000000000000);;
     _32(0x1ffffbe5),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17f8c <main+0xfac>;;
     _32(0x180001e2),        //call 18710 <abort>;;
     _96(0x0400000080000000e0000000),        //make $r0 = 9223372036854775808 (0x8000000000000000);;
     _32(0x1ffffbf6),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 17fb0 <main+0xfd0>;;
     _32(0x180001d9),        //call 18710 <abort>;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1ffffb69),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 17fcc <main+0xfec>;;
     _32(0x180001d2),        //call 18710 <abort>;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1ffffb94),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b780),        //compw.eq $r0 = $r0, 62 (0x3e);;
     _32(0x0c000080),        //cb.wnez $r0? 17fe8 <main+0x1008>;;
     _32(0x180001cb),        //call 18710 <abort>;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1ffffb77),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18004 <main+0x1024>;;
     _32(0x180001c4),        //call 18710 <abort>;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1ffffba0),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b740),        //compw.eq $r0 = $r0, 61 (0x3d);;
     _32(0x0c000080),        //cb.wnez $r0? 18020 <main+0x1040>;;
     _32(0x180001bd),        //call 18710 <abort>;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1ffffbb9),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 1803c <main+0x105c>;;
     _32(0x180001b6),        //call 18710 <abort>;;
     _32(0x60000002),        //make $r0 = 2 (0x2);;
     _32(0x1ffffbcc),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18058 <main+0x1078>;;
     _32(0x180001af),        //call 18710 <abort>;;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _32(0x1ffffb3d),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b7c0),        //compw.eq $r0 = $r0, 63 (0x3f);;
     _32(0x0c000080),        //cb.wnez $r0? 1807c <main+0x109c>;;
     _32(0x180001a6),        //call 18710 <abort>;;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _32(0x1ffffb66),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 180a0 <main+0x10c0>;;
     _32(0x1800019d),        //call 18710 <abort>;;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _32(0x1ffffb47),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b780),        //compw.eq $r0 = $r0, 62 (0x3e);;
     _32(0x0c000080),        //cb.wnez $r0? 180c4 <main+0x10e4>;;
     _32(0x18000194),        //call 18710 <abort>;;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _32(0x1ffffb6e),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 180e0 <main+0x1100>;;
     _32(0x1800018d),        //call 18710 <abort>;;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _32(0x1ffffb87),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18104 <main+0x1124>;;
     _32(0x18000184),        //call 18710 <abort>;;
     _96(0x0200000080000000e0000000),        //make $r0 = 4611686018427387904 (0x4000000000000000);;
     _32(0x1ffffb98),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18128 <main+0x1148>;;
     _32(0x1800017b),        //call 18710 <abort>;;
     _64(0x00400000e0000000),        //make $r0 = 4294967296 (0x100000000);;
     _32(0x1ffffb0a),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b040),        //compw.eq $r0 = $r0, 33 (0x21);;
     _32(0x0c000080),        //cb.wnez $r0? 18148 <main+0x1168>;;
     _32(0x18000173),        //call 18710 <abort>;;
     _64(0x00400000e0000000),        //make $r0 = 4294967296 (0x100000000);;
     _32(0x1ffffb34),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 18168 <main+0x1188>;;
     _32(0x1800016b),        //call 18710 <abort>;;
     _64(0x00400000e0000000),        //make $r0 = 4294967296 (0x100000000);;
     _32(0x1ffffb16),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 18188 <main+0x11a8>;;
     _32(0x18000163),        //call 18710 <abort>;;
     _64(0x00400000e0000000),        //make $r0 = 4294967296 (0x100000000);;
     _32(0x1ffffb3e),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b780),        //compw.eq $r0 = $r0, 30 (0x1e);;
     _32(0x0c000080),        //cb.wnez $r0? 181a8 <main+0x11c8>;;
     _32(0x1800015b),        //call 18710 <abort>;;
     _64(0x00400000e0000000),        //make $r0 = 4294967296 (0x100000000);;
     _32(0x1ffffb56),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 181c8 <main+0x11e8>;;
     _32(0x18000153),        //call 18710 <abort>;;
     _64(0x00400000e0000000),        //make $r0 = 4294967296 (0x100000000);;
     _32(0x1ffffb68),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 181e8 <main+0x1208>;;
     _32(0x1800014b),        //call 18710 <abort>;;
     _64(0x00200000e0000000),        //make $r0 = 2147483648 (0x80000000);;
     _32(0x1ffffada),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 18208 <main+0x1228>;;
     _32(0x18000143),        //call 18710 <abort>;;
     _64(0x00200000e0000000),        //make $r0 = 2147483648 (0x80000000);;
     _32(0x1ffffb04),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 18228 <main+0x1248>;;
     _32(0x1800013b),        //call 18710 <abort>;;
     _64(0x00200000e0000000),        //make $r0 = 2147483648 (0x80000000);;
     _32(0x1ffffae6),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 18248 <main+0x1268>;;
     _32(0x18000133),        //call 18710 <abort>;;
     _64(0x00200000e0000000),        //make $r0 = 2147483648 (0x80000000);;
     _32(0x1ffffb0e),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 18268 <main+0x1288>;;
     _32(0x1800012b),        //call 18710 <abort>;;
     _64(0x00200000e0000000),        //make $r0 = 2147483648 (0x80000000);;
     _32(0x1ffffb26),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18288 <main+0x12a8>;;
     _32(0x18000123),        //call 18710 <abort>;;
     _64(0x00200000e0000000),        //make $r0 = 2147483648 (0x80000000);;
     _32(0x1ffffb38),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 182a8 <main+0x12c8>;;
     _32(0x1800011b),        //call 18710 <abort>;;
     _96(0x052d2d2d81696969e0006940),        //make $r0 = 11936128518282651045 (0xa5a5a5a5a5a5a5a5);;
     _32(0x1ffffaa9),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 182cc <main+0x12ec>;;
     _32(0x18000112),        //call 18710 <abort>;;
     _96(0x052d2d2d81696969e0006940),        //make $r0 = 11936128518282651045 (0xa5a5a5a5a5a5a5a5);;
     _32(0x1ffffad2),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 182e8 <main+0x1308>;;
     _32(0x1800010b),        //call 18710 <abort>;;
     _96(0x052d2d2d81696969e0006940),        //make $r0 = 11936128518282651045 (0xa5a5a5a5a5a5a5a5);;
     _32(0x1ffffab5),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18304 <main+0x1324>;;
     _32(0x18000104),        //call 18710 <abort>;;
     _96(0x052d2d2d81696969e0006940),        //make $r0 = 11936128518282651045 (0xa5a5a5a5a5a5a5a5);;
     _32(0x1ffffade),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18320 <main+0x1340>;;
     _32(0x180000fd),        //call 18710 <abort>;;
     _96(0x052d2d2d81696969e0006940),        //make $r0 = 11936128518282651045 (0xa5a5a5a5a5a5a5a5);;
     _32(0x1ffffaf7),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 18344 <main+0x1364>;;
     _32(0x180000f4),        //call 18710 <abort>;;
     _96(0x052d2d2d81696969e0006940),        //make $r0 = 11936128518282651045 (0xa5a5a5a5a5a5a5a5);;
     _32(0x1ffffb08),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18360 <main+0x1380>;;
     _32(0x180000ed),        //call 18710 <abort>;;
     _96(0x02d2d2d286969696e0009680),        //make $r0 = 6510615555426900570 (0x5a5a5a5a5a5a5a5a);;
     _32(0x1ffffa7b),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 18384 <main+0x13a4>;;
     _32(0x180000e4),        //call 18710 <abort>;;
     _96(0x02d2d2d286969696e0009680),        //make $r0 = 6510615555426900570 (0x5a5a5a5a5a5a5a5a);;
     _32(0x1ffffaa4),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 183a8 <main+0x13c8>;;
     _32(0x180000db),        //call 18710 <abort>;;
     _96(0x02d2d2d286969696e0009680),        //make $r0 = 6510615555426900570 (0x5a5a5a5a5a5a5a5a);;
     _32(0x1ffffa85),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 183cc <main+0x13ec>;;
     _32(0x180000d2),        //call 18710 <abort>;;
     _96(0x02d2d2d286969696e0009680),        //make $r0 = 6510615555426900570 (0x5a5a5a5a5a5a5a5a);;
     _32(0x1ffffaac),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 183e8 <main+0x1408>;;
     _32(0x180000cb),        //call 18710 <abort>;;
     _96(0x02d2d2d286969696e0009680),        //make $r0 = 6510615555426900570 (0x5a5a5a5a5a5a5a5a);;
     _32(0x1ffffac5),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 1840c <main+0x142c>;;
     _32(0x180000c2),        //call 18710 <abort>;;
     _96(0x02d2d2d286969696e0009680),        //make $r0 = 6510615555426900570 (0x5a5a5a5a5a5a5a5a);;
     _32(0x1ffffad6),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18428 <main+0x1448>;;
     _32(0x180000bb),        //call 18710 <abort>;;
     _96(0x0657f65787800000e0000000),        //make $r0 = 14627351832016453632 (0xcafecafe00000000);;
     _32(0x1ffffa49),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b080),        //compw.eq $r0 = $r0, 34 (0x22);;
     _32(0x0c000080),        //cb.wnez $r0? 1844c <main+0x146c>;;
     _32(0x180000b2),        //call 18710 <abort>;;
     _96(0x0657f65787800000e0000000),        //make $r0 = 14627351832016453632 (0xcafecafe00000000);;
     _32(0x1ffffa72),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18468 <main+0x1488>;;
     _32(0x180000ab),        //call 18710 <abort>;;
     _96(0x0657f65787800000e0000000),        //make $r0 = 14627351832016453632 (0xcafecafe00000000);;
     _32(0x1ffffa55),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b040),        //compw.eq $r0 = $r0, 33 (0x21);;
     _32(0x0c000080),        //cb.wnez $r0? 1848c <main+0x14ac>;;
     _32(0x180000a2),        //call 18710 <abort>;;
     _96(0x0657f65787800000e0000000),        //make $r0 = 14627351832016453632 (0xcafecafe00000000);;
     _32(0x1ffffa7c),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 184b0 <main+0x14d0>;;
     _32(0x18000099),        //call 18710 <abort>;;
     _96(0x0657f65787800000e0000000),        //make $r0 = 14627351832016453632 (0xcafecafe00000000);;
     _32(0x1ffffa93),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b580),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x0c000080),        //cb.wnez $r0? 184d4 <main+0x14f4>;;
     _32(0x18000090),        //call 18710 <abort>;;
     _96(0x0657f65787800000e0000000),        //make $r0 = 14627351832016453632 (0xcafecafe00000000);;
     _32(0x1ffffaa4),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 184f0 <main+0x1510>;;
     _32(0x18000089),        //call 18710 <abort>;;
     _96(0x0000065787b2bf80e0000000),        //make $r0 = 223195676147712 (0xcafecafe0000);;
     _32(0x1ffffa17),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b480),        //compw.eq $r0 = $r0, 18 (0x12);;
     _32(0x0c000080),        //cb.wnez $r0? 18514 <main+0x1534>;;
     _32(0x18000080),        //call 18710 <abort>;;
     _96(0x0000065787b2bf80e0000000),        //make $r0 = 223195676147712 (0xcafecafe0000);;
     _32(0x1ffffa40),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b400),        //compw.eq $r0 = $r0, 16 (0x10);;
     _32(0x0c000080),        //cb.wnez $r0? 18538 <main+0x1558>;;
     _32(0x18000077),        //call 18710 <abort>;;
     _96(0x0000065787b2bf80e0000000),        //make $r0 = 223195676147712 (0xcafecafe0000);;
     _32(0x1ffffa21),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b440),        //compw.eq $r0 = $r0, 17 (0x11);;
     _32(0x0c000080),        //cb.wnez $r0? 1855c <main+0x157c>;;
     _32(0x1800006e),        //call 18710 <abort>;;
     _96(0x0000065787b2bf80e0000000),        //make $r0 = 223195676147712 (0xcafecafe0000);;
     _32(0x1ffffa48),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b3c0),        //compw.eq $r0 = $r0, 15 (0xf);;
     _32(0x0c000080),        //cb.wnez $r0? 18580 <main+0x15a0>;;
     _32(0x18000065),        //call 18710 <abort>;;
     _96(0x0000065787b2bf80e0000000),        //make $r0 = 223195676147712 (0xcafecafe0000);;
     _32(0x1ffffa5f),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b580),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x0c000080),        //cb.wnez $r0? 185a4 <main+0x15c4>;;
     _32(0x1800005c),        //call 18710 <abort>;;
     _96(0x0000065787b2bf80e0000000),        //make $r0 = 223195676147712 (0xcafecafe0000);;
     _32(0x1ffffa70),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 185c0 <main+0x15e0>;;
     _32(0x18000055),        //call 18710 <abort>;;
     _64(0x0032bfb2e000bf80),        //make $r0 = 3405695742 (0xcafecafe);;
     _32(0x1ffff9e4),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b080),        //compw.eq $r0 = $r0, 2 (0x2);;
     _32(0x0c000080),        //cb.wnez $r0? 185e0 <main+0x1600>;;
     _32(0x1800004d),        //call 18710 <abort>;;
     _64(0x0032bfb2e000bf80),        //make $r0 = 3405695742 (0xcafecafe);;
     _32(0x1ffffa0e),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b000),        //compw.eq $r0 = $r0, 32 (0x20);;
     _32(0x0c000080),        //cb.wnez $r0? 18600 <main+0x1620>;;
     _32(0x18000045),        //call 18710 <abort>;;
     _64(0x0032bfb2e000bf80),        //make $r0 = 3405695742 (0xcafecafe);;
     _32(0x1ffff9f0),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18620 <main+0x1640>;;
     _32(0x1800003d),        //call 18710 <abort>;;
     _64(0x0032bfb2e000bf80),        //make $r0 = 3405695742 (0xcafecafe);;
     _32(0x1ffffa18),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b7c0),        //compw.eq $r0 = $r0, 31 (0x1f);;
     _32(0x0c000080),        //cb.wnez $r0? 18640 <main+0x1660>;;
     _32(0x18000035),        //call 18710 <abort>;;
     _64(0x0032bfb2e000bf80),        //make $r0 = 3405695742 (0xcafecafe);;
     _32(0x1ffffa30),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b580),        //compw.eq $r0 = $r0, 22 (0x16);;
     _32(0x0c000080),        //cb.wnez $r0? 18660 <main+0x1680>;;
     _32(0x1800002d),        //call 18710 <abort>;;
     _64(0x0032bfb2e000bf80),        //make $r0 = 3405695742 (0xcafecafe);;
     _32(0x1ffffa42),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18678 <main+0x1698>;;
     _32(0x18000027),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffff9b7),        //call 16d58 <my_ffsll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000000f101b040),        //compw.eq $r0 = $r0, 1 (0x1);;
     _32(0x0c000080),        //cb.wnez $r0? 18694 <main+0x16b4>;;
     _32(0x18000020),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffff9e2),        //call 16e20 <my_clzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 186a8 <main+0x16c8>;;
     _32(0x1800001b),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffff9c7),        //call 16dc8 <my_ctzll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 186bc <main+0x16dc>;;
     _32(0x18000016),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffff9f2),        //call 16e88 <my_clrsbll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000001f101b7c0),        //compw.eq $r0 = $r0, 63 (0x3f);;
     _32(0x0c000080),        //cb.wnez $r0? 186d8 <main+0x16f8>;;
     _32(0x1800000f),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffa0b),        //call 16f08 <my_popcountll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _64(0x00000002f101b000),        //compw.eq $r0 = $r0, 64 (0x40);;
     _32(0x0c000080),        //cb.wnez $r0? 186f4 <main+0x1714>;;
     _32(0x18000008),        //call 18710 <abort>;;
     _32(0x6000ffff),        //make $r0 = -1 (0xffffffff);;
     _32(0x1ffffa1e),        //call 16f70 <my_parityll>;;
     _32(0x7800ffc0),        //zxwd $r0 = $r0;;
     _32(0x08800080),        //cb.deqz $r0? 18708 <main+0x1728>;;
     _32(0x18000003),        //call 18710 <abort>;;
     _32(0x60000000),        //make $r0 = 0 (0x0);;
     _32(0x18000009)        //call 18730 <exit>;;
 |];

let abort: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60000006),        //make $r0 = 6 (0x6);;
     _32(0x98000105),        //call 18b30 <raise>
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _32(0x98000839),        //call 1a808 <_exit>
     _32(0x60000001),        //make $r0 = 1 (0x1);;
     _32(0x00000000)        //errop ;;
 |];

let exit: list_I = 
 [|
     _32(0x8fc400d0),        //get $r16 = $ra
     _32(0xe130f80c),        //addd $r12 = $r12, -32 (0xffffffe0)
     _32(0x60040000),        //make $r1 = 0 (0x0);;
     _32(0xf838ffc0),        //zxwd $r14 = $r0
     _32(0x2739040c),        //sd 16 (0x10)[$r12] = $r14;;
     _32(0x98000161),        //call 18cc8 <__call_exitprocs>
     _32(0xfa00000e),        //copyw $r0 = $r14
     _32(0x2741060c),        //sd 24 (0x18)[$r12] = $r16;;
     _96(0x0000000080000105e0003000),        //make $r0 = 267456 (0x414c0);;
     _32(0x38000000),        //ld $r0 = 0 (0x0)[$r0];;
     _32(0x38041600),        //ld $r1 = 88 (0x58)[$r0];;
     _32(0x08800081),        //cb.deqz $r1? 1876c <exit+0x3c>;;
     _32(0x0fdc0001),        //icall $r1;;
     _32(0x98000827),        //call 1a808 <_exit>
     _32(0x7a00000e),        //copyw $r0 = $r14;;
     _32(0x00000000)        //errop ;;
 |];

let adr_start:bits(addr_bits) = 0b00010110111111100000; //0x16fe0
count:int=0;
//write program in instruction memory
mI: mem_I = [||];
num_instr: int = 0;
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_ffs, 0b00010110100000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_ctz, 0b00010110100010011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_clz, 0b00010110100011111000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_clrsb, 0b00010110100101100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_popcount, 0b00010110100111101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_parity, 0b00010110101001011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_ffsl, 0b00010110101011010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_ctzl, 0b00010110101101000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_clzl, 0b00010110101110011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_clrsbl, 0b00010110110000000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_popcountl, 0b00010110110010000000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_parityl, 0b00010110110011101000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_ffsll, 0b00010110110101011000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_ctzll, 0b00010110110111001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_clzll, 0b00010110111000100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_clrsbll, 0b00010110111010001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_popcountll, 0b00010110111100001000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(my_parityll, 0b00010110111101110000, num_instr, mI);
(adr_end_main:bits(addr_bits),num_instr,mI)  = Write_ProgI(main, 0b00010110111111100000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(abort, 0b00011000011100010000, num_instr, mI);
(adr_end:bits(addr_bits),num_instr,mI)  = Write_ProgI(exit, 0b00011000011100110000, num_instr, mI);
//print_list_instr(mI);
mD = Execute_Program(adr_start,adr_end_main,num_instr,mI,mD,icount,rcount,wcount);
}
